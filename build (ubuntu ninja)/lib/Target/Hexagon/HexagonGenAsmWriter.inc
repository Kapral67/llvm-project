/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> HexagonInstPrinter::getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ ".error \"should not emit\" \0"
  /* 26 */ "if (!p0) \0"
  /* 36 */ "if (p0) \0"
  /* 45 */ "if (!p0.new) \0"
  /* 59 */ "if (p0.new) \0"
  /* 72 */ "call \0"
  /* 78 */ "jump \0"
  /* 84 */ "callr \0"
  /* 91 */ "jumpr \0"
  /* 98 */ "if (!\0"
  /* 104 */ ".error \"should not emit\"\0"
  /* 129 */ "trap0(#\0"
  /* 137 */ "trap1(#\0"
  /* 145 */ "vwhist128(#\0"
  /* 157 */ "memb(#\0"
  /* 164 */ "memd(#\0"
  /* 171 */ "allocframe(#\0"
  /* 184 */ "pause(#\0"
  /* 192 */ "memh(#\0"
  /* 199 */ "immext(#\0"
  /* 208 */ "memw(#\0"
  /* 215 */ "memd(r29+#\0"
  /* 226 */ "memw(r29+#\0"
  /* 237 */ "memb(gp+#\0"
  /* 247 */ "memd(gp+#\0"
  /* 257 */ "memh(gp+#\0"
  /* 267 */ "memw(gp+#\0"
  /* 277 */ "if (\0"
  /* 282 */ "diag0(\0"
  /* 289 */ "p3 = sp1loop0(\0"
  /* 304 */ "p3 = sp2loop0(\0"
  /* 319 */ "p3 = sp3loop0(\0"
  /* 334 */ "diag1(\0"
  /* 341 */ "trap1(\0"
  /* 348 */ "loop1(\0"
  /* 355 */ "vtrans2x2(\0"
  /* 366 */ "vwhist256(\0"
  /* 377 */ "vwhist128(\0"
  /* 388 */ "dccleana(\0"
  /* 398 */ "dczeroa(\0"
  /* 407 */ "dcinva(\0"
  /* 415 */ "icinva(\0"
  /* 423 */ "dccleaninva(\0"
  /* 436 */ "memb(\0"
  /* 442 */ "memd_locked(\0"
  /* 455 */ "memw_locked(\0"
  /* 468 */ "memd(\0"
  /* 474 */ "trace(\0"
  /* 481 */ "allocframe(\0"
  /* 493 */ "dmresume(\0"
  /* 503 */ "release(\0"
  /* 512 */ "vshuff(\0"
  /* 520 */ "diag(\0"
  /* 526 */ "l2fetch(\0"
  /* 535 */ "dcfetch(\0"
  /* 544 */ "memh(\0"
  /* 550 */ "dmlink(\0"
  /* 558 */ "vdeal(\0"
  /* 565 */ "memd_rl(\0"
  /* 574 */ "memw_rl(\0"
  /* 583 */ "z = vmem(\0"
  /* 593 */ "p0 = cmp.eq(\0"
  /* 606 */ "p1 = cmp.eq(\0"
  /* 619 */ "if (!cmp.eq(\0"
  /* 632 */ "if (cmp.eq(\0"
  /* 644 */ "vtmp.h = vgather(\0"
  /* 662 */ "vtmp.w = vgather(\0"
  /* 680 */ "vscatter(\0"
  /* 690 */ "hintjr(\0"
  /* 698 */ "p0 = cmp.gt(\0"
  /* 711 */ "p1 = cmp.gt(\0"
  /* 724 */ "if (!cmp.gt(\0"
  /* 737 */ "if (cmp.gt(\0"
  /* 749 */ "wait(\0"
  /* 755 */ "p0 = tstbit(\0"
  /* 768 */ "p1 = tstbit(\0"
  /* 781 */ "if (!tstbit(\0"
  /* 794 */ "if (tstbit(\0"
  /* 806 */ "dmstart(\0"
  /* 815 */ "vhist(\0"
  /* 822 */ "vmemu(\0"
  /* 829 */ "p0 = cmp.gtu(\0"
  /* 843 */ "p1 = cmp.gtu(\0"
  /* 857 */ "if (!cmp.gtu(\0"
  /* 871 */ "if (cmp.gtu(\0"
  /* 884 */ "memw(\0"
  /* 890 */ "memcpy(\0"
  /* 898 */ "# XRay Function Patchable RET.\0"
  /* 929 */ "# XRay Typed Event Log.\0"
  /* 953 */ "# XRay Custom Event Log.\0"
  /* 978 */ "# XRay Function Enter.\0"
  /* 1001 */ "# XRay Tail Call Exit.\0"
  /* 1024 */ "# XRay Function Exit.\0"
  /* 1046 */ ":endloop0\0"
  /* 1056 */ ":endloop01\0"
  /* 1067 */ "if (!p0) jumpr r31\0"
  /* 1086 */ "if (p0) jumpr r31\0"
  /* 1104 */ "if (!p0.new) jumpr:nt r31\0"
  /* 1130 */ "if (p0.new) jumpr:nt r31\0"
  /* 1155 */ ":endloop1\0"
  /* 1165 */ "vwhist256\0"
  /* 1175 */ "vwhist128\0"
  /* 1185 */ "<invalid>\0"
  /* 1195 */ "LIFETIME_END\0"
  /* 1208 */ "PSEUDO_PROBE\0"
  /* 1221 */ "BUNDLE\0"
  /* 1228 */ "DBG_VALUE\0"
  /* 1238 */ "DBG_INSTR_REF\0"
  /* 1252 */ "DBG_LABEL\0"
  /* 1262 */ "LIFETIME_START\0"
  /* 1277 */ "DUPLEX\0"
  /* 1284 */ "isync\0"
  /* 1290 */ "deallocframe\0"
  /* 1303 */ "# FEntry call\0"
  /* 1317 */ "if (!p0) dealloc_return\0"
  /* 1341 */ "if (p0) dealloc_return\0"
  /* 1364 */ "nop\0"
  /* 1368 */ "barrier\0"
  /* 1376 */ "vwhist256:sat\0"
  /* 1390 */ "syncht\0"
  /* 1397 */ "if (!p0.new) dealloc_return:nt\0"
  /* 1428 */ "if (p0.new) dealloc_return:nt\0"
  /* 1458 */ "brkpt\0"
  /* 1464 */ "vhist\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1229U,	// DBG_VALUE
    1239U,	// DBG_INSTR_REF
    1253U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    1222U,	// BUNDLE
    1263U,	// LIFETIME_START
    1196U,	// LIFETIME_END
    1209U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    1304U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    979U,	// PATCHABLE_FUNCTION_ENTER
    899U,	// PATCHABLE_RET
    1025U,	// PATCHABLE_FUNCTION_EXIT
    1002U,	// PATCHABLE_TAIL_CALL
    954U,	// PATCHABLE_EVENT_CALL
    930U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    2074U,	// A2_addsp
    18458U,	// A2_iconst
    16812058U,	// A2_neg
    51226U,	// A2_not
    33624163U,	// A2_tfrf
    33640547U,	// A2_tfrfnew
    50432026U,	// A2_tfrp
    33624163U,	// A2_tfrpf
    33640547U,	// A2_tfrpfnew
    50448410U,	// A2_tfrpi
    33624342U,	// A2_tfrpt
    33640726U,	// A2_tfrptnew
    33624342U,	// A2_tfrt
    33640726U,	// A2_tfrtnew
    16910362U,	// A2_vaddb_map
    16926746U,	// A2_vsubb_map
    165914U,	// A2_zxtb
    16959514U,	// A4_boundscheck
    1U,	// ADJCALLSTACKDOWN
    1U,	// ADJCALLSTACKUP
    198682U,	// C2_cmpgei
    215066U,	// C2_cmpgeui
    231450U,	// C2_cmplt
    247834U,	// C2_cmpltu
    50432026U,	// C2_pxfer_map
    1278U,	// DUPLEX_Pseudo
    1047U,	// ENDLOOP0
    1057U,	// ENDLOOP01
    1156U,	// ENDLOOP1
    1048U,	// J2_endloop0
    1058U,	// J2_endloop01
    1157U,	// J2_endloop1
    264291U,	// J2_jumpf_nopred_map
    280675U,	// J2_jumprf_nopred_map
    280854U,	// J2_jumprt_nopred_map
    264470U,	// J2_jumpt_nopred_map
    297098U,	// J2_trap1_noregmap
    67422234U,	// L2_loadalignb_zomap
    67438618U,	// L2_loadalignh_zomap
    17123354U,	// L2_loadbsw2_zomap
    17123354U,	// L2_loadbsw4_zomap
    17139738U,	// L2_loadbzw2_zomap
    17139738U,	// L2_loadbzw4_zomap
    17156122U,	// L2_loadrb_zomap
    17172506U,	// L2_loadrd_zomap
    17188890U,	// L2_loadrh_zomap
    17205274U,	// L2_loadri_zomap
    17221658U,	// L2_loadrub_zomap
    17238042U,	// L2_loadruh_zomap
    83955811U,	// L2_ploadrbf_zomap
    83972195U,	// L2_ploadrbfnew_zomap
    83955990U,	// L2_ploadrbt_zomap
    83972374U,	// L2_ploadrbtnew_zomap
    100733027U,	// L2_ploadrdf_zomap
    100749411U,	// L2_ploadrdfnew_zomap
    100733206U,	// L2_ploadrdt_zomap
    100749590U,	// L2_ploadrdtnew_zomap
    117510243U,	// L2_ploadrhf_zomap
    117526627U,	// L2_ploadrhfnew_zomap
    117510422U,	// L2_ploadrht_zomap
    117526806U,	// L2_ploadrhtnew_zomap
    134287459U,	// L2_ploadrif_zomap
    134303843U,	// L2_ploadrifnew_zomap
    134287638U,	// L2_ploadrit_zomap
    134304022U,	// L2_ploadritnew_zomap
    151064675U,	// L2_ploadrubf_zomap
    151081059U,	// L2_ploadrubfnew_zomap
    151064854U,	// L2_ploadrubt_zomap
    151081238U,	// L2_ploadrubtnew_zomap
    167841891U,	// L2_ploadruhf_zomap
    167858275U,	// L2_ploadruhfnew_zomap
    167842070U,	// L2_ploadruht_zomap
    167858454U,	// L2_ploadruhtnew_zomap
    477621U,	// L4_add_memopb_zomap
    477729U,	// L4_add_memoph_zomap
    478069U,	// L4_add_memopw_zomap
    494005U,	// L4_and_memopb_zomap
    494113U,	// L4_and_memoph_zomap
    494453U,	// L4_and_memopw_zomap
    510389U,	// L4_iadd_memopb_zomap
    510497U,	// L4_iadd_memoph_zomap
    510837U,	// L4_iadd_memopw_zomap
    526773U,	// L4_iand_memopb_zomap
    526881U,	// L4_iand_memoph_zomap
    527221U,	// L4_iand_memopw_zomap
    543157U,	// L4_ior_memopb_zomap
    543265U,	// L4_ior_memoph_zomap
    543605U,	// L4_ior_memopw_zomap
    559541U,	// L4_isub_memopb_zomap
    559649U,	// L4_isub_memoph_zomap
    559989U,	// L4_isub_memopw_zomap
    575925U,	// L4_or_memopb_zomap
    576033U,	// L4_or_memoph_zomap
    576373U,	// L4_or_memopw_zomap
    591971U,	// L4_return_map_to_raw_f
    608355U,	// L4_return_map_to_raw_fnew_pnt
    624739U,	// L4_return_map_to_raw_fnew_pt
    592150U,	// L4_return_map_to_raw_t
    608534U,	// L4_return_map_to_raw_tnew_pnt
    624918U,	// L4_return_map_to_raw_tnew_pt
    641461U,	// L4_sub_memopb_zomap
    641569U,	// L4_sub_memoph_zomap
    641909U,	// L4_sub_memopw_zomap
    1291U,	// L6_deallocframe_map_to_raw
    1327U,	// L6_return_map_to_raw
    105U,	// LDriw_ctr
    105U,	// LDriw_pred
    185206810U,	// M2_mpysmi
    673818U,	// M2_mpyui
    202016794U,	// M2_vrcmpys_acc_s1
    202033178U,	// M2_vrcmpys_s1
    218810394U,	// M2_vrcmpys_s1rp
    722970U,	// M7_vdmpy
    739354U,	// M7_vdmpy_acc
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    1U,	// PS_loadrb_pci
    1U,	// PS_loadrb_pcr
    1U,	// PS_loadrd_pci
    1U,	// PS_loadrd_pcr
    1U,	// PS_loadrh_pci
    1U,	// PS_loadrh_pcr
    1U,	// PS_loadri_pci
    1U,	// PS_loadri_pcr
    1U,	// PS_loadrub_pci
    1U,	// PS_loadrub_pcr
    1U,	// PS_loadruh_pci
    1U,	// PS_loadruh_pcr
    1U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    1U,	// PS_storerb_pci
    1U,	// PS_storerb_pcr
    1U,	// PS_storerd_pci
    1U,	// PS_storerd_pcr
    1U,	// PS_storerf_pci
    1U,	// PS_storerf_pcr
    1U,	// PS_storerh_pci
    1U,	// PS_storerh_pcr
    1U,	// PS_storeri_pci
    1U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    755804U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    772122U,	// S2_asr_i_p_rnd_goodsyntax
    772122U,	// S2_asr_i_r_rnd_goodsyntax
    788579U,	// S2_pstorerbf_zomap
    788579U,	// S2_pstorerbnewf_zomap
    788758U,	// S2_pstorerbnewt_zomap
    788758U,	// S2_pstorerbt_zomap
    804963U,	// S2_pstorerdf_zomap
    805142U,	// S2_pstorerdt_zomap
    821347U,	// S2_pstorerff_zomap
    821526U,	// S2_pstorerft_zomap
    821347U,	// S2_pstorerhf_zomap
    821347U,	// S2_pstorerhnewf_zomap
    821526U,	// S2_pstorerhnewt_zomap
    821526U,	// S2_pstorerht_zomap
    837731U,	// S2_pstorerif_zomap
    837731U,	// S2_pstorerinewf_zomap
    837910U,	// S2_pstorerinewt_zomap
    837910U,	// S2_pstorerit_zomap
    51186101U,	// S2_storerb_zomap
    235735477U,	// S2_storerbnew_zomap
    51186133U,	// S2_storerd_zomap
    252512801U,	// S2_storerf_zomap
    51186209U,	// S2_storerh_zomap
    235735585U,	// S2_storerhnew_zomap
    51186549U,	// S2_storeri_zomap
    235735925U,	// S2_storerinew_zomap
    17647642U,	// S2_tableidxb_goodsyntax
    17664026U,	// S2_tableidxd_goodsyntax
    17680410U,	// S2_tableidxh_goodsyntax
    17696794U,	// S2_tableidxw_goodsyntax
    936035U,	// S4_pstorerbfnew_zomap
    936035U,	// S4_pstorerbnewfnew_zomap
    936214U,	// S4_pstorerbnewtnew_zomap
    936214U,	// S4_pstorerbtnew_zomap
    952419U,	// S4_pstorerdfnew_zomap
    952598U,	// S4_pstorerdtnew_zomap
    968803U,	// S4_pstorerffnew_zomap
    968982U,	// S4_pstorerftnew_zomap
    968803U,	// S4_pstorerhfnew_zomap
    968803U,	// S4_pstorerhnewfnew_zomap
    968982U,	// S4_pstorerhnewtnew_zomap
    968982U,	// S4_pstorerhtnew_zomap
    985187U,	// S4_pstorerifnew_zomap
    985187U,	// S4_pstorerinewfnew_zomap
    985366U,	// S4_pstorerinewtnew_zomap
    985366U,	// S4_pstoreritnew_zomap
    1001909U,	// S4_storeirb_zomap
    788579U,	// S4_storeirbf_zomap
    936035U,	// S4_storeirbfnew_zomap
    788758U,	// S4_storeirbt_zomap
    936214U,	// S4_storeirbtnew_zomap
    1002017U,	// S4_storeirh_zomap
    821347U,	// S4_storeirhf_zomap
    968803U,	// S4_storeirhfnew_zomap
    821526U,	// S4_storeirht_zomap
    968982U,	// S4_storeirhtnew_zomap
    1002357U,	// S4_storeiri_zomap
    837731U,	// S4_storeirif_zomap
    985187U,	// S4_storeirifnew_zomap
    837910U,	// S4_storeirit_zomap
    985366U,	// S4_storeiritnew_zomap
    269453338U,	// S5_asrhub_rnd_sat_goodsyntax
    185583642U,	// S5_vasrhrnd_goodsyntax
    297132U,	// S6_allocframe_to_raw
    105U,	// STriw_ctr
    105U,	// STriw_pred
    286263322U,	// V6_MAP_equb
    286279706U,	// V6_MAP_equb_and
    286296090U,	// V6_MAP_equb_ior
    286312474U,	// V6_MAP_equb_xor
    303040538U,	// V6_MAP_equh
    303056922U,	// V6_MAP_equh_and
    303073306U,	// V6_MAP_equh_ior
    303089690U,	// V6_MAP_equh_xor
    319817754U,	// V6_MAP_equw
    319834138U,	// V6_MAP_equw_and
    319850522U,	// V6_MAP_equw_ior
    319866906U,	// V6_MAP_equw_xor
    1116186U,	// V6_extractw_alt
    1132570U,	// V6_hi
    17926170U,	// V6_ld0
    335614051U,	// V6_ldcnp0
    335614051U,	// V6_ldcnpnt0
    335614230U,	// V6_ldcp0
    335614230U,	// V6_ldcpnt0
    352391267U,	// V6_ldnp0
    352391267U,	// V6_ldnpnt0
    370247706U,	// V6_ldnt0
    370247706U,	// V6_ldntnt0
    352391446U,	// V6_ldp0
    352391446U,	// V6_ldpnt0
    385945699U,	// V6_ldtnp0
    385945699U,	// V6_ldtnpnt0
    385945878U,	// V6_ldtp0
    385945878U,	// V6_ldtpnt0
    17942554U,	// V6_ldu0
    1181722U,	// V6_lo
    51186252U,	// V6_st0
    235735628U,	// V6_stn0
    236079692U,	// V6_stnnt0
    1214563U,	// V6_stnp0
    1214563U,	// V6_stnpnt0
    1214563U,	// V6_stnq0
    1214563U,	// V6_stnqnt0
    51530316U,	// V6_stnt0
    1214742U,	// V6_stp0
    1214742U,	// V6_stpnt0
    1214742U,	// V6_stq0
    1214742U,	// V6_stqnt0
    51186487U,	// V6_stu0
    1230947U,	// V6_stunp0
    1231126U,	// V6_stup0
    403900442U,	// V6_v6mpyhubs10_alt
    403900442U,	// V6_v6mpyvubs10_alt
    18040858U,	// V6_vabsb_alt
    420694042U,	// V6_vabsb_sat_alt
    1280026U,	// V6_vabsdiffh_alt
    1296410U,	// V6_vabsdiffub_alt
    1312794U,	// V6_vabsdiffuh_alt
    1329178U,	// V6_vabsdiffw_alt
    18122778U,	// V6_vabsh_alt
    420775962U,	// V6_vabsh_sat_alt
    1361946U,	// V6_vabsub_alt
    1378330U,	// V6_vabsuh_alt
    1394714U,	// V6_vabsuw_alt
    18188314U,	// V6_vabsw_alt
    420841498U,	// V6_vabsw_sat_alt
    16910362U,	// V6_vaddb_alt
    16910362U,	// V6_vaddb_dv_alt
    437637219U,	// V6_vaddbnq_alt
    437637398U,	// V6_vaddbq_alt
    419563546U,	// V6_vaddbsat_alt
    419563546U,	// V6_vaddbsat_dv_alt
    18221082U,	// V6_vaddh_alt
    18221082U,	// V6_vaddh_dv_alt
    454447203U,	// V6_vaddhnq_alt
    454447382U,	// V6_vaddhq_alt
    420874266U,	// V6_vaddhsat_alt
    420874266U,	// V6_vaddhsat_dv_alt
    1476634U,	// V6_vaddhw_acc_alt
    18221082U,	// V6_vaddhw_alt
    1493018U,	// V6_vaddubh_acc_alt
    18286618U,	// V6_vaddubh_alt
    420939802U,	// V6_vaddubsat_alt
    420939802U,	// V6_vaddubsat_dv_alt
    420956186U,	// V6_vadduhsat_alt
    420956186U,	// V6_vadduhsat_dv_alt
    1542170U,	// V6_vadduhw_acc_alt
    18303002U,	// V6_vadduhw_alt
    1558554U,	// V6_vadduwsat_alt
    1558554U,	// V6_vadduwsat_dv_alt
    18352154U,	// V6_vaddw_alt
    18352154U,	// V6_vaddw_dv_alt
    471355491U,	// V6_vaddwnq_alt
    471355670U,	// V6_vaddwq_alt
    421005338U,	// V6_vaddwsat_alt
    421005338U,	// V6_vaddwsat_dv_alt
    1607706U,	// V6_vandnqrt_acc_alt
    1624090U,	// V6_vandnqrt_alt
    1640474U,	// V6_vandqrt_acc_alt
    1656858U,	// V6_vandqrt_alt
    1640474U,	// V6_vandvrt_acc_alt
    1656858U,	// V6_vandvrt_alt
    1673242U,	// V6_vaslh_acc_alt
    488228890U,	// V6_vaslh_alt
    488228890U,	// V6_vaslhv_alt
    1706010U,	// V6_vaslw_acc_alt
    488261658U,	// V6_vaslw_alt
    488261658U,	// V6_vaslwv_alt
    1738778U,	// V6_vasr_into_alt
    1755162U,	// V6_vasrh_acc_alt
    487573530U,	// V6_vasrh_alt
    487573530U,	// V6_vasrhv_alt
    1771546U,	// V6_vasrw_acc_alt
    488327194U,	// V6_vasrw_alt
    488327194U,	// V6_vasrwv_alt
    50432026U,	// V6_vassignp
    18581530U,	// V6_vavgb_alt
    505120794U,	// V6_vavgbrnd_alt
    18597914U,	// V6_vavgh_alt
    505137178U,	// V6_vavghrnd_alt
    18614298U,	// V6_vavgub_alt
    505153562U,	// V6_vavgubrnd_alt
    18630682U,	// V6_vavguh_alt
    505169946U,	// V6_vavguhrnd_alt
    18647066U,	// V6_vavguw_alt
    505186330U,	// V6_vavguwrnd_alt
    18663450U,	// V6_vavgw_alt
    505202714U,	// V6_vavgwrnd_alt
    1902618U,	// V6_vcl0h_alt
    1919002U,	// V6_vcl0w_alt
    1935386U,	// V6_vd0
    1935386U,	// V6_vdd0
    1951770U,	// V6_vdealb4w_alt
    1968154U,	// V6_vdealb_alt
    1984538U,	// V6_vdealh_alt
    2000922U,	// V6_vdmpybus_acc_alt
    2017306U,	// V6_vdmpybus_alt
    2000922U,	// V6_vdmpybus_dv_acc_alt
    2017306U,	// V6_vdmpybus_dv_alt
    2033690U,	// V6_vdmpyhb_acc_alt
    2050074U,	// V6_vdmpyhb_alt
    2033690U,	// V6_vdmpyhb_dv_acc_alt
    2050074U,	// V6_vdmpyhb_dv_alt
    2066458U,	// V6_vdmpyhisat_acc_alt
    2082842U,	// V6_vdmpyhisat_alt
    2066458U,	// V6_vdmpyhsat_acc_alt
    2082842U,	// V6_vdmpyhsat_alt
    522192922U,	// V6_vdmpyhsuisat_acc_alt
    522209306U,	// V6_vdmpyhsuisat_alt
    421529626U,	// V6_vdmpyhsusat_acc_alt
    421546010U,	// V6_vdmpyhsusat_alt
    2066458U,	// V6_vdmpyhvsat_acc_alt
    2082842U,	// V6_vdmpyhvsat_alt
    2131994U,	// V6_vdsaduh_acc_alt
    2148378U,	// V6_vdsaduh_alt
    1U,	// V6_vgathermh_pseudo
    1U,	// V6_vgathermhq_pseudo
    1U,	// V6_vgathermhw_pseudo
    1U,	// V6_vgathermhwq_pseudo
    1U,	// V6_vgathermw_pseudo
    1U,	// V6_vgathermwq_pseudo
    488704026U,	// V6_vlsrh_alt
    488704026U,	// V6_vlsrhv_alt
    488720410U,	// V6_vlsrw_alt
    488720410U,	// V6_vlsrwv_alt
    2197530U,	// V6_vmaxb_alt
    2213914U,	// V6_vmaxh_alt
    2230298U,	// V6_vmaxub_alt
    2246682U,	// V6_vmaxuh_alt
    2263066U,	// V6_vmaxw_alt
    2279450U,	// V6_vminb_alt
    2295834U,	// V6_vminh_alt
    2312218U,	// V6_vminub_alt
    2328602U,	// V6_vminuh_alt
    2344986U,	// V6_vminw_alt
    2361370U,	// V6_vmpabus_acc_alt
    2377754U,	// V6_vmpabus_alt
    2377754U,	// V6_vmpabusv_alt
    2394138U,	// V6_vmpabuu_acc_alt
    2410522U,	// V6_vmpabuu_alt
    2410522U,	// V6_vmpabuuv_alt
    2426906U,	// V6_vmpahb_acc_alt
    2443290U,	// V6_vmpahb_alt
    2459674U,	// V6_vmpauhb_acc_alt
    2476058U,	// V6_vmpauhb_alt
    2492442U,	// V6_vmpybus_acc_alt
    2508826U,	// V6_vmpybus_alt
    2492442U,	// V6_vmpybusv_acc_alt
    2508826U,	// V6_vmpybusv_alt
    2525210U,	// V6_vmpybv_acc_alt
    2541594U,	// V6_vmpybv_alt
    2557978U,	// V6_vmpyewuh_alt
    19351578U,	// V6_vmpyh_acc_alt
    19367962U,	// V6_vmpyh_alt
    422004762U,	// V6_vmpyhsat_acc_alt
    220694554U,	// V6_vmpyhsrs_alt
    203917338U,	// V6_vmpyhss_alt
    2607130U,	// V6_vmpyhus_acc_alt
    2623514U,	// V6_vmpyhus_alt
    19351578U,	// V6_vmpyhv_acc_alt
    19367962U,	// V6_vmpyhv_alt
    220694554U,	// V6_vmpyhvsrs_alt
    2639898U,	// V6_vmpyiewh_acc_alt
    2656282U,	// V6_vmpyiewuh_acc_alt
    2672666U,	// V6_vmpyiewuh_alt
    2689050U,	// V6_vmpyih_acc_alt
    2705434U,	// V6_vmpyih_alt
    2721818U,	// V6_vmpyihb_acc_alt
    2738202U,	// V6_vmpyihb_alt
    2754586U,	// V6_vmpyiowh_alt
    2770970U,	// V6_vmpyiwb_acc_alt
    2787354U,	// V6_vmpyiwb_alt
    2803738U,	// V6_vmpyiwh_acc_alt
    2820122U,	// V6_vmpyiwh_alt
    2836506U,	// V6_vmpyiwub_acc_alt
    2852890U,	// V6_vmpyiwub_alt
    204195866U,	// V6_vmpyowh_alt
    220973082U,	// V6_vmpyowh_rnd_alt
    539756570U,	// V6_vmpyowh_rnd_sacc_alt
    556533786U,	// V6_vmpyowh_sacc_alt
    2902042U,	// V6_vmpyub_acc_alt
    2918426U,	// V6_vmpyub_alt
    2902042U,	// V6_vmpyubv_acc_alt
    2918426U,	// V6_vmpyubv_alt
    2934810U,	// V6_vmpyuh_acc_alt
    2951194U,	// V6_vmpyuh_alt
    2934810U,	// V6_vmpyuhv_acc_alt
    2951194U,	// V6_vmpyuhv_alt
    2967578U,	// V6_vnavgb_alt
    19761178U,	// V6_vnavgh_alt
    3000346U,	// V6_vnavgub_alt
    19793946U,	// V6_vnavgw_alt
    3033114U,	// V6_vnormamth_alt
    3049498U,	// V6_vnormamtw_alt
    3065882U,	// V6_vpackeb_alt
    3082266U,	// V6_vpackeh_alt
    3098650U,	// V6_vpackhb_sat_alt
    3115034U,	// V6_vpackhub_sat_alt
    3131418U,	// V6_vpackob_alt
    3147802U,	// V6_vpackoh_alt
    3164186U,	// V6_vpackwh_sat_alt
    3180570U,	// V6_vpackwuh_sat_alt
    3196954U,	// V6_vpopcounth_alt
    573638682U,	// V6_vrmpybub_rtt_acc_alt
    573655066U,	// V6_vrmpybub_rtt_alt
    20023322U,	// V6_vrmpybus_acc_alt
    20039706U,	// V6_vrmpybus_alt
    187795482U,	// V6_vrmpybusi_acc_alt
    187811866U,	// V6_vrmpybusi_alt
    20023322U,	// V6_vrmpybusv_acc_alt
    20039706U,	// V6_vrmpybusv_alt
    3278874U,	// V6_vrmpybv_acc_alt
    3295258U,	// V6_vrmpybv_alt
    20088858U,	// V6_vrmpyub_acc_alt
    20105242U,	// V6_vrmpyub_alt
    590546970U,	// V6_vrmpyub_rtt_acc_alt
    590563354U,	// V6_vrmpyub_rtt_alt
    187861018U,	// V6_vrmpyubi_acc_alt
    187877402U,	// V6_vrmpyubi_alt
    20088858U,	// V6_vrmpyubv_acc_alt
    20105242U,	// V6_vrmpyubv_alt
    3377178U,	// V6_vrotr_alt
    3393562U,	// V6_vroundhb_alt
    3409946U,	// V6_vroundhub_alt
    3426330U,	// V6_vrounduhub_alt
    3442714U,	// V6_vrounduwuh_alt
    3459098U,	// V6_vroundwh_alt
    3475482U,	// V6_vroundwuh_alt
    188041242U,	// V6_vrsadubi_acc_alt
    188057626U,	// V6_vrsadubi_alt
    490063898U,	// V6_vsathub_alt
    3541018U,	// V6_vsatuwuh_alt
    490096666U,	// V6_vsatwh_alt
    3573786U,	// V6_vsb_alt
    3590825U,	// V6_vscattermh_add_alt
    3590825U,	// V6_vscattermh_alt
    607586582U,	// V6_vscattermhq_alt
    3590825U,	// V6_vscattermw_add_alt
    3590825U,	// V6_vscattermw_alt
    3590825U,	// V6_vscattermwh_add_alt
    3590825U,	// V6_vscattermwh_alt
    624363798U,	// V6_vscattermwhq_alt
    624363798U,	// V6_vscattermwq_alt
    3622938U,	// V6_vsh_alt
    3639322U,	// V6_vshufeh_alt
    3655706U,	// V6_vshuffb_alt
    3672090U,	// V6_vshuffeb_alt
    3688474U,	// V6_vshuffh_alt
    3704858U,	// V6_vshuffob_alt
    3721242U,	// V6_vshufoeb_alt
    3737626U,	// V6_vshufoeh_alt
    3754010U,	// V6_vshufoh_alt
    16926746U,	// V6_vsubb_alt
    16926746U,	// V6_vsubb_dv_alt
    638963811U,	// V6_vsubbnq_alt
    638963990U,	// V6_vsubbq_alt
    419579930U,	// V6_vsubbsat_alt
    419579930U,	// V6_vsubbsat_dv_alt
    20547610U,	// V6_vsubh_alt
    20547610U,	// V6_vsubh_dv_alt
    655773795U,	// V6_vsubhnq_alt
    655773974U,	// V6_vsubhq_alt
    423200794U,	// V6_vsubhsat_alt
    423200794U,	// V6_vsubhsat_dv_alt
    20547610U,	// V6_vsubhw_alt
    20563994U,	// V6_vsububh_alt
    423217178U,	// V6_vsububsat_alt
    423217178U,	// V6_vsububsat_dv_alt
    423233562U,	// V6_vsubuhsat_alt
    423233562U,	// V6_vsubuhsat_dv_alt
    20580378U,	// V6_vsubuhw_alt
    3819546U,	// V6_vsubuwsat_alt
    3819546U,	// V6_vsubuwsat_dv_alt
    20613146U,	// V6_vsubw_alt
    20613146U,	// V6_vsubw_dv_alt
    672682083U,	// V6_vsubwnq_alt
    672682262U,	// V6_vsubwq_alt
    423266330U,	// V6_vsubwsat_alt
    423266330U,	// V6_vsubwsat_dv_alt
    3852314U,	// V6_vtmpyb_acc_alt
    3868698U,	// V6_vtmpyb_alt
    3885082U,	// V6_vtmpybus_acc_alt
    3901466U,	// V6_vtmpybus_alt
    3917850U,	// V6_vtmpyhb_acc_alt
    3934234U,	// V6_vtmpyhb_alt
    3590500U,	// V6_vtran2x2_map
    3950618U,	// V6_vunpackb_alt
    3967002U,	// V6_vunpackh_alt
    3983386U,	// V6_vunpackob_alt
    3999770U,	// V6_vunpackoh_alt
    4016154U,	// V6_vunpackub_alt
    4032538U,	// V6_vunpackuh_alt
    4048922U,	// V6_vzb_alt
    4065306U,	// V6_vzh_alt
    297544U,	// V6_zld0
    4081942U,	// V6_zldp0
    297496U,	// Y2_dcfetch
    2074U,	// dup_A2_add
    2074U,	// dup_A2_addi
    188647450U,	// dup_A2_andir
    188663834U,	// dup_A2_combineii
    4130842U,	// dup_A2_sxtb
    4147226U,	// dup_A2_sxth
    50432026U,	// dup_A2_tfr
    50448410U,	// dup_A2_tfrsi
    165914U,	// dup_A2_zxtb
    4163610U,	// dup_A2_zxth
    188663834U,	// dup_A4_combineii
    490653722U,	// dup_A4_combineir
    188729370U,	// dup_A4_combineri
    687935587U,	// dup_C2_cmoveif
    687935766U,	// dup_C2_cmoveit
    687951971U,	// dup_C2_cmovenewif
    687952150U,	// dup_C2_cmovenewit
    188745754U,	// dup_C2_cmpeqi
    4212762U,	// dup_L2_deallocframe
    705021978U,	// dup_L2_loadrb_io
    705038362U,	// dup_L2_loadrd_io
    705054746U,	// dup_L2_loadrh_io
    705071130U,	// dup_L2_loadri_io
    705087514U,	// dup_L2_loadrub_io
    705103898U,	// dup_L2_loadruh_io
    71338466U,	// dup_S2_allocframe
    725666229U,	// dup_S2_storerb_io
    725666261U,	// dup_S2_storerd_io
    725666337U,	// dup_S2_storerh_io
    725666677U,	// dup_S2_storeri_io
    742443445U,	// dup_S4_storeirb_io
    742443893U,	// dup_S4_storeiri_io
    21039130U,	// A2_abs
    21039130U,	// A2_absp
    423692314U,	// A2_abssat
    2074U,	// A2_add
    2074U,	// A2_addh_h16_hh
    2074U,	// A2_addh_h16_hl
    2074U,	// A2_addh_h16_lh
    2074U,	// A2_addh_h16_ll
    2074U,	// A2_addh_h16_sat_hh
    2074U,	// A2_addh_h16_sat_hl
    2074U,	// A2_addh_h16_sat_lh
    2074U,	// A2_addh_h16_sat_ll
    2074U,	// A2_addh_l16_hl
    2074U,	// A2_addh_l16_ll
    2074U,	// A2_addh_l16_sat_hl
    2074U,	// A2_addh_l16_sat_ll
    2074U,	// A2_addi
    2074U,	// A2_addp
    2074U,	// A2_addpsat
    2074U,	// A2_addsat
    2074U,	// A2_addsph
    2074U,	// A2_addspl
    490637338U,	// A2_and
    188647450U,	// A2_andir
    490637338U,	// A2_andp
    4278298U,	// A2_aslh
    4294682U,	// A2_asrh
    759154714U,	// A2_combine_hh
    759154714U,	// A2_combine_hl
    775931930U,	// A2_combine_lh
    775931930U,	// A2_combine_ll
    188663834U,	// A2_combineii
    490719258U,	// A2_combinew
    4311066U,	// A2_max
    4311066U,	// A2_maxp
    4327450U,	// A2_maxu
    4327450U,	// A2_maxup
    4343834U,	// A2_min
    4343834U,	// A2_minp
    4360218U,	// A2_minu
    4360218U,	// A2_minup
    16812058U,	// A2_negp
    419465242U,	// A2_negsat
    1365U,	// A2_nop
    51226U,	// A2_notp
    490915866U,	// A2_or
    188925978U,	// A2_orir
    490915866U,	// A2_orp
    788598883U,	// A2_paddf
    788615267U,	// A2_paddfnew
    788598883U,	// A2_paddif
    788615267U,	// A2_paddifnew
    788599062U,	// A2_paddit
    788615446U,	// A2_padditnew
    788599062U,	// A2_paddt
    788615446U,	// A2_paddtnew
    805376099U,	// A2_pandf
    805392483U,	// A2_pandfnew
    805376278U,	// A2_pandt
    805392662U,	// A2_pandtnew
    822153315U,	// A2_porf
    822169699U,	// A2_porfnew
    822153494U,	// A2_port
    822169878U,	// A2_portnew
    838930531U,	// A2_psubf
    838946915U,	// A2_psubfnew
    838930710U,	// A2_psubt
    838947094U,	// A2_psubtnew
    855707747U,	// A2_pxorf
    855724131U,	// A2_pxorfnew
    855707926U,	// A2_pxort
    855724310U,	// A2_pxortnew
    423823386U,	// A2_roundsat
    4409370U,	// A2_sat
    4425754U,	// A2_satb
    4442138U,	// A2_sath
    4458522U,	// A2_satub
    4474906U,	// A2_satuh
    4491290U,	// A2_sub
    4491290U,	// A2_subh_h16_hh
    4491290U,	// A2_subh_h16_hl
    4491290U,	// A2_subh_h16_lh
    4491290U,	// A2_subh_h16_ll
    4491290U,	// A2_subh_h16_sat_hh
    4491290U,	// A2_subh_h16_sat_hl
    4491290U,	// A2_subh_h16_sat_lh
    4491290U,	// A2_subh_h16_sat_ll
    4491290U,	// A2_subh_l16_hl
    4491290U,	// A2_subh_l16_ll
    4491290U,	// A2_subh_l16_sat_hl
    4491290U,	// A2_subh_l16_sat_ll
    4491290U,	// A2_subp
    491046938U,	// A2_subri
    4491290U,	// A2_subsat
    18221082U,	// A2_svaddh
    420874266U,	// A2_svaddhs
    420956186U,	// A2_svadduhs
    18597914U,	// A2_svavgh
    505137178U,	// A2_svavghs
    19761178U,	// A2_svnavgh
    20547610U,	// A2_svsubh
    423200794U,	// A2_svsubhs
    423233562U,	// A2_svsubuhs
    4524058U,	// A2_swiz
    4130842U,	// A2_sxtb
    4147226U,	// A2_sxth
    4540442U,	// A2_sxtw
    50432026U,	// A2_tfr
    50432026U,	// A2_tfrcrr
    71665690U,	// A2_tfrih
    71682074U,	// A2_tfril
    50432026U,	// A2_tfrrcr
    50448410U,	// A2_tfrsi
    18122778U,	// A2_vabsh
    420775962U,	// A2_vabshsat
    18188314U,	// A2_vabsw
    420841498U,	// A2_vabswsat
    18221082U,	// A2_vaddh
    420874266U,	// A2_vaddhs
    18286618U,	// A2_vaddub
    420939802U,	// A2_vaddubs
    420956186U,	// A2_vadduhs
    18352154U,	// A2_vaddw
    421005338U,	// A2_vaddws
    18597914U,	// A2_vavgh
    874235930U,	// A2_vavghcr
    505137178U,	// A2_vavghr
    18614298U,	// A2_vavgub
    505153562U,	// A2_vavgubr
    18630682U,	// A2_vavguh
    505169946U,	// A2_vavguhr
    18647066U,	// A2_vavguw
    505186330U,	// A2_vavguwr
    18663450U,	// A2_vavgw
    874301466U,	// A2_vavgwcr
    505202714U,	// A2_vavgwr
    491128858U,	// A2_vcmpbeq
    491145242U,	// A2_vcmpbgtu
    491161626U,	// A2_vcmpheq
    491178010U,	// A2_vcmphgt
    491194394U,	// A2_vcmphgtu
    491210778U,	// A2_vcmpweq
    491227162U,	// A2_vcmpwgt
    491243546U,	// A2_vcmpwgtu
    4720666U,	// A2_vconj
    2197530U,	// A2_vmaxb
    2213914U,	// A2_vmaxh
    2230298U,	// A2_vmaxub
    2246682U,	// A2_vmaxuh
    4737050U,	// A2_vmaxuw
    2263066U,	// A2_vmaxw
    2279450U,	// A2_vminb
    2295834U,	// A2_vminh
    2312218U,	// A2_vminub
    2328602U,	// A2_vminuh
    4753434U,	// A2_vminuw
    2344986U,	// A2_vminw
    19761178U,	// A2_vnavgh
    892176410U,	// A2_vnavghcr
    271419418U,	// A2_vnavghr
    19793946U,	// A2_vnavgw
    892209178U,	// A2_vnavgwcr
    271452186U,	// A2_vnavgwr
    4769818U,	// A2_vraddub
    4786202U,	// A2_vraddub_acc
    20285466U,	// A2_vrsadub
    20269082U,	// A2_vrsadub_acc
    20547610U,	// A2_vsubh
    423200794U,	// A2_vsubhs
    20563994U,	// A2_vsubub
    423217178U,	// A2_vsububs
    423233562U,	// A2_vsubuhs
    20613146U,	// A2_vsubw
    423266330U,	// A2_vsubws
    4802586U,	// A2_xor
    4802586U,	// A2_xorp
    4163610U,	// A2_zxth
    67110938U,	// A4_addp_c
    910067738U,	// A4_andn
    910067738U,	// A4_andnp
    491358234U,	// A4_bitsplit
    189368346U,	// A4_bitspliti
    922929178U,	// A4_boundscheck_hi
    939706394U,	// A4_boundscheck_lo
    491374618U,	// A4_cmpbeq
    189384730U,	// A4_cmpbeqi
    491391002U,	// A4_cmpbgt
    189401114U,	// A4_cmpbgti
    491407386U,	// A4_cmpbgtu
    189417498U,	// A4_cmpbgtui
    491423770U,	// A4_cmpheq
    189433882U,	// A4_cmpheqi
    491440154U,	// A4_cmphgt
    189450266U,	// A4_cmphgti
    491456538U,	// A4_cmphgtu
    189466650U,	// A4_cmphgtui
    188663834U,	// A4_combineii
    490653722U,	// A4_combineir
    188729370U,	// A4_combineri
    189483034U,	// A4_cround_ri
    491472922U,	// A4_cround_rr
    297160U,	// A4_ext
    4950042U,	// A4_modwrapu
    910346266U,	// A4_orn
    910346266U,	// A4_ornp
    956371043U,	// A4_paslhf
    956387427U,	// A4_paslhfnew
    956371222U,	// A4_paslht
    956387606U,	// A4_paslhtnew
    973148259U,	// A4_pasrhf
    973164643U,	// A4_pasrhfnew
    973148438U,	// A4_pasrht
    973164822U,	// A4_pasrhtnew
    989925475U,	// A4_psxtbf
    989941859U,	// A4_psxtbfnew
    989925654U,	// A4_psxtbt
    989942038U,	// A4_psxtbtnew
    1006702691U,	// A4_psxthf
    1006719075U,	// A4_psxthfnew
    1006702870U,	// A4_psxtht
    1006719254U,	// A4_psxthtnew
    1023479907U,	// A4_pzxtbf
    1023496291U,	// A4_pzxtbfnew
    1023480086U,	// A4_pzxtbt
    1023496470U,	// A4_pzxtbtnew
    1040257123U,	// A4_pzxthf
    1040273507U,	// A4_pzxthfnew
    1040257302U,	// A4_pzxtht
    1040273686U,	// A4_pzxthtnew
    490735642U,	// A4_rcmpeq
    188745754U,	// A4_rcmpeqi
    491505690U,	// A4_rcmpneq
    189515802U,	// A4_rcmpneqi
    188942362U,	// A4_round_ri
    188942362U,	// A4_round_ri_sat
    490932250U,	// A4_round_rr
    490932250U,	// A4_round_rr_sat
    71600154U,	// A4_subp_c
    50432026U,	// A4_tfrcpp
    50432026U,	// A4_tfrpcp
    4982810U,	// A4_tlbmatch
    4999194U,	// A4_vcmpbeq_any
    189138970U,	// A4_vcmpbeqi
    491554842U,	// A4_vcmpbgt
    189564954U,	// A4_vcmpbgti
    189155354U,	// A4_vcmpbgtui
    189171738U,	// A4_vcmpheqi
    189188122U,	// A4_vcmphgti
    189204506U,	// A4_vcmphgtui
    189220890U,	// A4_vcmpweqi
    189237274U,	// A4_vcmpwgti
    189253658U,	// A4_vcmpwgtui
    5031962U,	// A4_vrmaxh
    5048346U,	// A4_vrmaxuh
    5064730U,	// A4_vrmaxuw
    5081114U,	// A4_vrmaxw
    5097498U,	// A4_vrminh
    5113882U,	// A4_vrminuh
    5130266U,	// A4_vrminuw
    5146650U,	// A4_vrminw
    3590170U,	// A5_ACS
    5163034U,	// A5_vaddhubs
    5179418U,	// A6_vcmpbeq_notany
    3590170U,	// A6_vminub_RdP
    5195802U,	// A7_clip
    189483034U,	// A7_croundd_ri
    491472922U,	// A7_croundd_rr
    5212186U,	// A7_vclip
    5228570U,	// C2_all8
    490637338U,	// C2_and
    1061062682U,	// C2_andn
    5244954U,	// C2_any8
    491800602U,	// C2_bitsclr
    189810714U,	// C2_bitsclri
    5277722U,	// C2_bitsset
    1073811555U,	// C2_ccombinewf
    1073827939U,	// C2_ccombinewnewf
    1073828118U,	// C2_ccombinewnewt
    1073811734U,	// C2_ccombinewt
    687935587U,	// C2_cmoveif
    687935766U,	// C2_cmoveit
    687951971U,	// C2_cmovenewif
    687952150U,	// C2_cmovenewit
    490735642U,	// C2_cmpeq
    188745754U,	// C2_cmpeqi
    490735642U,	// C2_cmpeqp
    491833370U,	// C2_cmpgt
    189843482U,	// C2_cmpgti
    491833370U,	// C2_cmpgtp
    491849754U,	// C2_cmpgtu
    189859866U,	// C2_cmpgtui
    491849754U,	// C2_cmpgtup
    5326874U,	// C2_mask
    491882522U,	// C2_mux
    189892634U,	// C2_muxii
    491882522U,	// C2_muxir
    189892634U,	// C2_muxri
    51226U,	// C2_not
    490915866U,	// C2_or
    1061341210U,	// C2_orn
    50432026U,	// C2_tfrpr
    50432026U,	// C2_tfrrp
    5359642U,	// C2_vitpack
    5376026U,	// C2_vmux
    4802586U,	// C2_xor
    5392410U,	// C4_addipc
    1094617114U,	// C4_and_and
    1094617114U,	// C4_and_andn
    1111394330U,	// C4_and_or
    1111394330U,	// C4_and_orn
    491948058U,	// C4_cmplte
    189958170U,	// C4_cmpltei
    491964442U,	// C4_cmplteu
    189974554U,	// C4_cmplteui
    491505690U,	// C4_cmpneq
    189515802U,	// C4_cmpneqi
    5441562U,	// C4_fastcorner9
    5457946U,	// C4_fastcorner9_not
    492013594U,	// C4_nbitsclr
    190023706U,	// C4_nbitsclri
    5490714U,	// C4_nbitsset
    1094895642U,	// C4_or_and
    1094895642U,	// C4_or_andn
    1111672858U,	// C4_or_or
    1111672858U,	// C4_or_orn
    759881U,	// CALLProfile
    5507098U,	// CONST32
    5523482U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    755804U,	// EH_RETURN_JMPR
    5539866U,	// F2_conv_d2df
    5556250U,	// F2_conv_d2sf
    22349850U,	// F2_conv_df2d
    1129646106U,	// F2_conv_df2d_chop
    5589018U,	// F2_conv_df2sf
    22382618U,	// F2_conv_df2ud
    1129678874U,	// F2_conv_df2ud_chop
    22399002U,	// F2_conv_df2uw
    1129695258U,	// F2_conv_df2uw_chop
    22415386U,	// F2_conv_df2w
    1129711642U,	// F2_conv_df2w_chop
    22431770U,	// F2_conv_sf2d
    1129728026U,	// F2_conv_sf2d_chop
    5670938U,	// F2_conv_sf2df
    22464538U,	// F2_conv_sf2ud
    1129760794U,	// F2_conv_sf2ud_chop
    22480922U,	// F2_conv_sf2uw
    1129777178U,	// F2_conv_sf2uw_chop
    22497306U,	// F2_conv_sf2w
    1129793562U,	// F2_conv_sf2w_chop
    5736474U,	// F2_conv_ud2df
    5752858U,	// F2_conv_ud2sf
    5769242U,	// F2_conv_uw2df
    5785626U,	// F2_conv_uw2sf
    5802010U,	// F2_conv_w2df
    5818394U,	// F2_conv_w2sf
    5834778U,	// F2_dfadd
    5851162U,	// F2_dfclass
    5867546U,	// F2_dfcmpeq
    5883930U,	// F2_dfcmpge
    5900314U,	// F2_dfcmpgt
    5916698U,	// F2_dfcmpuo
    1146783770U,	// F2_dfimm_n
    1163560986U,	// F2_dfimm_p
    5949466U,	// F2_dfmax
    5965850U,	// F2_dfmin
    5982234U,	// F2_dfmpyfix
    5998618U,	// F2_dfmpyhh
    6015002U,	// F2_dfmpylh
    6031386U,	// F2_dfmpyll
    6047770U,	// F2_dfsub
    6064154U,	// F2_sfadd
    6080538U,	// F2_sfclass
    6096922U,	// F2_sfcmpeq
    6113306U,	// F2_sfcmpge
    6129690U,	// F2_sfcmpgt
    6146074U,	// F2_sfcmpuo
    6162458U,	// F2_sffixupd
    6178842U,	// F2_sffixupn
    6195226U,	// F2_sffixupr
    22988826U,	// F2_sffma
    1180616730U,	// F2_sffma_lib
    492750874U,	// F2_sffma_sc
    23005210U,	// F2_sffms
    1180633114U,	// F2_sffms_lib
    1147095066U,	// F2_sfimm_n
    1163872282U,	// F2_sfimm_p
    3590170U,	// F2_sfinvsqrta
    6260762U,	// F2_sfmax
    6277146U,	// F2_sfmin
    6293530U,	// F2_sfmpy
    3590170U,	// F2_sfrecipa
    6309914U,	// F2_sfsub
    50432026U,	// G4_tfrgcpp
    50432026U,	// G4_tfrgcrr
    50432026U,	// G4_tfrgpcp
    50432026U,	// G4_tfrgrcr
    4556826U,	// HI
    759881U,	// J2_call
    6326371U,	// J2_callf
    755797U,	// J2_callr
    6342755U,	// J2_callrf
    6342934U,	// J2_callrt
    6326550U,	// J2_callt
    759887U,	// J2_jump
    6359139U,	// J2_jumpf
    6375523U,	// J2_jumpfnew
    6391907U,	// J2_jumpfnewpt
    6408291U,	// J2_jumpfpt
    755804U,	// J2_jumpr
    6424675U,	// J2_jumprf
    6441059U,	// J2_jumprfnew
    6457443U,	// J2_jumprfnewpt
    6473827U,	// J2_jumprfpt
    6490390U,	// J2_jumprgtez
    6506774U,	// J2_jumprgtezpt
    6523158U,	// J2_jumprltez
    6539542U,	// J2_jumprltezpt
    6555926U,	// J2_jumprnz
    6572310U,	// J2_jumprnzpt
    6424854U,	// J2_jumprt
    6441238U,	// J2_jumprtnew
    6457622U,	// J2_jumprtnewpt
    6474006U,	// J2_jumprtpt
    6588694U,	// J2_jumprz
    6605078U,	// J2_jumprzpt
    6359318U,	// J2_jumpt
    6375702U,	// J2_jumptnew
    6392086U,	// J2_jumptnewpt
    6408470U,	// J2_jumptpt
    4233514U,	// J2_loop0i
    4233514U,	// J2_loop0iext
    3594538U,	// J2_loop0r
    3594538U,	// J2_loop0rext
    4233565U,	// J2_loop1i
    4233565U,	// J2_loop1iext
    3594589U,	// J2_loop1r
    3594589U,	// J2_loop1rext
    297145U,	// J2_pause
    4233506U,	// J2_ploop1si
    3594530U,	// J2_ploop1sr
    4233521U,	// J2_ploop2si
    3594545U,	// J2_ploop2sr
    4233536U,	// J2_ploop3si
    3594560U,	// J2_ploop3sr
    297090U,	// J2_trap0
    71338326U,	// J2_trap1
    1197804140U,	// J4_cmpeq_f_jumpnv_nt
    1214581356U,	// J4_cmpeq_f_jumpnv_t
    3590738U,	// J4_cmpeq_fp0_jump_nt
    3590738U,	// J4_cmpeq_fp0_jump_t
    3590751U,	// J4_cmpeq_fp1_jump_nt
    3590751U,	// J4_cmpeq_fp1_jump_t
    1197804153U,	// J4_cmpeq_t_jumpnv_nt
    1214581369U,	// J4_cmpeq_t_jumpnv_t
    3590738U,	// J4_cmpeq_tp0_jump_nt
    3590738U,	// J4_cmpeq_tp0_jump_t
    3590751U,	// J4_cmpeq_tp1_jump_nt
    3590751U,	// J4_cmpeq_tp1_jump_t
    1197820524U,	// J4_cmpeqi_f_jumpnv_nt
    1214597740U,	// J4_cmpeqi_f_jumpnv_t
    4229714U,	// J4_cmpeqi_fp0_jump_nt
    4229714U,	// J4_cmpeqi_fp0_jump_t
    4229727U,	// J4_cmpeqi_fp1_jump_nt
    4229727U,	// J4_cmpeqi_fp1_jump_t
    1197820537U,	// J4_cmpeqi_t_jumpnv_nt
    1214597753U,	// J4_cmpeqi_t_jumpnv_t
    4229714U,	// J4_cmpeqi_tp0_jump_nt
    4229714U,	// J4_cmpeqi_tp0_jump_t
    4229727U,	// J4_cmpeqi_tp1_jump_nt
    4229727U,	// J4_cmpeqi_tp1_jump_t
    1197820524U,	// J4_cmpeqn1_f_jumpnv_nt
    1214597740U,	// J4_cmpeqn1_f_jumpnv_t
    4229714U,	// J4_cmpeqn1_fp0_jump_nt
    4229714U,	// J4_cmpeqn1_fp0_jump_t
    4229727U,	// J4_cmpeqn1_fp1_jump_nt
    4229727U,	// J4_cmpeqn1_fp1_jump_t
    1197820537U,	// J4_cmpeqn1_t_jumpnv_nt
    1214597753U,	// J4_cmpeqn1_t_jumpnv_t
    4229714U,	// J4_cmpeqn1_tp0_jump_nt
    4229714U,	// J4_cmpeqn1_tp0_jump_t
    4229727U,	// J4_cmpeqn1_tp1_jump_nt
    4229727U,	// J4_cmpeqn1_tp1_jump_t
    1197804245U,	// J4_cmpgt_f_jumpnv_nt
    1214581461U,	// J4_cmpgt_f_jumpnv_t
    3590843U,	// J4_cmpgt_fp0_jump_nt
    3590843U,	// J4_cmpgt_fp0_jump_t
    3590856U,	// J4_cmpgt_fp1_jump_nt
    3590856U,	// J4_cmpgt_fp1_jump_t
    1197804258U,	// J4_cmpgt_t_jumpnv_nt
    1214581474U,	// J4_cmpgt_t_jumpnv_t
    3590843U,	// J4_cmpgt_tp0_jump_nt
    3590843U,	// J4_cmpgt_tp0_jump_t
    3590856U,	// J4_cmpgt_tp1_jump_nt
    3590856U,	// J4_cmpgt_tp1_jump_t
    1197820629U,	// J4_cmpgti_f_jumpnv_nt
    1214597845U,	// J4_cmpgti_f_jumpnv_t
    4229819U,	// J4_cmpgti_fp0_jump_nt
    4229819U,	// J4_cmpgti_fp0_jump_t
    4229832U,	// J4_cmpgti_fp1_jump_nt
    4229832U,	// J4_cmpgti_fp1_jump_t
    1197820642U,	// J4_cmpgti_t_jumpnv_nt
    1214597858U,	// J4_cmpgti_t_jumpnv_t
    4229819U,	// J4_cmpgti_tp0_jump_nt
    4229819U,	// J4_cmpgti_tp0_jump_t
    4229832U,	// J4_cmpgti_tp1_jump_nt
    4229832U,	// J4_cmpgti_tp1_jump_t
    1197820629U,	// J4_cmpgtn1_f_jumpnv_nt
    1214597845U,	// J4_cmpgtn1_f_jumpnv_t
    4229819U,	// J4_cmpgtn1_fp0_jump_nt
    4229819U,	// J4_cmpgtn1_fp0_jump_t
    4229832U,	// J4_cmpgtn1_fp1_jump_nt
    4229832U,	// J4_cmpgtn1_fp1_jump_t
    1197820642U,	// J4_cmpgtn1_t_jumpnv_nt
    1214597858U,	// J4_cmpgtn1_t_jumpnv_t
    4229819U,	// J4_cmpgtn1_tp0_jump_nt
    4229819U,	// J4_cmpgtn1_tp0_jump_t
    4229832U,	// J4_cmpgtn1_tp1_jump_nt
    4229832U,	// J4_cmpgtn1_tp1_jump_t
    1197804378U,	// J4_cmpgtu_f_jumpnv_nt
    1214581594U,	// J4_cmpgtu_f_jumpnv_t
    3590974U,	// J4_cmpgtu_fp0_jump_nt
    3590974U,	// J4_cmpgtu_fp0_jump_t
    3590988U,	// J4_cmpgtu_fp1_jump_nt
    3590988U,	// J4_cmpgtu_fp1_jump_t
    1197804392U,	// J4_cmpgtu_t_jumpnv_nt
    1214581608U,	// J4_cmpgtu_t_jumpnv_t
    3590974U,	// J4_cmpgtu_tp0_jump_nt
    3590974U,	// J4_cmpgtu_tp0_jump_t
    3590988U,	// J4_cmpgtu_tp1_jump_nt
    3590988U,	// J4_cmpgtu_tp1_jump_t
    1197820762U,	// J4_cmpgtui_f_jumpnv_nt
    1214597978U,	// J4_cmpgtui_f_jumpnv_t
    4229950U,	// J4_cmpgtui_fp0_jump_nt
    4229950U,	// J4_cmpgtui_fp0_jump_t
    4229964U,	// J4_cmpgtui_fp1_jump_nt
    4229964U,	// J4_cmpgtui_fp1_jump_t
    1197820776U,	// J4_cmpgtui_t_jumpnv_nt
    1214597992U,	// J4_cmpgtui_t_jumpnv_t
    4229950U,	// J4_cmpgtui_tp0_jump_nt
    4229950U,	// J4_cmpgtui_tp0_jump_t
    4229964U,	// J4_cmpgtui_tp1_jump_nt
    4229964U,	// J4_cmpgtui_tp1_jump_t
    3590869U,	// J4_cmplt_f_jumpnv_nt
    3590869U,	// J4_cmplt_f_jumpnv_t
    3590882U,	// J4_cmplt_t_jumpnv_nt
    3590882U,	// J4_cmplt_t_jumpnv_t
    3591002U,	// J4_cmpltu_f_jumpnv_nt
    3591002U,	// J4_cmpltu_f_jumpnv_t
    3591016U,	// J4_cmpltu_t_jumpnv_nt
    3591016U,	// J4_cmpltu_t_jumpnv_t
    297651U,	// J4_hintjumpr
    1224853530U,	// J4_jumpseti
    1224837146U,	// J4_jumpsetr
    6654734U,	// J4_tstbit0_f_jumpnv_nt
    6671118U,	// J4_tstbit0_f_jumpnv_t
    6687476U,	// J4_tstbit0_fp0_jump_nt
    6703860U,	// J4_tstbit0_fp0_jump_t
    6720257U,	// J4_tstbit0_fp1_jump_nt
    6736641U,	// J4_tstbit0_fp1_jump_t
    6654747U,	// J4_tstbit0_t_jumpnv_nt
    6671131U,	// J4_tstbit0_t_jumpnv_t
    6753012U,	// J4_tstbit0_tp0_jump_nt
    6769396U,	// J4_tstbit0_tp0_jump_t
    6785793U,	// J4_tstbit0_tp1_jump_nt
    6802177U,	// J4_tstbit0_tp1_jump_t
    4212762U,	// L2_deallocframe
    67422234U,	// L2_loadalignb_io
    313370U,	// L2_loadalignb_pbr
    313370U,	// L2_loadalignb_pci
    313370U,	// L2_loadalignb_pcr
    313370U,	// L2_loadalignb_pi
    313370U,	// L2_loadalignb_pr
    67438618U,	// L2_loadalignh_io
    329754U,	// L2_loadalignh_pbr
    329754U,	// L2_loadalignh_pci
    329754U,	// L2_loadalignh_pcr
    329754U,	// L2_loadalignh_pi
    329754U,	// L2_loadalignh_pr
    704989210U,	// L2_loadbsw2_io
    1241860122U,	// L2_loadbsw2_pbr
    1258637338U,	// L2_loadbsw2_pci
    1275414554U,	// L2_loadbsw2_pcr
    1258637338U,	// L2_loadbsw2_pi
    1241860122U,	// L2_loadbsw2_pr
    704989210U,	// L2_loadbsw4_io
    1241860122U,	// L2_loadbsw4_pbr
    1258637338U,	// L2_loadbsw4_pci
    1275414554U,	// L2_loadbsw4_pcr
    1258637338U,	// L2_loadbsw4_pi
    1241860122U,	// L2_loadbsw4_pr
    705005594U,	// L2_loadbzw2_io
    1241876506U,	// L2_loadbzw2_pbr
    1258653722U,	// L2_loadbzw2_pci
    1275430938U,	// L2_loadbzw2_pcr
    1258653722U,	// L2_loadbzw2_pi
    1241876506U,	// L2_loadbzw2_pr
    705005594U,	// L2_loadbzw4_io
    1241876506U,	// L2_loadbzw4_pbr
    1258653722U,	// L2_loadbzw4_pci
    1275430938U,	// L2_loadbzw4_pcr
    1258653722U,	// L2_loadbzw4_pi
    1241876506U,	// L2_loadbzw4_pr
    705021978U,	// L2_loadrb_io
    1241892890U,	// L2_loadrb_pbr
    1258670106U,	// L2_loadrb_pci
    1275447322U,	// L2_loadrb_pcr
    1258670106U,	// L2_loadrb_pi
    1241892890U,	// L2_loadrb_pr
    6817818U,	// L2_loadrbgp
    705038362U,	// L2_loadrd_io
    1241909274U,	// L2_loadrd_pbr
    1258686490U,	// L2_loadrd_pci
    1275463706U,	// L2_loadrd_pcr
    1258686490U,	// L2_loadrd_pi
    1241909274U,	// L2_loadrd_pr
    6834202U,	// L2_loadrdgp
    705054746U,	// L2_loadrh_io
    1241925658U,	// L2_loadrh_pbr
    1258702874U,	// L2_loadrh_pci
    1275480090U,	// L2_loadrh_pcr
    1258702874U,	// L2_loadrh_pi
    1241925658U,	// L2_loadrh_pr
    6850586U,	// L2_loadrhgp
    705071130U,	// L2_loadri_io
    1241942042U,	// L2_loadri_pbr
    1258719258U,	// L2_loadri_pci
    1275496474U,	// L2_loadri_pcr
    1258719258U,	// L2_loadri_pi
    1241942042U,	// L2_loadri_pr
    6866970U,	// L2_loadrigp
    705087514U,	// L2_loadrub_io
    1241958426U,	// L2_loadrub_pbr
    1258735642U,	// L2_loadrub_pci
    1275512858U,	// L2_loadrub_pcr
    1258735642U,	// L2_loadrub_pi
    1241958426U,	// L2_loadrub_pr
    6883354U,	// L2_loadrubgp
    705103898U,	// L2_loadruh_io
    1241974810U,	// L2_loadruh_pbr
    1258752026U,	// L2_loadruh_pci
    1275529242U,	// L2_loadruh_pcr
    1258752026U,	// L2_loadruh_pi
    1241974810U,	// L2_loadruh_pr
    6899738U,	// L2_loadruhgp
    6916122U,	// L2_loadw_aq
    6932506U,	// L2_loadw_locked
    83955811U,	// L2_ploadrbf_io
    83959907U,	// L2_ploadrbf_pi
    83972195U,	// L2_ploadrbfnew_io
    83976291U,	// L2_ploadrbfnew_pi
    83955990U,	// L2_ploadrbt_io
    83960086U,	// L2_ploadrbt_pi
    83972374U,	// L2_ploadrbtnew_io
    83976470U,	// L2_ploadrbtnew_pi
    100733027U,	// L2_ploadrdf_io
    100737123U,	// L2_ploadrdf_pi
    100749411U,	// L2_ploadrdfnew_io
    100753507U,	// L2_ploadrdfnew_pi
    100733206U,	// L2_ploadrdt_io
    100737302U,	// L2_ploadrdt_pi
    100749590U,	// L2_ploadrdtnew_io
    100753686U,	// L2_ploadrdtnew_pi
    117510243U,	// L2_ploadrhf_io
    117514339U,	// L2_ploadrhf_pi
    117526627U,	// L2_ploadrhfnew_io
    117530723U,	// L2_ploadrhfnew_pi
    117510422U,	// L2_ploadrht_io
    117514518U,	// L2_ploadrht_pi
    117526806U,	// L2_ploadrhtnew_io
    117530902U,	// L2_ploadrhtnew_pi
    134287459U,	// L2_ploadrif_io
    134291555U,	// L2_ploadrif_pi
    134303843U,	// L2_ploadrifnew_io
    134307939U,	// L2_ploadrifnew_pi
    134287638U,	// L2_ploadrit_io
    134291734U,	// L2_ploadrit_pi
    134304022U,	// L2_ploadritnew_io
    134308118U,	// L2_ploadritnew_pi
    151064675U,	// L2_ploadrubf_io
    151068771U,	// L2_ploadrubf_pi
    151081059U,	// L2_ploadrubfnew_io
    151085155U,	// L2_ploadrubfnew_pi
    151064854U,	// L2_ploadrubt_io
    151068950U,	// L2_ploadrubt_pi
    151081238U,	// L2_ploadrubtnew_io
    151085334U,	// L2_ploadrubtnew_pi
    167841891U,	// L2_ploadruhf_io
    167845987U,	// L2_ploadruhf_pi
    167858275U,	// L2_ploadruhfnew_io
    167862371U,	// L2_ploadruhfnew_pi
    167842070U,	// L2_ploadruht_io
    167846166U,	// L2_ploadruht_pi
    167858454U,	// L2_ploadruhtnew_io
    167862550U,	// L2_ploadruhtnew_pi
    1296091573U,	// L4_add_memopb_io
    1296091681U,	// L4_add_memoph_io
    1296092021U,	// L4_add_memopw_io
    1312868789U,	// L4_and_memopb_io
    1312868897U,	// L4_and_memoph_io
    1312869237U,	// L4_and_memopw_io
    1329646005U,	// L4_iadd_memopb_io
    1329646113U,	// L4_iadd_memoph_io
    1329646453U,	// L4_iadd_memopw_io
    1346423221U,	// L4_iand_memopb_io
    1346423329U,	// L4_iand_memoph_io
    1346423669U,	// L4_iand_memopw_io
    1363200437U,	// L4_ior_memopb_io
    1363200545U,	// L4_ior_memoph_io
    1363200885U,	// L4_ior_memopw_io
    1379977653U,	// L4_isub_memopb_io
    1379977761U,	// L4_isub_memoph_io
    1379978101U,	// L4_isub_memopw_io
    313370U,	// L4_loadalignb_ap
    67422234U,	// L4_loadalignb_ur
    329754U,	// L4_loadalignh_ap
    67438618U,	// L4_loadalignh_ur
    1392855066U,	// L4_loadbsw2_ap
    1409632282U,	// L4_loadbsw2_ur
    1392855066U,	// L4_loadbsw4_ap
    1409632282U,	// L4_loadbsw4_ur
    1392871450U,	// L4_loadbzw2_ap
    1409648666U,	// L4_loadbzw2_ur
    1392871450U,	// L4_loadbzw4_ap
    1409648666U,	// L4_loadbzw4_ur
    6948890U,	// L4_loadd_aq
    6965274U,	// L4_loadd_locked
    1392887834U,	// L4_loadrb_ap
    1426442266U,	// L4_loadrb_rr
    1409665050U,	// L4_loadrb_ur
    1392904218U,	// L4_loadrd_ap
    1426458650U,	// L4_loadrd_rr
    1409681434U,	// L4_loadrd_ur
    1392920602U,	// L4_loadrh_ap
    1426475034U,	// L4_loadrh_rr
    1409697818U,	// L4_loadrh_ur
    1392936986U,	// L4_loadri_ap
    1426491418U,	// L4_loadri_rr
    1409714202U,	// L4_loadri_ur
    1392953370U,	// L4_loadrub_ap
    1426507802U,	// L4_loadrub_rr
    1409730586U,	// L4_loadrub_ur
    1392969754U,	// L4_loadruh_ap
    1426524186U,	// L4_loadruh_rr
    1409746970U,	// L4_loadruh_ur
    1447086517U,	// L4_or_memopb_io
    1447086625U,	// L4_or_memoph_io
    1447086965U,	// L4_or_memopw_io
    1459687523U,	// L4_ploadrbf_abs
    83955811U,	// L4_ploadrbf_rr
    1459703907U,	// L4_ploadrbfnew_abs
    83972195U,	// L4_ploadrbfnew_rr
    1459687702U,	// L4_ploadrbt_abs
    83955990U,	// L4_ploadrbt_rr
    1459704086U,	// L4_ploadrbtnew_abs
    83972374U,	// L4_ploadrbtnew_rr
    1476464739U,	// L4_ploadrdf_abs
    100733027U,	// L4_ploadrdf_rr
    1476481123U,	// L4_ploadrdfnew_abs
    100749411U,	// L4_ploadrdfnew_rr
    1476464918U,	// L4_ploadrdt_abs
    100733206U,	// L4_ploadrdt_rr
    1476481302U,	// L4_ploadrdtnew_abs
    100749590U,	// L4_ploadrdtnew_rr
    1493241955U,	// L4_ploadrhf_abs
    117510243U,	// L4_ploadrhf_rr
    1493258339U,	// L4_ploadrhfnew_abs
    117526627U,	// L4_ploadrhfnew_rr
    1493242134U,	// L4_ploadrht_abs
    117510422U,	// L4_ploadrht_rr
    1493258518U,	// L4_ploadrhtnew_abs
    117526806U,	// L4_ploadrhtnew_rr
    1510019171U,	// L4_ploadrif_abs
    134287459U,	// L4_ploadrif_rr
    1510035555U,	// L4_ploadrifnew_abs
    134303843U,	// L4_ploadrifnew_rr
    1510019350U,	// L4_ploadrit_abs
    134287638U,	// L4_ploadrit_rr
    1510035734U,	// L4_ploadritnew_abs
    134304022U,	// L4_ploadritnew_rr
    1526796387U,	// L4_ploadrubf_abs
    151064675U,	// L4_ploadrubf_rr
    1526812771U,	// L4_ploadrubfnew_abs
    151081059U,	// L4_ploadrubfnew_rr
    1526796566U,	// L4_ploadrubt_abs
    151064854U,	// L4_ploadrubt_rr
    1526812950U,	// L4_ploadrubtnew_abs
    151081238U,	// L4_ploadrubtnew_rr
    1543573603U,	// L4_ploadruhf_abs
    167841891U,	// L4_ploadruhf_rr
    1543589987U,	// L4_ploadruhfnew_abs
    167858275U,	// L4_ploadruhfnew_rr
    1543573782U,	// L4_ploadruht_abs
    167842070U,	// L4_ploadruht_rr
    1543590166U,	// L4_ploadruhtnew_abs
    167858454U,	// L4_ploadruhtnew_rr
    6981658U,	// L4_return
    1560350819U,	// L4_return_f
    1560367203U,	// L4_return_fnew_pnt
    1560367203U,	// L4_return_fnew_pt
    1560350998U,	// L4_return_t
    1560367382U,	// L4_return_tnew_pnt
    1560367382U,	// L4_return_tnew_pt
    1581304245U,	// L4_sub_memopb_io
    1581304353U,	// L4_sub_memoph_io
    1581304693U,	// L4_sub_memopw_io
    3591035U,	// L6_memcpy
    4573210U,	// LO
    493537306U,	// M2_acci
    191547418U,	// M2_accii
    7014426U,	// M2_cmaci_s0
    7030810U,	// M2_cmacr_s0
    426477594U,	// M2_cmacs_s0
    208373786U,	// M2_cmacs_s1
    1600882714U,	// M2_cmacsc_s0
    1617659930U,	// M2_cmacsc_s1
    7063578U,	// M2_cmpyi_s0
    7079962U,	// M2_cmpyr_s0
    275531802U,	// M2_cmpyrs_s0
    225200154U,	// M2_cmpyrs_s1
    1634486298U,	// M2_cmpyrsc_s0
    1651263514U,	// M2_cmpyrsc_s1
    426526746U,	// M2_cmpys_s0
    208422938U,	// M2_cmpys_s1
    1600931866U,	// M2_cmpysc_s0
    1617709082U,	// M2_cmpysc_s1
    426543130U,	// M2_cnacs_s0
    208439322U,	// M2_cnacs_s1
    1600948250U,	// M2_cnacsc_s0
    1617725466U,	// M2_cnacsc_s1
    493668378U,	// M2_dpmpyss_acc_s0
    493684762U,	// M2_dpmpyss_nac_s0
    493701146U,	// M2_dpmpyss_rnd_s0
    493701146U,	// M2_dpmpyss_s0
    493717530U,	// M2_dpmpyuu_acc_s0
    493733914U,	// M2_dpmpyuu_nac_s0
    493750298U,	// M2_dpmpyuu_s0
    493701146U,	// M2_hmmpyh_rs1
    493701146U,	// M2_hmmpyh_s1
    493701146U,	// M2_hmmpyl_rs1
    493701146U,	// M2_hmmpyl_s1
    493766682U,	// M2_maci
    191793178U,	// M2_macsin
    191776794U,	// M2_macsip
    275695642U,	// M2_mmachs_rs0
    225363994U,	// M2_mmachs_rs1
    426690586U,	// M2_mmachs_s0
    208586778U,	// M2_mmachs_s1
    275712026U,	// M2_mmacls_rs0
    225380378U,	// M2_mmacls_rs1
    426706970U,	// M2_mmacls_s0
    208603162U,	// M2_mmacls_s1
    275728410U,	// M2_mmacuhs_rs0
    225396762U,	// M2_mmacuhs_rs1
    426723354U,	// M2_mmacuhs_s0
    208619546U,	// M2_mmacuhs_s1
    275744794U,	// M2_mmaculs_rs0
    225413146U,	// M2_mmaculs_rs1
    426739738U,	// M2_mmaculs_s0
    208635930U,	// M2_mmaculs_s1
    275761178U,	// M2_mmpyh_rs0
    225429530U,	// M2_mmpyh_rs1
    426756122U,	// M2_mmpyh_s0
    208652314U,	// M2_mmpyh_s1
    275777562U,	// M2_mmpyl_rs0
    225445914U,	// M2_mmpyl_rs1
    426772506U,	// M2_mmpyl_s0
    208668698U,	// M2_mmpyl_s1
    275793946U,	// M2_mmpyuh_rs0
    225462298U,	// M2_mmpyuh_rs1
    426788890U,	// M2_mmpyuh_s0
    208685082U,	// M2_mmpyuh_s1
    275810330U,	// M2_mmpyul_rs0
    225478682U,	// M2_mmpyul_rs1
    426805274U,	// M2_mmpyul_s0
    208701466U,	// M2_mmpyul_s1
    493783066U,	// M2_mnaci
    762103834U,	// M2_mpy_acc_hh_s0
    762103834U,	// M2_mpy_acc_hh_s1
    762103834U,	// M2_mpy_acc_hl_s0
    762103834U,	// M2_mpy_acc_hl_s1
    778881050U,	// M2_mpy_acc_lh_s0
    778881050U,	// M2_mpy_acc_lh_s1
    778881050U,	// M2_mpy_acc_ll_s0
    778881050U,	// M2_mpy_acc_ll_s1
    762103834U,	// M2_mpy_acc_sat_hh_s0
    762103834U,	// M2_mpy_acc_sat_hh_s1
    762103834U,	// M2_mpy_acc_sat_hl_s0
    762103834U,	// M2_mpy_acc_sat_hl_s1
    778881050U,	// M2_mpy_acc_sat_lh_s0
    778881050U,	// M2_mpy_acc_sat_lh_s1
    778881050U,	// M2_mpy_acc_sat_ll_s0
    778881050U,	// M2_mpy_acc_sat_ll_s1
    762136602U,	// M2_mpy_hh_s0
    762136602U,	// M2_mpy_hh_s1
    762136602U,	// M2_mpy_hl_s0
    762136602U,	// M2_mpy_hl_s1
    778913818U,	// M2_mpy_lh_s0
    778913818U,	// M2_mpy_lh_s1
    778913818U,	// M2_mpy_ll_s0
    778913818U,	// M2_mpy_ll_s1
    762120218U,	// M2_mpy_nac_hh_s0
    762120218U,	// M2_mpy_nac_hh_s1
    762120218U,	// M2_mpy_nac_hl_s0
    762120218U,	// M2_mpy_nac_hl_s1
    778897434U,	// M2_mpy_nac_lh_s0
    778897434U,	// M2_mpy_nac_lh_s1
    778897434U,	// M2_mpy_nac_ll_s0
    778897434U,	// M2_mpy_nac_ll_s1
    762120218U,	// M2_mpy_nac_sat_hh_s0
    762120218U,	// M2_mpy_nac_sat_hh_s1
    762120218U,	// M2_mpy_nac_sat_hl_s0
    762120218U,	// M2_mpy_nac_sat_hl_s1
    778897434U,	// M2_mpy_nac_sat_lh_s0
    778897434U,	// M2_mpy_nac_sat_lh_s1
    778897434U,	// M2_mpy_nac_sat_ll_s0
    778897434U,	// M2_mpy_nac_sat_ll_s1
    762136602U,	// M2_mpy_rnd_hh_s0
    762136602U,	// M2_mpy_rnd_hh_s1
    762136602U,	// M2_mpy_rnd_hl_s0
    762136602U,	// M2_mpy_rnd_hl_s1
    778913818U,	// M2_mpy_rnd_lh_s0
    778913818U,	// M2_mpy_rnd_lh_s1
    778913818U,	// M2_mpy_rnd_ll_s0
    778913818U,	// M2_mpy_rnd_ll_s1
    762136602U,	// M2_mpy_sat_hh_s0
    762136602U,	// M2_mpy_sat_hh_s1
    762136602U,	// M2_mpy_sat_hl_s0
    762136602U,	// M2_mpy_sat_hl_s1
    778913818U,	// M2_mpy_sat_lh_s0
    778913818U,	// M2_mpy_sat_lh_s1
    778913818U,	// M2_mpy_sat_ll_s0
    778913818U,	// M2_mpy_sat_ll_s1
    762136602U,	// M2_mpy_sat_rnd_hh_s0
    762136602U,	// M2_mpy_sat_rnd_hh_s1
    762136602U,	// M2_mpy_sat_rnd_hl_s0
    762136602U,	// M2_mpy_sat_rnd_hl_s1
    778913818U,	// M2_mpy_sat_rnd_lh_s0
    778913818U,	// M2_mpy_sat_rnd_lh_s1
    778913818U,	// M2_mpy_sat_rnd_ll_s0
    778913818U,	// M2_mpy_sat_rnd_ll_s1
    493701146U,	// M2_mpy_up
    493701146U,	// M2_mpy_up_s1
    493701146U,	// M2_mpy_up_s1_sat
    762103834U,	// M2_mpyd_acc_hh_s0
    762103834U,	// M2_mpyd_acc_hh_s1
    762103834U,	// M2_mpyd_acc_hl_s0
    762103834U,	// M2_mpyd_acc_hl_s1
    778881050U,	// M2_mpyd_acc_lh_s0
    778881050U,	// M2_mpyd_acc_lh_s1
    778881050U,	// M2_mpyd_acc_ll_s0
    778881050U,	// M2_mpyd_acc_ll_s1
    762136602U,	// M2_mpyd_hh_s0
    762136602U,	// M2_mpyd_hh_s1
    762136602U,	// M2_mpyd_hl_s0
    762136602U,	// M2_mpyd_hl_s1
    778913818U,	// M2_mpyd_lh_s0
    778913818U,	// M2_mpyd_lh_s1
    778913818U,	// M2_mpyd_ll_s0
    778913818U,	// M2_mpyd_ll_s1
    762120218U,	// M2_mpyd_nac_hh_s0
    762120218U,	// M2_mpyd_nac_hh_s1
    762120218U,	// M2_mpyd_nac_hl_s0
    762120218U,	// M2_mpyd_nac_hl_s1
    778897434U,	// M2_mpyd_nac_lh_s0
    778897434U,	// M2_mpyd_nac_lh_s1
    778897434U,	// M2_mpyd_nac_ll_s0
    778897434U,	// M2_mpyd_nac_ll_s1
    762136602U,	// M2_mpyd_rnd_hh_s0
    762136602U,	// M2_mpyd_rnd_hh_s1
    762136602U,	// M2_mpyd_rnd_hl_s0
    762136602U,	// M2_mpyd_rnd_hl_s1
    778913818U,	// M2_mpyd_rnd_lh_s0
    778913818U,	// M2_mpyd_rnd_lh_s1
    778913818U,	// M2_mpyd_rnd_ll_s0
    778913818U,	// M2_mpyd_rnd_ll_s1
    487196698U,	// M2_mpyi
    7391258U,	// M2_mpysin
    7407642U,	// M2_mpysip
    7424026U,	// M2_mpysu_up
    762152986U,	// M2_mpyu_acc_hh_s0
    762152986U,	// M2_mpyu_acc_hh_s1
    762152986U,	// M2_mpyu_acc_hl_s0
    762152986U,	// M2_mpyu_acc_hl_s1
    778930202U,	// M2_mpyu_acc_lh_s0
    778930202U,	// M2_mpyu_acc_lh_s1
    778930202U,	// M2_mpyu_acc_ll_s0
    778930202U,	// M2_mpyu_acc_ll_s1
    762185754U,	// M2_mpyu_hh_s0
    762185754U,	// M2_mpyu_hh_s1
    762185754U,	// M2_mpyu_hl_s0
    762185754U,	// M2_mpyu_hl_s1
    778962970U,	// M2_mpyu_lh_s0
    778962970U,	// M2_mpyu_lh_s1
    778962970U,	// M2_mpyu_ll_s0
    778962970U,	// M2_mpyu_ll_s1
    762169370U,	// M2_mpyu_nac_hh_s0
    762169370U,	// M2_mpyu_nac_hh_s1
    762169370U,	// M2_mpyu_nac_hl_s0
    762169370U,	// M2_mpyu_nac_hl_s1
    778946586U,	// M2_mpyu_nac_lh_s0
    778946586U,	// M2_mpyu_nac_lh_s1
    778946586U,	// M2_mpyu_nac_ll_s0
    778946586U,	// M2_mpyu_nac_ll_s1
    493750298U,	// M2_mpyu_up
    762152986U,	// M2_mpyud_acc_hh_s0
    762152986U,	// M2_mpyud_acc_hh_s1
    762152986U,	// M2_mpyud_acc_hl_s0
    762152986U,	// M2_mpyud_acc_hl_s1
    778930202U,	// M2_mpyud_acc_lh_s0
    778930202U,	// M2_mpyud_acc_lh_s1
    778930202U,	// M2_mpyud_acc_ll_s0
    778930202U,	// M2_mpyud_acc_ll_s1
    762185754U,	// M2_mpyud_hh_s0
    762185754U,	// M2_mpyud_hh_s1
    762185754U,	// M2_mpyud_hl_s0
    762185754U,	// M2_mpyud_hl_s1
    778962970U,	// M2_mpyud_lh_s0
    778962970U,	// M2_mpyud_lh_s1
    778962970U,	// M2_mpyud_ll_s0
    778962970U,	// M2_mpyud_ll_s1
    762169370U,	// M2_mpyud_nac_hh_s0
    762169370U,	// M2_mpyud_nac_hh_s1
    762169370U,	// M2_mpyud_nac_hl_s0
    762169370U,	// M2_mpyud_nac_hl_s1
    778946586U,	// M2_mpyud_nac_lh_s0
    778946586U,	// M2_mpyud_nac_lh_s1
    778946586U,	// M2_mpyud_nac_ll_s0
    778946586U,	// M2_mpyud_nac_ll_s1
    493979674U,	// M2_nacci
    191989786U,	// M2_naccii
    7456794U,	// M2_subacc
    1280026U,	// M2_vabsdiffh
    1329178U,	// M2_vabsdiffw
    7473178U,	// M2_vcmac_s0_sat_i
    7489562U,	// M2_vcmac_s0_sat_r
    426936346U,	// M2_vcmpy_s0_sat_i
    426952730U,	// M2_vcmpy_s0_sat_r
    208832538U,	// M2_vcmpy_s1_sat_i
    208848922U,	// M2_vcmpy_s1_sat_r
    426969114U,	// M2_vdmacs_s0
    208865306U,	// M2_vdmacs_s1
    275990554U,	// M2_vdmpyrs_s0
    225658906U,	// M2_vdmpyrs_s1
    426985498U,	// M2_vdmpys_s0
    208881690U,	// M2_vdmpys_s1
    19351578U,	// M2_vmac2
    24348698U,	// M2_vmac2es
    427001882U,	// M2_vmac2es_s0
    208898074U,	// M2_vmac2es_s1
    422004762U,	// M2_vmac2s_s0
    203900954U,	// M2_vmac2s_s1
    427018266U,	// M2_vmac2su_s0
    208914458U,	// M2_vmac2su_s1
    427034650U,	// M2_vmpy2es_s0
    208930842U,	// M2_vmpy2es_s1
    422021146U,	// M2_vmpy2s_s0
    271026202U,	// M2_vmpy2s_s0pack
    203917338U,	// M2_vmpy2s_s1
    220694554U,	// M2_vmpy2s_s1pack
    427051034U,	// M2_vmpy2su_s0
    208947226U,	// M2_vmpy2su_s1
    7637018U,	// M2_vraddh
    7653402U,	// M2_vradduh
    24447002U,	// M2_vrcmaci_s0
    1668614170U,	// M2_vrcmaci_s0c
    24463386U,	// M2_vrcmacr_s0
    1668630554U,	// M2_vrcmacr_s0c
    24479770U,	// M2_vrcmpyi_s0
    1668646938U,	// M2_vrcmpyi_s0c
    24496154U,	// M2_vrcmpyr_s0
    1668663322U,	// M2_vrcmpyr_s0c
    1678411802U,	// M2_vrcmpys_acc_s1_h
    1695189018U,	// M2_vrcmpys_acc_s1_l
    1678428186U,	// M2_vrcmpys_s1_h
    1695205402U,	// M2_vrcmpys_s1_l
    1711982618U,	// M2_vrcmpys_s1rp_h
    1728759834U,	// M2_vrcmpys_s1rp_l
    7735322U,	// M2_vrmac_s0
    7751706U,	// M2_vrmpy_s0
    7768090U,	// M2_xor_xacc
    494323738U,	// M4_and_and
    913754138U,	// M4_and_andn
    7800858U,	// M4_and_or
    7817242U,	// M4_and_xor
    225937434U,	// M4_cmpyi_wh
    1652000794U,	// M4_cmpyi_whc
    225953818U,	// M4_cmpyr_wh
    1652017178U,	// M4_cmpyr_whc
    493668378U,	// M4_mac_up_s1_sat
    1752696858U,	// M4_mpyri_addi
    2074U,	// M4_mpyri_addr
    2074U,	// M4_mpyri_addr_u2
    1752696858U,	// M4_mpyrr_addi
    2074U,	// M4_mpyrr_addr
    493684762U,	// M4_nac_up_s1_sat
    494422042U,	// M4_or_and
    913852442U,	// M4_or_andn
    494438426U,	// M4_or_or
    7915546U,	// M4_or_xor
    7931930U,	// M4_pmpyw
    7948314U,	// M4_pmpyw_acc
    7964698U,	// M4_vpmpyh
    7981082U,	// M4_vpmpyh_acc
    24774682U,	// M4_vrmpyeh_acc_s0
    1769605146U,	// M4_vrmpyeh_acc_s1
    24791066U,	// M4_vrmpyeh_s0
    1769621530U,	// M4_vrmpyeh_s1
    24807450U,	// M4_vrmpyoh_acc_s0
    1769637914U,	// M4_vrmpyoh_acc_s1
    24823834U,	// M4_vrmpyoh_s0
    1769654298U,	// M4_vrmpyoh_s1
    494602266U,	// M4_xor_and
    914032666U,	// M4_xor_andn
    8079386U,	// M4_xor_or
    7768090U,	// M4_xor_xacc
    8095770U,	// M5_vdmacbsu
    8112154U,	// M5_vdmpybsu
    8128538U,	// M5_vmacbsu
    8144922U,	// M5_vmacbuu
    8161306U,	// M5_vmpybsu
    8177690U,	// M5_vmpybuu
    8194074U,	// M5_vrmacbsu
    8210458U,	// M5_vrmacbuu
    8226842U,	// M5_vrmpybsu
    8243226U,	// M5_vrmpybuu
    8259610U,	// M6_vabsdiffb
    1296410U,	// M6_vabsdiffub
    25053210U,	// M7_dcmpyiw
    25069594U,	// M7_dcmpyiw_acc
    1669220378U,	// M7_dcmpyiwc
    1669236762U,	// M7_dcmpyiwc_acc
    25085978U,	// M7_dcmpyrw
    25102362U,	// M7_dcmpyrw_acc
    1669253146U,	// M7_dcmpyrwc
    1669269530U,	// M7_dcmpyrwc_acc
    209602586U,	// M7_wcmpyiw
    226379802U,	// M7_wcmpyiw_rnd
    1618888730U,	// M7_wcmpyiwc
    1652443162U,	// M7_wcmpyiwc_rnd
    209635354U,	// M7_wcmpyrw
    226412570U,	// M7_wcmpyrw_rnd
    1618921498U,	// M7_wcmpyrwc
    1652475930U,	// M7_wcmpyrwc_rnd
    759881U,	// PS_call_stk
    755797U,	// PS_callr_nr
    755804U,	// PS_jmpret
    6424675U,	// PS_jmpretf
    6441059U,	// PS_jmpretfnew
    6457443U,	// PS_jmpretfnewpt
    6424854U,	// PS_jmprett
    6441238U,	// PS_jmprettnew
    6457622U,	// PS_jmprettnewpt
    8341530U,	// PS_loadrbabs
    8357914U,	// PS_loadrdabs
    8374298U,	// PS_loadrhabs
    8390682U,	// PS_loadriabs
    8407066U,	// PS_loadrubabs
    8423450U,	// PS_loadruhabs
    51185822U,	// PS_storerbabs
    235735198U,	// PS_storerbnewabs
    51185829U,	// PS_storerdabs
    252512449U,	// PS_storerfabs
    51185857U,	// PS_storerhabs
    235735233U,	// PS_storerhnewabs
    51185873U,	// PS_storeriabs
    235735249U,	// PS_storerinewabs
    297098U,	// PS_trap1
    8440312U,	// R6_release_at_vi
    8456696U,	// R6_release_st_vi
    759881U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    759881U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    759881U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    759881U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    759887U,	// RESTORE_DEALLOC_RET_JMP_V4
    759887U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    759887U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    759887U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    8472602U,	// S2_addasl_rrri
    71338466U,	// S2_allocframe
    193038362U,	// S2_asl_i_p
    193054746U,	// S2_asl_i_p_acc
    193071130U,	// S2_asl_i_p_and
    193087514U,	// S2_asl_i_p_nac
    193103898U,	// S2_asl_i_p_or
    193120282U,	// S2_asl_i_p_xacc
    193038362U,	// S2_asl_i_r
    193054746U,	// S2_asl_i_r_acc
    193071130U,	// S2_asl_i_r_and
    193087514U,	// S2_asl_i_r_nac
    193103898U,	// S2_asl_i_r_or
    193038362U,	// S2_asl_i_r_sat
    193120282U,	// S2_asl_i_r_xacc
    186239002U,	// S2_asl_i_vh
    186271770U,	// S2_asl_i_vw
    495028250U,	// S2_asl_r_p
    495044634U,	// S2_asl_r_p_acc
    495061018U,	// S2_asl_r_p_and
    495077402U,	// S2_asl_r_p_nac
    495093786U,	// S2_asl_r_p_or
    495110170U,	// S2_asl_r_p_xor
    495028250U,	// S2_asl_r_r
    495044634U,	// S2_asl_r_r_acc
    495061018U,	// S2_asl_r_r_and
    495077402U,	// S2_asl_r_r_nac
    495093786U,	// S2_asl_r_r_or
    495028250U,	// S2_asl_r_r_sat
    488228890U,	// S2_asl_r_vh
    488261658U,	// S2_asl_r_vw
    193136666U,	// S2_asr_i_p
    193153050U,	// S2_asr_i_p_acc
    193169434U,	// S2_asr_i_p_and
    193185818U,	// S2_asr_i_p_nac
    193202202U,	// S2_asr_i_p_or
    193136666U,	// S2_asr_i_p_rnd
    193136666U,	// S2_asr_i_r
    193153050U,	// S2_asr_i_r_acc
    193169434U,	// S2_asr_i_r_and
    193185818U,	// S2_asr_i_r_nac
    193202202U,	// S2_asr_i_r_or
    193136666U,	// S2_asr_i_r_rnd
    186337306U,	// S2_asr_i_svw_trun
    185583642U,	// S2_asr_i_vh
    186337306U,	// S2_asr_i_vw
    495126554U,	// S2_asr_r_p
    495142938U,	// S2_asr_r_p_acc
    495159322U,	// S2_asr_r_p_and
    495175706U,	// S2_asr_r_p_nac
    495192090U,	// S2_asr_r_p_or
    8669210U,	// S2_asr_r_p_xor
    495126554U,	// S2_asr_r_r
    495142938U,	// S2_asr_r_r_acc
    495159322U,	// S2_asr_r_r_and
    495175706U,	// S2_asr_r_r_nac
    495192090U,	// S2_asr_r_r_or
    495126554U,	// S2_asr_r_r_sat
    488327194U,	// S2_asr_r_svw_trun
    487573530U,	// S2_asr_r_vh
    488327194U,	// S2_asr_r_vw
    8685594U,	// S2_brev
    8685594U,	// S2_brevp
    8701978U,	// S2_cabacdecbin
    8718362U,	// S2_cl0
    8718362U,	// S2_cl0p
    8734746U,	// S2_cl1
    8734746U,	// S2_cl1p
    8751130U,	// S2_clb
    8767514U,	// S2_clbnorm
    8751130U,	// S2_clbp
    193333274U,	// S2_clrbit_i
    495323162U,	// S2_clrbit_r
    8800282U,	// S2_ct0
    8800282U,	// S2_ct0p
    8816666U,	// S2_ct1
    8816666U,	// S2_ct1p
    8833050U,	// S2_deinterleave
    193398810U,	// S2_extractu
    495388698U,	// S2_extractu_rp
    193398810U,	// S2_extractup
    495388698U,	// S2_extractup_rp
    193415194U,	// S2_insert
    495405082U,	// S2_insert_rp
    193415194U,	// S2_insertp
    495405082U,	// S2_insertp_rp
    8882202U,	// S2_interleave
    8898586U,	// S2_lfsp
    8914970U,	// S2_lsl_r_p
    8931354U,	// S2_lsl_r_p_acc
    8947738U,	// S2_lsl_r_p_and
    8964122U,	// S2_lsl_r_p_nac
    8980506U,	// S2_lsl_r_p_or
    8996890U,	// S2_lsl_r_p_xor
    8914970U,	// S2_lsl_r_r
    8931354U,	// S2_lsl_r_r_acc
    8947738U,	// S2_lsl_r_r_and
    8964122U,	// S2_lsl_r_r_nac
    8980506U,	// S2_lsl_r_r_or
    9013274U,	// S2_lsl_r_vh
    9029658U,	// S2_lsl_r_vw
    193595418U,	// S2_lsr_i_p
    193611802U,	// S2_lsr_i_p_acc
    193628186U,	// S2_lsr_i_p_and
    193644570U,	// S2_lsr_i_p_nac
    193660954U,	// S2_lsr_i_p_or
    193677338U,	// S2_lsr_i_p_xacc
    193595418U,	// S2_lsr_i_r
    193611802U,	// S2_lsr_i_r_acc
    193628186U,	// S2_lsr_i_r_and
    193644570U,	// S2_lsr_i_r_nac
    193660954U,	// S2_lsr_i_r_or
    193677338U,	// S2_lsr_i_r_xacc
    186714138U,	// S2_lsr_i_vh
    186730522U,	// S2_lsr_i_vw
    495585306U,	// S2_lsr_r_p
    495601690U,	// S2_lsr_r_p_acc
    495618074U,	// S2_lsr_r_p_and
    495634458U,	// S2_lsr_r_p_nac
    495650842U,	// S2_lsr_r_p_or
    495667226U,	// S2_lsr_r_p_xor
    495585306U,	// S2_lsr_r_r
    495601690U,	// S2_lsr_r_r_acc
    495618074U,	// S2_lsr_r_r_and
    495634458U,	// S2_lsr_r_r_nac
    495650842U,	// S2_lsr_r_r_or
    488704026U,	// S2_lsr_r_vh
    488720410U,	// S2_lsr_r_vw
    9144346U,	// S2_mask
    25937946U,	// S2_packhl
    9177114U,	// S2_parityp
    788579U,	// S2_pstorerbf_io
    1779175523U,	// S2_pstorerbf_pi
    1779322979U,	// S2_pstorerbfnew_pi
    788579U,	// S2_pstorerbnewf_io
    1779175523U,	// S2_pstorerbnewf_pi
    1779322979U,	// S2_pstorerbnewfnew_pi
    788758U,	// S2_pstorerbnewt_io
    1779175702U,	// S2_pstorerbnewt_pi
    1779323158U,	// S2_pstorerbnewtnew_pi
    788758U,	// S2_pstorerbt_io
    1779175702U,	// S2_pstorerbt_pi
    1779323158U,	// S2_pstorerbtnew_pi
    804963U,	// S2_pstorerdf_io
    1779191907U,	// S2_pstorerdf_pi
    1779339363U,	// S2_pstorerdfnew_pi
    805142U,	// S2_pstorerdt_io
    1779192086U,	// S2_pstorerdt_pi
    1779339542U,	// S2_pstorerdtnew_pi
    821347U,	// S2_pstorerff_io
    1779208291U,	// S2_pstorerff_pi
    1779355747U,	// S2_pstorerffnew_pi
    821526U,	// S2_pstorerft_io
    1779208470U,	// S2_pstorerft_pi
    1779355926U,	// S2_pstorerftnew_pi
    821347U,	// S2_pstorerhf_io
    1779208291U,	// S2_pstorerhf_pi
    1779355747U,	// S2_pstorerhfnew_pi
    821347U,	// S2_pstorerhnewf_io
    1779208291U,	// S2_pstorerhnewf_pi
    1779355747U,	// S2_pstorerhnewfnew_pi
    821526U,	// S2_pstorerhnewt_io
    1779208470U,	// S2_pstorerhnewt_pi
    1779355926U,	// S2_pstorerhnewtnew_pi
    821526U,	// S2_pstorerht_io
    1779208470U,	// S2_pstorerht_pi
    1779355926U,	// S2_pstorerhtnew_pi
    837731U,	// S2_pstorerif_io
    1779224675U,	// S2_pstorerif_pi
    1779372131U,	// S2_pstorerifnew_pi
    837731U,	// S2_pstorerinewf_io
    1779224675U,	// S2_pstorerinewf_pi
    1779372131U,	// S2_pstorerinewfnew_pi
    837910U,	// S2_pstorerinewt_io
    1779224854U,	// S2_pstorerinewt_pi
    1779372310U,	// S2_pstorerinewtnew_pi
    837910U,	// S2_pstorerit_io
    1779224854U,	// S2_pstorerit_pi
    1779372310U,	// S2_pstoreritnew_pi
    193742874U,	// S2_setbit_i
    495732762U,	// S2_setbit_r
    9209882U,	// S2_shuffeb
    9226266U,	// S2_shuffeh
    9242650U,	// S2_shuffob
    9259034U,	// S2_shuffoh
    725666229U,	// S2_storerb_io
    1804437941U,	// S2_storerb_pbr
    1821231541U,	// S2_storerb_pci
    59640245U,	// S2_storerb_pcr
    730712501U,	// S2_storerb_pi
    730696117U,	// S2_storerb_pr
    51185902U,	// S2_storerbgp
    725666229U,	// S2_storerbnew_io
    1804437941U,	// S2_storerbnew_pbr
    1821231541U,	// S2_storerbnew_pci
    244189621U,	// S2_storerbnew_pcr
    730712501U,	// S2_storerbnew_pi
    730696117U,	// S2_storerbnew_pr
    235735278U,	// S2_storerbnewgp
    725666261U,	// S2_storerd_io
    1804437973U,	// S2_storerd_pbr
    1821231573U,	// S2_storerd_pci
    59640277U,	// S2_storerd_pcr
    730712533U,	// S2_storerd_pi
    730696149U,	// S2_storerd_pr
    51185912U,	// S2_storerdgp
    725666337U,	// S2_storerf_io
    1804438049U,	// S2_storerf_pbr
    1821231649U,	// S2_storerf_pci
    260966945U,	// S2_storerf_pcr
    730712609U,	// S2_storerf_pi
    730696225U,	// S2_storerf_pr
    252512514U,	// S2_storerfgp
    725666337U,	// S2_storerh_io
    1804438049U,	// S2_storerh_pbr
    1821231649U,	// S2_storerh_pci
    59640353U,	// S2_storerh_pcr
    730712609U,	// S2_storerh_pi
    730696225U,	// S2_storerh_pr
    51185922U,	// S2_storerhgp
    725666337U,	// S2_storerhnew_io
    1804438049U,	// S2_storerhnew_pbr
    1821231649U,	// S2_storerhnew_pci
    244189729U,	// S2_storerhnew_pcr
    730712609U,	// S2_storerhnew_pi
    730696225U,	// S2_storerhnew_pr
    235735298U,	// S2_storerhnewgp
    725666677U,	// S2_storeri_io
    1804438389U,	// S2_storeri_pbr
    1821231989U,	// S2_storeri_pci
    59640693U,	// S2_storeri_pcr
    730712949U,	// S2_storeri_pi
    730696565U,	// S2_storeri_pr
    51185932U,	// S2_storerigp
    725666677U,	// S2_storerinew_io
    1804438389U,	// S2_storerinew_pbr
    1821231989U,	// S2_storerinew_pci
    244190069U,	// S2_storerinew_pcr
    730712949U,	// S2_storerinew_pi
    730696565U,	// S2_storerinew_pr
    235735308U,	// S2_storerinewgp
    1781977544U,	// S2_storew_locked
    9325119U,	// S2_storew_rl_at_vi
    9341503U,	// S2_storew_rl_st_vi
    9357338U,	// S2_svsathb
    20301850U,	// S2_svsathub
    1829586970U,	// S2_tableidxb
    1829603354U,	// S2_tableidxd
    1829619738U,	// S2_tableidxh
    1829636122U,	// S2_tableidxw
    193923098U,	// S2_togglebit_i
    495912986U,	// S2_togglebit_r
    193939482U,	// S2_tstbit_i
    495929370U,	// S2_tstbit_r
    193955866U,	// S2_valignib
    495945754U,	// S2_valignrb
    9422874U,	// S2_vcnegh
    9439258U,	// S2_vcrotate
    9455642U,	// S2_vrcnegh
    26249242U,	// S2_vrndpackwh
    428902426U,	// S2_vrndpackwhs
    9357338U,	// S2_vsathb
    9357338U,	// S2_vsathb_nopack
    20301850U,	// S2_vsathub
    20301850U,	// S2_vsathub_nopack
    20334618U,	// S2_vsatwh
    20334618U,	// S2_vsatwh_nopack
    9488410U,	// S2_vsatwuh
    9488410U,	// S2_vsatwuh_nopack
    9504794U,	// S2_vsplatrb
    9521178U,	// S2_vsplatrh
    194086938U,	// S2_vspliceib
    496076826U,	// S2_vsplicerb
    9553946U,	// S2_vsxtbh
    9570330U,	// S2_vsxthw
    26363930U,	// S2_vtrunehb
    9603098U,	// S2_vtrunewh
    26396698U,	// S2_vtrunohb
    9635866U,	// S2_vtrunowh
    9652250U,	// S2_vzxtbh
    9668634U,	// S2_vzxthw
    2074U,	// S4_addaddi
    1853360154U,	// S4_addi_asl_ri
    1870137370U,	// S4_addi_lsr_ri
    1855178778U,	// S4_andi_asl_ri
    1871955994U,	// S4_andi_lsr_ri
    9701402U,	// S4_clbaddi
    9701402U,	// S4_clbpaddi
    8767514U,	// S4_clbpnorm
    194267162U,	// S4_extract
    496257050U,	// S4_extract_rp
    194267162U,	// S4_extractp
    496257050U,	// S4_extractp_rp
    9734170U,	// S4_lsli
    194299930U,	// S4_ntstbit_i
    496289818U,	// S4_ntstbit_r
    192432154U,	// S4_or_andi
    1094895642U,	// S4_or_andix
    192448538U,	// S4_or_ori
    1855260698U,	// S4_ori_asl_ri
    1872037914U,	// S4_ori_lsr_ri
    9177114U,	// S4_parity
    60115043U,	// S4_pstorerbf_abs
    788579U,	// S4_pstorerbf_rr
    60131427U,	// S4_pstorerbfnew_abs
    936035U,	// S4_pstorerbfnew_io
    936035U,	// S4_pstorerbfnew_rr
    244664419U,	// S4_pstorerbnewf_abs
    788579U,	// S4_pstorerbnewf_rr
    244680803U,	// S4_pstorerbnewfnew_abs
    936035U,	// S4_pstorerbnewfnew_io
    936035U,	// S4_pstorerbnewfnew_rr
    244664598U,	// S4_pstorerbnewt_abs
    788758U,	// S4_pstorerbnewt_rr
    244680982U,	// S4_pstorerbnewtnew_abs
    936214U,	// S4_pstorerbnewtnew_io
    936214U,	// S4_pstorerbnewtnew_rr
    60115222U,	// S4_pstorerbt_abs
    788758U,	// S4_pstorerbt_rr
    60131606U,	// S4_pstorerbtnew_abs
    936214U,	// S4_pstorerbtnew_io
    936214U,	// S4_pstorerbtnew_rr
    9816163U,	// S4_pstorerdf_abs
    804963U,	// S4_pstorerdf_rr
    9832547U,	// S4_pstorerdfnew_abs
    952419U,	// S4_pstorerdfnew_io
    952419U,	// S4_pstorerdfnew_rr
    9816342U,	// S4_pstorerdt_abs
    805142U,	// S4_pstorerdt_rr
    9832726U,	// S4_pstorerdtnew_abs
    952598U,	// S4_pstorerdtnew_io
    952598U,	// S4_pstorerdtnew_rr
    261507171U,	// S4_pstorerff_abs
    821347U,	// S4_pstorerff_rr
    261523555U,	// S4_pstorerffnew_abs
    968803U,	// S4_pstorerffnew_io
    968803U,	// S4_pstorerffnew_rr
    261507350U,	// S4_pstorerft_abs
    821526U,	// S4_pstorerft_rr
    261523734U,	// S4_pstorerftnew_abs
    968982U,	// S4_pstorerftnew_io
    968982U,	// S4_pstorerftnew_rr
    60180579U,	// S4_pstorerhf_abs
    821347U,	// S4_pstorerhf_rr
    60196963U,	// S4_pstorerhfnew_abs
    968803U,	// S4_pstorerhfnew_io
    968803U,	// S4_pstorerhfnew_rr
    244729955U,	// S4_pstorerhnewf_abs
    821347U,	// S4_pstorerhnewf_rr
    244746339U,	// S4_pstorerhnewfnew_abs
    968803U,	// S4_pstorerhnewfnew_io
    968803U,	// S4_pstorerhnewfnew_rr
    244730134U,	// S4_pstorerhnewt_abs
    821526U,	// S4_pstorerhnewt_rr
    244746518U,	// S4_pstorerhnewtnew_abs
    968982U,	// S4_pstorerhnewtnew_io
    968982U,	// S4_pstorerhnewtnew_rr
    60180758U,	// S4_pstorerht_abs
    821526U,	// S4_pstorerht_rr
    60197142U,	// S4_pstorerhtnew_abs
    968982U,	// S4_pstorerhtnew_io
    968982U,	// S4_pstorerhtnew_rr
    60213347U,	// S4_pstorerif_abs
    837731U,	// S4_pstorerif_rr
    60229731U,	// S4_pstorerifnew_abs
    985187U,	// S4_pstorerifnew_io
    985187U,	// S4_pstorerifnew_rr
    244762723U,	// S4_pstorerinewf_abs
    837731U,	// S4_pstorerinewf_rr
    244779107U,	// S4_pstorerinewfnew_abs
    985187U,	// S4_pstorerinewfnew_io
    985187U,	// S4_pstorerinewfnew_rr
    244762902U,	// S4_pstorerinewt_abs
    837910U,	// S4_pstorerinewt_rr
    244779286U,	// S4_pstorerinewtnew_abs
    985366U,	// S4_pstorerinewtnew_io
    985366U,	// S4_pstorerinewtnew_rr
    60213526U,	// S4_pstorerit_abs
    837910U,	// S4_pstorerit_rr
    60229910U,	// S4_pstoreritnew_abs
    985366U,	// S4_pstoreritnew_io
    985366U,	// S4_pstoreritnew_rr
    1781977531U,	// S4_stored_locked
    9325110U,	// S4_stored_rl_at_vi
    9341494U,	// S4_stored_rl_st_vi
    742443445U,	// S4_storeirb_io
    788579U,	// S4_storeirbf_io
    936035U,	// S4_storeirbfnew_io
    788758U,	// S4_storeirbt_io
    936214U,	// S4_storeirbtnew_io
    742443553U,	// S4_storeirh_io
    821347U,	// S4_storeirhf_io
    968803U,	// S4_storeirhfnew_io
    821526U,	// S4_storeirht_io
    968982U,	// S4_storeirhtnew_io
    742443893U,	// S4_storeiri_io
    837731U,	// S4_storeirif_io
    985187U,	// S4_storeirifnew_io
    837910U,	// S4_storeirit_io
    985366U,	// S4_storeiritnew_io
    60246453U,	// S4_storerb_ap
    60262837U,	// S4_storerb_rr
    60279221U,	// S4_storerb_ur
    244795829U,	// S4_storerbnew_ap
    244812213U,	// S4_storerbnew_rr
    244828597U,	// S4_storerbnew_ur
    60246485U,	// S4_storerd_ap
    60262869U,	// S4_storerd_rr
    60279253U,	// S4_storerd_ur
    261573153U,	// S4_storerf_ap
    261589537U,	// S4_storerf_rr
    261605921U,	// S4_storerf_ur
    60246561U,	// S4_storerh_ap
    60262945U,	// S4_storerh_rr
    60279329U,	// S4_storerh_ur
    244795937U,	// S4_storerhnew_ap
    244812321U,	// S4_storerhnew_rr
    244828705U,	// S4_storerhnew_ur
    60246901U,	// S4_storeri_ap
    60263285U,	// S4_storeri_rr
    60279669U,	// S4_storeri_ur
    244796277U,	// S4_storerinew_ap
    244812661U,	// S4_storerinew_rr
    244829045U,	// S4_storerinew_ur
    2074U,	// S4_subaddi
    1850001434U,	// S4_subi_asl_ri
    1866778650U,	// S4_subi_lsr_ri
    9963546U,	// S4_vrcrotate
    9979930U,	// S4_vrcrotate_acc
    429426714U,	// S4_vxaddsubh
    1889044506U,	// S4_vxaddsubhr
    10012698U,	// S4_vxaddsubw
    429459482U,	// S4_vxsubaddh
    1889077274U,	// S4_vxsubaddhr
    10045466U,	// S4_vxsubaddw
    1829734426U,	// S5_asrhub_rnd_sat
    420448282U,	// S5_asrhub_sat
    10061850U,	// S5_popcountp
    185583642U,	// S5_vasrhrnd
    10078234U,	// S6_rol_i_p
    10094618U,	// S6_rol_i_p_acc
    10111002U,	// S6_rol_i_p_and
    10127386U,	// S6_rol_i_p_nac
    10143770U,	// S6_rol_i_p_or
    10160154U,	// S6_rol_i_p_xacc
    10078234U,	// S6_rol_i_r
    10094618U,	// S6_rol_i_r_acc
    10111002U,	// S6_rol_i_r_and
    10127386U,	// S6_rol_i_r_nac
    10143770U,	// S6_rol_i_r_or
    10160154U,	// S6_rol_i_r_xacc
    9504794U,	// S6_vsplatrbp
    496125978U,	// S6_vtrunehb_ppp
    496158746U,	// S6_vtrunohb_ppp
    2074U,	// SA1_addi
    2074U,	// SA1_addrx
    10176538U,	// SA1_addsp
    1899923482U,	// SA1_and1
    1935387U,	// SA1_clrf
    1935406U,	// SA1_clrfnew
    1935397U,	// SA1_clrt
    1935420U,	// SA1_clrtnew
    4229714U,	// SA1_cmpeqi
    10192922U,	// SA1_combine0i
    10209306U,	// SA1_combine1i
    10225690U,	// SA1_combine2i
    10242074U,	// SA1_combine3i
    1916782618U,	// SA1_combinerz
    10258458U,	// SA1_combinezr
    2074U,	// SA1_dec
    2074U,	// SA1_inc
    50448410U,	// SA1_seti
    50448410U,	// SA1_setin1
    4130842U,	// SA1_sxtb
    4147226U,	// SA1_sxth
    50432026U,	// SA1_tfr
    1933477914U,	// SA1_zxtb
    4163610U,	// SA1_zxth
    759881U,	// SAVE_REGISTERS_CALL_V4
    759881U,	// SAVE_REGISTERS_CALL_V4STK
    759881U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    759881U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    759881U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    759881U,	// SAVE_REGISTERS_CALL_V4_EXT
    759881U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    759881U,	// SAVE_REGISTERS_CALL_V4_PIC
    705071130U,	// SL1_loadri_io
    705087514U,	// SL1_loadrub_io
    1291U,	// SL2_deallocframe
    1077U,	// SL2_jumpr31
    1068U,	// SL2_jumpr31_f
    1105U,	// SL2_jumpr31_fnew
    1087U,	// SL2_jumpr31_t
    1131U,	// SL2_jumpr31_tnew
    705021978U,	// SL2_loadrb_io
    10274842U,	// SL2_loadrd_sp
    705054746U,	// SL2_loadrh_io
    10291226U,	// SL2_loadri_sp
    705103898U,	// SL2_loadruh_io
    1327U,	// SL2_return
    1318U,	// SL2_return_f
    1398U,	// SL2_return_fnew
    1342U,	// SL2_return_t
    1429U,	// SL2_return_tnew
    725666229U,	// SS1_storeb_io
    725666677U,	// SS1_storew_io
    297132U,	// SS2_allocframe
    1950402997U,	// SS2_storebi0
    1967180213U,	// SS2_storebi1
    51185880U,	// SS2_stored_sp
    725666337U,	// SS2_storeh_io
    51185891U,	// SS2_storew_sp
    1950403445U,	// SS2_storewi0
    1967180661U,	// SS2_storewi1
    188663834U,	// TFRI64_V2_ext
    50448410U,	// TFRI64_V4
    10307610U,	// V6_extractw
    10323994U,	// V6_lvsplatb
    10340378U,	// V6_lvsplath
    10356762U,	// V6_lvsplatw
    490637338U,	// V6_pred_and
    1061062682U,	// V6_pred_and_n
    51226U,	// V6_pred_not
    490915866U,	// V6_pred_or
    1061341210U,	// V6_pred_or_n
    10373146U,	// V6_pred_scalar2
    10389530U,	// V6_pred_scalar2v2
    4802586U,	// V6_pred_xor
    765380634U,	// V6_shuffeqh
    1990133786U,	// V6_shuffeqw
    1997735962U,	// V6_v6mpyhubs10
    2023704602U,	// V6_v6mpyhubs10_vxx
    1997735962U,	// V6_v6mpyvubs10
    2040481818U,	// V6_v6mpyvubs10_vxx
    705808410U,	// V6_vL32Ub_ai
    1259456538U,	// V6_vL32Ub_pi
    1242679322U,	// V6_vL32Ub_ppu
    705792026U,	// V6_vL32b_ai
    715098138U,	// V6_vL32b_cur_ai
    335614051U,	// V6_vL32b_cur_npred_ai
    335618147U,	// V6_vL32b_cur_npred_pi
    335618147U,	// V6_vL32b_cur_npred_ppu
    1268746266U,	// V6_vL32b_cur_pi
    1251969050U,	// V6_vL32b_cur_ppu
    335614230U,	// V6_vL32b_cur_pred_ai
    335618326U,	// V6_vL32b_cur_pred_pi
    335618326U,	// V6_vL32b_cur_pred_ppu
    352391267U,	// V6_vL32b_npred_ai
    352395363U,	// V6_vL32b_npred_pi
    352395363U,	// V6_vL32b_npred_ppu
    705792026U,	// V6_vL32b_nt_ai
    715098138U,	// V6_vL32b_nt_cur_ai
    335614051U,	// V6_vL32b_nt_cur_npred_ai
    335618147U,	// V6_vL32b_nt_cur_npred_pi
    335618147U,	// V6_vL32b_nt_cur_npred_ppu
    1268746266U,	// V6_vL32b_nt_cur_pi
    1251969050U,	// V6_vL32b_nt_cur_ppu
    335614230U,	// V6_vL32b_nt_cur_pred_ai
    335618326U,	// V6_vL32b_nt_cur_pred_pi
    335618326U,	// V6_vL32b_nt_cur_pred_ppu
    352391267U,	// V6_vL32b_nt_npred_ai
    352395363U,	// V6_vL32b_nt_npred_pi
    352395363U,	// V6_vL32b_nt_npred_ppu
    1259440154U,	// V6_vL32b_nt_pi
    1242662938U,	// V6_vL32b_nt_ppu
    352391446U,	// V6_vL32b_nt_pred_ai
    352395542U,	// V6_vL32b_nt_pred_pi
    352395542U,	// V6_vL32b_nt_pred_ppu
    715114522U,	// V6_vL32b_nt_tmp_ai
    385945699U,	// V6_vL32b_nt_tmp_npred_ai
    385949795U,	// V6_vL32b_nt_tmp_npred_pi
    385949795U,	// V6_vL32b_nt_tmp_npred_ppu
    1268762650U,	// V6_vL32b_nt_tmp_pi
    1251985434U,	// V6_vL32b_nt_tmp_ppu
    385945878U,	// V6_vL32b_nt_tmp_pred_ai
    385949974U,	// V6_vL32b_nt_tmp_pred_pi
    385949974U,	// V6_vL32b_nt_tmp_pred_ppu
    1259440154U,	// V6_vL32b_pi
    1242662938U,	// V6_vL32b_ppu
    352391446U,	// V6_vL32b_pred_ai
    352395542U,	// V6_vL32b_pred_pi
    352395542U,	// V6_vL32b_pred_ppu
    715114522U,	// V6_vL32b_tmp_ai
    385945699U,	// V6_vL32b_tmp_npred_ai
    385949795U,	// V6_vL32b_tmp_npred_pi
    385949795U,	// V6_vL32b_tmp_npred_ppu
    1268762650U,	// V6_vL32b_tmp_pi
    1251985434U,	// V6_vL32b_tmp_ppu
    385945878U,	// V6_vL32b_tmp_pred_ai
    385949974U,	// V6_vL32b_tmp_pred_pi
    385949974U,	// V6_vL32b_tmp_pred_ppu
    725666615U,	// V6_vS32Ub_ai
    1230947U,	// V6_vS32Ub_npred_ai
    1779617891U,	// V6_vS32Ub_npred_pi
    1779617891U,	// V6_vS32Ub_npred_ppu
    730712887U,	// V6_vS32Ub_pi
    730696503U,	// V6_vS32Ub_ppu
    1231126U,	// V6_vS32Ub_pred_ai
    1779618070U,	// V6_vS32Ub_pred_pi
    1779618070U,	// V6_vS32Ub_pred_ppu
    725666380U,	// V6_vS32b_ai
    725666380U,	// V6_vS32b_new_ai
    1214563U,	// V6_vS32b_new_npred_ai
    1779601507U,	// V6_vS32b_new_npred_pi
    1779601507U,	// V6_vS32b_new_npred_ppu
    730712652U,	// V6_vS32b_new_pi
    730696268U,	// V6_vS32b_new_ppu
    1214742U,	// V6_vS32b_new_pred_ai
    1779601686U,	// V6_vS32b_new_pred_pi
    1779601686U,	// V6_vS32b_new_pred_ppu
    1214563U,	// V6_vS32b_npred_ai
    1779601507U,	// V6_vS32b_npred_pi
    1779601507U,	// V6_vS32b_npred_ppu
    1214563U,	// V6_vS32b_nqpred_ai
    1779601507U,	// V6_vS32b_nqpred_pi
    1779601507U,	// V6_vS32b_nqpred_ppu
    2051066444U,	// V6_vS32b_nt_ai
    2051066444U,	// V6_vS32b_nt_new_ai
    1214563U,	// V6_vS32b_nt_new_npred_ai
    1779601507U,	// V6_vS32b_nt_new_npred_pi
    1779601507U,	// V6_vS32b_nt_new_npred_ppu
    2056112716U,	// V6_vS32b_nt_new_pi
    2056096332U,	// V6_vS32b_nt_new_ppu
    1214742U,	// V6_vS32b_nt_new_pred_ai
    1779601686U,	// V6_vS32b_nt_new_pred_pi
    1779601686U,	// V6_vS32b_nt_new_pred_ppu
    1214563U,	// V6_vS32b_nt_npred_ai
    1779601507U,	// V6_vS32b_nt_npred_pi
    1779601507U,	// V6_vS32b_nt_npred_ppu
    1214563U,	// V6_vS32b_nt_nqpred_ai
    1779601507U,	// V6_vS32b_nt_nqpred_pi
    1779601507U,	// V6_vS32b_nt_nqpred_ppu
    2056112716U,	// V6_vS32b_nt_pi
    2056096332U,	// V6_vS32b_nt_ppu
    1214742U,	// V6_vS32b_nt_pred_ai
    1779601686U,	// V6_vS32b_nt_pred_pi
    1779601686U,	// V6_vS32b_nt_pred_ppu
    1214742U,	// V6_vS32b_nt_qpred_ai
    1779601686U,	// V6_vS32b_nt_qpred_pi
    1779601686U,	// V6_vS32b_nt_qpred_ppu
    730712652U,	// V6_vS32b_pi
    730696268U,	// V6_vS32b_ppu
    1214742U,	// V6_vS32b_pred_ai
    1779601686U,	// V6_vS32b_pred_pi
    1779601686U,	// V6_vS32b_pred_ppu
    1214742U,	// V6_vS32b_qpred_ai
    1779601686U,	// V6_vS32b_qpred_pi
    1779601686U,	// V6_vS32b_qpred_ppu
    2067843660U,	// V6_vS32b_srls_ai
    2072889932U,	// V6_vS32b_srls_pi
    2072873548U,	// V6_vS32b_srls_ppu
    2090862618U,	// V6_vabsb
    2107639834U,	// V6_vabsb_sat
    765478938U,	// V6_vabsdiffh
    10520602U,	// V6_vabsdiffub
    312494106U,	// V6_vabsdiffuh
    10536986U,	// V6_vabsdiffw
    2124482586U,	// V6_vabsh
    2141259802U,	// V6_vabsh_sat
    2158053402U,	// V6_vabsw
    2174830618U,	// V6_vabsw_sat
    2090960922U,	// V6_vaddb
    2090960922U,	// V6_vaddb_dv
    436277347U,	// V6_vaddbnq
    436277526U,	// V6_vaddbq
    2107738138U,	// V6_vaddbsat
    2107738138U,	// V6_vaddbsat_dv
    77711386U,	// V6_vaddcarry
    2191656986U,	// V6_vaddcarryo
    10602522U,	// V6_vaddcarrysat
    10635290U,	// V6_vaddclbh
    10651674U,	// V6_vaddclbw
    765642778U,	// V6_vaddh
    765642778U,	// V6_vaddh_dv
    453054563U,	// V6_vaddhnq
    453054742U,	// V6_vaddhq
    765642778U,	// V6_vaddhsat
    765642778U,	// V6_vaddhsat_dv
    10602522U,	// V6_vaddhw
    765659162U,	// V6_vaddhw_acc
    295880730U,	// V6_vaddubh
    10700826U,	// V6_vaddubh_acc
    2208532506U,	// V6_vaddubsat
    2208532506U,	// V6_vaddubsat_dv
    2107869210U,	// V6_vaddububb_sat
    10733594U,	// V6_vadduhsat
    10733594U,	// V6_vadduhsat_dv
    10602522U,	// V6_vadduhw
    312674330U,	// V6_vadduhw_acc
    10749978U,	// V6_vadduwsat
    10749978U,	// V6_vadduwsat_dv
    10602522U,	// V6_vaddw
    10602522U,	// V6_vaddw_dv
    469831779U,	// V6_vaddwnq
    469831958U,	// V6_vaddwq
    10602522U,	// V6_vaddwsat
    10602522U,	// V6_vaddwsat_dv
    497305626U,	// V6_valignb
    195315738U,	// V6_valignbi
    10782746U,	// V6_vand
    10799130U,	// V6_vandnqrt
    10815514U,	// V6_vandnqrt_acc
    10782746U,	// V6_vandqrt
    10831898U,	// V6_vandqrt_acc
    10799130U,	// V6_vandvnqv
    10782746U,	// V6_vandvqv
    10782746U,	// V6_vandvrt
    10831898U,	// V6_vandvrt_acc
    27625498U,	// V6_vaslh
    10864666U,	// V6_vaslh_acc
    2124777498U,	// V6_vaslhv
    27658266U,	// V6_vaslw
    10897434U,	// V6_vaslw_acc
    2158364698U,	// V6_vaslwv
    10913818U,	// V6_vasr_into
    765904922U,	// V6_vasrh
    10946586U,	// V6_vasrh_acc
    279398426U,	// V6_vasrhbrndsat
    430393370U,	// V6_vasrhbsat
    765954074U,	// V6_vasrhubrndsat
    765954074U,	// V6_vasrhubsat
    765904922U,	// V6_vasrhv
    312969242U,	// V6_vasruhubrndsat
    312969242U,	// V6_vasruhubsat
    329762842U,	// V6_vasruwuhrndsat
    329762842U,	// V6_vasruwuhsat
    27789338U,	// V6_vasrw
    11028506U,	// V6_vasrw_acc
    1990641690U,	// V6_vasrwh
    1990641690U,	// V6_vasrwhrndsat
    1990641690U,	// V6_vasrwhsat
    1990707226U,	// V6_vasrwuhrndsat
    1990707226U,	// V6_vasrwuhsat
    2158495770U,	// V6_vasrwv
    50432026U,	// V6_vassign
    2091419674U,	// V6_vavgb
    2225637402U,	// V6_vavgbrnd
    2124990490U,	// V6_vavgh
    2242431002U,	// V6_vavghrnd
    598280218U,	// V6_vavgub
    2259224602U,	// V6_vavgubrnd
    2276018202U,	// V6_vavguh
    2292795418U,	// V6_vavguhrnd
    2309589018U,	// V6_vavguw
    2326366234U,	// V6_vavguwrnd
    2158610458U,	// V6_vavgw
    2343159834U,	// V6_vavgwrnd
    2348880150U,	// V6_vccombine
    11143194U,	// V6_vcl0h
    11159578U,	// V6_vcl0w
    33624342U,	// V6_vcmov
    11175962U,	// V6_vcombine
    3590703U,	// V6_vdeal
    11192346U,	// V6_vdealb
    11208730U,	// V6_vdealb4w
    11225114U,	// V6_vdealh
    11241498U,	// V6_vdealvdd
    11257882U,	// V6_vdelta
    11274266U,	// V6_vdmpybus
    11290650U,	// V6_vdmpybus_acc
    11274266U,	// V6_vdmpybus_dv
    11290650U,	// V6_vdmpybus_dv_acc
    2091681818U,	// V6_vdmpyhb
    2091698202U,	// V6_vdmpyhb_acc
    2091681818U,	// V6_vdmpyhb_dv
    2091698202U,	// V6_vdmpyhb_dv_acc
    2142013466U,	// V6_vdmpyhisat
    2142029850U,	// V6_vdmpyhisat_acc
    2142013466U,	// V6_vdmpyhsat
    2142029850U,	// V6_vdmpyhsat_acc
    2376894490U,	// V6_vdmpyhsuisat
    2376910874U,	// V6_vdmpyhsuisat_acc
    2393671706U,	// V6_vdmpyhsusat
    2393688090U,	// V6_vdmpyhsusat_acc
    2142013466U,	// V6_vdmpyhvsat
    2142029850U,	// V6_vdmpyhvsat_acc
    11339802U,	// V6_vdsaduh
    11356186U,	// V6_vdsaduh_acc
    571475994U,	// V6_veqb
    571492378U,	// V6_veqb_and
    571508762U,	// V6_veqb_or
    571525146U,	// V6_veqb_xor
    756025370U,	// V6_veqh
    756041754U,	// V6_veqh_and
    756058138U,	// V6_veqh_or
    756074522U,	// V6_veqh_xor
    1980762138U,	// V6_veqw
    1980778522U,	// V6_veqw_and
    1980794906U,	// V6_veqw_or
    1980811290U,	// V6_veqw_xor
    3590789U,	// V6_vgathermh
    2410514710U,	// V6_vgathermhq
    3590789U,	// V6_vgathermhw
    2427291926U,	// V6_vgathermhwq
    3590807U,	// V6_vgathermw
    11389206U,	// V6_vgathermwq
    581830682U,	// V6_vgtb
    581847066U,	// V6_vgtb_and
    581863450U,	// V6_vgtb_or
    581879834U,	// V6_vgtb_xor
    766380058U,	// V6_vgth
    766396442U,	// V6_vgth_and
    766412826U,	// V6_vgth_or
    766429210U,	// V6_vgth_xor
    296618010U,	// V6_vgtub
    296634394U,	// V6_vgtub_and
    296650778U,	// V6_vgtub_or
    296667162U,	// V6_vgtub_xor
    313395226U,	// V6_vgtuh
    313411610U,	// V6_vgtuh_and
    313427994U,	// V6_vgtuh_or
    313444378U,	// V6_vgtuh_xor
    330172442U,	// V6_vgtuw
    330188826U,	// V6_vgtuw_and
    330205210U,	// V6_vgtuw_or
    330221594U,	// V6_vgtuw_xor
    1991116826U,	// V6_vgtw
    1991133210U,	// V6_vgtw_and
    1991149594U,	// V6_vgtw_or
    1991165978U,	// V6_vgtw_xor
    1465U,	// V6_vhist
    297776U,	// V6_vhistq
    11470874U,	// V6_vinsertwr
    498026522U,	// V6_vlalignb
    196036634U,	// V6_vlalignbi
    11503642U,	// V6_vlsrb
    11520026U,	// V6_vlsrh
    11536410U,	// V6_vlsrhv
    11552794U,	// V6_vlsrw
    11569178U,	// V6_vlsrwv
    11585562U,	// V6_vlut4
    582027290U,	// V6_vlutvvb
    582027290U,	// V6_vlutvvb_nm
    582043674U,	// V6_vlutvvb_oracc
    2008107034U,	// V6_vlutvvb_oracci
    2008090650U,	// V6_vlutvvbi
    766609434U,	// V6_vlutvwh
    766609434U,	// V6_vlutvwh_nm
    766625818U,	// V6_vlutvwh_oracc
    2444347418U,	// V6_vlutvwh_oracci
    2444331034U,	// V6_vlutvwhi
    11667482U,	// V6_vmaxb
    11683866U,	// V6_vmaxh
    11700250U,	// V6_vmaxub
    11716634U,	// V6_vmaxuh
    11733018U,	// V6_vmaxw
    11749402U,	// V6_vminb
    11765786U,	// V6_vminh
    11782170U,	// V6_vminub
    11798554U,	// V6_vminuh
    11814938U,	// V6_vminw
    297043994U,	// V6_vmpabus
    2092222490U,	// V6_vmpabus_acc
    297043994U,	// V6_vmpabusv
    297043994U,	// V6_vmpabuu
    599050266U,	// V6_vmpabuu_acc
    297043994U,	// V6_vmpabuuv
    766838810U,	// V6_vmpahb
    766855194U,	// V6_vmpahb_acc
    766806042U,	// V6_vmpahhsat
    313853978U,	// V6_vmpauhb
    313870362U,	// V6_vmpauhb_acc
    766806042U,	// V6_vmpauhuhsat
    11896858U,	// V6_vmpsuhuhsat
    297125914U,	// V6_vmpybus
    297142298U,	// V6_vmpybus_acc
    297125914U,	// V6_vmpybusv
    297142298U,	// V6_vmpybusv_acc
    582338586U,	// V6_vmpybv
    582354970U,	// V6_vmpybv_acc
    11946010U,	// V6_vmpyewuh
    11962394U,	// V6_vmpyewuh_64
    2125907994U,	// V6_vmpyh
    2125924378U,	// V6_vmpyh_acc
    2142701594U,	// V6_vmpyhsat_acc
    766887962U,	// V6_vmpyhsrs
    766887962U,	// V6_vmpyhss
    2276902938U,	// V6_vmpyhus
    2276919322U,	// V6_vmpyhus_acc
    2125907994U,	// V6_vmpyhv
    2125924378U,	// V6_vmpyhv_acc
    766887962U,	// V6_vmpyhvsrs
    12011546U,	// V6_vmpyieoh
    2125957146U,	// V6_vmpyiewh_acc
    12044314U,	// V6_vmpyiewuh
    2276952090U,	// V6_vmpyiewuh_acc
    2125989914U,	// V6_vmpyih
    2126006298U,	// V6_vmpyih_acc
    2092435482U,	// V6_vmpyihb
    2092451866U,	// V6_vmpyihb_acc
    12093466U,	// V6_vmpyiowh
    2092484634U,	// V6_vmpyiwb
    2092501018U,	// V6_vmpyiwb_acc
    2126039066U,	// V6_vmpyiwh
    2126055450U,	// V6_vmpyiwh_acc
    599312410U,	// V6_vmpyiwub
    599328794U,	// V6_vmpyiwub_acc
    2461616154U,	// V6_vmpyowh
    12159002U,	// V6_vmpyowh_64_acc
    2478393370U,	// V6_vmpyowh_rnd
    2495203354U,	// V6_vmpyowh_rnd_sacc
    2511980570U,	// V6_vmpyowh_sacc
    12191770U,	// V6_vmpyub
    12208154U,	// V6_vmpyub_acc
    12191770U,	// V6_vmpyubv
    12208154U,	// V6_vmpyubv_acc
    12224538U,	// V6_vmpyuh
    12240922U,	// V6_vmpyuh_acc
    12257306U,	// V6_vmpyuhe
    12273690U,	// V6_vmpyuhe_acc
    12224538U,	// V6_vmpyuhv
    12240922U,	// V6_vmpyuhv_acc
    5376026U,	// V6_vmux
    582715418U,	// V6_vnavgb
    12306458U,	// V6_vnavgh
    297502746U,	// V6_vnavgub
    12322842U,	// V6_vnavgw
    2348879971U,	// V6_vnccombine
    33624163U,	// V6_vncmov
    12339226U,	// V6_vnormamth
    12355610U,	// V6_vnormamtw
    12371994U,	// V6_vnot
    12388378U,	// V6_vor
    12404762U,	// V6_vpackeb
    12421146U,	// V6_vpackeh
    12437530U,	// V6_vpackhb_sat
    12453914U,	// V6_vpackhub_sat
    12470298U,	// V6_vpackob
    12486682U,	// V6_vpackoh
    12503066U,	// V6_vpackwh_sat
    12519450U,	// V6_vpackwuh_sat
    12535834U,	// V6_vpopcounth
    12552218U,	// V6_vprefixqb
    12568602U,	// V6_vprefixqh
    12584986U,	// V6_vprefixqw
    12601370U,	// V6_vrdelta
    573655066U,	// V6_vrmpybub_rtt
    573638682U,	// V6_vrmpybub_rtt_acc
    288442394U,	// V6_vrmpybus
    288426010U,	// V6_vrmpybus_acc
    288442394U,	// V6_vrmpybusi
    288426010U,	// V6_vrmpybusi_acc
    288442394U,	// V6_vrmpybusv
    288426010U,	// V6_vrmpybusv_acc
    573655066U,	// V6_vrmpybv
    573638682U,	// V6_vrmpybv_acc
    590563354U,	// V6_vrmpyub
    590546970U,	// V6_vrmpyub_acc
    590563354U,	// V6_vrmpyub_rtt
    590546970U,	// V6_vrmpyub_rtt_acc
    2519943194U,	// V6_vrmpyubi
    2519926810U,	// V6_vrmpyubi_acc
    590563354U,	// V6_vrmpyubv
    590546970U,	// V6_vrmpyubv_acc
    12617754U,	// V6_vrmpyzbb_rt
    79743002U,	// V6_vrmpyzbb_rt_acc
    79726618U,	// V6_vrmpyzbb_rx
    2545993754U,	// V6_vrmpyzbb_rx_acc
    12617754U,	// V6_vrmpyzbub_rt
    79743002U,	// V6_vrmpyzbub_rt_acc
    79726618U,	// V6_vrmpyzbub_rx
    2545993754U,	// V6_vrmpyzbub_rx_acc
    12650522U,	// V6_vrmpyzcb_rt
    79775770U,	// V6_vrmpyzcb_rt_acc
    79759386U,	// V6_vrmpyzcb_rx
    2546026522U,	// V6_vrmpyzcb_rx_acc
    12683290U,	// V6_vrmpyzcbs_rt
    79808538U,	// V6_vrmpyzcbs_rt_acc
    79792154U,	// V6_vrmpyzcbs_rx
    2546059290U,	// V6_vrmpyzcbs_rx_acc
    12716058U,	// V6_vrmpyznb_rt
    79841306U,	// V6_vrmpyznb_rt_acc
    79824922U,	// V6_vrmpyznb_rx
    2546092058U,	// V6_vrmpyznb_rx_acc
    12748826U,	// V6_vror
    12765210U,	// V6_vrotr
    12781594U,	// V6_vroundhb
    767772698U,	// V6_vroundhub
    314787866U,	// V6_vrounduhub
    331581466U,	// V6_vrounduwuh
    12830746U,	// V6_vroundwh
    1992525850U,	// V6_vroundwuh
    12847130U,	// V6_vrsadubi
    12863514U,	// V6_vrsadubi_acc
    12879898U,	// V6_vsatdw
    12896282U,	// V6_vsathub
    12912666U,	// V6_vsatuwuh
    12929050U,	// V6_vsatwh
    12945434U,	// V6_vsb
    3590825U,	// V6_vscattermh
    3590825U,	// V6_vscattermh_add
    2553743638U,	// V6_vscattermhq
    3590825U,	// V6_vscattermhw
    3590825U,	// V6_vscattermhw_add
    2570520854U,	// V6_vscattermhwq
    3590825U,	// V6_vscattermw
    3590825U,	// V6_vscattermw_add
    2587298070U,	// V6_vscattermwq
    12961818U,	// V6_vsh
    765397018U,	// V6_vshufeh
    3590657U,	// V6_vshuff
    12978202U,	// V6_vshuffb
    580831258U,	// V6_vshuffeb
    12994586U,	// V6_vshuffh
    13010970U,	// V6_vshuffob
    13027354U,	// V6_vshuffvdd
    13043738U,	// V6_vshufoeb
    13060122U,	// V6_vshufoeh
    13076506U,	// V6_vshufoh
    2093467674U,	// V6_vsubb
    2093467674U,	// V6_vsubb_dv
    637603939U,	// V6_vsubbnq
    637604118U,	// V6_vsubbq
    2110244890U,	// V6_vsubbsat
    2110244890U,	// V6_vsubbsat_dv
    80218138U,	// V6_vsubcarry
    2611087386U,	// V6_vsubcarryo
    768100378U,	// V6_vsubh
    768100378U,	// V6_vsubh_dv
    654381155U,	// V6_vsubhnq
    654381334U,	// V6_vsubhq
    768100378U,	// V6_vsubhsat
    768100378U,	// V6_vsubhsat_dv
    13109274U,	// V6_vsubhw
    298338330U,	// V6_vsububh
    2210957338U,	// V6_vsububsat
    2210957338U,	// V6_vsububsat_dv
    2110294042U,	// V6_vsubububb_sat
    13158426U,	// V6_vsubuhsat
    13158426U,	// V6_vsubuhsat_dv
    13109274U,	// V6_vsubuhw
    13174810U,	// V6_vsubuwsat
    13174810U,	// V6_vsubuwsat_dv
    13109274U,	// V6_vsubw
    13109274U,	// V6_vsubw_dv
    671158371U,	// V6_vsubwnq
    671158550U,	// V6_vsubwq
    13109274U,	// V6_vsubwsat
    13109274U,	// V6_vsubwsat_dv
    13191194U,	// V6_vswap
    583632922U,	// V6_vtmpyb
    583649306U,	// V6_vtmpyb_acc
    298420250U,	// V6_vtmpybus
    298436634U,	// V6_vtmpybus_acc
    13240346U,	// V6_vtmpyhb
    13256730U,	// V6_vtmpyhb_acc
    13273114U,	// V6_vunpackb
    13289498U,	// V6_vunpackh
    13305882U,	// V6_vunpackob
    13322266U,	// V6_vunpackoh
    13338650U,	// V6_vunpackub
    13355034U,	// V6_vunpackuh
    1176U,	// V6_vwhist128
    297106U,	// V6_vwhist128m
    297338U,	// V6_vwhist128q
    4229498U,	// V6_vwhist128qm
    1166U,	// V6_vwhist256
    1377U,	// V6_vwhist256_sat
    297327U,	// V6_vwhist256q
    13371759U,	// V6_vwhist256q_sat
    13387802U,	// V6_vxor
    13404186U,	// V6_vzb
    13420570U,	// V6_vzh
    21023304U,	// V6_zLd_ai
    26069576U,	// V6_zLd_pi
    26053192U,	// V6_zLd_ppu
    4081942U,	// V6_zLd_pred_ai
    1782468886U,	// V6_zLd_pred_pi
    1782468886U,	// V6_zLd_pred_ppu
    13436954U,	// V6_zextract
    1369U,	// Y2_barrier
    1459U,	// Y2_break
    297349U,	// Y2_dccleana
    297384U,	// Y2_dccleaninva
    21023256U,	// Y2_dcfetchbo
    297368U,	// Y2_dcinva
    297359U,	// Y2_dczeroa
    297376U,	// Y2_icinva
    1285U,	// Y2_isync
    1391U,	// Y2_syncht
    297710U,	// Y2_wait
    3590671U,	// Y4_l2fetch
    297435U,	// Y4_trace
    3590671U,	// Y5_l2fetch
    297481U,	// Y6_diag
    3590427U,	// Y6_diag0
    3590479U,	// Y6_diag1
    3590695U,	// Y6_dmlink
    13453338U,	// Y6_dmpause
    13469722U,	// Y6_dmpoll
    297454U,	// Y6_dmresume
    297767U,	// Y6_dmstart
    13486106U,	// Y6_dmwait
    2074U,	// dep_A2_addsat
    4491290U,	// dep_A2_subsat
    2626406426U,	// dep_S2_packhl
    1186U,	// invalid_decode
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// A2_addsp
    0U,	// A2_iconst
    0U,	// A2_neg
    0U,	// A2_not
    0U,	// A2_tfrf
    0U,	// A2_tfrfnew
    0U,	// A2_tfrp
    0U,	// A2_tfrpf
    0U,	// A2_tfrpfnew
    0U,	// A2_tfrpi
    0U,	// A2_tfrpt
    0U,	// A2_tfrptnew
    0U,	// A2_tfrt
    0U,	// A2_tfrtnew
    0U,	// A2_vaddb_map
    0U,	// A2_vsubb_map
    0U,	// A2_zxtb
    0U,	// A4_boundscheck
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// C2_cmpgei
    0U,	// C2_cmpgeui
    0U,	// C2_cmplt
    0U,	// C2_cmpltu
    0U,	// C2_pxfer_map
    0U,	// DUPLEX_Pseudo
    0U,	// ENDLOOP0
    0U,	// ENDLOOP01
    0U,	// ENDLOOP1
    0U,	// J2_endloop0
    0U,	// J2_endloop01
    0U,	// J2_endloop1
    0U,	// J2_jumpf_nopred_map
    0U,	// J2_jumprf_nopred_map
    0U,	// J2_jumprt_nopred_map
    0U,	// J2_jumpt_nopred_map
    0U,	// J2_trap1_noregmap
    1U,	// L2_loadalignb_zomap
    1U,	// L2_loadalignh_zomap
    0U,	// L2_loadbsw2_zomap
    0U,	// L2_loadbsw4_zomap
    0U,	// L2_loadbzw2_zomap
    0U,	// L2_loadbzw4_zomap
    0U,	// L2_loadrb_zomap
    0U,	// L2_loadrd_zomap
    0U,	// L2_loadrh_zomap
    0U,	// L2_loadri_zomap
    0U,	// L2_loadrub_zomap
    0U,	// L2_loadruh_zomap
    66U,	// L2_ploadrbf_zomap
    66U,	// L2_ploadrbfnew_zomap
    66U,	// L2_ploadrbt_zomap
    66U,	// L2_ploadrbtnew_zomap
    66U,	// L2_ploadrdf_zomap
    66U,	// L2_ploadrdfnew_zomap
    66U,	// L2_ploadrdt_zomap
    66U,	// L2_ploadrdtnew_zomap
    66U,	// L2_ploadrhf_zomap
    66U,	// L2_ploadrhfnew_zomap
    66U,	// L2_ploadrht_zomap
    66U,	// L2_ploadrhtnew_zomap
    66U,	// L2_ploadrif_zomap
    66U,	// L2_ploadrifnew_zomap
    66U,	// L2_ploadrit_zomap
    66U,	// L2_ploadritnew_zomap
    66U,	// L2_ploadrubf_zomap
    66U,	// L2_ploadrubfnew_zomap
    66U,	// L2_ploadrubt_zomap
    66U,	// L2_ploadrubtnew_zomap
    66U,	// L2_ploadruhf_zomap
    66U,	// L2_ploadruhfnew_zomap
    66U,	// L2_ploadruht_zomap
    66U,	// L2_ploadruhtnew_zomap
    0U,	// L4_add_memopb_zomap
    0U,	// L4_add_memoph_zomap
    0U,	// L4_add_memopw_zomap
    0U,	// L4_and_memopb_zomap
    0U,	// L4_and_memoph_zomap
    0U,	// L4_and_memopw_zomap
    0U,	// L4_iadd_memopb_zomap
    0U,	// L4_iadd_memoph_zomap
    0U,	// L4_iadd_memopw_zomap
    0U,	// L4_iand_memopb_zomap
    0U,	// L4_iand_memoph_zomap
    0U,	// L4_iand_memopw_zomap
    0U,	// L4_ior_memopb_zomap
    0U,	// L4_ior_memoph_zomap
    0U,	// L4_ior_memopw_zomap
    0U,	// L4_isub_memopb_zomap
    0U,	// L4_isub_memoph_zomap
    0U,	// L4_isub_memopw_zomap
    0U,	// L4_or_memopb_zomap
    0U,	// L4_or_memoph_zomap
    0U,	// L4_or_memopw_zomap
    0U,	// L4_return_map_to_raw_f
    0U,	// L4_return_map_to_raw_fnew_pnt
    0U,	// L4_return_map_to_raw_fnew_pt
    0U,	// L4_return_map_to_raw_t
    0U,	// L4_return_map_to_raw_tnew_pnt
    0U,	// L4_return_map_to_raw_tnew_pt
    0U,	// L4_sub_memopb_zomap
    0U,	// L4_sub_memoph_zomap
    0U,	// L4_sub_memopw_zomap
    0U,	// L6_deallocframe_map_to_raw
    0U,	// L6_return_map_to_raw
    0U,	// LDriw_ctr
    0U,	// LDriw_pred
    66U,	// M2_mpysmi
    0U,	// M2_mpyui
    0U,	// M2_vrcmpys_acc_s1
    0U,	// M2_vrcmpys_s1
    0U,	// M2_vrcmpys_s1rp
    0U,	// M7_vdmpy
    0U,	// M7_vdmpy_acc
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    0U,	// PS_loadrb_pci
    0U,	// PS_loadrb_pcr
    0U,	// PS_loadrd_pci
    0U,	// PS_loadrd_pcr
    0U,	// PS_loadrh_pci
    0U,	// PS_loadrh_pcr
    0U,	// PS_loadri_pci
    0U,	// PS_loadri_pcr
    0U,	// PS_loadrub_pci
    0U,	// PS_loadrub_pcr
    0U,	// PS_loadruh_pci
    0U,	// PS_loadruh_pcr
    0U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    0U,	// PS_storerb_pci
    0U,	// PS_storerb_pcr
    0U,	// PS_storerd_pci
    0U,	// PS_storerd_pcr
    0U,	// PS_storerf_pci
    0U,	// PS_storerf_pcr
    0U,	// PS_storerh_pci
    0U,	// PS_storerh_pcr
    0U,	// PS_storeri_pci
    0U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    0U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    0U,	// S2_asr_i_p_rnd_goodsyntax
    0U,	// S2_asr_i_r_rnd_goodsyntax
    131U,	// S2_pstorerbf_zomap
    195U,	// S2_pstorerbnewf_zomap
    195U,	// S2_pstorerbnewt_zomap
    131U,	// S2_pstorerbt_zomap
    131U,	// S2_pstorerdf_zomap
    131U,	// S2_pstorerdt_zomap
    259U,	// S2_pstorerff_zomap
    259U,	// S2_pstorerft_zomap
    131U,	// S2_pstorerhf_zomap
    195U,	// S2_pstorerhnewf_zomap
    195U,	// S2_pstorerhnewt_zomap
    131U,	// S2_pstorerht_zomap
    131U,	// S2_pstorerif_zomap
    195U,	// S2_pstorerinewf_zomap
    195U,	// S2_pstorerinewt_zomap
    131U,	// S2_pstorerit_zomap
    0U,	// S2_storerb_zomap
    0U,	// S2_storerbnew_zomap
    0U,	// S2_storerd_zomap
    0U,	// S2_storerf_zomap
    0U,	// S2_storerh_zomap
    0U,	// S2_storerhnew_zomap
    0U,	// S2_storeri_zomap
    0U,	// S2_storerinew_zomap
    0U,	// S2_tableidxb_goodsyntax
    0U,	// S2_tableidxd_goodsyntax
    0U,	// S2_tableidxh_goodsyntax
    0U,	// S2_tableidxw_goodsyntax
    131U,	// S4_pstorerbfnew_zomap
    195U,	// S4_pstorerbnewfnew_zomap
    195U,	// S4_pstorerbnewtnew_zomap
    131U,	// S4_pstorerbtnew_zomap
    131U,	// S4_pstorerdfnew_zomap
    131U,	// S4_pstorerdtnew_zomap
    259U,	// S4_pstorerffnew_zomap
    259U,	// S4_pstorerftnew_zomap
    131U,	// S4_pstorerhfnew_zomap
    195U,	// S4_pstorerhnewfnew_zomap
    195U,	// S4_pstorerhnewtnew_zomap
    131U,	// S4_pstorerhtnew_zomap
    131U,	// S4_pstorerifnew_zomap
    195U,	// S4_pstorerinewfnew_zomap
    195U,	// S4_pstorerinewtnew_zomap
    131U,	// S4_pstoreritnew_zomap
    0U,	// S4_storeirb_zomap
    4U,	// S4_storeirbf_zomap
    4U,	// S4_storeirbfnew_zomap
    4U,	// S4_storeirbt_zomap
    4U,	// S4_storeirbtnew_zomap
    0U,	// S4_storeirh_zomap
    4U,	// S4_storeirhf_zomap
    4U,	// S4_storeirhfnew_zomap
    4U,	// S4_storeirht_zomap
    4U,	// S4_storeirhtnew_zomap
    0U,	// S4_storeiri_zomap
    4U,	// S4_storeirif_zomap
    4U,	// S4_storeirifnew_zomap
    4U,	// S4_storeirit_zomap
    4U,	// S4_storeiritnew_zomap
    0U,	// S5_asrhub_rnd_sat_goodsyntax
    322U,	// S5_vasrhrnd_goodsyntax
    0U,	// S6_allocframe_to_raw
    0U,	// STriw_ctr
    0U,	// STriw_pred
    386U,	// V6_MAP_equb
    389U,	// V6_MAP_equb_and
    389U,	// V6_MAP_equb_ior
    389U,	// V6_MAP_equb_xor
    450U,	// V6_MAP_equh
    453U,	// V6_MAP_equh_and
    453U,	// V6_MAP_equh_ior
    453U,	// V6_MAP_equh_xor
    514U,	// V6_MAP_equw
    517U,	// V6_MAP_equw_and
    517U,	// V6_MAP_equw_ior
    517U,	// V6_MAP_equw_xor
    0U,	// V6_extractw_alt
    0U,	// V6_hi
    0U,	// V6_ld0
    66U,	// V6_ldcnp0
    578U,	// V6_ldcnpnt0
    66U,	// V6_ldcp0
    578U,	// V6_ldcpnt0
    66U,	// V6_ldnp0
    578U,	// V6_ldnpnt0
    0U,	// V6_ldnt0
    0U,	// V6_ldntnt0
    66U,	// V6_ldp0
    578U,	// V6_ldpnt0
    66U,	// V6_ldtnp0
    578U,	// V6_ldtnpnt0
    66U,	// V6_ldtp0
    578U,	// V6_ldtpnt0
    0U,	// V6_ldu0
    0U,	// V6_lo
    0U,	// V6_st0
    0U,	// V6_stn0
    0U,	// V6_stnnt0
    131U,	// V6_stnp0
    6U,	// V6_stnpnt0
    131U,	// V6_stnq0
    6U,	// V6_stnqnt0
    0U,	// V6_stnt0
    131U,	// V6_stp0
    6U,	// V6_stpnt0
    131U,	// V6_stq0
    6U,	// V6_stqnt0
    0U,	// V6_stu0
    131U,	// V6_stunp0
    131U,	// V6_stup0
    7U,	// V6_v6mpyhubs10_alt
    8U,	// V6_v6mpyvubs10_alt
    0U,	// V6_vabsb_alt
    0U,	// V6_vabsb_sat_alt
    0U,	// V6_vabsdiffh_alt
    0U,	// V6_vabsdiffub_alt
    0U,	// V6_vabsdiffuh_alt
    0U,	// V6_vabsdiffw_alt
    0U,	// V6_vabsh_alt
    0U,	// V6_vabsh_sat_alt
    0U,	// V6_vabsub_alt
    0U,	// V6_vabsuh_alt
    0U,	// V6_vabsuw_alt
    0U,	// V6_vabsw_alt
    0U,	// V6_vabsw_sat_alt
    0U,	// V6_vaddb_alt
    0U,	// V6_vaddb_dv_alt
    0U,	// V6_vaddbnq_alt
    0U,	// V6_vaddbq_alt
    0U,	// V6_vaddbsat_alt
    0U,	// V6_vaddbsat_dv_alt
    0U,	// V6_vaddh_alt
    0U,	// V6_vaddh_dv_alt
    0U,	// V6_vaddhnq_alt
    0U,	// V6_vaddhq_alt
    0U,	// V6_vaddhsat_alt
    0U,	// V6_vaddhsat_dv_alt
    0U,	// V6_vaddhw_acc_alt
    0U,	// V6_vaddhw_alt
    0U,	// V6_vaddubh_acc_alt
    0U,	// V6_vaddubh_alt
    0U,	// V6_vaddubsat_alt
    0U,	// V6_vaddubsat_dv_alt
    0U,	// V6_vadduhsat_alt
    0U,	// V6_vadduhsat_dv_alt
    0U,	// V6_vadduhw_acc_alt
    0U,	// V6_vadduhw_alt
    0U,	// V6_vadduwsat_alt
    0U,	// V6_vadduwsat_dv_alt
    0U,	// V6_vaddw_alt
    0U,	// V6_vaddw_dv_alt
    0U,	// V6_vaddwnq_alt
    0U,	// V6_vaddwq_alt
    0U,	// V6_vaddwsat_alt
    0U,	// V6_vaddwsat_dv_alt
    0U,	// V6_vandnqrt_acc_alt
    0U,	// V6_vandnqrt_alt
    0U,	// V6_vandqrt_acc_alt
    0U,	// V6_vandqrt_alt
    0U,	// V6_vandvrt_acc_alt
    0U,	// V6_vandvrt_alt
    0U,	// V6_vaslh_acc_alt
    66U,	// V6_vaslh_alt
    66U,	// V6_vaslhv_alt
    0U,	// V6_vaslw_acc_alt
    66U,	// V6_vaslw_alt
    66U,	// V6_vaslwv_alt
    0U,	// V6_vasr_into_alt
    0U,	// V6_vasrh_acc_alt
    66U,	// V6_vasrh_alt
    66U,	// V6_vasrhv_alt
    0U,	// V6_vasrw_acc_alt
    66U,	// V6_vasrw_alt
    66U,	// V6_vasrwv_alt
    0U,	// V6_vassignp
    0U,	// V6_vavgb_alt
    0U,	// V6_vavgbrnd_alt
    0U,	// V6_vavgh_alt
    0U,	// V6_vavghrnd_alt
    0U,	// V6_vavgub_alt
    0U,	// V6_vavgubrnd_alt
    0U,	// V6_vavguh_alt
    0U,	// V6_vavguhrnd_alt
    0U,	// V6_vavguw_alt
    0U,	// V6_vavguwrnd_alt
    0U,	// V6_vavgw_alt
    0U,	// V6_vavgwrnd_alt
    0U,	// V6_vcl0h_alt
    0U,	// V6_vcl0w_alt
    0U,	// V6_vd0
    0U,	// V6_vdd0
    0U,	// V6_vdealb4w_alt
    0U,	// V6_vdealb_alt
    0U,	// V6_vdealh_alt
    0U,	// V6_vdmpybus_acc_alt
    0U,	// V6_vdmpybus_alt
    0U,	// V6_vdmpybus_dv_acc_alt
    0U,	// V6_vdmpybus_dv_alt
    0U,	// V6_vdmpyhb_acc_alt
    0U,	// V6_vdmpyhb_alt
    0U,	// V6_vdmpyhb_dv_acc_alt
    0U,	// V6_vdmpyhb_dv_alt
    0U,	// V6_vdmpyhisat_acc_alt
    0U,	// V6_vdmpyhisat_alt
    0U,	// V6_vdmpyhsat_acc_alt
    0U,	// V6_vdmpyhsat_alt
    0U,	// V6_vdmpyhsuisat_acc_alt
    0U,	// V6_vdmpyhsuisat_alt
    0U,	// V6_vdmpyhsusat_acc_alt
    0U,	// V6_vdmpyhsusat_alt
    0U,	// V6_vdmpyhvsat_acc_alt
    0U,	// V6_vdmpyhvsat_alt
    0U,	// V6_vdsaduh_acc_alt
    0U,	// V6_vdsaduh_alt
    0U,	// V6_vgathermh_pseudo
    0U,	// V6_vgathermhq_pseudo
    0U,	// V6_vgathermhw_pseudo
    0U,	// V6_vgathermhwq_pseudo
    0U,	// V6_vgathermw_pseudo
    0U,	// V6_vgathermwq_pseudo
    66U,	// V6_vlsrh_alt
    66U,	// V6_vlsrhv_alt
    66U,	// V6_vlsrw_alt
    66U,	// V6_vlsrwv_alt
    0U,	// V6_vmaxb_alt
    0U,	// V6_vmaxh_alt
    0U,	// V6_vmaxub_alt
    0U,	// V6_vmaxuh_alt
    0U,	// V6_vmaxw_alt
    0U,	// V6_vminb_alt
    0U,	// V6_vminh_alt
    0U,	// V6_vminub_alt
    0U,	// V6_vminuh_alt
    0U,	// V6_vminw_alt
    0U,	// V6_vmpabus_acc_alt
    0U,	// V6_vmpabus_alt
    0U,	// V6_vmpabusv_alt
    0U,	// V6_vmpabuu_acc_alt
    0U,	// V6_vmpabuu_alt
    0U,	// V6_vmpabuuv_alt
    0U,	// V6_vmpahb_acc_alt
    0U,	// V6_vmpahb_alt
    0U,	// V6_vmpauhb_acc_alt
    0U,	// V6_vmpauhb_alt
    0U,	// V6_vmpybus_acc_alt
    0U,	// V6_vmpybus_alt
    0U,	// V6_vmpybusv_acc_alt
    0U,	// V6_vmpybusv_alt
    0U,	// V6_vmpybv_acc_alt
    0U,	// V6_vmpybv_alt
    0U,	// V6_vmpyewuh_alt
    0U,	// V6_vmpyh_acc_alt
    0U,	// V6_vmpyh_alt
    0U,	// V6_vmpyhsat_acc_alt
    0U,	// V6_vmpyhsrs_alt
    0U,	// V6_vmpyhss_alt
    0U,	// V6_vmpyhus_acc_alt
    0U,	// V6_vmpyhus_alt
    0U,	// V6_vmpyhv_acc_alt
    0U,	// V6_vmpyhv_alt
    0U,	// V6_vmpyhvsrs_alt
    0U,	// V6_vmpyiewh_acc_alt
    0U,	// V6_vmpyiewuh_acc_alt
    0U,	// V6_vmpyiewuh_alt
    0U,	// V6_vmpyih_acc_alt
    0U,	// V6_vmpyih_alt
    0U,	// V6_vmpyihb_acc_alt
    0U,	// V6_vmpyihb_alt
    0U,	// V6_vmpyiowh_alt
    0U,	// V6_vmpyiwb_acc_alt
    0U,	// V6_vmpyiwb_alt
    0U,	// V6_vmpyiwh_acc_alt
    0U,	// V6_vmpyiwh_alt
    0U,	// V6_vmpyiwub_acc_alt
    0U,	// V6_vmpyiwub_alt
    0U,	// V6_vmpyowh_alt
    0U,	// V6_vmpyowh_rnd_alt
    0U,	// V6_vmpyowh_rnd_sacc_alt
    0U,	// V6_vmpyowh_sacc_alt
    0U,	// V6_vmpyub_acc_alt
    0U,	// V6_vmpyub_alt
    0U,	// V6_vmpyubv_acc_alt
    0U,	// V6_vmpyubv_alt
    0U,	// V6_vmpyuh_acc_alt
    0U,	// V6_vmpyuh_alt
    0U,	// V6_vmpyuhv_acc_alt
    0U,	// V6_vmpyuhv_alt
    0U,	// V6_vnavgb_alt
    0U,	// V6_vnavgh_alt
    0U,	// V6_vnavgub_alt
    0U,	// V6_vnavgw_alt
    0U,	// V6_vnormamth_alt
    0U,	// V6_vnormamtw_alt
    0U,	// V6_vpackeb_alt
    0U,	// V6_vpackeh_alt
    0U,	// V6_vpackhb_sat_alt
    0U,	// V6_vpackhub_sat_alt
    0U,	// V6_vpackob_alt
    0U,	// V6_vpackoh_alt
    0U,	// V6_vpackwh_sat_alt
    0U,	// V6_vpackwuh_sat_alt
    0U,	// V6_vpopcounth_alt
    389U,	// V6_vrmpybub_rtt_acc_alt
    386U,	// V6_vrmpybub_rtt_alt
    0U,	// V6_vrmpybus_acc_alt
    0U,	// V6_vrmpybus_alt
    73U,	// V6_vrmpybusi_acc_alt
    69U,	// V6_vrmpybusi_alt
    0U,	// V6_vrmpybusv_acc_alt
    0U,	// V6_vrmpybusv_alt
    0U,	// V6_vrmpybv_acc_alt
    0U,	// V6_vrmpybv_alt
    0U,	// V6_vrmpyub_acc_alt
    0U,	// V6_vrmpyub_alt
    0U,	// V6_vrmpyub_rtt_acc_alt
    0U,	// V6_vrmpyub_rtt_alt
    73U,	// V6_vrmpyubi_acc_alt
    69U,	// V6_vrmpyubi_alt
    0U,	// V6_vrmpyubv_acc_alt
    0U,	// V6_vrmpyubv_alt
    0U,	// V6_vrotr_alt
    0U,	// V6_vroundhb_alt
    0U,	// V6_vroundhub_alt
    0U,	// V6_vrounduhub_alt
    0U,	// V6_vrounduwuh_alt
    0U,	// V6_vroundwh_alt
    0U,	// V6_vroundwuh_alt
    73U,	// V6_vrsadubi_acc_alt
    69U,	// V6_vrsadubi_alt
    66U,	// V6_vsathub_alt
    0U,	// V6_vsatuwuh_alt
    66U,	// V6_vsatwh_alt
    0U,	// V6_vsb_alt
    4096U,	// V6_vscattermh_add_alt
    8192U,	// V6_vscattermh_alt
    0U,	// V6_vscattermhq_alt
    12288U,	// V6_vscattermw_add_alt
    16384U,	// V6_vscattermw_alt
    12288U,	// V6_vscattermwh_add_alt
    16384U,	// V6_vscattermwh_alt
    10U,	// V6_vscattermwhq_alt
    11U,	// V6_vscattermwq_alt
    0U,	// V6_vsh_alt
    0U,	// V6_vshufeh_alt
    0U,	// V6_vshuffb_alt
    0U,	// V6_vshuffeb_alt
    0U,	// V6_vshuffh_alt
    0U,	// V6_vshuffob_alt
    0U,	// V6_vshufoeb_alt
    0U,	// V6_vshufoeh_alt
    0U,	// V6_vshufoh_alt
    0U,	// V6_vsubb_alt
    0U,	// V6_vsubb_dv_alt
    0U,	// V6_vsubbnq_alt
    0U,	// V6_vsubbq_alt
    0U,	// V6_vsubbsat_alt
    0U,	// V6_vsubbsat_dv_alt
    0U,	// V6_vsubh_alt
    0U,	// V6_vsubh_dv_alt
    0U,	// V6_vsubhnq_alt
    0U,	// V6_vsubhq_alt
    0U,	// V6_vsubhsat_alt
    0U,	// V6_vsubhsat_dv_alt
    0U,	// V6_vsubhw_alt
    0U,	// V6_vsububh_alt
    0U,	// V6_vsububsat_alt
    0U,	// V6_vsububsat_dv_alt
    0U,	// V6_vsubuhsat_alt
    0U,	// V6_vsubuhsat_dv_alt
    0U,	// V6_vsubuhw_alt
    0U,	// V6_vsubuwsat_alt
    0U,	// V6_vsubuwsat_dv_alt
    0U,	// V6_vsubw_alt
    0U,	// V6_vsubw_dv_alt
    0U,	// V6_vsubwnq_alt
    0U,	// V6_vsubwq_alt
    0U,	// V6_vsubwsat_alt
    0U,	// V6_vsubwsat_dv_alt
    0U,	// V6_vtmpyb_acc_alt
    0U,	// V6_vtmpyb_alt
    0U,	// V6_vtmpybus_acc_alt
    0U,	// V6_vtmpybus_alt
    0U,	// V6_vtmpyhb_acc_alt
    0U,	// V6_vtmpyhb_alt
    640U,	// V6_vtran2x2_map
    0U,	// V6_vunpackb_alt
    0U,	// V6_vunpackh_alt
    0U,	// V6_vunpackob_alt
    0U,	// V6_vunpackoh_alt
    0U,	// V6_vunpackub_alt
    0U,	// V6_vunpackuh_alt
    0U,	// V6_vzb_alt
    0U,	// V6_vzh_alt
    0U,	// V6_zld0
    1U,	// V6_zldp0
    0U,	// Y2_dcfetch
    0U,	// dup_A2_add
    12U,	// dup_A2_addi
    66U,	// dup_A2_andir
    66U,	// dup_A2_combineii
    0U,	// dup_A2_sxtb
    0U,	// dup_A2_sxth
    0U,	// dup_A2_tfr
    0U,	// dup_A2_tfrsi
    0U,	// dup_A2_zxtb
    0U,	// dup_A2_zxth
    66U,	// dup_A4_combineii
    66U,	// dup_A4_combineir
    66U,	// dup_A4_combineri
    0U,	// dup_C2_cmoveif
    0U,	// dup_C2_cmoveit
    0U,	// dup_C2_cmovenewif
    0U,	// dup_C2_cmovenewit
    66U,	// dup_C2_cmpeqi
    0U,	// dup_L2_deallocframe
    1U,	// dup_L2_loadrb_io
    1U,	// dup_L2_loadrd_io
    1U,	// dup_L2_loadrh_io
    1U,	// dup_L2_loadri_io
    1U,	// dup_L2_loadrub_io
    1U,	// dup_L2_loadruh_io
    13U,	// dup_S2_allocframe
    130U,	// dup_S2_storerb_io
    130U,	// dup_S2_storerd_io
    130U,	// dup_S2_storerh_io
    130U,	// dup_S2_storeri_io
    0U,	// dup_S4_storeirb_io
    0U,	// dup_S4_storeiri_io
    0U,	// A2_abs
    0U,	// A2_absp
    0U,	// A2_abssat
    0U,	// A2_add
    718U,	// A2_addh_h16_hh
    782U,	// A2_addh_h16_hl
    719U,	// A2_addh_h16_lh
    783U,	// A2_addh_h16_ll
    846U,	// A2_addh_h16_sat_hh
    910U,	// A2_addh_h16_sat_hl
    847U,	// A2_addh_h16_sat_lh
    911U,	// A2_addh_h16_sat_ll
    975U,	// A2_addh_l16_hl
    1039U,	// A2_addh_l16_ll
    1103U,	// A2_addh_l16_sat_hl
    1167U,	// A2_addh_l16_sat_ll
    12U,	// A2_addi
    0U,	// A2_addp
    20480U,	// A2_addpsat
    20480U,	// A2_addsat
    24576U,	// A2_addsph
    28672U,	// A2_addspl
    66U,	// A2_and
    66U,	// A2_andir
    66U,	// A2_andp
    0U,	// A2_aslh
    0U,	// A2_asrh
    962U,	// A2_combine_hh
    1026U,	// A2_combine_hl
    962U,	// A2_combine_lh
    1026U,	// A2_combine_ll
    66U,	// A2_combineii
    66U,	// A2_combinew
    0U,	// A2_max
    0U,	// A2_maxp
    0U,	// A2_maxu
    0U,	// A2_maxup
    0U,	// A2_min
    0U,	// A2_minp
    0U,	// A2_minu
    0U,	// A2_minup
    0U,	// A2_negp
    0U,	// A2_negsat
    0U,	// A2_nop
    0U,	// A2_notp
    66U,	// A2_or
    66U,	// A2_orir
    66U,	// A2_orp
    1216U,	// A2_paddf
    1216U,	// A2_paddfnew
    1228U,	// A2_paddif
    1228U,	// A2_paddifnew
    1228U,	// A2_paddit
    1228U,	// A2_padditnew
    1216U,	// A2_paddt
    1216U,	// A2_paddtnew
    0U,	// A2_pandf
    0U,	// A2_pandfnew
    0U,	// A2_pandt
    0U,	// A2_pandtnew
    0U,	// A2_porf
    0U,	// A2_porfnew
    0U,	// A2_port
    0U,	// A2_portnew
    0U,	// A2_psubf
    0U,	// A2_psubfnew
    0U,	// A2_psubt
    0U,	// A2_psubtnew
    0U,	// A2_pxorf
    0U,	// A2_pxorfnew
    0U,	// A2_pxort
    0U,	// A2_pxortnew
    0U,	// A2_roundsat
    0U,	// A2_sat
    0U,	// A2_satb
    0U,	// A2_sath
    0U,	// A2_satub
    0U,	// A2_satuh
    0U,	// A2_sub
    718U,	// A2_subh_h16_hh
    782U,	// A2_subh_h16_hl
    719U,	// A2_subh_h16_lh
    783U,	// A2_subh_h16_ll
    846U,	// A2_subh_h16_sat_hh
    910U,	// A2_subh_h16_sat_hl
    847U,	// A2_subh_h16_sat_lh
    911U,	// A2_subh_h16_sat_ll
    975U,	// A2_subh_l16_hl
    1039U,	// A2_subh_l16_ll
    1103U,	// A2_subh_l16_sat_hl
    1167U,	// A2_subh_l16_sat_ll
    0U,	// A2_subp
    66U,	// A2_subri
    20480U,	// A2_subsat
    0U,	// A2_svaddh
    0U,	// A2_svaddhs
    0U,	// A2_svadduhs
    0U,	// A2_svavgh
    0U,	// A2_svavghs
    0U,	// A2_svnavgh
    0U,	// A2_svsubh
    0U,	// A2_svsubhs
    0U,	// A2_svsubuhs
    0U,	// A2_swiz
    0U,	// A2_sxtb
    0U,	// A2_sxth
    0U,	// A2_sxtw
    0U,	// A2_tfr
    0U,	// A2_tfrcrr
    16U,	// A2_tfrih
    16U,	// A2_tfril
    0U,	// A2_tfrrcr
    0U,	// A2_tfrsi
    0U,	// A2_vabsh
    0U,	// A2_vabshsat
    0U,	// A2_vabsw
    0U,	// A2_vabswsat
    0U,	// A2_vaddh
    0U,	// A2_vaddhs
    0U,	// A2_vaddub
    0U,	// A2_vaddubs
    0U,	// A2_vadduhs
    0U,	// A2_vaddw
    0U,	// A2_vaddws
    0U,	// A2_vavgh
    0U,	// A2_vavghcr
    0U,	// A2_vavghr
    0U,	// A2_vavgub
    0U,	// A2_vavgubr
    0U,	// A2_vavguh
    0U,	// A2_vavguhr
    0U,	// A2_vavguw
    0U,	// A2_vavguwr
    0U,	// A2_vavgw
    0U,	// A2_vavgwcr
    0U,	// A2_vavgwr
    66U,	// A2_vcmpbeq
    66U,	// A2_vcmpbgtu
    66U,	// A2_vcmpheq
    66U,	// A2_vcmphgt
    66U,	// A2_vcmphgtu
    66U,	// A2_vcmpweq
    66U,	// A2_vcmpwgt
    66U,	// A2_vcmpwgtu
    0U,	// A2_vconj
    0U,	// A2_vmaxb
    0U,	// A2_vmaxh
    0U,	// A2_vmaxub
    0U,	// A2_vmaxuh
    0U,	// A2_vmaxuw
    0U,	// A2_vmaxw
    0U,	// A2_vminb
    0U,	// A2_vminh
    0U,	// A2_vminub
    0U,	// A2_vminuh
    0U,	// A2_vminuw
    0U,	// A2_vminw
    0U,	// A2_vnavgh
    0U,	// A2_vnavghcr
    0U,	// A2_vnavghr
    0U,	// A2_vnavgw
    0U,	// A2_vnavgwcr
    0U,	// A2_vnavgwr
    0U,	// A2_vraddub
    0U,	// A2_vraddub_acc
    0U,	// A2_vrsadub
    0U,	// A2_vrsadub_acc
    0U,	// A2_vsubh
    0U,	// A2_vsubhs
    0U,	// A2_vsubub
    0U,	// A2_vsububs
    0U,	// A2_vsubuhs
    0U,	// A2_vsubw
    0U,	// A2_vsubws
    0U,	// A2_xor
    0U,	// A2_xorp
    0U,	// A2_zxth
    33984U,	// A4_addp_c
    66U,	// A4_andn
    66U,	// A4_andnp
    66U,	// A4_bitsplit
    66U,	// A4_bitspliti
    0U,	// A4_boundscheck_hi
    0U,	// A4_boundscheck_lo
    66U,	// A4_cmpbeq
    66U,	// A4_cmpbeqi
    66U,	// A4_cmpbgt
    66U,	// A4_cmpbgti
    66U,	// A4_cmpbgtu
    66U,	// A4_cmpbgtui
    66U,	// A4_cmpheq
    66U,	// A4_cmpheqi
    66U,	// A4_cmphgt
    66U,	// A4_cmphgti
    66U,	// A4_cmphgtu
    66U,	// A4_cmphgtui
    66U,	// A4_combineii
    66U,	// A4_combineir
    66U,	// A4_combineri
    66U,	// A4_cround_ri
    66U,	// A4_cround_rr
    0U,	// A4_ext
    0U,	// A4_modwrapu
    66U,	// A4_orn
    66U,	// A4_ornp
    0U,	// A4_paslhf
    0U,	// A4_paslhfnew
    0U,	// A4_paslht
    0U,	// A4_paslhtnew
    0U,	// A4_pasrhf
    0U,	// A4_pasrhfnew
    0U,	// A4_pasrht
    0U,	// A4_pasrhtnew
    0U,	// A4_psxtbf
    0U,	// A4_psxtbfnew
    0U,	// A4_psxtbt
    0U,	// A4_psxtbtnew
    0U,	// A4_psxthf
    0U,	// A4_psxthfnew
    0U,	// A4_psxtht
    0U,	// A4_psxthtnew
    0U,	// A4_pzxtbf
    0U,	// A4_pzxtbfnew
    0U,	// A4_pzxtbt
    0U,	// A4_pzxtbtnew
    0U,	// A4_pzxthf
    0U,	// A4_pzxthfnew
    0U,	// A4_pzxtht
    0U,	// A4_pzxthtnew
    66U,	// A4_rcmpeq
    66U,	// A4_rcmpeqi
    66U,	// A4_rcmpneq
    66U,	// A4_rcmpneqi
    66U,	// A4_round_ri
    1282U,	// A4_round_ri_sat
    66U,	// A4_round_rr
    1282U,	// A4_round_rr_sat
    33984U,	// A4_subp_c
    0U,	// A4_tfrcpp
    0U,	// A4_tfrpcp
    0U,	// A4_tlbmatch
    0U,	// A4_vcmpbeq_any
    66U,	// A4_vcmpbeqi
    66U,	// A4_vcmpbgt
    66U,	// A4_vcmpbgti
    66U,	// A4_vcmpbgtui
    66U,	// A4_vcmpheqi
    66U,	// A4_vcmphgti
    66U,	// A4_vcmphgtui
    66U,	// A4_vcmpweqi
    66U,	// A4_vcmpwgti
    66U,	// A4_vcmpwgtui
    0U,	// A4_vrmaxh
    0U,	// A4_vrmaxuh
    0U,	// A4_vrmaxuw
    0U,	// A4_vrmaxw
    0U,	// A4_vrminh
    0U,	// A4_vrminuh
    0U,	// A4_vrminuw
    0U,	// A4_vrminw
    17U,	// A5_ACS
    0U,	// A5_vaddhubs
    0U,	// A6_vcmpbeq_notany
    18U,	// A6_vminub_RdP
    0U,	// A7_clip
    66U,	// A7_croundd_ri
    66U,	// A7_croundd_rr
    0U,	// A7_vclip
    0U,	// C2_all8
    66U,	// C2_and
    0U,	// C2_andn
    0U,	// C2_any8
    66U,	// C2_bitsclr
    66U,	// C2_bitsclri
    0U,	// C2_bitsset
    0U,	// C2_ccombinewf
    0U,	// C2_ccombinewnewf
    0U,	// C2_ccombinewnewt
    0U,	// C2_ccombinewt
    0U,	// C2_cmoveif
    0U,	// C2_cmoveit
    0U,	// C2_cmovenewif
    0U,	// C2_cmovenewit
    66U,	// C2_cmpeq
    66U,	// C2_cmpeqi
    66U,	// C2_cmpeqp
    66U,	// C2_cmpgt
    66U,	// C2_cmpgti
    66U,	// C2_cmpgtp
    66U,	// C2_cmpgtu
    66U,	// C2_cmpgtui
    66U,	// C2_cmpgtup
    0U,	// C2_mask
    1346U,	// C2_mux
    38274U,	// C2_muxii
    38274U,	// C2_muxir
    1346U,	// C2_muxri
    0U,	// C2_not
    66U,	// C2_or
    0U,	// C2_orn
    0U,	// C2_tfrpr
    0U,	// C2_tfrrp
    0U,	// C2_vitpack
    0U,	// C2_vmux
    0U,	// C2_xor
    0U,	// C4_addipc
    42176U,	// C4_and_and
    19U,	// C4_and_andn
    42176U,	// C4_and_or
    19U,	// C4_and_orn
    66U,	// C4_cmplte
    66U,	// C4_cmpltei
    66U,	// C4_cmplteu
    66U,	// C4_cmplteui
    66U,	// C4_cmpneq
    66U,	// C4_cmpneqi
    0U,	// C4_fastcorner9
    0U,	// C4_fastcorner9_not
    66U,	// C4_nbitsclr
    66U,	// C4_nbitsclri
    0U,	// C4_nbitsset
    42176U,	// C4_or_and
    19U,	// C4_or_andn
    42176U,	// C4_or_or
    19U,	// C4_or_orn
    0U,	// CALLProfile
    0U,	// CONST32
    0U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    0U,	// EH_RETURN_JMPR
    0U,	// F2_conv_d2df
    0U,	// F2_conv_d2sf
    0U,	// F2_conv_df2d
    0U,	// F2_conv_df2d_chop
    0U,	// F2_conv_df2sf
    0U,	// F2_conv_df2ud
    0U,	// F2_conv_df2ud_chop
    0U,	// F2_conv_df2uw
    0U,	// F2_conv_df2uw_chop
    0U,	// F2_conv_df2w
    0U,	// F2_conv_df2w_chop
    0U,	// F2_conv_sf2d
    0U,	// F2_conv_sf2d_chop
    0U,	// F2_conv_sf2df
    0U,	// F2_conv_sf2ud
    0U,	// F2_conv_sf2ud_chop
    0U,	// F2_conv_sf2uw
    0U,	// F2_conv_sf2uw_chop
    0U,	// F2_conv_sf2w
    0U,	// F2_conv_sf2w_chop
    0U,	// F2_conv_ud2df
    0U,	// F2_conv_ud2sf
    0U,	// F2_conv_uw2df
    0U,	// F2_conv_uw2sf
    0U,	// F2_conv_w2df
    0U,	// F2_conv_w2sf
    0U,	// F2_dfadd
    0U,	// F2_dfclass
    0U,	// F2_dfcmpeq
    0U,	// F2_dfcmpge
    0U,	// F2_dfcmpgt
    0U,	// F2_dfcmpuo
    0U,	// F2_dfimm_n
    0U,	// F2_dfimm_p
    0U,	// F2_dfmax
    0U,	// F2_dfmin
    0U,	// F2_dfmpyfix
    0U,	// F2_dfmpyhh
    0U,	// F2_dfmpylh
    0U,	// F2_dfmpyll
    0U,	// F2_dfsub
    0U,	// F2_sfadd
    0U,	// F2_sfclass
    0U,	// F2_sfcmpeq
    0U,	// F2_sfcmpge
    0U,	// F2_sfcmpgt
    0U,	// F2_sfcmpuo
    0U,	// F2_sffixupd
    0U,	// F2_sffixupn
    0U,	// F2_sffixupr
    0U,	// F2_sffma
    0U,	// F2_sffma_lib
    1481U,	// F2_sffma_sc
    0U,	// F2_sffms
    0U,	// F2_sffms_lib
    0U,	// F2_sfimm_n
    0U,	// F2_sfimm_p
    20U,	// F2_sfinvsqrta
    0U,	// F2_sfmax
    0U,	// F2_sfmin
    0U,	// F2_sfmpy
    21U,	// F2_sfrecipa
    0U,	// F2_sfsub
    0U,	// G4_tfrgcpp
    0U,	// G4_tfrgcrr
    0U,	// G4_tfrgpcp
    0U,	// G4_tfrgrcr
    16U,	// HI
    0U,	// J2_call
    0U,	// J2_callf
    0U,	// J2_callr
    0U,	// J2_callrf
    0U,	// J2_callrt
    0U,	// J2_callt
    0U,	// J2_jump
    0U,	// J2_jumpf
    0U,	// J2_jumpfnew
    0U,	// J2_jumpfnewpt
    0U,	// J2_jumpfpt
    0U,	// J2_jumpr
    0U,	// J2_jumprf
    0U,	// J2_jumprfnew
    0U,	// J2_jumprfnewpt
    0U,	// J2_jumprfpt
    0U,	// J2_jumprgtez
    0U,	// J2_jumprgtezpt
    0U,	// J2_jumprltez
    0U,	// J2_jumprltezpt
    0U,	// J2_jumprnz
    0U,	// J2_jumprnzpt
    0U,	// J2_jumprt
    0U,	// J2_jumprtnew
    0U,	// J2_jumprtnewpt
    0U,	// J2_jumprtpt
    0U,	// J2_jumprz
    0U,	// J2_jumprzpt
    0U,	// J2_jumpt
    0U,	// J2_jumptnew
    0U,	// J2_jumptnewpt
    0U,	// J2_jumptpt
    1U,	// J2_loop0i
    1U,	// J2_loop0iext
    1U,	// J2_loop0r
    1U,	// J2_loop0rext
    1U,	// J2_loop1i
    1U,	// J2_loop1iext
    1U,	// J2_loop1r
    1U,	// J2_loop1rext
    0U,	// J2_pause
    1U,	// J2_ploop1si
    1U,	// J2_ploop1sr
    1U,	// J2_ploop2si
    1U,	// J2_ploop2sr
    1U,	// J2_ploop3si
    1U,	// J2_ploop3sr
    0U,	// J2_trap0
    1U,	// J2_trap1
    0U,	// J4_cmpeq_f_jumpnv_nt
    0U,	// J4_cmpeq_f_jumpnv_t
    22U,	// J4_cmpeq_fp0_jump_nt
    23U,	// J4_cmpeq_fp0_jump_t
    24U,	// J4_cmpeq_fp1_jump_nt
    25U,	// J4_cmpeq_fp1_jump_t
    0U,	// J4_cmpeq_t_jumpnv_nt
    0U,	// J4_cmpeq_t_jumpnv_t
    26U,	// J4_cmpeq_tp0_jump_nt
    27U,	// J4_cmpeq_tp0_jump_t
    28U,	// J4_cmpeq_tp1_jump_nt
    29U,	// J4_cmpeq_tp1_jump_t
    0U,	// J4_cmpeqi_f_jumpnv_nt
    0U,	// J4_cmpeqi_f_jumpnv_t
    22U,	// J4_cmpeqi_fp0_jump_nt
    23U,	// J4_cmpeqi_fp0_jump_t
    24U,	// J4_cmpeqi_fp1_jump_nt
    25U,	// J4_cmpeqi_fp1_jump_t
    0U,	// J4_cmpeqi_t_jumpnv_nt
    0U,	// J4_cmpeqi_t_jumpnv_t
    26U,	// J4_cmpeqi_tp0_jump_nt
    27U,	// J4_cmpeqi_tp0_jump_t
    28U,	// J4_cmpeqi_tp1_jump_nt
    29U,	// J4_cmpeqi_tp1_jump_t
    0U,	// J4_cmpeqn1_f_jumpnv_nt
    0U,	// J4_cmpeqn1_f_jumpnv_t
    22U,	// J4_cmpeqn1_fp0_jump_nt
    23U,	// J4_cmpeqn1_fp0_jump_t
    24U,	// J4_cmpeqn1_fp1_jump_nt
    25U,	// J4_cmpeqn1_fp1_jump_t
    0U,	// J4_cmpeqn1_t_jumpnv_nt
    0U,	// J4_cmpeqn1_t_jumpnv_t
    26U,	// J4_cmpeqn1_tp0_jump_nt
    27U,	// J4_cmpeqn1_tp0_jump_t
    28U,	// J4_cmpeqn1_tp1_jump_nt
    29U,	// J4_cmpeqn1_tp1_jump_t
    0U,	// J4_cmpgt_f_jumpnv_nt
    0U,	// J4_cmpgt_f_jumpnv_t
    22U,	// J4_cmpgt_fp0_jump_nt
    23U,	// J4_cmpgt_fp0_jump_t
    24U,	// J4_cmpgt_fp1_jump_nt
    25U,	// J4_cmpgt_fp1_jump_t
    0U,	// J4_cmpgt_t_jumpnv_nt
    0U,	// J4_cmpgt_t_jumpnv_t
    26U,	// J4_cmpgt_tp0_jump_nt
    27U,	// J4_cmpgt_tp0_jump_t
    28U,	// J4_cmpgt_tp1_jump_nt
    29U,	// J4_cmpgt_tp1_jump_t
    0U,	// J4_cmpgti_f_jumpnv_nt
    0U,	// J4_cmpgti_f_jumpnv_t
    22U,	// J4_cmpgti_fp0_jump_nt
    23U,	// J4_cmpgti_fp0_jump_t
    24U,	// J4_cmpgti_fp1_jump_nt
    25U,	// J4_cmpgti_fp1_jump_t
    0U,	// J4_cmpgti_t_jumpnv_nt
    0U,	// J4_cmpgti_t_jumpnv_t
    26U,	// J4_cmpgti_tp0_jump_nt
    27U,	// J4_cmpgti_tp0_jump_t
    28U,	// J4_cmpgti_tp1_jump_nt
    29U,	// J4_cmpgti_tp1_jump_t
    0U,	// J4_cmpgtn1_f_jumpnv_nt
    0U,	// J4_cmpgtn1_f_jumpnv_t
    22U,	// J4_cmpgtn1_fp0_jump_nt
    23U,	// J4_cmpgtn1_fp0_jump_t
    24U,	// J4_cmpgtn1_fp1_jump_nt
    25U,	// J4_cmpgtn1_fp1_jump_t
    0U,	// J4_cmpgtn1_t_jumpnv_nt
    0U,	// J4_cmpgtn1_t_jumpnv_t
    26U,	// J4_cmpgtn1_tp0_jump_nt
    27U,	// J4_cmpgtn1_tp0_jump_t
    28U,	// J4_cmpgtn1_tp1_jump_nt
    29U,	// J4_cmpgtn1_tp1_jump_t
    0U,	// J4_cmpgtu_f_jumpnv_nt
    0U,	// J4_cmpgtu_f_jumpnv_t
    22U,	// J4_cmpgtu_fp0_jump_nt
    23U,	// J4_cmpgtu_fp0_jump_t
    24U,	// J4_cmpgtu_fp1_jump_nt
    25U,	// J4_cmpgtu_fp1_jump_t
    0U,	// J4_cmpgtu_t_jumpnv_nt
    0U,	// J4_cmpgtu_t_jumpnv_t
    26U,	// J4_cmpgtu_tp0_jump_nt
    27U,	// J4_cmpgtu_tp0_jump_t
    28U,	// J4_cmpgtu_tp1_jump_nt
    29U,	// J4_cmpgtu_tp1_jump_t
    0U,	// J4_cmpgtui_f_jumpnv_nt
    0U,	// J4_cmpgtui_f_jumpnv_t
    22U,	// J4_cmpgtui_fp0_jump_nt
    23U,	// J4_cmpgtui_fp0_jump_t
    24U,	// J4_cmpgtui_fp1_jump_nt
    25U,	// J4_cmpgtui_fp1_jump_t
    0U,	// J4_cmpgtui_t_jumpnv_nt
    0U,	// J4_cmpgtui_t_jumpnv_t
    26U,	// J4_cmpgtui_tp0_jump_nt
    27U,	// J4_cmpgtui_tp0_jump_t
    28U,	// J4_cmpgtui_tp1_jump_nt
    29U,	// J4_cmpgtui_tp1_jump_t
    30U,	// J4_cmplt_f_jumpnv_nt
    31U,	// J4_cmplt_f_jumpnv_t
    30U,	// J4_cmplt_t_jumpnv_nt
    31U,	// J4_cmplt_t_jumpnv_t
    30U,	// J4_cmpltu_f_jumpnv_nt
    31U,	// J4_cmpltu_f_jumpnv_t
    30U,	// J4_cmpltu_t_jumpnv_nt
    31U,	// J4_cmpltu_t_jumpnv_t
    0U,	// J4_hintjumpr
    0U,	// J4_jumpseti
    0U,	// J4_jumpsetr
    0U,	// J4_tstbit0_f_jumpnv_nt
    0U,	// J4_tstbit0_f_jumpnv_t
    0U,	// J4_tstbit0_fp0_jump_nt
    0U,	// J4_tstbit0_fp0_jump_t
    0U,	// J4_tstbit0_fp1_jump_nt
    0U,	// J4_tstbit0_fp1_jump_t
    0U,	// J4_tstbit0_t_jumpnv_nt
    0U,	// J4_tstbit0_t_jumpnv_t
    0U,	// J4_tstbit0_tp0_jump_nt
    0U,	// J4_tstbit0_tp0_jump_t
    0U,	// J4_tstbit0_tp1_jump_nt
    0U,	// J4_tstbit0_tp1_jump_t
    0U,	// L2_deallocframe
    1248U,	// L2_loadalignb_io
    45729U,	// L2_loadalignb_pbr
    49826U,	// L2_loadalignb_pci
    35U,	// L2_loadalignb_pcr
    674U,	// L2_loadalignb_pi
    673U,	// L2_loadalignb_pr
    1248U,	// L2_loadalignh_io
    45729U,	// L2_loadalignh_pbr
    49826U,	// L2_loadalignh_pci
    35U,	// L2_loadalignh_pcr
    674U,	// L2_loadalignh_pi
    673U,	// L2_loadalignh_pr
    1U,	// L2_loadbsw2_io
    36U,	// L2_loadbsw2_pbr
    37U,	// L2_loadbsw2_pci
    0U,	// L2_loadbsw2_pcr
    1U,	// L2_loadbsw2_pi
    1U,	// L2_loadbsw2_pr
    1U,	// L2_loadbsw4_io
    36U,	// L2_loadbsw4_pbr
    37U,	// L2_loadbsw4_pci
    0U,	// L2_loadbsw4_pcr
    1U,	// L2_loadbsw4_pi
    1U,	// L2_loadbsw4_pr
    1U,	// L2_loadbzw2_io
    36U,	// L2_loadbzw2_pbr
    37U,	// L2_loadbzw2_pci
    0U,	// L2_loadbzw2_pcr
    1U,	// L2_loadbzw2_pi
    1U,	// L2_loadbzw2_pr
    1U,	// L2_loadbzw4_io
    36U,	// L2_loadbzw4_pbr
    37U,	// L2_loadbzw4_pci
    0U,	// L2_loadbzw4_pcr
    1U,	// L2_loadbzw4_pi
    1U,	// L2_loadbzw4_pr
    1U,	// L2_loadrb_io
    36U,	// L2_loadrb_pbr
    37U,	// L2_loadrb_pci
    0U,	// L2_loadrb_pcr
    1U,	// L2_loadrb_pi
    1U,	// L2_loadrb_pr
    0U,	// L2_loadrbgp
    1U,	// L2_loadrd_io
    36U,	// L2_loadrd_pbr
    37U,	// L2_loadrd_pci
    0U,	// L2_loadrd_pcr
    1U,	// L2_loadrd_pi
    1U,	// L2_loadrd_pr
    0U,	// L2_loadrdgp
    1U,	// L2_loadrh_io
    36U,	// L2_loadrh_pbr
    37U,	// L2_loadrh_pci
    0U,	// L2_loadrh_pcr
    1U,	// L2_loadrh_pi
    1U,	// L2_loadrh_pr
    0U,	// L2_loadrhgp
    1U,	// L2_loadri_io
    36U,	// L2_loadri_pbr
    37U,	// L2_loadri_pci
    0U,	// L2_loadri_pcr
    1U,	// L2_loadri_pi
    1U,	// L2_loadri_pr
    0U,	// L2_loadrigp
    1U,	// L2_loadrub_io
    36U,	// L2_loadrub_pbr
    37U,	// L2_loadrub_pci
    0U,	// L2_loadrub_pcr
    1U,	// L2_loadrub_pi
    1U,	// L2_loadrub_pr
    0U,	// L2_loadrubgp
    1U,	// L2_loadruh_io
    36U,	// L2_loadruh_pbr
    37U,	// L2_loadruh_pci
    0U,	// L2_loadruh_pcr
    1U,	// L2_loadruh_pi
    1U,	// L2_loadruh_pr
    0U,	// L2_loadruhgp
    0U,	// L2_loadw_aq
    0U,	// L2_loadw_locked
    1538U,	// L2_ploadrbf_io
    1638U,	// L2_ploadrbf_pi
    1538U,	// L2_ploadrbfnew_io
    1638U,	// L2_ploadrbfnew_pi
    1538U,	// L2_ploadrbt_io
    1638U,	// L2_ploadrbt_pi
    1538U,	// L2_ploadrbtnew_io
    1638U,	// L2_ploadrbtnew_pi
    1538U,	// L2_ploadrdf_io
    1638U,	// L2_ploadrdf_pi
    1538U,	// L2_ploadrdfnew_io
    1638U,	// L2_ploadrdfnew_pi
    1538U,	// L2_ploadrdt_io
    1638U,	// L2_ploadrdt_pi
    1538U,	// L2_ploadrdtnew_io
    1638U,	// L2_ploadrdtnew_pi
    1538U,	// L2_ploadrhf_io
    1638U,	// L2_ploadrhf_pi
    1538U,	// L2_ploadrhfnew_io
    1638U,	// L2_ploadrhfnew_pi
    1538U,	// L2_ploadrht_io
    1638U,	// L2_ploadrht_pi
    1538U,	// L2_ploadrhtnew_io
    1638U,	// L2_ploadrhtnew_pi
    1538U,	// L2_ploadrif_io
    1638U,	// L2_ploadrif_pi
    1538U,	// L2_ploadrifnew_io
    1638U,	// L2_ploadrifnew_pi
    1538U,	// L2_ploadrit_io
    1638U,	// L2_ploadrit_pi
    1538U,	// L2_ploadritnew_io
    1638U,	// L2_ploadritnew_pi
    1538U,	// L2_ploadrubf_io
    1638U,	// L2_ploadrubf_pi
    1538U,	// L2_ploadrubfnew_io
    1638U,	// L2_ploadrubfnew_pi
    1538U,	// L2_ploadrubt_io
    1638U,	// L2_ploadrubt_pi
    1538U,	// L2_ploadrubtnew_io
    1638U,	// L2_ploadrubtnew_pi
    1538U,	// L2_ploadruhf_io
    1638U,	// L2_ploadruhf_pi
    1538U,	// L2_ploadruhfnew_io
    1638U,	// L2_ploadruhfnew_pi
    1538U,	// L2_ploadruht_io
    1638U,	// L2_ploadruht_pi
    1538U,	// L2_ploadruhtnew_io
    1638U,	// L2_ploadruhtnew_pi
    0U,	// L4_add_memopb_io
    0U,	// L4_add_memoph_io
    0U,	// L4_add_memopw_io
    0U,	// L4_and_memopb_io
    0U,	// L4_and_memoph_io
    0U,	// L4_and_memopw_io
    0U,	// L4_iadd_memopb_io
    0U,	// L4_iadd_memoph_io
    0U,	// L4_iadd_memopw_io
    0U,	// L4_iand_memopb_io
    0U,	// L4_iand_memoph_io
    0U,	// L4_iand_memopw_io
    0U,	// L4_ior_memopb_io
    0U,	// L4_ior_memoph_io
    0U,	// L4_ior_memopw_io
    0U,	// L4_isub_memopb_io
    0U,	// L4_isub_memoph_io
    0U,	// L4_isub_memopw_io
    39U,	// L4_loadalignb_ap
    40U,	// L4_loadalignb_ur
    39U,	// L4_loadalignh_ap
    40U,	// L4_loadalignh_ur
    0U,	// L4_loadbsw2_ap
    0U,	// L4_loadbsw2_ur
    0U,	// L4_loadbsw4_ap
    0U,	// L4_loadbsw4_ur
    0U,	// L4_loadbzw2_ap
    0U,	// L4_loadbzw2_ur
    0U,	// L4_loadbzw4_ap
    0U,	// L4_loadbzw4_ur
    0U,	// L4_loadd_aq
    0U,	// L4_loadd_locked
    0U,	// L4_loadrb_ap
    0U,	// L4_loadrb_rr
    0U,	// L4_loadrb_ur
    0U,	// L4_loadrd_ap
    0U,	// L4_loadrd_rr
    0U,	// L4_loadrd_ur
    0U,	// L4_loadrh_ap
    0U,	// L4_loadrh_rr
    0U,	// L4_loadrh_ur
    0U,	// L4_loadri_ap
    0U,	// L4_loadri_rr
    0U,	// L4_loadri_ur
    0U,	// L4_loadrub_ap
    0U,	// L4_loadrub_rr
    0U,	// L4_loadrub_ur
    0U,	// L4_loadruh_ap
    0U,	// L4_loadruh_rr
    0U,	// L4_loadruh_ur
    0U,	// L4_or_memopb_io
    0U,	// L4_or_memoph_io
    0U,	// L4_or_memopw_io
    0U,	// L4_ploadrbf_abs
    1666U,	// L4_ploadrbf_rr
    0U,	// L4_ploadrbfnew_abs
    1666U,	// L4_ploadrbfnew_rr
    0U,	// L4_ploadrbt_abs
    1666U,	// L4_ploadrbt_rr
    0U,	// L4_ploadrbtnew_abs
    1666U,	// L4_ploadrbtnew_rr
    0U,	// L4_ploadrdf_abs
    1666U,	// L4_ploadrdf_rr
    0U,	// L4_ploadrdfnew_abs
    1666U,	// L4_ploadrdfnew_rr
    0U,	// L4_ploadrdt_abs
    1666U,	// L4_ploadrdt_rr
    0U,	// L4_ploadrdtnew_abs
    1666U,	// L4_ploadrdtnew_rr
    0U,	// L4_ploadrhf_abs
    1666U,	// L4_ploadrhf_rr
    0U,	// L4_ploadrhfnew_abs
    1666U,	// L4_ploadrhfnew_rr
    0U,	// L4_ploadrht_abs
    1666U,	// L4_ploadrht_rr
    0U,	// L4_ploadrhtnew_abs
    1666U,	// L4_ploadrhtnew_rr
    0U,	// L4_ploadrif_abs
    1666U,	// L4_ploadrif_rr
    0U,	// L4_ploadrifnew_abs
    1666U,	// L4_ploadrifnew_rr
    0U,	// L4_ploadrit_abs
    1666U,	// L4_ploadrit_rr
    0U,	// L4_ploadritnew_abs
    1666U,	// L4_ploadritnew_rr
    0U,	// L4_ploadrubf_abs
    1666U,	// L4_ploadrubf_rr
    0U,	// L4_ploadrubfnew_abs
    1666U,	// L4_ploadrubfnew_rr
    0U,	// L4_ploadrubt_abs
    1666U,	// L4_ploadrubt_rr
    0U,	// L4_ploadrubtnew_abs
    1666U,	// L4_ploadrubtnew_rr
    0U,	// L4_ploadruhf_abs
    1666U,	// L4_ploadruhf_rr
    0U,	// L4_ploadruhfnew_abs
    1666U,	// L4_ploadruhfnew_rr
    0U,	// L4_ploadruht_abs
    1666U,	// L4_ploadruht_rr
    0U,	// L4_ploadruhtnew_abs
    1666U,	// L4_ploadruhtnew_rr
    0U,	// L4_return
    13U,	// L4_return_f
    41U,	// L4_return_fnew_pnt
    42U,	// L4_return_fnew_pt
    13U,	// L4_return_t
    41U,	// L4_return_tnew_pnt
    42U,	// L4_return_tnew_pt
    0U,	// L4_sub_memopb_io
    0U,	// L4_sub_memoph_io
    0U,	// L4_sub_memopw_io
    0U,	// L6_memcpy
    16U,	// LO
    69U,	// M2_acci
    69U,	// M2_accii
    0U,	// M2_cmaci_s0
    0U,	// M2_cmacr_s0
    0U,	// M2_cmacs_s0
    0U,	// M2_cmacs_s1
    0U,	// M2_cmacsc_s0
    0U,	// M2_cmacsc_s1
    0U,	// M2_cmpyi_s0
    0U,	// M2_cmpyr_s0
    0U,	// M2_cmpyrs_s0
    0U,	// M2_cmpyrs_s1
    0U,	// M2_cmpyrsc_s0
    0U,	// M2_cmpyrsc_s1
    0U,	// M2_cmpys_s0
    0U,	// M2_cmpys_s1
    0U,	// M2_cmpysc_s0
    0U,	// M2_cmpysc_s1
    0U,	// M2_cnacs_s0
    0U,	// M2_cnacs_s1
    0U,	// M2_cnacsc_s0
    0U,	// M2_cnacsc_s1
    69U,	// M2_dpmpyss_acc_s0
    69U,	// M2_dpmpyss_nac_s0
    322U,	// M2_dpmpyss_rnd_s0
    66U,	// M2_dpmpyss_s0
    69U,	// M2_dpmpyuu_acc_s0
    69U,	// M2_dpmpyuu_nac_s0
    66U,	// M2_dpmpyuu_s0
    1730U,	// M2_hmmpyh_rs1
    1794U,	// M2_hmmpyh_s1
    1858U,	// M2_hmmpyl_rs1
    1922U,	// M2_hmmpyl_s1
    69U,	// M2_maci
    69U,	// M2_macsin
    69U,	// M2_macsip
    0U,	// M2_mmachs_rs0
    0U,	// M2_mmachs_rs1
    0U,	// M2_mmachs_s0
    0U,	// M2_mmachs_s1
    0U,	// M2_mmacls_rs0
    0U,	// M2_mmacls_rs1
    0U,	// M2_mmacls_s0
    0U,	// M2_mmacls_s1
    0U,	// M2_mmacuhs_rs0
    0U,	// M2_mmacuhs_rs1
    0U,	// M2_mmacuhs_s0
    0U,	// M2_mmacuhs_s1
    0U,	// M2_mmaculs_rs0
    0U,	// M2_mmaculs_rs1
    0U,	// M2_mmaculs_s0
    0U,	// M2_mmaculs_s1
    0U,	// M2_mmpyh_rs0
    0U,	// M2_mmpyh_rs1
    0U,	// M2_mmpyh_s0
    0U,	// M2_mmpyh_s1
    0U,	// M2_mmpyl_rs0
    0U,	// M2_mmpyl_rs1
    0U,	// M2_mmpyl_s0
    0U,	// M2_mmpyl_s1
    0U,	// M2_mmpyuh_rs0
    0U,	// M2_mmpyuh_rs1
    0U,	// M2_mmpyuh_s0
    0U,	// M2_mmpyuh_s1
    0U,	// M2_mmpyul_rs0
    0U,	// M2_mmpyul_rs1
    0U,	// M2_mmpyul_s0
    0U,	// M2_mmpyul_s1
    69U,	// M2_mnaci
    965U,	// M2_mpy_acc_hh_s0
    1989U,	// M2_mpy_acc_hh_s1
    1029U,	// M2_mpy_acc_hl_s0
    2053U,	// M2_mpy_acc_hl_s1
    965U,	// M2_mpy_acc_lh_s0
    1989U,	// M2_mpy_acc_lh_s1
    1029U,	// M2_mpy_acc_ll_s0
    2053U,	// M2_mpy_acc_ll_s1
    1093U,	// M2_mpy_acc_sat_hh_s0
    1797U,	// M2_mpy_acc_sat_hh_s1
    1157U,	// M2_mpy_acc_sat_hl_s0
    1925U,	// M2_mpy_acc_sat_hl_s1
    1093U,	// M2_mpy_acc_sat_lh_s0
    1797U,	// M2_mpy_acc_sat_lh_s1
    1157U,	// M2_mpy_acc_sat_ll_s0
    1925U,	// M2_mpy_acc_sat_ll_s1
    962U,	// M2_mpy_hh_s0
    1986U,	// M2_mpy_hh_s1
    1026U,	// M2_mpy_hl_s0
    2050U,	// M2_mpy_hl_s1
    962U,	// M2_mpy_lh_s0
    1986U,	// M2_mpy_lh_s1
    1026U,	// M2_mpy_ll_s0
    2050U,	// M2_mpy_ll_s1
    965U,	// M2_mpy_nac_hh_s0
    1989U,	// M2_mpy_nac_hh_s1
    1029U,	// M2_mpy_nac_hl_s0
    2053U,	// M2_mpy_nac_hl_s1
    965U,	// M2_mpy_nac_lh_s0
    1989U,	// M2_mpy_nac_lh_s1
    1029U,	// M2_mpy_nac_ll_s0
    2053U,	// M2_mpy_nac_ll_s1
    1093U,	// M2_mpy_nac_sat_hh_s0
    1797U,	// M2_mpy_nac_sat_hh_s1
    1157U,	// M2_mpy_nac_sat_hl_s0
    1925U,	// M2_mpy_nac_sat_hl_s1
    1093U,	// M2_mpy_nac_sat_lh_s0
    1797U,	// M2_mpy_nac_sat_lh_s1
    1157U,	// M2_mpy_nac_sat_ll_s0
    1925U,	// M2_mpy_nac_sat_ll_s1
    2114U,	// M2_mpy_rnd_hh_s0
    2178U,	// M2_mpy_rnd_hh_s1
    2242U,	// M2_mpy_rnd_hl_s0
    2306U,	// M2_mpy_rnd_hl_s1
    2114U,	// M2_mpy_rnd_lh_s0
    2178U,	// M2_mpy_rnd_lh_s1
    2242U,	// M2_mpy_rnd_ll_s0
    2306U,	// M2_mpy_rnd_ll_s1
    1090U,	// M2_mpy_sat_hh_s0
    1794U,	// M2_mpy_sat_hh_s1
    1154U,	// M2_mpy_sat_hl_s0
    1922U,	// M2_mpy_sat_hl_s1
    1090U,	// M2_mpy_sat_lh_s0
    1794U,	// M2_mpy_sat_lh_s1
    1154U,	// M2_mpy_sat_ll_s0
    1922U,	// M2_mpy_sat_ll_s1
    2370U,	// M2_mpy_sat_rnd_hh_s0
    1730U,	// M2_mpy_sat_rnd_hh_s1
    2434U,	// M2_mpy_sat_rnd_hl_s0
    1858U,	// M2_mpy_sat_rnd_hl_s1
    2370U,	// M2_mpy_sat_rnd_lh_s0
    1730U,	// M2_mpy_sat_rnd_lh_s1
    2434U,	// M2_mpy_sat_rnd_ll_s0
    1858U,	// M2_mpy_sat_rnd_ll_s1
    66U,	// M2_mpy_up
    2498U,	// M2_mpy_up_s1
    2562U,	// M2_mpy_up_s1_sat
    965U,	// M2_mpyd_acc_hh_s0
    1989U,	// M2_mpyd_acc_hh_s1
    1029U,	// M2_mpyd_acc_hl_s0
    2053U,	// M2_mpyd_acc_hl_s1
    965U,	// M2_mpyd_acc_lh_s0
    1989U,	// M2_mpyd_acc_lh_s1
    1029U,	// M2_mpyd_acc_ll_s0
    2053U,	// M2_mpyd_acc_ll_s1
    962U,	// M2_mpyd_hh_s0
    1986U,	// M2_mpyd_hh_s1
    1026U,	// M2_mpyd_hl_s0
    2050U,	// M2_mpyd_hl_s1
    962U,	// M2_mpyd_lh_s0
    1986U,	// M2_mpyd_lh_s1
    1026U,	// M2_mpyd_ll_s0
    2050U,	// M2_mpyd_ll_s1
    965U,	// M2_mpyd_nac_hh_s0
    1989U,	// M2_mpyd_nac_hh_s1
    1029U,	// M2_mpyd_nac_hl_s0
    2053U,	// M2_mpyd_nac_hl_s1
    965U,	// M2_mpyd_nac_lh_s0
    1989U,	// M2_mpyd_nac_lh_s1
    1029U,	// M2_mpyd_nac_ll_s0
    2053U,	// M2_mpyd_nac_ll_s1
    2114U,	// M2_mpyd_rnd_hh_s0
    2178U,	// M2_mpyd_rnd_hh_s1
    2242U,	// M2_mpyd_rnd_hl_s0
    2306U,	// M2_mpyd_rnd_hl_s1
    2114U,	// M2_mpyd_rnd_lh_s0
    2178U,	// M2_mpyd_rnd_lh_s1
    2242U,	// M2_mpyd_rnd_ll_s0
    2306U,	// M2_mpyd_rnd_ll_s1
    66U,	// M2_mpyi
    0U,	// M2_mpysin
    0U,	// M2_mpysip
    0U,	// M2_mpysu_up
    965U,	// M2_mpyu_acc_hh_s0
    1989U,	// M2_mpyu_acc_hh_s1
    1029U,	// M2_mpyu_acc_hl_s0
    2053U,	// M2_mpyu_acc_hl_s1
    965U,	// M2_mpyu_acc_lh_s0
    1989U,	// M2_mpyu_acc_lh_s1
    1029U,	// M2_mpyu_acc_ll_s0
    2053U,	// M2_mpyu_acc_ll_s1
    962U,	// M2_mpyu_hh_s0
    1986U,	// M2_mpyu_hh_s1
    1026U,	// M2_mpyu_hl_s0
    2050U,	// M2_mpyu_hl_s1
    962U,	// M2_mpyu_lh_s0
    1986U,	// M2_mpyu_lh_s1
    1026U,	// M2_mpyu_ll_s0
    2050U,	// M2_mpyu_ll_s1
    965U,	// M2_mpyu_nac_hh_s0
    1989U,	// M2_mpyu_nac_hh_s1
    1029U,	// M2_mpyu_nac_hl_s0
    2053U,	// M2_mpyu_nac_hl_s1
    965U,	// M2_mpyu_nac_lh_s0
    1989U,	// M2_mpyu_nac_lh_s1
    1029U,	// M2_mpyu_nac_ll_s0
    2053U,	// M2_mpyu_nac_ll_s1
    66U,	// M2_mpyu_up
    965U,	// M2_mpyud_acc_hh_s0
    1989U,	// M2_mpyud_acc_hh_s1
    1029U,	// M2_mpyud_acc_hl_s0
    2053U,	// M2_mpyud_acc_hl_s1
    965U,	// M2_mpyud_acc_lh_s0
    1989U,	// M2_mpyud_acc_lh_s1
    1029U,	// M2_mpyud_acc_ll_s0
    2053U,	// M2_mpyud_acc_ll_s1
    962U,	// M2_mpyud_hh_s0
    1986U,	// M2_mpyud_hh_s1
    1026U,	// M2_mpyud_hl_s0
    2050U,	// M2_mpyud_hl_s1
    962U,	// M2_mpyud_lh_s0
    1986U,	// M2_mpyud_lh_s1
    1026U,	// M2_mpyud_ll_s0
    2050U,	// M2_mpyud_ll_s1
    965U,	// M2_mpyud_nac_hh_s0
    1989U,	// M2_mpyud_nac_hh_s1
    1029U,	// M2_mpyud_nac_hl_s0
    2053U,	// M2_mpyud_nac_hl_s1
    965U,	// M2_mpyud_nac_lh_s0
    1989U,	// M2_mpyud_nac_lh_s1
    1029U,	// M2_mpyud_nac_ll_s0
    2053U,	// M2_mpyud_nac_ll_s1
    69U,	// M2_nacci
    69U,	// M2_naccii
    0U,	// M2_subacc
    0U,	// M2_vabsdiffh
    0U,	// M2_vabsdiffw
    0U,	// M2_vcmac_s0_sat_i
    0U,	// M2_vcmac_s0_sat_r
    0U,	// M2_vcmpy_s0_sat_i
    0U,	// M2_vcmpy_s0_sat_r
    0U,	// M2_vcmpy_s1_sat_i
    0U,	// M2_vcmpy_s1_sat_r
    0U,	// M2_vdmacs_s0
    0U,	// M2_vdmacs_s1
    0U,	// M2_vdmpyrs_s0
    0U,	// M2_vdmpyrs_s1
    0U,	// M2_vdmpys_s0
    0U,	// M2_vdmpys_s1
    0U,	// M2_vmac2
    0U,	// M2_vmac2es
    0U,	// M2_vmac2es_s0
    0U,	// M2_vmac2es_s1
    0U,	// M2_vmac2s_s0
    0U,	// M2_vmac2s_s1
    0U,	// M2_vmac2su_s0
    0U,	// M2_vmac2su_s1
    0U,	// M2_vmpy2es_s0
    0U,	// M2_vmpy2es_s1
    0U,	// M2_vmpy2s_s0
    0U,	// M2_vmpy2s_s0pack
    0U,	// M2_vmpy2s_s1
    0U,	// M2_vmpy2s_s1pack
    0U,	// M2_vmpy2su_s0
    0U,	// M2_vmpy2su_s1
    0U,	// M2_vraddh
    0U,	// M2_vradduh
    0U,	// M2_vrcmaci_s0
    0U,	// M2_vrcmaci_s0c
    0U,	// M2_vrcmacr_s0
    0U,	// M2_vrcmacr_s0c
    0U,	// M2_vrcmpyi_s0
    0U,	// M2_vrcmpyi_s0c
    0U,	// M2_vrcmpyr_s0
    0U,	// M2_vrcmpyr_s0c
    0U,	// M2_vrcmpys_acc_s1_h
    0U,	// M2_vrcmpys_acc_s1_l
    0U,	// M2_vrcmpys_s1_h
    0U,	// M2_vrcmpys_s1_l
    0U,	// M2_vrcmpys_s1rp_h
    0U,	// M2_vrcmpys_s1rp_l
    0U,	// M2_vrmac_s0
    0U,	// M2_vrmpy_s0
    0U,	// M2_xor_xacc
    69U,	// M4_and_and
    69U,	// M4_and_andn
    0U,	// M4_and_or
    0U,	// M4_and_xor
    0U,	// M4_cmpyi_wh
    0U,	// M4_cmpyi_whc
    0U,	// M4_cmpyr_wh
    0U,	// M4_cmpyr_whc
    2565U,	// M4_mac_up_s1_sat
    42188U,	// M4_mpyri_addi
    38315U,	// M4_mpyri_addr
    44U,	// M4_mpyri_addr_u2
    42176U,	// M4_mpyrr_addi
    42347U,	// M4_mpyrr_addr
    2565U,	// M4_nac_up_s1_sat
    69U,	// M4_or_and
    69U,	// M4_or_andn
    69U,	// M4_or_or
    0U,	// M4_or_xor
    0U,	// M4_pmpyw
    0U,	// M4_pmpyw_acc
    0U,	// M4_vpmpyh
    0U,	// M4_vpmpyh_acc
    0U,	// M4_vrmpyeh_acc_s0
    0U,	// M4_vrmpyeh_acc_s1
    0U,	// M4_vrmpyeh_s0
    0U,	// M4_vrmpyeh_s1
    0U,	// M4_vrmpyoh_acc_s0
    0U,	// M4_vrmpyoh_acc_s1
    0U,	// M4_vrmpyoh_s0
    0U,	// M4_vrmpyoh_s1
    69U,	// M4_xor_and
    69U,	// M4_xor_andn
    0U,	// M4_xor_or
    0U,	// M4_xor_xacc
    0U,	// M5_vdmacbsu
    0U,	// M5_vdmpybsu
    0U,	// M5_vmacbsu
    0U,	// M5_vmacbuu
    0U,	// M5_vmpybsu
    0U,	// M5_vmpybuu
    0U,	// M5_vrmacbsu
    0U,	// M5_vrmacbuu
    0U,	// M5_vrmpybsu
    0U,	// M5_vrmpybuu
    0U,	// M6_vabsdiffb
    0U,	// M6_vabsdiffub
    0U,	// M7_dcmpyiw
    0U,	// M7_dcmpyiw_acc
    0U,	// M7_dcmpyiwc
    0U,	// M7_dcmpyiwc_acc
    0U,	// M7_dcmpyrw
    0U,	// M7_dcmpyrw_acc
    0U,	// M7_dcmpyrwc
    0U,	// M7_dcmpyrwc_acc
    0U,	// M7_wcmpyiw
    0U,	// M7_wcmpyiw_rnd
    0U,	// M7_wcmpyiwc
    0U,	// M7_wcmpyiwc_rnd
    0U,	// M7_wcmpyrw
    0U,	// M7_wcmpyrw_rnd
    0U,	// M7_wcmpyrwc
    0U,	// M7_wcmpyrwc_rnd
    0U,	// PS_call_stk
    0U,	// PS_callr_nr
    0U,	// PS_jmpret
    0U,	// PS_jmpretf
    0U,	// PS_jmpretfnew
    0U,	// PS_jmpretfnewpt
    0U,	// PS_jmprett
    0U,	// PS_jmprettnew
    0U,	// PS_jmprettnewpt
    0U,	// PS_loadrbabs
    0U,	// PS_loadrdabs
    0U,	// PS_loadrhabs
    0U,	// PS_loadriabs
    0U,	// PS_loadrubabs
    0U,	// PS_loadruhabs
    0U,	// PS_storerbabs
    0U,	// PS_storerbnewabs
    0U,	// PS_storerdabs
    0U,	// PS_storerfabs
    0U,	// PS_storerhabs
    0U,	// PS_storerhnewabs
    0U,	// PS_storeriabs
    0U,	// PS_storerinewabs
    0U,	// PS_trap1
    0U,	// R6_release_at_vi
    0U,	// R6_release_st_vi
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    0U,	// S2_addasl_rrri
    13U,	// S2_allocframe
    66U,	// S2_asl_i_p
    69U,	// S2_asl_i_p_acc
    69U,	// S2_asl_i_p_and
    69U,	// S2_asl_i_p_nac
    69U,	// S2_asl_i_p_or
    69U,	// S2_asl_i_p_xacc
    66U,	// S2_asl_i_r
    69U,	// S2_asl_i_r_acc
    69U,	// S2_asl_i_r_and
    69U,	// S2_asl_i_r_nac
    69U,	// S2_asl_i_r_or
    1282U,	// S2_asl_i_r_sat
    69U,	// S2_asl_i_r_xacc
    66U,	// S2_asl_i_vh
    66U,	// S2_asl_i_vw
    66U,	// S2_asl_r_p
    69U,	// S2_asl_r_p_acc
    69U,	// S2_asl_r_p_and
    69U,	// S2_asl_r_p_nac
    69U,	// S2_asl_r_p_or
    69U,	// S2_asl_r_p_xor
    66U,	// S2_asl_r_r
    69U,	// S2_asl_r_r_acc
    69U,	// S2_asl_r_r_and
    69U,	// S2_asl_r_r_nac
    69U,	// S2_asl_r_r_or
    1282U,	// S2_asl_r_r_sat
    66U,	// S2_asl_r_vh
    66U,	// S2_asl_r_vw
    66U,	// S2_asr_i_p
    69U,	// S2_asr_i_p_acc
    69U,	// S2_asr_i_p_and
    69U,	// S2_asr_i_p_nac
    69U,	// S2_asr_i_p_or
    322U,	// S2_asr_i_p_rnd
    66U,	// S2_asr_i_r
    69U,	// S2_asr_i_r_acc
    69U,	// S2_asr_i_r_and
    69U,	// S2_asr_i_r_nac
    69U,	// S2_asr_i_r_or
    322U,	// S2_asr_i_r_rnd
    66U,	// S2_asr_i_svw_trun
    66U,	// S2_asr_i_vh
    66U,	// S2_asr_i_vw
    66U,	// S2_asr_r_p
    69U,	// S2_asr_r_p_acc
    69U,	// S2_asr_r_p_and
    69U,	// S2_asr_r_p_nac
    69U,	// S2_asr_r_p_or
    0U,	// S2_asr_r_p_xor
    66U,	// S2_asr_r_r
    69U,	// S2_asr_r_r_acc
    69U,	// S2_asr_r_r_and
    69U,	// S2_asr_r_r_nac
    69U,	// S2_asr_r_r_or
    1282U,	// S2_asr_r_r_sat
    66U,	// S2_asr_r_svw_trun
    66U,	// S2_asr_r_vh
    66U,	// S2_asr_r_vw
    0U,	// S2_brev
    0U,	// S2_brevp
    0U,	// S2_cabacdecbin
    0U,	// S2_cl0
    0U,	// S2_cl0p
    0U,	// S2_cl1
    0U,	// S2_cl1p
    0U,	// S2_clb
    0U,	// S2_clbnorm
    0U,	// S2_clbp
    66U,	// S2_clrbit_i
    66U,	// S2_clrbit_r
    0U,	// S2_ct0
    0U,	// S2_ct0p
    0U,	// S2_ct1
    0U,	// S2_ct1p
    0U,	// S2_deinterleave
    38274U,	// S2_extractu
    66U,	// S2_extractu_rp
    38274U,	// S2_extractup
    66U,	// S2_extractup_rp
    54661U,	// S2_insert
    69U,	// S2_insert_rp
    54661U,	// S2_insertp
    69U,	// S2_insertp_rp
    0U,	// S2_interleave
    0U,	// S2_lfsp
    0U,	// S2_lsl_r_p
    0U,	// S2_lsl_r_p_acc
    0U,	// S2_lsl_r_p_and
    0U,	// S2_lsl_r_p_nac
    0U,	// S2_lsl_r_p_or
    0U,	// S2_lsl_r_p_xor
    0U,	// S2_lsl_r_r
    0U,	// S2_lsl_r_r_acc
    0U,	// S2_lsl_r_r_and
    0U,	// S2_lsl_r_r_nac
    0U,	// S2_lsl_r_r_or
    0U,	// S2_lsl_r_vh
    0U,	// S2_lsl_r_vw
    66U,	// S2_lsr_i_p
    69U,	// S2_lsr_i_p_acc
    69U,	// S2_lsr_i_p_and
    69U,	// S2_lsr_i_p_nac
    69U,	// S2_lsr_i_p_or
    69U,	// S2_lsr_i_p_xacc
    66U,	// S2_lsr_i_r
    69U,	// S2_lsr_i_r_acc
    69U,	// S2_lsr_i_r_and
    69U,	// S2_lsr_i_r_nac
    69U,	// S2_lsr_i_r_or
    69U,	// S2_lsr_i_r_xacc
    66U,	// S2_lsr_i_vh
    66U,	// S2_lsr_i_vw
    66U,	// S2_lsr_r_p
    69U,	// S2_lsr_r_p_acc
    69U,	// S2_lsr_r_p_and
    69U,	// S2_lsr_r_p_nac
    69U,	// S2_lsr_r_p_or
    69U,	// S2_lsr_r_p_xor
    66U,	// S2_lsr_r_r
    69U,	// S2_lsr_r_r_acc
    69U,	// S2_lsr_r_r_and
    69U,	// S2_lsr_r_r_nac
    69U,	// S2_lsr_r_r_or
    66U,	// S2_lsr_r_vh
    66U,	// S2_lsr_r_vw
    0U,	// S2_mask
    0U,	// S2_packhl
    0U,	// S2_parityp
    57376U,	// S2_pstorerbf_io
    58594U,	// S2_pstorerbf_pi
    58594U,	// S2_pstorerbfnew_pi
    57376U,	// S2_pstorerbnewf_io
    58594U,	// S2_pstorerbnewf_pi
    58594U,	// S2_pstorerbnewfnew_pi
    57376U,	// S2_pstorerbnewt_io
    58594U,	// S2_pstorerbnewt_pi
    58594U,	// S2_pstorerbnewtnew_pi
    57376U,	// S2_pstorerbt_io
    58594U,	// S2_pstorerbt_pi
    58594U,	// S2_pstorerbtnew_pi
    57376U,	// S2_pstorerdf_io
    58594U,	// S2_pstorerdf_pi
    58594U,	// S2_pstorerdfnew_pi
    57376U,	// S2_pstorerdt_io
    58594U,	// S2_pstorerdt_pi
    58594U,	// S2_pstorerdtnew_pi
    57376U,	// S2_pstorerff_io
    58594U,	// S2_pstorerff_pi
    58594U,	// S2_pstorerffnew_pi
    57376U,	// S2_pstorerft_io
    58594U,	// S2_pstorerft_pi
    58594U,	// S2_pstorerftnew_pi
    57376U,	// S2_pstorerhf_io
    58594U,	// S2_pstorerhf_pi
    58594U,	// S2_pstorerhfnew_pi
    57376U,	// S2_pstorerhnewf_io
    58594U,	// S2_pstorerhnewf_pi
    58594U,	// S2_pstorerhnewfnew_pi
    57376U,	// S2_pstorerhnewt_io
    58594U,	// S2_pstorerhnewt_pi
    58594U,	// S2_pstorerhnewtnew_pi
    57376U,	// S2_pstorerht_io
    58594U,	// S2_pstorerht_pi
    58594U,	// S2_pstorerhtnew_pi
    57376U,	// S2_pstorerif_io
    58594U,	// S2_pstorerif_pi
    58594U,	// S2_pstorerifnew_pi
    57376U,	// S2_pstorerinewf_io
    58594U,	// S2_pstorerinewf_pi
    58594U,	// S2_pstorerinewfnew_pi
    57376U,	// S2_pstorerinewt_io
    58594U,	// S2_pstorerinewt_pi
    58594U,	// S2_pstorerinewtnew_pi
    57376U,	// S2_pstorerit_io
    58594U,	// S2_pstorerit_pi
    58594U,	// S2_pstoreritnew_pi
    66U,	// S2_setbit_i
    66U,	// S2_setbit_r
    0U,	// S2_shuffeb
    0U,	// S2_shuffeh
    0U,	// S2_shuffob
    0U,	// S2_shuffoh
    130U,	// S2_storerb_io
    16U,	// S2_storerb_pbr
    16U,	// S2_storerb_pci
    0U,	// S2_storerb_pcr
    133U,	// S2_storerb_pi
    133U,	// S2_storerb_pr
    0U,	// S2_storerbgp
    194U,	// S2_storerbnew_io
    45U,	// S2_storerbnew_pbr
    45U,	// S2_storerbnew_pci
    0U,	// S2_storerbnew_pcr
    197U,	// S2_storerbnew_pi
    197U,	// S2_storerbnew_pr
    0U,	// S2_storerbnewgp
    130U,	// S2_storerd_io
    16U,	// S2_storerd_pbr
    16U,	// S2_storerd_pci
    0U,	// S2_storerd_pcr
    133U,	// S2_storerd_pi
    133U,	// S2_storerd_pr
    0U,	// S2_storerdgp
    258U,	// S2_storerf_io
    10U,	// S2_storerf_pbr
    10U,	// S2_storerf_pci
    0U,	// S2_storerf_pcr
    261U,	// S2_storerf_pi
    261U,	// S2_storerf_pr
    0U,	// S2_storerfgp
    130U,	// S2_storerh_io
    16U,	// S2_storerh_pbr
    16U,	// S2_storerh_pci
    0U,	// S2_storerh_pcr
    133U,	// S2_storerh_pi
    133U,	// S2_storerh_pr
    0U,	// S2_storerhgp
    194U,	// S2_storerhnew_io
    45U,	// S2_storerhnew_pbr
    45U,	// S2_storerhnew_pci
    0U,	// S2_storerhnew_pcr
    197U,	// S2_storerhnew_pi
    197U,	// S2_storerhnew_pr
    0U,	// S2_storerhnewgp
    130U,	// S2_storeri_io
    16U,	// S2_storeri_pbr
    16U,	// S2_storeri_pci
    0U,	// S2_storeri_pcr
    133U,	// S2_storeri_pi
    133U,	// S2_storeri_pr
    0U,	// S2_storerigp
    194U,	// S2_storerinew_io
    45U,	// S2_storerinew_pbr
    45U,	// S2_storerinew_pci
    0U,	// S2_storerinew_pcr
    197U,	// S2_storerinew_pi
    197U,	// S2_storerinew_pr
    0U,	// S2_storerinewgp
    131U,	// S2_storew_locked
    0U,	// S2_storew_rl_at_vi
    0U,	// S2_storew_rl_st_vi
    0U,	// S2_svsathb
    0U,	// S2_svsathub
    0U,	// S2_tableidxb
    0U,	// S2_tableidxd
    0U,	// S2_tableidxh
    0U,	// S2_tableidxw
    66U,	// S2_togglebit_i
    66U,	// S2_togglebit_r
    66U,	// S2_tstbit_i
    66U,	// S2_tstbit_r
    69U,	// S2_valignib
    69U,	// S2_valignrb
    0U,	// S2_vcnegh
    0U,	// S2_vcrotate
    0U,	// S2_vrcnegh
    0U,	// S2_vrndpackwh
    0U,	// S2_vrndpackwhs
    0U,	// S2_vsathb
    0U,	// S2_vsathb_nopack
    0U,	// S2_vsathub
    0U,	// S2_vsathub_nopack
    0U,	// S2_vsatwh
    0U,	// S2_vsatwh_nopack
    0U,	// S2_vsatwuh
    0U,	// S2_vsatwuh_nopack
    0U,	// S2_vsplatrb
    0U,	// S2_vsplatrh
    69U,	// S2_vspliceib
    69U,	// S2_vsplicerb
    0U,	// S2_vsxtbh
    0U,	// S2_vsxthw
    0U,	// S2_vtrunehb
    0U,	// S2_vtrunewh
    0U,	// S2_vtrunohb
    0U,	// S2_vtrunowh
    0U,	// S2_vzxtbh
    0U,	// S2_vzxthw
    46U,	// S4_addaddi
    0U,	// S4_addi_asl_ri
    0U,	// S4_addi_lsr_ri
    0U,	// S4_andi_asl_ri
    0U,	// S4_andi_lsr_ri
    0U,	// S4_clbaddi
    0U,	// S4_clbpaddi
    0U,	// S4_clbpnorm
    38274U,	// S4_extract
    66U,	// S4_extract_rp
    38274U,	// S4_extractp
    66U,	// S4_extractp_rp
    0U,	// S4_lsli
    66U,	// S4_ntstbit_i
    66U,	// S4_ntstbit_r
    69U,	// S4_or_andi
    42188U,	// S4_or_andix
    69U,	// S4_or_ori
    0U,	// S4_ori_asl_ri
    0U,	// S4_ori_lsr_ri
    0U,	// S4_parity
    0U,	// S4_pstorerbf_abs
    175U,	// S4_pstorerbf_rr
    0U,	// S4_pstorerbfnew_abs
    57376U,	// S4_pstorerbfnew_io
    175U,	// S4_pstorerbfnew_rr
    0U,	// S4_pstorerbnewf_abs
    239U,	// S4_pstorerbnewf_rr
    0U,	// S4_pstorerbnewfnew_abs
    57376U,	// S4_pstorerbnewfnew_io
    239U,	// S4_pstorerbnewfnew_rr
    0U,	// S4_pstorerbnewt_abs
    239U,	// S4_pstorerbnewt_rr
    0U,	// S4_pstorerbnewtnew_abs
    57376U,	// S4_pstorerbnewtnew_io
    239U,	// S4_pstorerbnewtnew_rr
    0U,	// S4_pstorerbt_abs
    175U,	// S4_pstorerbt_rr
    0U,	// S4_pstorerbtnew_abs
    57376U,	// S4_pstorerbtnew_io
    175U,	// S4_pstorerbtnew_rr
    0U,	// S4_pstorerdf_abs
    175U,	// S4_pstorerdf_rr
    0U,	// S4_pstorerdfnew_abs
    57376U,	// S4_pstorerdfnew_io
    175U,	// S4_pstorerdfnew_rr
    0U,	// S4_pstorerdt_abs
    175U,	// S4_pstorerdt_rr
    0U,	// S4_pstorerdtnew_abs
    57376U,	// S4_pstorerdtnew_io
    175U,	// S4_pstorerdtnew_rr
    0U,	// S4_pstorerff_abs
    303U,	// S4_pstorerff_rr
    0U,	// S4_pstorerffnew_abs
    57376U,	// S4_pstorerffnew_io
    303U,	// S4_pstorerffnew_rr
    0U,	// S4_pstorerft_abs
    303U,	// S4_pstorerft_rr
    0U,	// S4_pstorerftnew_abs
    57376U,	// S4_pstorerftnew_io
    303U,	// S4_pstorerftnew_rr
    0U,	// S4_pstorerhf_abs
    175U,	// S4_pstorerhf_rr
    0U,	// S4_pstorerhfnew_abs
    57376U,	// S4_pstorerhfnew_io
    175U,	// S4_pstorerhfnew_rr
    0U,	// S4_pstorerhnewf_abs
    239U,	// S4_pstorerhnewf_rr
    0U,	// S4_pstorerhnewfnew_abs
    57376U,	// S4_pstorerhnewfnew_io
    239U,	// S4_pstorerhnewfnew_rr
    0U,	// S4_pstorerhnewt_abs
    239U,	// S4_pstorerhnewt_rr
    0U,	// S4_pstorerhnewtnew_abs
    57376U,	// S4_pstorerhnewtnew_io
    239U,	// S4_pstorerhnewtnew_rr
    0U,	// S4_pstorerht_abs
    175U,	// S4_pstorerht_rr
    0U,	// S4_pstorerhtnew_abs
    57376U,	// S4_pstorerhtnew_io
    175U,	// S4_pstorerhtnew_rr
    0U,	// S4_pstorerif_abs
    175U,	// S4_pstorerif_rr
    0U,	// S4_pstorerifnew_abs
    57376U,	// S4_pstorerifnew_io
    175U,	// S4_pstorerifnew_rr
    0U,	// S4_pstorerinewf_abs
    239U,	// S4_pstorerinewf_rr
    0U,	// S4_pstorerinewfnew_abs
    57376U,	// S4_pstorerinewfnew_io
    239U,	// S4_pstorerinewfnew_rr
    0U,	// S4_pstorerinewt_abs
    239U,	// S4_pstorerinewt_rr
    0U,	// S4_pstorerinewtnew_abs
    57376U,	// S4_pstorerinewtnew_io
    239U,	// S4_pstorerinewtnew_rr
    0U,	// S4_pstorerit_abs
    175U,	// S4_pstorerit_rr
    0U,	// S4_pstoreritnew_abs
    57376U,	// S4_pstoreritnew_io
    175U,	// S4_pstoreritnew_rr
    131U,	// S4_stored_locked
    0U,	// S4_stored_rl_at_vi
    0U,	// S4_stored_rl_st_vi
    0U,	// S4_storeirb_io
    61472U,	// S4_storeirbf_io
    61472U,	// S4_storeirbfnew_io
    61472U,	// S4_storeirbt_io
    61472U,	// S4_storeirbtnew_io
    0U,	// S4_storeirh_io
    61472U,	// S4_storeirhf_io
    61472U,	// S4_storeirhfnew_io
    61472U,	// S4_storeirht_io
    61472U,	// S4_storeirhtnew_io
    0U,	// S4_storeiri_io
    61472U,	// S4_storeirif_io
    61472U,	// S4_storeirifnew_io
    61472U,	// S4_storeirit_io
    61472U,	// S4_storeiritnew_io
    0U,	// S4_storerb_ap
    0U,	// S4_storerb_rr
    0U,	// S4_storerb_ur
    0U,	// S4_storerbnew_ap
    0U,	// S4_storerbnew_rr
    0U,	// S4_storerbnew_ur
    0U,	// S4_storerd_ap
    0U,	// S4_storerd_rr
    0U,	// S4_storerd_ur
    0U,	// S4_storerf_ap
    0U,	// S4_storerf_rr
    0U,	// S4_storerf_ur
    0U,	// S4_storerh_ap
    0U,	// S4_storerh_rr
    0U,	// S4_storerh_ur
    0U,	// S4_storerhnew_ap
    0U,	// S4_storerhnew_rr
    0U,	// S4_storerhnew_ur
    0U,	// S4_storeri_ap
    0U,	// S4_storeri_rr
    0U,	// S4_storeri_ur
    0U,	// S4_storerinew_ap
    0U,	// S4_storerinew_rr
    0U,	// S4_storerinew_ur
    48U,	// S4_subaddi
    0U,	// S4_subi_asl_ri
    0U,	// S4_subi_lsr_ri
    0U,	// S4_vrcrotate
    0U,	// S4_vrcrotate_acc
    0U,	// S4_vxaddsubh
    0U,	// S4_vxaddsubhr
    0U,	// S4_vxaddsubw
    0U,	// S4_vxsubaddh
    0U,	// S4_vxsubaddhr
    0U,	// S4_vxsubaddw
    0U,	// S5_asrhub_rnd_sat
    0U,	// S5_asrhub_sat
    0U,	// S5_popcountp
    2626U,	// S5_vasrhrnd
    0U,	// S6_rol_i_p
    0U,	// S6_rol_i_p_acc
    0U,	// S6_rol_i_p_and
    0U,	// S6_rol_i_p_nac
    0U,	// S6_rol_i_p_or
    0U,	// S6_rol_i_p_xacc
    0U,	// S6_rol_i_r
    0U,	// S6_rol_i_r_acc
    0U,	// S6_rol_i_r_and
    0U,	// S6_rol_i_r_nac
    0U,	// S6_rol_i_r_or
    0U,	// S6_rol_i_r_xacc
    0U,	// S6_vsplatrbp
    66U,	// S6_vtrunehb_ppp
    66U,	// S6_vtrunohb_ppp
    12U,	// SA1_addi
    0U,	// SA1_addrx
    0U,	// SA1_addsp
    0U,	// SA1_and1
    0U,	// SA1_clrf
    0U,	// SA1_clrfnew
    0U,	// SA1_clrt
    0U,	// SA1_clrtnew
    1U,	// SA1_cmpeqi
    0U,	// SA1_combine0i
    0U,	// SA1_combine1i
    0U,	// SA1_combine2i
    0U,	// SA1_combine3i
    0U,	// SA1_combinerz
    0U,	// SA1_combinezr
    12U,	// SA1_dec
    49U,	// SA1_inc
    0U,	// SA1_seti
    0U,	// SA1_setin1
    0U,	// SA1_sxtb
    0U,	// SA1_sxth
    0U,	// SA1_tfr
    0U,	// SA1_zxtb
    0U,	// SA1_zxth
    0U,	// SAVE_REGISTERS_CALL_V4
    0U,	// SAVE_REGISTERS_CALL_V4STK
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_EXT
    0U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_PIC
    1U,	// SL1_loadri_io
    1U,	// SL1_loadrub_io
    0U,	// SL2_deallocframe
    0U,	// SL2_jumpr31
    0U,	// SL2_jumpr31_f
    0U,	// SL2_jumpr31_fnew
    0U,	// SL2_jumpr31_t
    0U,	// SL2_jumpr31_tnew
    1U,	// SL2_loadrb_io
    0U,	// SL2_loadrd_sp
    1U,	// SL2_loadrh_io
    0U,	// SL2_loadri_sp
    1U,	// SL2_loadruh_io
    0U,	// SL2_return
    0U,	// SL2_return_f
    0U,	// SL2_return_fnew
    0U,	// SL2_return_t
    0U,	// SL2_return_tnew
    130U,	// SS1_storeb_io
    130U,	// SS1_storew_io
    0U,	// SS2_allocframe
    0U,	// SS2_storebi0
    0U,	// SS2_storebi1
    0U,	// SS2_stored_sp
    130U,	// SS2_storeh_io
    0U,	// SS2_storew_sp
    0U,	// SS2_storewi0
    0U,	// SS2_storewi1
    66U,	// TFRI64_V2_ext
    0U,	// TFRI64_V4
    0U,	// V6_extractw
    0U,	// V6_lvsplatb
    0U,	// V6_lvsplath
    0U,	// V6_lvsplatw
    66U,	// V6_pred_and
    0U,	// V6_pred_and_n
    0U,	// V6_pred_not
    66U,	// V6_pred_or
    0U,	// V6_pred_or_n
    0U,	// V6_pred_scalar2
    0U,	// V6_pred_scalar2v2
    0U,	// V6_pred_xor
    962U,	// V6_shuffeqh
    2690U,	// V6_shuffeqw
    2757U,	// V6_v6mpyhubs10
    0U,	// V6_v6mpyhubs10_vxx
    2821U,	// V6_v6mpyvubs10
    0U,	// V6_v6mpyvubs10_vxx
    1U,	// V6_vL32Ub_ai
    1U,	// V6_vL32Ub_pi
    1U,	// V6_vL32Ub_ppu
    1U,	// V6_vL32b_ai
    1U,	// V6_vL32b_cur_ai
    1538U,	// V6_vL32b_cur_npred_ai
    1638U,	// V6_vL32b_cur_npred_pi
    2918U,	// V6_vL32b_cur_npred_ppu
    1U,	// V6_vL32b_cur_pi
    1U,	// V6_vL32b_cur_ppu
    1538U,	// V6_vL32b_cur_pred_ai
    1638U,	// V6_vL32b_cur_pred_pi
    2918U,	// V6_vL32b_cur_pred_ppu
    1538U,	// V6_vL32b_npred_ai
    1638U,	// V6_vL32b_npred_pi
    2918U,	// V6_vL32b_npred_ppu
    50U,	// V6_vL32b_nt_ai
    50U,	// V6_vL32b_nt_cur_ai
    1538U,	// V6_vL32b_nt_cur_npred_ai
    1638U,	// V6_vL32b_nt_cur_npred_pi
    2918U,	// V6_vL32b_nt_cur_npred_ppu
    50U,	// V6_vL32b_nt_cur_pi
    50U,	// V6_vL32b_nt_cur_ppu
    1538U,	// V6_vL32b_nt_cur_pred_ai
    1638U,	// V6_vL32b_nt_cur_pred_pi
    2918U,	// V6_vL32b_nt_cur_pred_ppu
    1538U,	// V6_vL32b_nt_npred_ai
    1638U,	// V6_vL32b_nt_npred_pi
    2918U,	// V6_vL32b_nt_npred_ppu
    50U,	// V6_vL32b_nt_pi
    50U,	// V6_vL32b_nt_ppu
    1538U,	// V6_vL32b_nt_pred_ai
    1638U,	// V6_vL32b_nt_pred_pi
    2918U,	// V6_vL32b_nt_pred_ppu
    50U,	// V6_vL32b_nt_tmp_ai
    1538U,	// V6_vL32b_nt_tmp_npred_ai
    1638U,	// V6_vL32b_nt_tmp_npred_pi
    2918U,	// V6_vL32b_nt_tmp_npred_ppu
    50U,	// V6_vL32b_nt_tmp_pi
    50U,	// V6_vL32b_nt_tmp_ppu
    1538U,	// V6_vL32b_nt_tmp_pred_ai
    1638U,	// V6_vL32b_nt_tmp_pred_pi
    2918U,	// V6_vL32b_nt_tmp_pred_ppu
    1U,	// V6_vL32b_pi
    1U,	// V6_vL32b_ppu
    1538U,	// V6_vL32b_pred_ai
    1638U,	// V6_vL32b_pred_pi
    2918U,	// V6_vL32b_pred_ppu
    1U,	// V6_vL32b_tmp_ai
    1538U,	// V6_vL32b_tmp_npred_ai
    1638U,	// V6_vL32b_tmp_npred_pi
    2918U,	// V6_vL32b_tmp_npred_ppu
    1U,	// V6_vL32b_tmp_pi
    1U,	// V6_vL32b_tmp_ppu
    1538U,	// V6_vL32b_tmp_pred_ai
    1638U,	// V6_vL32b_tmp_pred_pi
    2918U,	// V6_vL32b_tmp_pred_ppu
    130U,	// V6_vS32Ub_ai
    57376U,	// V6_vS32Ub_npred_ai
    58594U,	// V6_vS32Ub_npred_pi
    58593U,	// V6_vS32Ub_npred_ppu
    133U,	// V6_vS32Ub_pi
    133U,	// V6_vS32Ub_ppu
    57376U,	// V6_vS32Ub_pred_ai
    58594U,	// V6_vS32Ub_pred_pi
    58593U,	// V6_vS32Ub_pred_ppu
    130U,	// V6_vS32b_ai
    194U,	// V6_vS32b_new_ai
    57376U,	// V6_vS32b_new_npred_ai
    58594U,	// V6_vS32b_new_npred_pi
    58593U,	// V6_vS32b_new_npred_ppu
    197U,	// V6_vS32b_new_pi
    197U,	// V6_vS32b_new_ppu
    57376U,	// V6_vS32b_new_pred_ai
    58594U,	// V6_vS32b_new_pred_pi
    58593U,	// V6_vS32b_new_pred_ppu
    57376U,	// V6_vS32b_npred_ai
    58594U,	// V6_vS32b_npred_pi
    58593U,	// V6_vS32b_npred_ppu
    57376U,	// V6_vS32b_nqpred_ai
    58594U,	// V6_vS32b_nqpred_pi
    58593U,	// V6_vS32b_nqpred_ppu
    130U,	// V6_vS32b_nt_ai
    194U,	// V6_vS32b_nt_new_ai
    4128U,	// V6_vS32b_nt_new_npred_ai
    5346U,	// V6_vS32b_nt_new_npred_pi
    5345U,	// V6_vS32b_nt_new_npred_ppu
    197U,	// V6_vS32b_nt_new_pi
    197U,	// V6_vS32b_nt_new_ppu
    4128U,	// V6_vS32b_nt_new_pred_ai
    5346U,	// V6_vS32b_nt_new_pred_pi
    5345U,	// V6_vS32b_nt_new_pred_ppu
    4128U,	// V6_vS32b_nt_npred_ai
    5346U,	// V6_vS32b_nt_npred_pi
    5345U,	// V6_vS32b_nt_npred_ppu
    4128U,	// V6_vS32b_nt_nqpred_ai
    5346U,	// V6_vS32b_nt_nqpred_pi
    5345U,	// V6_vS32b_nt_nqpred_ppu
    133U,	// V6_vS32b_nt_pi
    133U,	// V6_vS32b_nt_ppu
    4128U,	// V6_vS32b_nt_pred_ai
    5346U,	// V6_vS32b_nt_pred_pi
    5345U,	// V6_vS32b_nt_pred_ppu
    4128U,	// V6_vS32b_nt_qpred_ai
    5346U,	// V6_vS32b_nt_qpred_pi
    5345U,	// V6_vS32b_nt_qpred_ppu
    133U,	// V6_vS32b_pi
    133U,	// V6_vS32b_ppu
    57376U,	// V6_vS32b_pred_ai
    58594U,	// V6_vS32b_pred_pi
    58593U,	// V6_vS32b_pred_ppu
    57376U,	// V6_vS32b_qpred_ai
    58594U,	// V6_vS32b_qpred_pi
    58593U,	// V6_vS32b_qpred_ppu
    0U,	// V6_vS32b_srls_ai
    0U,	// V6_vS32b_srls_pi
    0U,	// V6_vS32b_srls_ppu
    0U,	// V6_vabsb
    0U,	// V6_vabsb_sat
    962U,	// V6_vabsdiffh
    0U,	// V6_vabsdiffub
    450U,	// V6_vabsdiffuh
    0U,	// V6_vabsdiffw
    0U,	// V6_vabsh
    0U,	// V6_vabsh_sat
    0U,	// V6_vabsw
    0U,	// V6_vabsw_sat
    0U,	// V6_vaddb
    0U,	// V6_vaddb_dv
    0U,	// V6_vaddbnq
    0U,	// V6_vaddbq
    0U,	// V6_vaddbsat
    0U,	// V6_vaddbsat_dv
    9459U,	// V6_vaddcarry
    0U,	// V6_vaddcarryo
    8243U,	// V6_vaddcarrysat
    0U,	// V6_vaddclbh
    0U,	// V6_vaddclbw
    962U,	// V6_vaddh
    962U,	// V6_vaddh_dv
    0U,	// V6_vaddhnq
    0U,	// V6_vaddhq
    1090U,	// V6_vaddhsat
    1090U,	// V6_vaddhsat_dv
    974U,	// V6_vaddhw
    965U,	// V6_vaddhw_acc
    386U,	// V6_vaddubh
    0U,	// V6_vaddubh_acc
    0U,	// V6_vaddubsat
    0U,	// V6_vaddubsat_dv
    0U,	// V6_vaddububb_sat
    0U,	// V6_vadduhsat
    0U,	// V6_vadduhsat_dv
    52U,	// V6_vadduhw
    453U,	// V6_vadduhw_acc
    0U,	// V6_vadduwsat
    0U,	// V6_vadduwsat_dv
    12339U,	// V6_vaddw
    12339U,	// V6_vaddw_dv
    0U,	// V6_vaddwnq
    0U,	// V6_vaddwq
    16435U,	// V6_vaddwsat
    16435U,	// V6_vaddwsat_dv
    69U,	// V6_valignb
    69U,	// V6_valignbi
    0U,	// V6_vand
    0U,	// V6_vandnqrt
    0U,	// V6_vandnqrt_acc
    0U,	// V6_vandqrt
    0U,	// V6_vandqrt_acc
    0U,	// V6_vandvnqv
    0U,	// V6_vandvqv
    0U,	// V6_vandvrt
    0U,	// V6_vandvrt_acc
    0U,	// V6_vaslh
    0U,	// V6_vaslh_acc
    0U,	// V6_vaslhv
    0U,	// V6_vaslw
    0U,	// V6_vaslw_acc
    0U,	// V6_vaslwv
    0U,	// V6_vasr_into
    66U,	// V6_vasrh
    0U,	// V6_vasrh_acc
    0U,	// V6_vasrhbrndsat
    0U,	// V6_vasrhbsat
    23426U,	// V6_vasrhubrndsat
    23426U,	// V6_vasrhubsat
    962U,	// V6_vasrhv
    23490U,	// V6_vasruhubrndsat
    23490U,	// V6_vasruhubsat
    23554U,	// V6_vasruwuhrndsat
    23554U,	// V6_vasruwuhsat
    0U,	// V6_vasrw
    0U,	// V6_vasrw_acc
    3138U,	// V6_vasrwh
    23618U,	// V6_vasrwhrndsat
    23618U,	// V6_vasrwhsat
    23618U,	// V6_vasrwuhrndsat
    23618U,	// V6_vasrwuhsat
    0U,	// V6_vasrwv
    0U,	// V6_vassign
    0U,	// V6_vavgb
    0U,	// V6_vavgbrnd
    0U,	// V6_vavgh
    0U,	// V6_vavghrnd
    0U,	// V6_vavgub
    0U,	// V6_vavgubrnd
    0U,	// V6_vavguh
    0U,	// V6_vavguhrnd
    0U,	// V6_vavguw
    0U,	// V6_vavguwrnd
    0U,	// V6_vavgw
    0U,	// V6_vavgwrnd
    0U,	// V6_vccombine
    0U,	// V6_vcl0h
    0U,	// V6_vcl0w
    0U,	// V6_vcmov
    0U,	// V6_vcombine
    640U,	// V6_vdeal
    0U,	// V6_vdealb
    0U,	// V6_vdealb4w
    0U,	// V6_vdealh
    0U,	// V6_vdealvdd
    0U,	// V6_vdelta
    0U,	// V6_vdmpybus
    0U,	// V6_vdmpybus_acc
    0U,	// V6_vdmpybus_dv
    0U,	// V6_vdmpybus_dv_acc
    0U,	// V6_vdmpyhb
    0U,	// V6_vdmpyhb_acc
    0U,	// V6_vdmpyhb_dv
    0U,	// V6_vdmpyhb_dv_acc
    0U,	// V6_vdmpyhisat
    0U,	// V6_vdmpyhisat_acc
    0U,	// V6_vdmpyhsat
    0U,	// V6_vdmpyhsat_acc
    0U,	// V6_vdmpyhsuisat
    0U,	// V6_vdmpyhsuisat_acc
    0U,	// V6_vdmpyhsusat
    0U,	// V6_vdmpyhsusat_acc
    0U,	// V6_vdmpyhvsat
    0U,	// V6_vdmpyhvsat_acc
    0U,	// V6_vdsaduh
    0U,	// V6_vdsaduh_acc
    3202U,	// V6_veqb
    3205U,	// V6_veqb_and
    3205U,	// V6_veqb_or
    3205U,	// V6_veqb_xor
    962U,	// V6_veqh
    965U,	// V6_veqh_and
    965U,	// V6_veqh_or
    965U,	// V6_veqh_xor
    2690U,	// V6_veqw
    2693U,	// V6_veqw_and
    2693U,	// V6_veqw_or
    2693U,	// V6_veqw_xor
    24576U,	// V6_vgathermh
    0U,	// V6_vgathermhq
    28672U,	// V6_vgathermhw
    0U,	// V6_vgathermhwq
    32768U,	// V6_vgathermw
    0U,	// V6_vgathermwq
    3202U,	// V6_vgtb
    3205U,	// V6_vgtb_and
    3205U,	// V6_vgtb_or
    3205U,	// V6_vgtb_xor
    962U,	// V6_vgth
    965U,	// V6_vgth_and
    965U,	// V6_vgth_or
    965U,	// V6_vgth_xor
    386U,	// V6_vgtub
    389U,	// V6_vgtub_and
    389U,	// V6_vgtub_or
    389U,	// V6_vgtub_xor
    450U,	// V6_vgtuh
    453U,	// V6_vgtuh_and
    453U,	// V6_vgtuh_or
    453U,	// V6_vgtuh_xor
    514U,	// V6_vgtuw
    517U,	// V6_vgtuw_and
    517U,	// V6_vgtuw_or
    517U,	// V6_vgtuw_xor
    2690U,	// V6_vgtw
    2693U,	// V6_vgtw_and
    2693U,	// V6_vgtw_or
    2693U,	// V6_vgtw_xor
    0U,	// V6_vhist
    0U,	// V6_vhistq
    0U,	// V6_vinsertwr
    69U,	// V6_vlalignb
    69U,	// V6_vlalignbi
    0U,	// V6_vlsrb
    0U,	// V6_vlsrh
    0U,	// V6_vlsrhv
    0U,	// V6_vlsrw
    0U,	// V6_vlsrwv
    0U,	// V6_vlut4
    69U,	// V6_vlutvvb
    3269U,	// V6_vlutvvb_nm
    73U,	// V6_vlutvvb_oracc
    73U,	// V6_vlutvvb_oracci
    69U,	// V6_vlutvvbi
    69U,	// V6_vlutvwh
    3269U,	// V6_vlutvwh_nm
    73U,	// V6_vlutvwh_oracc
    73U,	// V6_vlutvwh_oracci
    69U,	// V6_vlutvwhi
    0U,	// V6_vmaxb
    0U,	// V6_vmaxh
    0U,	// V6_vmaxub
    0U,	// V6_vmaxuh
    0U,	// V6_vmaxw
    0U,	// V6_vminb
    0U,	// V6_vminh
    0U,	// V6_vminub
    0U,	// V6_vminuh
    0U,	// V6_vminw
    3202U,	// V6_vmpabus
    0U,	// V6_vmpabus_acc
    3202U,	// V6_vmpabusv
    386U,	// V6_vmpabuu
    0U,	// V6_vmpabuu_acc
    386U,	// V6_vmpabuuv
    3202U,	// V6_vmpahb
    3205U,	// V6_vmpahb_acc
    39810U,	// V6_vmpahhsat
    3202U,	// V6_vmpauhb
    3205U,	// V6_vmpauhb_acc
    43970U,	// V6_vmpauhuhsat
    0U,	// V6_vmpsuhuhsat
    3202U,	// V6_vmpybus
    3205U,	// V6_vmpybus_acc
    3202U,	// V6_vmpybusv
    3205U,	// V6_vmpybusv_acc
    3202U,	// V6_vmpybv
    3205U,	// V6_vmpybv_acc
    0U,	// V6_vmpyewuh
    0U,	// V6_vmpyewuh_64
    0U,	// V6_vmpyh
    0U,	// V6_vmpyh_acc
    0U,	// V6_vmpyhsat_acc
    1730U,	// V6_vmpyhsrs
    1794U,	// V6_vmpyhss
    0U,	// V6_vmpyhus
    0U,	// V6_vmpyhus_acc
    0U,	// V6_vmpyhv
    0U,	// V6_vmpyhv_acc
    1730U,	// V6_vmpyhvsrs
    0U,	// V6_vmpyieoh
    0U,	// V6_vmpyiewh_acc
    0U,	// V6_vmpyiewuh
    0U,	// V6_vmpyiewuh_acc
    0U,	// V6_vmpyih
    0U,	// V6_vmpyih_acc
    0U,	// V6_vmpyihb
    0U,	// V6_vmpyihb_acc
    0U,	// V6_vmpyiowh
    0U,	// V6_vmpyiwb
    0U,	// V6_vmpyiwb_acc
    0U,	// V6_vmpyiwh
    0U,	// V6_vmpyiwh_acc
    0U,	// V6_vmpyiwub
    0U,	// V6_vmpyiwub_acc
    0U,	// V6_vmpyowh
    0U,	// V6_vmpyowh_64_acc
    0U,	// V6_vmpyowh_rnd
    0U,	// V6_vmpyowh_rnd_sacc
    0U,	// V6_vmpyowh_sacc
    0U,	// V6_vmpyub
    0U,	// V6_vmpyub_acc
    0U,	// V6_vmpyubv
    0U,	// V6_vmpyubv_acc
    0U,	// V6_vmpyuh
    0U,	// V6_vmpyuh_acc
    0U,	// V6_vmpyuhe
    0U,	// V6_vmpyuhe_acc
    0U,	// V6_vmpyuhv
    0U,	// V6_vmpyuhv_acc
    0U,	// V6_vmux
    3202U,	// V6_vnavgb
    0U,	// V6_vnavgh
    386U,	// V6_vnavgub
    0U,	// V6_vnavgw
    0U,	// V6_vnccombine
    0U,	// V6_vncmov
    0U,	// V6_vnormamth
    0U,	// V6_vnormamtw
    0U,	// V6_vnot
    0U,	// V6_vor
    0U,	// V6_vpackeb
    0U,	// V6_vpackeh
    0U,	// V6_vpackhb_sat
    0U,	// V6_vpackhub_sat
    0U,	// V6_vpackob
    0U,	// V6_vpackoh
    0U,	// V6_vpackwh_sat
    0U,	// V6_vpackwuh_sat
    0U,	// V6_vpopcounth
    0U,	// V6_vprefixqb
    0U,	// V6_vprefixqh
    0U,	// V6_vprefixqw
    0U,	// V6_vrdelta
    386U,	// V6_vrmpybub_rtt
    389U,	// V6_vrmpybub_rtt_acc
    3202U,	// V6_vrmpybus
    3205U,	// V6_vrmpybus_acc
    40194U,	// V6_vrmpybusi
    56581U,	// V6_vrmpybusi_acc
    3202U,	// V6_vrmpybusv
    3205U,	// V6_vrmpybusv_acc
    3202U,	// V6_vrmpybv
    3205U,	// V6_vrmpybv_acc
    0U,	// V6_vrmpyub
    0U,	// V6_vrmpyub_acc
    0U,	// V6_vrmpyub_rtt
    0U,	// V6_vrmpyub_rtt_acc
    69U,	// V6_vrmpyubi
    73U,	// V6_vrmpyubi_acc
    0U,	// V6_vrmpyubv
    0U,	// V6_vrmpyubv_acc
    45109U,	// V6_vrmpyzbb_rt
    46325U,	// V6_vrmpyzbb_rt_acc
    52597U,	// V6_vrmpyzbb_rx
    52597U,	// V6_vrmpyzbb_rx_acc
    53301U,	// V6_vrmpyzbub_rt
    54517U,	// V6_vrmpyzbub_rt_acc
    60789U,	// V6_vrmpyzbub_rx
    60789U,	// V6_vrmpyzbub_rx_acc
    45110U,	// V6_vrmpyzcb_rt
    46326U,	// V6_vrmpyzcb_rt_acc
    52598U,	// V6_vrmpyzcb_rx
    52598U,	// V6_vrmpyzcb_rx_acc
    45110U,	// V6_vrmpyzcbs_rt
    46326U,	// V6_vrmpyzcbs_rt_acc
    52598U,	// V6_vrmpyzcbs_rx
    52598U,	// V6_vrmpyzcbs_rx_acc
    45111U,	// V6_vrmpyznb_rt
    46327U,	// V6_vrmpyznb_rt_acc
    52599U,	// V6_vrmpyznb_rx
    52599U,	// V6_vrmpyznb_rx_acc
    0U,	// V6_vror
    0U,	// V6_vrotr
    0U,	// V6_vroundhb
    1090U,	// V6_vroundhub
    3458U,	// V6_vrounduhub
    3522U,	// V6_vrounduwuh
    0U,	// V6_vroundwh
    3586U,	// V6_vroundwuh
    0U,	// V6_vrsadubi
    0U,	// V6_vrsadubi_acc
    0U,	// V6_vsatdw
    0U,	// V6_vsathub
    0U,	// V6_vsatuwuh
    0U,	// V6_vsatwh
    0U,	// V6_vsb
    61440U,	// V6_vscattermh
    0U,	// V6_vscattermh_add
    0U,	// V6_vscattermhq
    4096U,	// V6_vscattermhw
    8192U,	// V6_vscattermhw_add
    0U,	// V6_vscattermhwq
    12288U,	// V6_vscattermw
    16384U,	// V6_vscattermw_add
    0U,	// V6_vscattermwq
    0U,	// V6_vsh
    962U,	// V6_vshufeh
    640U,	// V6_vshuff
    0U,	// V6_vshuffb
    3202U,	// V6_vshuffeb
    0U,	// V6_vshuffh
    0U,	// V6_vshuffob
    0U,	// V6_vshuffvdd
    0U,	// V6_vshufoeb
    0U,	// V6_vshufoeh
    0U,	// V6_vshufoh
    0U,	// V6_vsubb
    0U,	// V6_vsubb_dv
    0U,	// V6_vsubbnq
    0U,	// V6_vsubbq
    0U,	// V6_vsubbsat
    0U,	// V6_vsubbsat_dv
    9459U,	// V6_vsubcarry
    0U,	// V6_vsubcarryo
    962U,	// V6_vsubh
    962U,	// V6_vsubh_dv
    0U,	// V6_vsubhnq
    0U,	// V6_vsubhq
    1090U,	// V6_vsubhsat
    1090U,	// V6_vsubhsat_dv
    974U,	// V6_vsubhw
    386U,	// V6_vsububh
    0U,	// V6_vsububsat
    0U,	// V6_vsububsat_dv
    0U,	// V6_vsubububb_sat
    0U,	// V6_vsubuhsat
    0U,	// V6_vsubuhsat_dv
    52U,	// V6_vsubuhw
    0U,	// V6_vsubuwsat
    0U,	// V6_vsubuwsat_dv
    12339U,	// V6_vsubw
    12339U,	// V6_vsubw_dv
    0U,	// V6_vsubwnq
    0U,	// V6_vsubwq
    16435U,	// V6_vsubwsat
    16435U,	// V6_vsubwsat_dv
    0U,	// V6_vswap
    3202U,	// V6_vtmpyb
    3205U,	// V6_vtmpyb_acc
    3202U,	// V6_vtmpybus
    3205U,	// V6_vtmpybus_acc
    0U,	// V6_vtmpyhb
    0U,	// V6_vtmpyhb_acc
    0U,	// V6_vunpackb
    0U,	// V6_vunpackh
    0U,	// V6_vunpackob
    0U,	// V6_vunpackoh
    0U,	// V6_vunpackub
    0U,	// V6_vunpackuh
    0U,	// V6_vwhist128
    0U,	// V6_vwhist128m
    0U,	// V6_vwhist128q
    1U,	// V6_vwhist128qm
    0U,	// V6_vwhist256
    0U,	// V6_vwhist256_sat
    0U,	// V6_vwhist256q
    0U,	// V6_vwhist256q_sat
    0U,	// V6_vxor
    0U,	// V6_vzb
    0U,	// V6_vzh
    0U,	// V6_zLd_ai
    0U,	// V6_zLd_pi
    0U,	// V6_zLd_ppu
    32U,	// V6_zLd_pred_ai
    1250U,	// V6_zLd_pred_pi
    1249U,	// V6_zLd_pred_ppu
    0U,	// V6_zextract
    0U,	// Y2_barrier
    0U,	// Y2_break
    0U,	// Y2_dccleana
    0U,	// Y2_dccleaninva
    0U,	// Y2_dcfetchbo
    0U,	// Y2_dcinva
    0U,	// Y2_dczeroa
    0U,	// Y2_icinva
    0U,	// Y2_isync
    0U,	// Y2_syncht
    0U,	// Y2_wait
    1U,	// Y4_l2fetch
    0U,	// Y4_trace
    1U,	// Y5_l2fetch
    0U,	// Y6_diag
    1U,	// Y6_diag0
    1U,	// Y6_diag1
    1U,	// Y6_dmlink
    0U,	// Y6_dmpause
    0U,	// Y6_dmpoll
    0U,	// Y6_dmresume
    0U,	// Y6_dmstart
    0U,	// Y6_dmwait
    20480U,	// dep_A2_addsat
    20480U,	// dep_A2_subsat
    0U,	// dep_S2_packhl
    0U,	// invalid_decode
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// A2_addsp
    0U,	// A2_iconst
    0U,	// A2_neg
    0U,	// A2_not
    0U,	// A2_tfrf
    0U,	// A2_tfrfnew
    0U,	// A2_tfrp
    0U,	// A2_tfrpf
    0U,	// A2_tfrpfnew
    0U,	// A2_tfrpi
    0U,	// A2_tfrpt
    0U,	// A2_tfrptnew
    0U,	// A2_tfrt
    0U,	// A2_tfrtnew
    0U,	// A2_vaddb_map
    0U,	// A2_vsubb_map
    0U,	// A2_zxtb
    0U,	// A4_boundscheck
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// C2_cmpgei
    0U,	// C2_cmpgeui
    0U,	// C2_cmplt
    0U,	// C2_cmpltu
    0U,	// C2_pxfer_map
    0U,	// DUPLEX_Pseudo
    0U,	// ENDLOOP0
    0U,	// ENDLOOP01
    0U,	// ENDLOOP1
    0U,	// J2_endloop0
    0U,	// J2_endloop01
    0U,	// J2_endloop1
    0U,	// J2_jumpf_nopred_map
    0U,	// J2_jumprf_nopred_map
    0U,	// J2_jumprt_nopred_map
    0U,	// J2_jumpt_nopred_map
    0U,	// J2_trap1_noregmap
    0U,	// L2_loadalignb_zomap
    0U,	// L2_loadalignh_zomap
    0U,	// L2_loadbsw2_zomap
    0U,	// L2_loadbsw4_zomap
    0U,	// L2_loadbzw2_zomap
    0U,	// L2_loadbzw4_zomap
    0U,	// L2_loadrb_zomap
    0U,	// L2_loadrd_zomap
    0U,	// L2_loadrh_zomap
    0U,	// L2_loadri_zomap
    0U,	// L2_loadrub_zomap
    0U,	// L2_loadruh_zomap
    0U,	// L2_ploadrbf_zomap
    0U,	// L2_ploadrbfnew_zomap
    0U,	// L2_ploadrbt_zomap
    0U,	// L2_ploadrbtnew_zomap
    0U,	// L2_ploadrdf_zomap
    0U,	// L2_ploadrdfnew_zomap
    0U,	// L2_ploadrdt_zomap
    0U,	// L2_ploadrdtnew_zomap
    0U,	// L2_ploadrhf_zomap
    0U,	// L2_ploadrhfnew_zomap
    0U,	// L2_ploadrht_zomap
    0U,	// L2_ploadrhtnew_zomap
    0U,	// L2_ploadrif_zomap
    0U,	// L2_ploadrifnew_zomap
    0U,	// L2_ploadrit_zomap
    0U,	// L2_ploadritnew_zomap
    0U,	// L2_ploadrubf_zomap
    0U,	// L2_ploadrubfnew_zomap
    0U,	// L2_ploadrubt_zomap
    0U,	// L2_ploadrubtnew_zomap
    0U,	// L2_ploadruhf_zomap
    0U,	// L2_ploadruhfnew_zomap
    0U,	// L2_ploadruht_zomap
    0U,	// L2_ploadruhtnew_zomap
    0U,	// L4_add_memopb_zomap
    0U,	// L4_add_memoph_zomap
    0U,	// L4_add_memopw_zomap
    0U,	// L4_and_memopb_zomap
    0U,	// L4_and_memoph_zomap
    0U,	// L4_and_memopw_zomap
    0U,	// L4_iadd_memopb_zomap
    0U,	// L4_iadd_memoph_zomap
    0U,	// L4_iadd_memopw_zomap
    0U,	// L4_iand_memopb_zomap
    0U,	// L4_iand_memoph_zomap
    0U,	// L4_iand_memopw_zomap
    0U,	// L4_ior_memopb_zomap
    0U,	// L4_ior_memoph_zomap
    0U,	// L4_ior_memopw_zomap
    0U,	// L4_isub_memopb_zomap
    0U,	// L4_isub_memoph_zomap
    0U,	// L4_isub_memopw_zomap
    0U,	// L4_or_memopb_zomap
    0U,	// L4_or_memoph_zomap
    0U,	// L4_or_memopw_zomap
    0U,	// L4_return_map_to_raw_f
    0U,	// L4_return_map_to_raw_fnew_pnt
    0U,	// L4_return_map_to_raw_fnew_pt
    0U,	// L4_return_map_to_raw_t
    0U,	// L4_return_map_to_raw_tnew_pnt
    0U,	// L4_return_map_to_raw_tnew_pt
    0U,	// L4_sub_memopb_zomap
    0U,	// L4_sub_memoph_zomap
    0U,	// L4_sub_memopw_zomap
    0U,	// L6_deallocframe_map_to_raw
    0U,	// L6_return_map_to_raw
    0U,	// LDriw_ctr
    0U,	// LDriw_pred
    0U,	// M2_mpysmi
    0U,	// M2_mpyui
    0U,	// M2_vrcmpys_acc_s1
    0U,	// M2_vrcmpys_s1
    0U,	// M2_vrcmpys_s1rp
    0U,	// M7_vdmpy
    0U,	// M7_vdmpy_acc
    0U,	// PS_aligna
    0U,	// PS_alloca
    0U,	// PS_call_nr
    0U,	// PS_crash
    0U,	// PS_false
    0U,	// PS_fi
    0U,	// PS_fia
    0U,	// PS_loadrb_pci
    0U,	// PS_loadrb_pcr
    0U,	// PS_loadrd_pci
    0U,	// PS_loadrd_pcr
    0U,	// PS_loadrh_pci
    0U,	// PS_loadrh_pcr
    0U,	// PS_loadri_pci
    0U,	// PS_loadri_pcr
    0U,	// PS_loadrub_pci
    0U,	// PS_loadrub_pcr
    0U,	// PS_loadruh_pci
    0U,	// PS_loadruh_pcr
    0U,	// PS_pselect
    0U,	// PS_qfalse
    0U,	// PS_qtrue
    0U,	// PS_storerb_pci
    0U,	// PS_storerb_pcr
    0U,	// PS_storerd_pci
    0U,	// PS_storerd_pcr
    0U,	// PS_storerf_pci
    0U,	// PS_storerf_pcr
    0U,	// PS_storerh_pci
    0U,	// PS_storerh_pcr
    0U,	// PS_storeri_pci
    0U,	// PS_storeri_pcr
    0U,	// PS_tailcall_i
    0U,	// PS_tailcall_r
    0U,	// PS_true
    0U,	// PS_vdd0
    0U,	// PS_vloadrq_ai
    0U,	// PS_vloadrv_ai
    0U,	// PS_vloadrv_nt_ai
    0U,	// PS_vloadrw_ai
    0U,	// PS_vloadrw_nt_ai
    0U,	// PS_vmulw
    0U,	// PS_vmulw_acc
    0U,	// PS_vselect
    0U,	// PS_vstorerq_ai
    0U,	// PS_vstorerv_ai
    0U,	// PS_vstorerv_nt_ai
    0U,	// PS_vstorerw_ai
    0U,	// PS_vstorerw_nt_ai
    0U,	// PS_wselect
    0U,	// S2_asr_i_p_rnd_goodsyntax
    0U,	// S2_asr_i_r_rnd_goodsyntax
    0U,	// S2_pstorerbf_zomap
    0U,	// S2_pstorerbnewf_zomap
    0U,	// S2_pstorerbnewt_zomap
    0U,	// S2_pstorerbt_zomap
    0U,	// S2_pstorerdf_zomap
    0U,	// S2_pstorerdt_zomap
    0U,	// S2_pstorerff_zomap
    0U,	// S2_pstorerft_zomap
    0U,	// S2_pstorerhf_zomap
    0U,	// S2_pstorerhnewf_zomap
    0U,	// S2_pstorerhnewt_zomap
    0U,	// S2_pstorerht_zomap
    0U,	// S2_pstorerif_zomap
    0U,	// S2_pstorerinewf_zomap
    0U,	// S2_pstorerinewt_zomap
    0U,	// S2_pstorerit_zomap
    0U,	// S2_storerb_zomap
    0U,	// S2_storerbnew_zomap
    0U,	// S2_storerd_zomap
    0U,	// S2_storerf_zomap
    0U,	// S2_storerh_zomap
    0U,	// S2_storerhnew_zomap
    0U,	// S2_storeri_zomap
    0U,	// S2_storerinew_zomap
    0U,	// S2_tableidxb_goodsyntax
    0U,	// S2_tableidxd_goodsyntax
    0U,	// S2_tableidxh_goodsyntax
    0U,	// S2_tableidxw_goodsyntax
    0U,	// S4_pstorerbfnew_zomap
    0U,	// S4_pstorerbnewfnew_zomap
    0U,	// S4_pstorerbnewtnew_zomap
    0U,	// S4_pstorerbtnew_zomap
    0U,	// S4_pstorerdfnew_zomap
    0U,	// S4_pstorerdtnew_zomap
    0U,	// S4_pstorerffnew_zomap
    0U,	// S4_pstorerftnew_zomap
    0U,	// S4_pstorerhfnew_zomap
    0U,	// S4_pstorerhnewfnew_zomap
    0U,	// S4_pstorerhnewtnew_zomap
    0U,	// S4_pstorerhtnew_zomap
    0U,	// S4_pstorerifnew_zomap
    0U,	// S4_pstorerinewfnew_zomap
    0U,	// S4_pstorerinewtnew_zomap
    0U,	// S4_pstoreritnew_zomap
    0U,	// S4_storeirb_zomap
    0U,	// S4_storeirbf_zomap
    0U,	// S4_storeirbfnew_zomap
    0U,	// S4_storeirbt_zomap
    0U,	// S4_storeirbtnew_zomap
    0U,	// S4_storeirh_zomap
    0U,	// S4_storeirhf_zomap
    0U,	// S4_storeirhfnew_zomap
    0U,	// S4_storeirht_zomap
    0U,	// S4_storeirhtnew_zomap
    0U,	// S4_storeiri_zomap
    0U,	// S4_storeirif_zomap
    0U,	// S4_storeirifnew_zomap
    0U,	// S4_storeirit_zomap
    0U,	// S4_storeiritnew_zomap
    0U,	// S5_asrhub_rnd_sat_goodsyntax
    0U,	// S5_vasrhrnd_goodsyntax
    0U,	// S6_allocframe_to_raw
    0U,	// STriw_ctr
    0U,	// STriw_pred
    0U,	// V6_MAP_equb
    0U,	// V6_MAP_equb_and
    0U,	// V6_MAP_equb_ior
    0U,	// V6_MAP_equb_xor
    0U,	// V6_MAP_equh
    0U,	// V6_MAP_equh_and
    0U,	// V6_MAP_equh_ior
    0U,	// V6_MAP_equh_xor
    0U,	// V6_MAP_equw
    0U,	// V6_MAP_equw_and
    0U,	// V6_MAP_equw_ior
    0U,	// V6_MAP_equw_xor
    0U,	// V6_extractw_alt
    0U,	// V6_hi
    0U,	// V6_ld0
    0U,	// V6_ldcnp0
    0U,	// V6_ldcnpnt0
    0U,	// V6_ldcp0
    0U,	// V6_ldcpnt0
    0U,	// V6_ldnp0
    0U,	// V6_ldnpnt0
    0U,	// V6_ldnt0
    0U,	// V6_ldntnt0
    0U,	// V6_ldp0
    0U,	// V6_ldpnt0
    0U,	// V6_ldtnp0
    0U,	// V6_ldtnpnt0
    0U,	// V6_ldtp0
    0U,	// V6_ldtpnt0
    0U,	// V6_ldu0
    0U,	// V6_lo
    0U,	// V6_st0
    0U,	// V6_stn0
    0U,	// V6_stnnt0
    0U,	// V6_stnp0
    0U,	// V6_stnpnt0
    0U,	// V6_stnq0
    0U,	// V6_stnqnt0
    0U,	// V6_stnt0
    0U,	// V6_stp0
    0U,	// V6_stpnt0
    0U,	// V6_stq0
    0U,	// V6_stqnt0
    0U,	// V6_stu0
    0U,	// V6_stunp0
    0U,	// V6_stup0
    0U,	// V6_v6mpyhubs10_alt
    0U,	// V6_v6mpyvubs10_alt
    0U,	// V6_vabsb_alt
    0U,	// V6_vabsb_sat_alt
    0U,	// V6_vabsdiffh_alt
    0U,	// V6_vabsdiffub_alt
    0U,	// V6_vabsdiffuh_alt
    0U,	// V6_vabsdiffw_alt
    0U,	// V6_vabsh_alt
    0U,	// V6_vabsh_sat_alt
    0U,	// V6_vabsub_alt
    0U,	// V6_vabsuh_alt
    0U,	// V6_vabsuw_alt
    0U,	// V6_vabsw_alt
    0U,	// V6_vabsw_sat_alt
    0U,	// V6_vaddb_alt
    0U,	// V6_vaddb_dv_alt
    0U,	// V6_vaddbnq_alt
    0U,	// V6_vaddbq_alt
    0U,	// V6_vaddbsat_alt
    0U,	// V6_vaddbsat_dv_alt
    0U,	// V6_vaddh_alt
    0U,	// V6_vaddh_dv_alt
    0U,	// V6_vaddhnq_alt
    0U,	// V6_vaddhq_alt
    0U,	// V6_vaddhsat_alt
    0U,	// V6_vaddhsat_dv_alt
    0U,	// V6_vaddhw_acc_alt
    0U,	// V6_vaddhw_alt
    0U,	// V6_vaddubh_acc_alt
    0U,	// V6_vaddubh_alt
    0U,	// V6_vaddubsat_alt
    0U,	// V6_vaddubsat_dv_alt
    0U,	// V6_vadduhsat_alt
    0U,	// V6_vadduhsat_dv_alt
    0U,	// V6_vadduhw_acc_alt
    0U,	// V6_vadduhw_alt
    0U,	// V6_vadduwsat_alt
    0U,	// V6_vadduwsat_dv_alt
    0U,	// V6_vaddw_alt
    0U,	// V6_vaddw_dv_alt
    0U,	// V6_vaddwnq_alt
    0U,	// V6_vaddwq_alt
    0U,	// V6_vaddwsat_alt
    0U,	// V6_vaddwsat_dv_alt
    0U,	// V6_vandnqrt_acc_alt
    0U,	// V6_vandnqrt_alt
    0U,	// V6_vandqrt_acc_alt
    0U,	// V6_vandqrt_alt
    0U,	// V6_vandvrt_acc_alt
    0U,	// V6_vandvrt_alt
    0U,	// V6_vaslh_acc_alt
    0U,	// V6_vaslh_alt
    0U,	// V6_vaslhv_alt
    0U,	// V6_vaslw_acc_alt
    0U,	// V6_vaslw_alt
    0U,	// V6_vaslwv_alt
    0U,	// V6_vasr_into_alt
    0U,	// V6_vasrh_acc_alt
    0U,	// V6_vasrh_alt
    0U,	// V6_vasrhv_alt
    0U,	// V6_vasrw_acc_alt
    0U,	// V6_vasrw_alt
    0U,	// V6_vasrwv_alt
    0U,	// V6_vassignp
    0U,	// V6_vavgb_alt
    0U,	// V6_vavgbrnd_alt
    0U,	// V6_vavgh_alt
    0U,	// V6_vavghrnd_alt
    0U,	// V6_vavgub_alt
    0U,	// V6_vavgubrnd_alt
    0U,	// V6_vavguh_alt
    0U,	// V6_vavguhrnd_alt
    0U,	// V6_vavguw_alt
    0U,	// V6_vavguwrnd_alt
    0U,	// V6_vavgw_alt
    0U,	// V6_vavgwrnd_alt
    0U,	// V6_vcl0h_alt
    0U,	// V6_vcl0w_alt
    0U,	// V6_vd0
    0U,	// V6_vdd0
    0U,	// V6_vdealb4w_alt
    0U,	// V6_vdealb_alt
    0U,	// V6_vdealh_alt
    0U,	// V6_vdmpybus_acc_alt
    0U,	// V6_vdmpybus_alt
    0U,	// V6_vdmpybus_dv_acc_alt
    0U,	// V6_vdmpybus_dv_alt
    0U,	// V6_vdmpyhb_acc_alt
    0U,	// V6_vdmpyhb_alt
    0U,	// V6_vdmpyhb_dv_acc_alt
    0U,	// V6_vdmpyhb_dv_alt
    0U,	// V6_vdmpyhisat_acc_alt
    0U,	// V6_vdmpyhisat_alt
    0U,	// V6_vdmpyhsat_acc_alt
    0U,	// V6_vdmpyhsat_alt
    0U,	// V6_vdmpyhsuisat_acc_alt
    0U,	// V6_vdmpyhsuisat_alt
    0U,	// V6_vdmpyhsusat_acc_alt
    0U,	// V6_vdmpyhsusat_alt
    0U,	// V6_vdmpyhvsat_acc_alt
    0U,	// V6_vdmpyhvsat_alt
    0U,	// V6_vdsaduh_acc_alt
    0U,	// V6_vdsaduh_alt
    0U,	// V6_vgathermh_pseudo
    0U,	// V6_vgathermhq_pseudo
    0U,	// V6_vgathermhw_pseudo
    0U,	// V6_vgathermhwq_pseudo
    0U,	// V6_vgathermw_pseudo
    0U,	// V6_vgathermwq_pseudo
    0U,	// V6_vlsrh_alt
    0U,	// V6_vlsrhv_alt
    0U,	// V6_vlsrw_alt
    0U,	// V6_vlsrwv_alt
    0U,	// V6_vmaxb_alt
    0U,	// V6_vmaxh_alt
    0U,	// V6_vmaxub_alt
    0U,	// V6_vmaxuh_alt
    0U,	// V6_vmaxw_alt
    0U,	// V6_vminb_alt
    0U,	// V6_vminh_alt
    0U,	// V6_vminub_alt
    0U,	// V6_vminuh_alt
    0U,	// V6_vminw_alt
    0U,	// V6_vmpabus_acc_alt
    0U,	// V6_vmpabus_alt
    0U,	// V6_vmpabusv_alt
    0U,	// V6_vmpabuu_acc_alt
    0U,	// V6_vmpabuu_alt
    0U,	// V6_vmpabuuv_alt
    0U,	// V6_vmpahb_acc_alt
    0U,	// V6_vmpahb_alt
    0U,	// V6_vmpauhb_acc_alt
    0U,	// V6_vmpauhb_alt
    0U,	// V6_vmpybus_acc_alt
    0U,	// V6_vmpybus_alt
    0U,	// V6_vmpybusv_acc_alt
    0U,	// V6_vmpybusv_alt
    0U,	// V6_vmpybv_acc_alt
    0U,	// V6_vmpybv_alt
    0U,	// V6_vmpyewuh_alt
    0U,	// V6_vmpyh_acc_alt
    0U,	// V6_vmpyh_alt
    0U,	// V6_vmpyhsat_acc_alt
    0U,	// V6_vmpyhsrs_alt
    0U,	// V6_vmpyhss_alt
    0U,	// V6_vmpyhus_acc_alt
    0U,	// V6_vmpyhus_alt
    0U,	// V6_vmpyhv_acc_alt
    0U,	// V6_vmpyhv_alt
    0U,	// V6_vmpyhvsrs_alt
    0U,	// V6_vmpyiewh_acc_alt
    0U,	// V6_vmpyiewuh_acc_alt
    0U,	// V6_vmpyiewuh_alt
    0U,	// V6_vmpyih_acc_alt
    0U,	// V6_vmpyih_alt
    0U,	// V6_vmpyihb_acc_alt
    0U,	// V6_vmpyihb_alt
    0U,	// V6_vmpyiowh_alt
    0U,	// V6_vmpyiwb_acc_alt
    0U,	// V6_vmpyiwb_alt
    0U,	// V6_vmpyiwh_acc_alt
    0U,	// V6_vmpyiwh_alt
    0U,	// V6_vmpyiwub_acc_alt
    0U,	// V6_vmpyiwub_alt
    0U,	// V6_vmpyowh_alt
    0U,	// V6_vmpyowh_rnd_alt
    0U,	// V6_vmpyowh_rnd_sacc_alt
    0U,	// V6_vmpyowh_sacc_alt
    0U,	// V6_vmpyub_acc_alt
    0U,	// V6_vmpyub_alt
    0U,	// V6_vmpyubv_acc_alt
    0U,	// V6_vmpyubv_alt
    0U,	// V6_vmpyuh_acc_alt
    0U,	// V6_vmpyuh_alt
    0U,	// V6_vmpyuhv_acc_alt
    0U,	// V6_vmpyuhv_alt
    0U,	// V6_vnavgb_alt
    0U,	// V6_vnavgh_alt
    0U,	// V6_vnavgub_alt
    0U,	// V6_vnavgw_alt
    0U,	// V6_vnormamth_alt
    0U,	// V6_vnormamtw_alt
    0U,	// V6_vpackeb_alt
    0U,	// V6_vpackeh_alt
    0U,	// V6_vpackhb_sat_alt
    0U,	// V6_vpackhub_sat_alt
    0U,	// V6_vpackob_alt
    0U,	// V6_vpackoh_alt
    0U,	// V6_vpackwh_sat_alt
    0U,	// V6_vpackwuh_sat_alt
    0U,	// V6_vpopcounth_alt
    0U,	// V6_vrmpybub_rtt_acc_alt
    0U,	// V6_vrmpybub_rtt_alt
    0U,	// V6_vrmpybus_acc_alt
    0U,	// V6_vrmpybus_alt
    0U,	// V6_vrmpybusi_acc_alt
    0U,	// V6_vrmpybusi_alt
    0U,	// V6_vrmpybusv_acc_alt
    0U,	// V6_vrmpybusv_alt
    0U,	// V6_vrmpybv_acc_alt
    0U,	// V6_vrmpybv_alt
    0U,	// V6_vrmpyub_acc_alt
    0U,	// V6_vrmpyub_alt
    0U,	// V6_vrmpyub_rtt_acc_alt
    0U,	// V6_vrmpyub_rtt_alt
    0U,	// V6_vrmpyubi_acc_alt
    0U,	// V6_vrmpyubi_alt
    0U,	// V6_vrmpyubv_acc_alt
    0U,	// V6_vrmpyubv_alt
    0U,	// V6_vrotr_alt
    0U,	// V6_vroundhb_alt
    0U,	// V6_vroundhub_alt
    0U,	// V6_vrounduhub_alt
    0U,	// V6_vrounduwuh_alt
    0U,	// V6_vroundwh_alt
    0U,	// V6_vroundwuh_alt
    0U,	// V6_vrsadubi_acc_alt
    0U,	// V6_vrsadubi_alt
    0U,	// V6_vsathub_alt
    0U,	// V6_vsatuwuh_alt
    0U,	// V6_vsatwh_alt
    0U,	// V6_vsb_alt
    0U,	// V6_vscattermh_add_alt
    0U,	// V6_vscattermh_alt
    0U,	// V6_vscattermhq_alt
    0U,	// V6_vscattermw_add_alt
    0U,	// V6_vscattermw_alt
    4U,	// V6_vscattermwh_add_alt
    4U,	// V6_vscattermwh_alt
    0U,	// V6_vscattermwhq_alt
    0U,	// V6_vscattermwq_alt
    0U,	// V6_vsh_alt
    0U,	// V6_vshufeh_alt
    0U,	// V6_vshuffb_alt
    0U,	// V6_vshuffeb_alt
    0U,	// V6_vshuffh_alt
    0U,	// V6_vshuffob_alt
    0U,	// V6_vshufoeb_alt
    0U,	// V6_vshufoeh_alt
    0U,	// V6_vshufoh_alt
    0U,	// V6_vsubb_alt
    0U,	// V6_vsubb_dv_alt
    0U,	// V6_vsubbnq_alt
    0U,	// V6_vsubbq_alt
    0U,	// V6_vsubbsat_alt
    0U,	// V6_vsubbsat_dv_alt
    0U,	// V6_vsubh_alt
    0U,	// V6_vsubh_dv_alt
    0U,	// V6_vsubhnq_alt
    0U,	// V6_vsubhq_alt
    0U,	// V6_vsubhsat_alt
    0U,	// V6_vsubhsat_dv_alt
    0U,	// V6_vsubhw_alt
    0U,	// V6_vsububh_alt
    0U,	// V6_vsububsat_alt
    0U,	// V6_vsububsat_dv_alt
    0U,	// V6_vsubuhsat_alt
    0U,	// V6_vsubuhsat_dv_alt
    0U,	// V6_vsubuhw_alt
    0U,	// V6_vsubuwsat_alt
    0U,	// V6_vsubuwsat_dv_alt
    0U,	// V6_vsubw_alt
    0U,	// V6_vsubw_dv_alt
    0U,	// V6_vsubwnq_alt
    0U,	// V6_vsubwq_alt
    0U,	// V6_vsubwsat_alt
    0U,	// V6_vsubwsat_dv_alt
    0U,	// V6_vtmpyb_acc_alt
    0U,	// V6_vtmpyb_alt
    0U,	// V6_vtmpybus_acc_alt
    0U,	// V6_vtmpybus_alt
    0U,	// V6_vtmpyhb_acc_alt
    0U,	// V6_vtmpyhb_alt
    0U,	// V6_vtran2x2_map
    0U,	// V6_vunpackb_alt
    0U,	// V6_vunpackh_alt
    0U,	// V6_vunpackob_alt
    0U,	// V6_vunpackoh_alt
    0U,	// V6_vunpackub_alt
    0U,	// V6_vunpackuh_alt
    0U,	// V6_vzb_alt
    0U,	// V6_vzh_alt
    0U,	// V6_zld0
    0U,	// V6_zldp0
    0U,	// Y2_dcfetch
    0U,	// dup_A2_add
    0U,	// dup_A2_addi
    0U,	// dup_A2_andir
    0U,	// dup_A2_combineii
    0U,	// dup_A2_sxtb
    0U,	// dup_A2_sxth
    0U,	// dup_A2_tfr
    0U,	// dup_A2_tfrsi
    0U,	// dup_A2_zxtb
    0U,	// dup_A2_zxth
    0U,	// dup_A4_combineii
    0U,	// dup_A4_combineir
    0U,	// dup_A4_combineri
    0U,	// dup_C2_cmoveif
    0U,	// dup_C2_cmoveit
    0U,	// dup_C2_cmovenewif
    0U,	// dup_C2_cmovenewit
    0U,	// dup_C2_cmpeqi
    0U,	// dup_L2_deallocframe
    0U,	// dup_L2_loadrb_io
    0U,	// dup_L2_loadrd_io
    0U,	// dup_L2_loadrh_io
    0U,	// dup_L2_loadri_io
    0U,	// dup_L2_loadrub_io
    0U,	// dup_L2_loadruh_io
    0U,	// dup_S2_allocframe
    0U,	// dup_S2_storerb_io
    0U,	// dup_S2_storerd_io
    0U,	// dup_S2_storerh_io
    0U,	// dup_S2_storeri_io
    0U,	// dup_S4_storeirb_io
    0U,	// dup_S4_storeiri_io
    0U,	// A2_abs
    0U,	// A2_absp
    0U,	// A2_abssat
    0U,	// A2_add
    0U,	// A2_addh_h16_hh
    0U,	// A2_addh_h16_hl
    0U,	// A2_addh_h16_lh
    0U,	// A2_addh_h16_ll
    0U,	// A2_addh_h16_sat_hh
    0U,	// A2_addh_h16_sat_hl
    0U,	// A2_addh_h16_sat_lh
    0U,	// A2_addh_h16_sat_ll
    0U,	// A2_addh_l16_hl
    0U,	// A2_addh_l16_ll
    0U,	// A2_addh_l16_sat_hl
    0U,	// A2_addh_l16_sat_ll
    0U,	// A2_addi
    0U,	// A2_addp
    0U,	// A2_addpsat
    0U,	// A2_addsat
    0U,	// A2_addsph
    0U,	// A2_addspl
    0U,	// A2_and
    0U,	// A2_andir
    0U,	// A2_andp
    0U,	// A2_aslh
    0U,	// A2_asrh
    0U,	// A2_combine_hh
    0U,	// A2_combine_hl
    0U,	// A2_combine_lh
    0U,	// A2_combine_ll
    0U,	// A2_combineii
    0U,	// A2_combinew
    0U,	// A2_max
    0U,	// A2_maxp
    0U,	// A2_maxu
    0U,	// A2_maxup
    0U,	// A2_min
    0U,	// A2_minp
    0U,	// A2_minu
    0U,	// A2_minup
    0U,	// A2_negp
    0U,	// A2_negsat
    0U,	// A2_nop
    0U,	// A2_notp
    0U,	// A2_or
    0U,	// A2_orir
    0U,	// A2_orp
    0U,	// A2_paddf
    0U,	// A2_paddfnew
    0U,	// A2_paddif
    0U,	// A2_paddifnew
    0U,	// A2_paddit
    0U,	// A2_padditnew
    0U,	// A2_paddt
    0U,	// A2_paddtnew
    0U,	// A2_pandf
    0U,	// A2_pandfnew
    0U,	// A2_pandt
    0U,	// A2_pandtnew
    0U,	// A2_porf
    0U,	// A2_porfnew
    0U,	// A2_port
    0U,	// A2_portnew
    0U,	// A2_psubf
    0U,	// A2_psubfnew
    0U,	// A2_psubt
    0U,	// A2_psubtnew
    0U,	// A2_pxorf
    0U,	// A2_pxorfnew
    0U,	// A2_pxort
    0U,	// A2_pxortnew
    0U,	// A2_roundsat
    0U,	// A2_sat
    0U,	// A2_satb
    0U,	// A2_sath
    0U,	// A2_satub
    0U,	// A2_satuh
    0U,	// A2_sub
    0U,	// A2_subh_h16_hh
    0U,	// A2_subh_h16_hl
    0U,	// A2_subh_h16_lh
    0U,	// A2_subh_h16_ll
    0U,	// A2_subh_h16_sat_hh
    0U,	// A2_subh_h16_sat_hl
    0U,	// A2_subh_h16_sat_lh
    0U,	// A2_subh_h16_sat_ll
    0U,	// A2_subh_l16_hl
    0U,	// A2_subh_l16_ll
    0U,	// A2_subh_l16_sat_hl
    0U,	// A2_subh_l16_sat_ll
    0U,	// A2_subp
    0U,	// A2_subri
    0U,	// A2_subsat
    0U,	// A2_svaddh
    0U,	// A2_svaddhs
    0U,	// A2_svadduhs
    0U,	// A2_svavgh
    0U,	// A2_svavghs
    0U,	// A2_svnavgh
    0U,	// A2_svsubh
    0U,	// A2_svsubhs
    0U,	// A2_svsubuhs
    0U,	// A2_swiz
    0U,	// A2_sxtb
    0U,	// A2_sxth
    0U,	// A2_sxtw
    0U,	// A2_tfr
    0U,	// A2_tfrcrr
    0U,	// A2_tfrih
    0U,	// A2_tfril
    0U,	// A2_tfrrcr
    0U,	// A2_tfrsi
    0U,	// A2_vabsh
    0U,	// A2_vabshsat
    0U,	// A2_vabsw
    0U,	// A2_vabswsat
    0U,	// A2_vaddh
    0U,	// A2_vaddhs
    0U,	// A2_vaddub
    0U,	// A2_vaddubs
    0U,	// A2_vadduhs
    0U,	// A2_vaddw
    0U,	// A2_vaddws
    0U,	// A2_vavgh
    0U,	// A2_vavghcr
    0U,	// A2_vavghr
    0U,	// A2_vavgub
    0U,	// A2_vavgubr
    0U,	// A2_vavguh
    0U,	// A2_vavguhr
    0U,	// A2_vavguw
    0U,	// A2_vavguwr
    0U,	// A2_vavgw
    0U,	// A2_vavgwcr
    0U,	// A2_vavgwr
    0U,	// A2_vcmpbeq
    0U,	// A2_vcmpbgtu
    0U,	// A2_vcmpheq
    0U,	// A2_vcmphgt
    0U,	// A2_vcmphgtu
    0U,	// A2_vcmpweq
    0U,	// A2_vcmpwgt
    0U,	// A2_vcmpwgtu
    0U,	// A2_vconj
    0U,	// A2_vmaxb
    0U,	// A2_vmaxh
    0U,	// A2_vmaxub
    0U,	// A2_vmaxuh
    0U,	// A2_vmaxuw
    0U,	// A2_vmaxw
    0U,	// A2_vminb
    0U,	// A2_vminh
    0U,	// A2_vminub
    0U,	// A2_vminuh
    0U,	// A2_vminuw
    0U,	// A2_vminw
    0U,	// A2_vnavgh
    0U,	// A2_vnavghcr
    0U,	// A2_vnavghr
    0U,	// A2_vnavgw
    0U,	// A2_vnavgwcr
    0U,	// A2_vnavgwr
    0U,	// A2_vraddub
    0U,	// A2_vraddub_acc
    0U,	// A2_vrsadub
    0U,	// A2_vrsadub_acc
    0U,	// A2_vsubh
    0U,	// A2_vsubhs
    0U,	// A2_vsubub
    0U,	// A2_vsububs
    0U,	// A2_vsubuhs
    0U,	// A2_vsubw
    0U,	// A2_vsubws
    0U,	// A2_xor
    0U,	// A2_xorp
    0U,	// A2_zxth
    0U,	// A4_addp_c
    0U,	// A4_andn
    0U,	// A4_andnp
    0U,	// A4_bitsplit
    0U,	// A4_bitspliti
    0U,	// A4_boundscheck_hi
    0U,	// A4_boundscheck_lo
    0U,	// A4_cmpbeq
    0U,	// A4_cmpbeqi
    0U,	// A4_cmpbgt
    0U,	// A4_cmpbgti
    0U,	// A4_cmpbgtu
    0U,	// A4_cmpbgtui
    0U,	// A4_cmpheq
    0U,	// A4_cmpheqi
    0U,	// A4_cmphgt
    0U,	// A4_cmphgti
    0U,	// A4_cmphgtu
    0U,	// A4_cmphgtui
    0U,	// A4_combineii
    0U,	// A4_combineir
    0U,	// A4_combineri
    0U,	// A4_cround_ri
    0U,	// A4_cround_rr
    0U,	// A4_ext
    0U,	// A4_modwrapu
    0U,	// A4_orn
    0U,	// A4_ornp
    0U,	// A4_paslhf
    0U,	// A4_paslhfnew
    0U,	// A4_paslht
    0U,	// A4_paslhtnew
    0U,	// A4_pasrhf
    0U,	// A4_pasrhfnew
    0U,	// A4_pasrht
    0U,	// A4_pasrhtnew
    0U,	// A4_psxtbf
    0U,	// A4_psxtbfnew
    0U,	// A4_psxtbt
    0U,	// A4_psxtbtnew
    0U,	// A4_psxthf
    0U,	// A4_psxthfnew
    0U,	// A4_psxtht
    0U,	// A4_psxthtnew
    0U,	// A4_pzxtbf
    0U,	// A4_pzxtbfnew
    0U,	// A4_pzxtbt
    0U,	// A4_pzxtbtnew
    0U,	// A4_pzxthf
    0U,	// A4_pzxthfnew
    0U,	// A4_pzxtht
    0U,	// A4_pzxthtnew
    0U,	// A4_rcmpeq
    0U,	// A4_rcmpeqi
    0U,	// A4_rcmpneq
    0U,	// A4_rcmpneqi
    0U,	// A4_round_ri
    0U,	// A4_round_ri_sat
    0U,	// A4_round_rr
    0U,	// A4_round_rr_sat
    0U,	// A4_subp_c
    0U,	// A4_tfrcpp
    0U,	// A4_tfrpcp
    0U,	// A4_tlbmatch
    0U,	// A4_vcmpbeq_any
    0U,	// A4_vcmpbeqi
    0U,	// A4_vcmpbgt
    0U,	// A4_vcmpbgti
    0U,	// A4_vcmpbgtui
    0U,	// A4_vcmpheqi
    0U,	// A4_vcmphgti
    0U,	// A4_vcmphgtui
    0U,	// A4_vcmpweqi
    0U,	// A4_vcmpwgti
    0U,	// A4_vcmpwgtui
    0U,	// A4_vrmaxh
    0U,	// A4_vrmaxuh
    0U,	// A4_vrmaxuw
    0U,	// A4_vrmaxw
    0U,	// A4_vrminh
    0U,	// A4_vrminuh
    0U,	// A4_vrminuw
    0U,	// A4_vrminw
    0U,	// A5_ACS
    0U,	// A5_vaddhubs
    0U,	// A6_vcmpbeq_notany
    0U,	// A6_vminub_RdP
    0U,	// A7_clip
    0U,	// A7_croundd_ri
    0U,	// A7_croundd_rr
    0U,	// A7_vclip
    0U,	// C2_all8
    0U,	// C2_and
    0U,	// C2_andn
    0U,	// C2_any8
    0U,	// C2_bitsclr
    0U,	// C2_bitsclri
    0U,	// C2_bitsset
    0U,	// C2_ccombinewf
    0U,	// C2_ccombinewnewf
    0U,	// C2_ccombinewnewt
    0U,	// C2_ccombinewt
    0U,	// C2_cmoveif
    0U,	// C2_cmoveit
    0U,	// C2_cmovenewif
    0U,	// C2_cmovenewit
    0U,	// C2_cmpeq
    0U,	// C2_cmpeqi
    0U,	// C2_cmpeqp
    0U,	// C2_cmpgt
    0U,	// C2_cmpgti
    0U,	// C2_cmpgtp
    0U,	// C2_cmpgtu
    0U,	// C2_cmpgtui
    0U,	// C2_cmpgtup
    0U,	// C2_mask
    0U,	// C2_mux
    8U,	// C2_muxii
    8U,	// C2_muxir
    0U,	// C2_muxri
    0U,	// C2_not
    0U,	// C2_or
    0U,	// C2_orn
    0U,	// C2_tfrpr
    0U,	// C2_tfrrp
    0U,	// C2_vitpack
    0U,	// C2_vmux
    0U,	// C2_xor
    0U,	// C4_addipc
    0U,	// C4_and_and
    0U,	// C4_and_andn
    0U,	// C4_and_or
    0U,	// C4_and_orn
    0U,	// C4_cmplte
    0U,	// C4_cmpltei
    0U,	// C4_cmplteu
    0U,	// C4_cmplteui
    0U,	// C4_cmpneq
    0U,	// C4_cmpneqi
    0U,	// C4_fastcorner9
    0U,	// C4_fastcorner9_not
    0U,	// C4_nbitsclr
    0U,	// C4_nbitsclri
    0U,	// C4_nbitsset
    0U,	// C4_or_and
    0U,	// C4_or_andn
    0U,	// C4_or_or
    0U,	// C4_or_orn
    0U,	// CALLProfile
    0U,	// CONST32
    0U,	// CONST64
    0U,	// DuplexIClass0
    0U,	// DuplexIClass1
    0U,	// DuplexIClass2
    0U,	// DuplexIClass3
    0U,	// DuplexIClass4
    0U,	// DuplexIClass5
    0U,	// DuplexIClass6
    0U,	// DuplexIClass7
    0U,	// DuplexIClass8
    0U,	// DuplexIClass9
    0U,	// DuplexIClassA
    0U,	// DuplexIClassB
    0U,	// DuplexIClassC
    0U,	// DuplexIClassD
    0U,	// DuplexIClassE
    0U,	// DuplexIClassF
    0U,	// EH_RETURN_JMPR
    0U,	// F2_conv_d2df
    0U,	// F2_conv_d2sf
    0U,	// F2_conv_df2d
    0U,	// F2_conv_df2d_chop
    0U,	// F2_conv_df2sf
    0U,	// F2_conv_df2ud
    0U,	// F2_conv_df2ud_chop
    0U,	// F2_conv_df2uw
    0U,	// F2_conv_df2uw_chop
    0U,	// F2_conv_df2w
    0U,	// F2_conv_df2w_chop
    0U,	// F2_conv_sf2d
    0U,	// F2_conv_sf2d_chop
    0U,	// F2_conv_sf2df
    0U,	// F2_conv_sf2ud
    0U,	// F2_conv_sf2ud_chop
    0U,	// F2_conv_sf2uw
    0U,	// F2_conv_sf2uw_chop
    0U,	// F2_conv_sf2w
    0U,	// F2_conv_sf2w_chop
    0U,	// F2_conv_ud2df
    0U,	// F2_conv_ud2sf
    0U,	// F2_conv_uw2df
    0U,	// F2_conv_uw2sf
    0U,	// F2_conv_w2df
    0U,	// F2_conv_w2sf
    0U,	// F2_dfadd
    0U,	// F2_dfclass
    0U,	// F2_dfcmpeq
    0U,	// F2_dfcmpge
    0U,	// F2_dfcmpgt
    0U,	// F2_dfcmpuo
    0U,	// F2_dfimm_n
    0U,	// F2_dfimm_p
    0U,	// F2_dfmax
    0U,	// F2_dfmin
    0U,	// F2_dfmpyfix
    0U,	// F2_dfmpyhh
    0U,	// F2_dfmpylh
    0U,	// F2_dfmpyll
    0U,	// F2_dfsub
    0U,	// F2_sfadd
    0U,	// F2_sfclass
    0U,	// F2_sfcmpeq
    0U,	// F2_sfcmpge
    0U,	// F2_sfcmpgt
    0U,	// F2_sfcmpuo
    0U,	// F2_sffixupd
    0U,	// F2_sffixupn
    0U,	// F2_sffixupr
    0U,	// F2_sffma
    0U,	// F2_sffma_lib
    0U,	// F2_sffma_sc
    0U,	// F2_sffms
    0U,	// F2_sffms_lib
    0U,	// F2_sfimm_n
    0U,	// F2_sfimm_p
    0U,	// F2_sfinvsqrta
    0U,	// F2_sfmax
    0U,	// F2_sfmin
    0U,	// F2_sfmpy
    0U,	// F2_sfrecipa
    0U,	// F2_sfsub
    0U,	// G4_tfrgcpp
    0U,	// G4_tfrgcrr
    0U,	// G4_tfrgpcp
    0U,	// G4_tfrgrcr
    0U,	// HI
    0U,	// J2_call
    0U,	// J2_callf
    0U,	// J2_callr
    0U,	// J2_callrf
    0U,	// J2_callrt
    0U,	// J2_callt
    0U,	// J2_jump
    0U,	// J2_jumpf
    0U,	// J2_jumpfnew
    0U,	// J2_jumpfnewpt
    0U,	// J2_jumpfpt
    0U,	// J2_jumpr
    0U,	// J2_jumprf
    0U,	// J2_jumprfnew
    0U,	// J2_jumprfnewpt
    0U,	// J2_jumprfpt
    0U,	// J2_jumprgtez
    0U,	// J2_jumprgtezpt
    0U,	// J2_jumprltez
    0U,	// J2_jumprltezpt
    0U,	// J2_jumprnz
    0U,	// J2_jumprnzpt
    0U,	// J2_jumprt
    0U,	// J2_jumprtnew
    0U,	// J2_jumprtnewpt
    0U,	// J2_jumprtpt
    0U,	// J2_jumprz
    0U,	// J2_jumprzpt
    0U,	// J2_jumpt
    0U,	// J2_jumptnew
    0U,	// J2_jumptnewpt
    0U,	// J2_jumptpt
    0U,	// J2_loop0i
    0U,	// J2_loop0iext
    0U,	// J2_loop0r
    0U,	// J2_loop0rext
    0U,	// J2_loop1i
    0U,	// J2_loop1iext
    0U,	// J2_loop1r
    0U,	// J2_loop1rext
    0U,	// J2_pause
    0U,	// J2_ploop1si
    0U,	// J2_ploop1sr
    0U,	// J2_ploop2si
    0U,	// J2_ploop2sr
    0U,	// J2_ploop3si
    0U,	// J2_ploop3sr
    0U,	// J2_trap0
    0U,	// J2_trap1
    0U,	// J4_cmpeq_f_jumpnv_nt
    0U,	// J4_cmpeq_f_jumpnv_t
    0U,	// J4_cmpeq_fp0_jump_nt
    0U,	// J4_cmpeq_fp0_jump_t
    0U,	// J4_cmpeq_fp1_jump_nt
    0U,	// J4_cmpeq_fp1_jump_t
    0U,	// J4_cmpeq_t_jumpnv_nt
    0U,	// J4_cmpeq_t_jumpnv_t
    0U,	// J4_cmpeq_tp0_jump_nt
    0U,	// J4_cmpeq_tp0_jump_t
    0U,	// J4_cmpeq_tp1_jump_nt
    0U,	// J4_cmpeq_tp1_jump_t
    0U,	// J4_cmpeqi_f_jumpnv_nt
    0U,	// J4_cmpeqi_f_jumpnv_t
    0U,	// J4_cmpeqi_fp0_jump_nt
    0U,	// J4_cmpeqi_fp0_jump_t
    0U,	// J4_cmpeqi_fp1_jump_nt
    0U,	// J4_cmpeqi_fp1_jump_t
    0U,	// J4_cmpeqi_t_jumpnv_nt
    0U,	// J4_cmpeqi_t_jumpnv_t
    0U,	// J4_cmpeqi_tp0_jump_nt
    0U,	// J4_cmpeqi_tp0_jump_t
    0U,	// J4_cmpeqi_tp1_jump_nt
    0U,	// J4_cmpeqi_tp1_jump_t
    0U,	// J4_cmpeqn1_f_jumpnv_nt
    0U,	// J4_cmpeqn1_f_jumpnv_t
    0U,	// J4_cmpeqn1_fp0_jump_nt
    0U,	// J4_cmpeqn1_fp0_jump_t
    0U,	// J4_cmpeqn1_fp1_jump_nt
    0U,	// J4_cmpeqn1_fp1_jump_t
    0U,	// J4_cmpeqn1_t_jumpnv_nt
    0U,	// J4_cmpeqn1_t_jumpnv_t
    0U,	// J4_cmpeqn1_tp0_jump_nt
    0U,	// J4_cmpeqn1_tp0_jump_t
    0U,	// J4_cmpeqn1_tp1_jump_nt
    0U,	// J4_cmpeqn1_tp1_jump_t
    0U,	// J4_cmpgt_f_jumpnv_nt
    0U,	// J4_cmpgt_f_jumpnv_t
    0U,	// J4_cmpgt_fp0_jump_nt
    0U,	// J4_cmpgt_fp0_jump_t
    0U,	// J4_cmpgt_fp1_jump_nt
    0U,	// J4_cmpgt_fp1_jump_t
    0U,	// J4_cmpgt_t_jumpnv_nt
    0U,	// J4_cmpgt_t_jumpnv_t
    0U,	// J4_cmpgt_tp0_jump_nt
    0U,	// J4_cmpgt_tp0_jump_t
    0U,	// J4_cmpgt_tp1_jump_nt
    0U,	// J4_cmpgt_tp1_jump_t
    0U,	// J4_cmpgti_f_jumpnv_nt
    0U,	// J4_cmpgti_f_jumpnv_t
    0U,	// J4_cmpgti_fp0_jump_nt
    0U,	// J4_cmpgti_fp0_jump_t
    0U,	// J4_cmpgti_fp1_jump_nt
    0U,	// J4_cmpgti_fp1_jump_t
    0U,	// J4_cmpgti_t_jumpnv_nt
    0U,	// J4_cmpgti_t_jumpnv_t
    0U,	// J4_cmpgti_tp0_jump_nt
    0U,	// J4_cmpgti_tp0_jump_t
    0U,	// J4_cmpgti_tp1_jump_nt
    0U,	// J4_cmpgti_tp1_jump_t
    0U,	// J4_cmpgtn1_f_jumpnv_nt
    0U,	// J4_cmpgtn1_f_jumpnv_t
    0U,	// J4_cmpgtn1_fp0_jump_nt
    0U,	// J4_cmpgtn1_fp0_jump_t
    0U,	// J4_cmpgtn1_fp1_jump_nt
    0U,	// J4_cmpgtn1_fp1_jump_t
    0U,	// J4_cmpgtn1_t_jumpnv_nt
    0U,	// J4_cmpgtn1_t_jumpnv_t
    0U,	// J4_cmpgtn1_tp0_jump_nt
    0U,	// J4_cmpgtn1_tp0_jump_t
    0U,	// J4_cmpgtn1_tp1_jump_nt
    0U,	// J4_cmpgtn1_tp1_jump_t
    0U,	// J4_cmpgtu_f_jumpnv_nt
    0U,	// J4_cmpgtu_f_jumpnv_t
    0U,	// J4_cmpgtu_fp0_jump_nt
    0U,	// J4_cmpgtu_fp0_jump_t
    0U,	// J4_cmpgtu_fp1_jump_nt
    0U,	// J4_cmpgtu_fp1_jump_t
    0U,	// J4_cmpgtu_t_jumpnv_nt
    0U,	// J4_cmpgtu_t_jumpnv_t
    0U,	// J4_cmpgtu_tp0_jump_nt
    0U,	// J4_cmpgtu_tp0_jump_t
    0U,	// J4_cmpgtu_tp1_jump_nt
    0U,	// J4_cmpgtu_tp1_jump_t
    0U,	// J4_cmpgtui_f_jumpnv_nt
    0U,	// J4_cmpgtui_f_jumpnv_t
    0U,	// J4_cmpgtui_fp0_jump_nt
    0U,	// J4_cmpgtui_fp0_jump_t
    0U,	// J4_cmpgtui_fp1_jump_nt
    0U,	// J4_cmpgtui_fp1_jump_t
    0U,	// J4_cmpgtui_t_jumpnv_nt
    0U,	// J4_cmpgtui_t_jumpnv_t
    0U,	// J4_cmpgtui_tp0_jump_nt
    0U,	// J4_cmpgtui_tp0_jump_t
    0U,	// J4_cmpgtui_tp1_jump_nt
    0U,	// J4_cmpgtui_tp1_jump_t
    0U,	// J4_cmplt_f_jumpnv_nt
    0U,	// J4_cmplt_f_jumpnv_t
    0U,	// J4_cmplt_t_jumpnv_nt
    0U,	// J4_cmplt_t_jumpnv_t
    0U,	// J4_cmpltu_f_jumpnv_nt
    0U,	// J4_cmpltu_f_jumpnv_t
    0U,	// J4_cmpltu_t_jumpnv_nt
    0U,	// J4_cmpltu_t_jumpnv_t
    0U,	// J4_hintjumpr
    0U,	// J4_jumpseti
    0U,	// J4_jumpsetr
    0U,	// J4_tstbit0_f_jumpnv_nt
    0U,	// J4_tstbit0_f_jumpnv_t
    0U,	// J4_tstbit0_fp0_jump_nt
    0U,	// J4_tstbit0_fp0_jump_t
    0U,	// J4_tstbit0_fp1_jump_nt
    0U,	// J4_tstbit0_fp1_jump_t
    0U,	// J4_tstbit0_t_jumpnv_nt
    0U,	// J4_tstbit0_t_jumpnv_t
    0U,	// J4_tstbit0_tp0_jump_nt
    0U,	// J4_tstbit0_tp0_jump_t
    0U,	// J4_tstbit0_tp1_jump_nt
    0U,	// J4_tstbit0_tp1_jump_t
    0U,	// L2_deallocframe
    0U,	// L2_loadalignb_io
    0U,	// L2_loadalignb_pbr
    0U,	// L2_loadalignb_pci
    0U,	// L2_loadalignb_pcr
    0U,	// L2_loadalignb_pi
    0U,	// L2_loadalignb_pr
    0U,	// L2_loadalignh_io
    0U,	// L2_loadalignh_pbr
    0U,	// L2_loadalignh_pci
    0U,	// L2_loadalignh_pcr
    0U,	// L2_loadalignh_pi
    0U,	// L2_loadalignh_pr
    0U,	// L2_loadbsw2_io
    0U,	// L2_loadbsw2_pbr
    0U,	// L2_loadbsw2_pci
    0U,	// L2_loadbsw2_pcr
    0U,	// L2_loadbsw2_pi
    0U,	// L2_loadbsw2_pr
    0U,	// L2_loadbsw4_io
    0U,	// L2_loadbsw4_pbr
    0U,	// L2_loadbsw4_pci
    0U,	// L2_loadbsw4_pcr
    0U,	// L2_loadbsw4_pi
    0U,	// L2_loadbsw4_pr
    0U,	// L2_loadbzw2_io
    0U,	// L2_loadbzw2_pbr
    0U,	// L2_loadbzw2_pci
    0U,	// L2_loadbzw2_pcr
    0U,	// L2_loadbzw2_pi
    0U,	// L2_loadbzw2_pr
    0U,	// L2_loadbzw4_io
    0U,	// L2_loadbzw4_pbr
    0U,	// L2_loadbzw4_pci
    0U,	// L2_loadbzw4_pcr
    0U,	// L2_loadbzw4_pi
    0U,	// L2_loadbzw4_pr
    0U,	// L2_loadrb_io
    0U,	// L2_loadrb_pbr
    0U,	// L2_loadrb_pci
    0U,	// L2_loadrb_pcr
    0U,	// L2_loadrb_pi
    0U,	// L2_loadrb_pr
    0U,	// L2_loadrbgp
    0U,	// L2_loadrd_io
    0U,	// L2_loadrd_pbr
    0U,	// L2_loadrd_pci
    0U,	// L2_loadrd_pcr
    0U,	// L2_loadrd_pi
    0U,	// L2_loadrd_pr
    0U,	// L2_loadrdgp
    0U,	// L2_loadrh_io
    0U,	// L2_loadrh_pbr
    0U,	// L2_loadrh_pci
    0U,	// L2_loadrh_pcr
    0U,	// L2_loadrh_pi
    0U,	// L2_loadrh_pr
    0U,	// L2_loadrhgp
    0U,	// L2_loadri_io
    0U,	// L2_loadri_pbr
    0U,	// L2_loadri_pci
    0U,	// L2_loadri_pcr
    0U,	// L2_loadri_pi
    0U,	// L2_loadri_pr
    0U,	// L2_loadrigp
    0U,	// L2_loadrub_io
    0U,	// L2_loadrub_pbr
    0U,	// L2_loadrub_pci
    0U,	// L2_loadrub_pcr
    0U,	// L2_loadrub_pi
    0U,	// L2_loadrub_pr
    0U,	// L2_loadrubgp
    0U,	// L2_loadruh_io
    0U,	// L2_loadruh_pbr
    0U,	// L2_loadruh_pci
    0U,	// L2_loadruh_pcr
    0U,	// L2_loadruh_pi
    0U,	// L2_loadruh_pr
    0U,	// L2_loadruhgp
    0U,	// L2_loadw_aq
    0U,	// L2_loadw_locked
    0U,	// L2_ploadrbf_io
    0U,	// L2_ploadrbf_pi
    0U,	// L2_ploadrbfnew_io
    0U,	// L2_ploadrbfnew_pi
    0U,	// L2_ploadrbt_io
    0U,	// L2_ploadrbt_pi
    0U,	// L2_ploadrbtnew_io
    0U,	// L2_ploadrbtnew_pi
    0U,	// L2_ploadrdf_io
    0U,	// L2_ploadrdf_pi
    0U,	// L2_ploadrdfnew_io
    0U,	// L2_ploadrdfnew_pi
    0U,	// L2_ploadrdt_io
    0U,	// L2_ploadrdt_pi
    0U,	// L2_ploadrdtnew_io
    0U,	// L2_ploadrdtnew_pi
    0U,	// L2_ploadrhf_io
    0U,	// L2_ploadrhf_pi
    0U,	// L2_ploadrhfnew_io
    0U,	// L2_ploadrhfnew_pi
    0U,	// L2_ploadrht_io
    0U,	// L2_ploadrht_pi
    0U,	// L2_ploadrhtnew_io
    0U,	// L2_ploadrhtnew_pi
    0U,	// L2_ploadrif_io
    0U,	// L2_ploadrif_pi
    0U,	// L2_ploadrifnew_io
    0U,	// L2_ploadrifnew_pi
    0U,	// L2_ploadrit_io
    0U,	// L2_ploadrit_pi
    0U,	// L2_ploadritnew_io
    0U,	// L2_ploadritnew_pi
    0U,	// L2_ploadrubf_io
    0U,	// L2_ploadrubf_pi
    0U,	// L2_ploadrubfnew_io
    0U,	// L2_ploadrubfnew_pi
    0U,	// L2_ploadrubt_io
    0U,	// L2_ploadrubt_pi
    0U,	// L2_ploadrubtnew_io
    0U,	// L2_ploadrubtnew_pi
    0U,	// L2_ploadruhf_io
    0U,	// L2_ploadruhf_pi
    0U,	// L2_ploadruhfnew_io
    0U,	// L2_ploadruhfnew_pi
    0U,	// L2_ploadruht_io
    0U,	// L2_ploadruht_pi
    0U,	// L2_ploadruhtnew_io
    0U,	// L2_ploadruhtnew_pi
    0U,	// L4_add_memopb_io
    0U,	// L4_add_memoph_io
    0U,	// L4_add_memopw_io
    0U,	// L4_and_memopb_io
    0U,	// L4_and_memoph_io
    0U,	// L4_and_memopw_io
    0U,	// L4_iadd_memopb_io
    0U,	// L4_iadd_memoph_io
    0U,	// L4_iadd_memopw_io
    0U,	// L4_iand_memopb_io
    0U,	// L4_iand_memoph_io
    0U,	// L4_iand_memopw_io
    0U,	// L4_ior_memopb_io
    0U,	// L4_ior_memoph_io
    0U,	// L4_ior_memopw_io
    0U,	// L4_isub_memopb_io
    0U,	// L4_isub_memoph_io
    0U,	// L4_isub_memopw_io
    0U,	// L4_loadalignb_ap
    0U,	// L4_loadalignb_ur
    0U,	// L4_loadalignh_ap
    0U,	// L4_loadalignh_ur
    0U,	// L4_loadbsw2_ap
    0U,	// L4_loadbsw2_ur
    0U,	// L4_loadbsw4_ap
    0U,	// L4_loadbsw4_ur
    0U,	// L4_loadbzw2_ap
    0U,	// L4_loadbzw2_ur
    0U,	// L4_loadbzw4_ap
    0U,	// L4_loadbzw4_ur
    0U,	// L4_loadd_aq
    0U,	// L4_loadd_locked
    0U,	// L4_loadrb_ap
    0U,	// L4_loadrb_rr
    0U,	// L4_loadrb_ur
    0U,	// L4_loadrd_ap
    0U,	// L4_loadrd_rr
    0U,	// L4_loadrd_ur
    0U,	// L4_loadrh_ap
    0U,	// L4_loadrh_rr
    0U,	// L4_loadrh_ur
    0U,	// L4_loadri_ap
    0U,	// L4_loadri_rr
    0U,	// L4_loadri_ur
    0U,	// L4_loadrub_ap
    0U,	// L4_loadrub_rr
    0U,	// L4_loadrub_ur
    0U,	// L4_loadruh_ap
    0U,	// L4_loadruh_rr
    0U,	// L4_loadruh_ur
    0U,	// L4_or_memopb_io
    0U,	// L4_or_memoph_io
    0U,	// L4_or_memopw_io
    0U,	// L4_ploadrbf_abs
    0U,	// L4_ploadrbf_rr
    0U,	// L4_ploadrbfnew_abs
    0U,	// L4_ploadrbfnew_rr
    0U,	// L4_ploadrbt_abs
    0U,	// L4_ploadrbt_rr
    0U,	// L4_ploadrbtnew_abs
    0U,	// L4_ploadrbtnew_rr
    0U,	// L4_ploadrdf_abs
    0U,	// L4_ploadrdf_rr
    0U,	// L4_ploadrdfnew_abs
    0U,	// L4_ploadrdfnew_rr
    0U,	// L4_ploadrdt_abs
    0U,	// L4_ploadrdt_rr
    0U,	// L4_ploadrdtnew_abs
    0U,	// L4_ploadrdtnew_rr
    0U,	// L4_ploadrhf_abs
    0U,	// L4_ploadrhf_rr
    0U,	// L4_ploadrhfnew_abs
    0U,	// L4_ploadrhfnew_rr
    0U,	// L4_ploadrht_abs
    0U,	// L4_ploadrht_rr
    0U,	// L4_ploadrhtnew_abs
    0U,	// L4_ploadrhtnew_rr
    0U,	// L4_ploadrif_abs
    0U,	// L4_ploadrif_rr
    0U,	// L4_ploadrifnew_abs
    0U,	// L4_ploadrifnew_rr
    0U,	// L4_ploadrit_abs
    0U,	// L4_ploadrit_rr
    0U,	// L4_ploadritnew_abs
    0U,	// L4_ploadritnew_rr
    0U,	// L4_ploadrubf_abs
    0U,	// L4_ploadrubf_rr
    0U,	// L4_ploadrubfnew_abs
    0U,	// L4_ploadrubfnew_rr
    0U,	// L4_ploadrubt_abs
    0U,	// L4_ploadrubt_rr
    0U,	// L4_ploadrubtnew_abs
    0U,	// L4_ploadrubtnew_rr
    0U,	// L4_ploadruhf_abs
    0U,	// L4_ploadruhf_rr
    0U,	// L4_ploadruhfnew_abs
    0U,	// L4_ploadruhfnew_rr
    0U,	// L4_ploadruht_abs
    0U,	// L4_ploadruht_rr
    0U,	// L4_ploadruhtnew_abs
    0U,	// L4_ploadruhtnew_rr
    0U,	// L4_return
    0U,	// L4_return_f
    0U,	// L4_return_fnew_pnt
    0U,	// L4_return_fnew_pt
    0U,	// L4_return_t
    0U,	// L4_return_tnew_pnt
    0U,	// L4_return_tnew_pt
    0U,	// L4_sub_memopb_io
    0U,	// L4_sub_memoph_io
    0U,	// L4_sub_memopw_io
    0U,	// L6_memcpy
    0U,	// LO
    0U,	// M2_acci
    0U,	// M2_accii
    0U,	// M2_cmaci_s0
    0U,	// M2_cmacr_s0
    0U,	// M2_cmacs_s0
    0U,	// M2_cmacs_s1
    0U,	// M2_cmacsc_s0
    0U,	// M2_cmacsc_s1
    0U,	// M2_cmpyi_s0
    0U,	// M2_cmpyr_s0
    0U,	// M2_cmpyrs_s0
    0U,	// M2_cmpyrs_s1
    0U,	// M2_cmpyrsc_s0
    0U,	// M2_cmpyrsc_s1
    0U,	// M2_cmpys_s0
    0U,	// M2_cmpys_s1
    0U,	// M2_cmpysc_s0
    0U,	// M2_cmpysc_s1
    0U,	// M2_cnacs_s0
    0U,	// M2_cnacs_s1
    0U,	// M2_cnacsc_s0
    0U,	// M2_cnacsc_s1
    0U,	// M2_dpmpyss_acc_s0
    0U,	// M2_dpmpyss_nac_s0
    0U,	// M2_dpmpyss_rnd_s0
    0U,	// M2_dpmpyss_s0
    0U,	// M2_dpmpyuu_acc_s0
    0U,	// M2_dpmpyuu_nac_s0
    0U,	// M2_dpmpyuu_s0
    0U,	// M2_hmmpyh_rs1
    0U,	// M2_hmmpyh_s1
    0U,	// M2_hmmpyl_rs1
    0U,	// M2_hmmpyl_s1
    0U,	// M2_maci
    0U,	// M2_macsin
    0U,	// M2_macsip
    0U,	// M2_mmachs_rs0
    0U,	// M2_mmachs_rs1
    0U,	// M2_mmachs_s0
    0U,	// M2_mmachs_s1
    0U,	// M2_mmacls_rs0
    0U,	// M2_mmacls_rs1
    0U,	// M2_mmacls_s0
    0U,	// M2_mmacls_s1
    0U,	// M2_mmacuhs_rs0
    0U,	// M2_mmacuhs_rs1
    0U,	// M2_mmacuhs_s0
    0U,	// M2_mmacuhs_s1
    0U,	// M2_mmaculs_rs0
    0U,	// M2_mmaculs_rs1
    0U,	// M2_mmaculs_s0
    0U,	// M2_mmaculs_s1
    0U,	// M2_mmpyh_rs0
    0U,	// M2_mmpyh_rs1
    0U,	// M2_mmpyh_s0
    0U,	// M2_mmpyh_s1
    0U,	// M2_mmpyl_rs0
    0U,	// M2_mmpyl_rs1
    0U,	// M2_mmpyl_s0
    0U,	// M2_mmpyl_s1
    0U,	// M2_mmpyuh_rs0
    0U,	// M2_mmpyuh_rs1
    0U,	// M2_mmpyuh_s0
    0U,	// M2_mmpyuh_s1
    0U,	// M2_mmpyul_rs0
    0U,	// M2_mmpyul_rs1
    0U,	// M2_mmpyul_s0
    0U,	// M2_mmpyul_s1
    0U,	// M2_mnaci
    0U,	// M2_mpy_acc_hh_s0
    0U,	// M2_mpy_acc_hh_s1
    0U,	// M2_mpy_acc_hl_s0
    0U,	// M2_mpy_acc_hl_s1
    0U,	// M2_mpy_acc_lh_s0
    0U,	// M2_mpy_acc_lh_s1
    0U,	// M2_mpy_acc_ll_s0
    0U,	// M2_mpy_acc_ll_s1
    0U,	// M2_mpy_acc_sat_hh_s0
    0U,	// M2_mpy_acc_sat_hh_s1
    0U,	// M2_mpy_acc_sat_hl_s0
    0U,	// M2_mpy_acc_sat_hl_s1
    0U,	// M2_mpy_acc_sat_lh_s0
    0U,	// M2_mpy_acc_sat_lh_s1
    0U,	// M2_mpy_acc_sat_ll_s0
    0U,	// M2_mpy_acc_sat_ll_s1
    0U,	// M2_mpy_hh_s0
    0U,	// M2_mpy_hh_s1
    0U,	// M2_mpy_hl_s0
    0U,	// M2_mpy_hl_s1
    0U,	// M2_mpy_lh_s0
    0U,	// M2_mpy_lh_s1
    0U,	// M2_mpy_ll_s0
    0U,	// M2_mpy_ll_s1
    0U,	// M2_mpy_nac_hh_s0
    0U,	// M2_mpy_nac_hh_s1
    0U,	// M2_mpy_nac_hl_s0
    0U,	// M2_mpy_nac_hl_s1
    0U,	// M2_mpy_nac_lh_s0
    0U,	// M2_mpy_nac_lh_s1
    0U,	// M2_mpy_nac_ll_s0
    0U,	// M2_mpy_nac_ll_s1
    0U,	// M2_mpy_nac_sat_hh_s0
    0U,	// M2_mpy_nac_sat_hh_s1
    0U,	// M2_mpy_nac_sat_hl_s0
    0U,	// M2_mpy_nac_sat_hl_s1
    0U,	// M2_mpy_nac_sat_lh_s0
    0U,	// M2_mpy_nac_sat_lh_s1
    0U,	// M2_mpy_nac_sat_ll_s0
    0U,	// M2_mpy_nac_sat_ll_s1
    0U,	// M2_mpy_rnd_hh_s0
    0U,	// M2_mpy_rnd_hh_s1
    0U,	// M2_mpy_rnd_hl_s0
    0U,	// M2_mpy_rnd_hl_s1
    0U,	// M2_mpy_rnd_lh_s0
    0U,	// M2_mpy_rnd_lh_s1
    0U,	// M2_mpy_rnd_ll_s0
    0U,	// M2_mpy_rnd_ll_s1
    0U,	// M2_mpy_sat_hh_s0
    0U,	// M2_mpy_sat_hh_s1
    0U,	// M2_mpy_sat_hl_s0
    0U,	// M2_mpy_sat_hl_s1
    0U,	// M2_mpy_sat_lh_s0
    0U,	// M2_mpy_sat_lh_s1
    0U,	// M2_mpy_sat_ll_s0
    0U,	// M2_mpy_sat_ll_s1
    0U,	// M2_mpy_sat_rnd_hh_s0
    0U,	// M2_mpy_sat_rnd_hh_s1
    0U,	// M2_mpy_sat_rnd_hl_s0
    0U,	// M2_mpy_sat_rnd_hl_s1
    0U,	// M2_mpy_sat_rnd_lh_s0
    0U,	// M2_mpy_sat_rnd_lh_s1
    0U,	// M2_mpy_sat_rnd_ll_s0
    0U,	// M2_mpy_sat_rnd_ll_s1
    0U,	// M2_mpy_up
    0U,	// M2_mpy_up_s1
    0U,	// M2_mpy_up_s1_sat
    0U,	// M2_mpyd_acc_hh_s0
    0U,	// M2_mpyd_acc_hh_s1
    0U,	// M2_mpyd_acc_hl_s0
    0U,	// M2_mpyd_acc_hl_s1
    0U,	// M2_mpyd_acc_lh_s0
    0U,	// M2_mpyd_acc_lh_s1
    0U,	// M2_mpyd_acc_ll_s0
    0U,	// M2_mpyd_acc_ll_s1
    0U,	// M2_mpyd_hh_s0
    0U,	// M2_mpyd_hh_s1
    0U,	// M2_mpyd_hl_s0
    0U,	// M2_mpyd_hl_s1
    0U,	// M2_mpyd_lh_s0
    0U,	// M2_mpyd_lh_s1
    0U,	// M2_mpyd_ll_s0
    0U,	// M2_mpyd_ll_s1
    0U,	// M2_mpyd_nac_hh_s0
    0U,	// M2_mpyd_nac_hh_s1
    0U,	// M2_mpyd_nac_hl_s0
    0U,	// M2_mpyd_nac_hl_s1
    0U,	// M2_mpyd_nac_lh_s0
    0U,	// M2_mpyd_nac_lh_s1
    0U,	// M2_mpyd_nac_ll_s0
    0U,	// M2_mpyd_nac_ll_s1
    0U,	// M2_mpyd_rnd_hh_s0
    0U,	// M2_mpyd_rnd_hh_s1
    0U,	// M2_mpyd_rnd_hl_s0
    0U,	// M2_mpyd_rnd_hl_s1
    0U,	// M2_mpyd_rnd_lh_s0
    0U,	// M2_mpyd_rnd_lh_s1
    0U,	// M2_mpyd_rnd_ll_s0
    0U,	// M2_mpyd_rnd_ll_s1
    0U,	// M2_mpyi
    0U,	// M2_mpysin
    0U,	// M2_mpysip
    0U,	// M2_mpysu_up
    0U,	// M2_mpyu_acc_hh_s0
    0U,	// M2_mpyu_acc_hh_s1
    0U,	// M2_mpyu_acc_hl_s0
    0U,	// M2_mpyu_acc_hl_s1
    0U,	// M2_mpyu_acc_lh_s0
    0U,	// M2_mpyu_acc_lh_s1
    0U,	// M2_mpyu_acc_ll_s0
    0U,	// M2_mpyu_acc_ll_s1
    0U,	// M2_mpyu_hh_s0
    0U,	// M2_mpyu_hh_s1
    0U,	// M2_mpyu_hl_s0
    0U,	// M2_mpyu_hl_s1
    0U,	// M2_mpyu_lh_s0
    0U,	// M2_mpyu_lh_s1
    0U,	// M2_mpyu_ll_s0
    0U,	// M2_mpyu_ll_s1
    0U,	// M2_mpyu_nac_hh_s0
    0U,	// M2_mpyu_nac_hh_s1
    0U,	// M2_mpyu_nac_hl_s0
    0U,	// M2_mpyu_nac_hl_s1
    0U,	// M2_mpyu_nac_lh_s0
    0U,	// M2_mpyu_nac_lh_s1
    0U,	// M2_mpyu_nac_ll_s0
    0U,	// M2_mpyu_nac_ll_s1
    0U,	// M2_mpyu_up
    0U,	// M2_mpyud_acc_hh_s0
    0U,	// M2_mpyud_acc_hh_s1
    0U,	// M2_mpyud_acc_hl_s0
    0U,	// M2_mpyud_acc_hl_s1
    0U,	// M2_mpyud_acc_lh_s0
    0U,	// M2_mpyud_acc_lh_s1
    0U,	// M2_mpyud_acc_ll_s0
    0U,	// M2_mpyud_acc_ll_s1
    0U,	// M2_mpyud_hh_s0
    0U,	// M2_mpyud_hh_s1
    0U,	// M2_mpyud_hl_s0
    0U,	// M2_mpyud_hl_s1
    0U,	// M2_mpyud_lh_s0
    0U,	// M2_mpyud_lh_s1
    0U,	// M2_mpyud_ll_s0
    0U,	// M2_mpyud_ll_s1
    0U,	// M2_mpyud_nac_hh_s0
    0U,	// M2_mpyud_nac_hh_s1
    0U,	// M2_mpyud_nac_hl_s0
    0U,	// M2_mpyud_nac_hl_s1
    0U,	// M2_mpyud_nac_lh_s0
    0U,	// M2_mpyud_nac_lh_s1
    0U,	// M2_mpyud_nac_ll_s0
    0U,	// M2_mpyud_nac_ll_s1
    0U,	// M2_nacci
    0U,	// M2_naccii
    0U,	// M2_subacc
    0U,	// M2_vabsdiffh
    0U,	// M2_vabsdiffw
    0U,	// M2_vcmac_s0_sat_i
    0U,	// M2_vcmac_s0_sat_r
    0U,	// M2_vcmpy_s0_sat_i
    0U,	// M2_vcmpy_s0_sat_r
    0U,	// M2_vcmpy_s1_sat_i
    0U,	// M2_vcmpy_s1_sat_r
    0U,	// M2_vdmacs_s0
    0U,	// M2_vdmacs_s1
    0U,	// M2_vdmpyrs_s0
    0U,	// M2_vdmpyrs_s1
    0U,	// M2_vdmpys_s0
    0U,	// M2_vdmpys_s1
    0U,	// M2_vmac2
    0U,	// M2_vmac2es
    0U,	// M2_vmac2es_s0
    0U,	// M2_vmac2es_s1
    0U,	// M2_vmac2s_s0
    0U,	// M2_vmac2s_s1
    0U,	// M2_vmac2su_s0
    0U,	// M2_vmac2su_s1
    0U,	// M2_vmpy2es_s0
    0U,	// M2_vmpy2es_s1
    0U,	// M2_vmpy2s_s0
    0U,	// M2_vmpy2s_s0pack
    0U,	// M2_vmpy2s_s1
    0U,	// M2_vmpy2s_s1pack
    0U,	// M2_vmpy2su_s0
    0U,	// M2_vmpy2su_s1
    0U,	// M2_vraddh
    0U,	// M2_vradduh
    0U,	// M2_vrcmaci_s0
    0U,	// M2_vrcmaci_s0c
    0U,	// M2_vrcmacr_s0
    0U,	// M2_vrcmacr_s0c
    0U,	// M2_vrcmpyi_s0
    0U,	// M2_vrcmpyi_s0c
    0U,	// M2_vrcmpyr_s0
    0U,	// M2_vrcmpyr_s0c
    0U,	// M2_vrcmpys_acc_s1_h
    0U,	// M2_vrcmpys_acc_s1_l
    0U,	// M2_vrcmpys_s1_h
    0U,	// M2_vrcmpys_s1_l
    0U,	// M2_vrcmpys_s1rp_h
    0U,	// M2_vrcmpys_s1rp_l
    0U,	// M2_vrmac_s0
    0U,	// M2_vrmpy_s0
    0U,	// M2_xor_xacc
    0U,	// M4_and_and
    0U,	// M4_and_andn
    0U,	// M4_and_or
    0U,	// M4_and_xor
    0U,	// M4_cmpyi_wh
    0U,	// M4_cmpyi_whc
    0U,	// M4_cmpyr_wh
    0U,	// M4_cmpyr_whc
    0U,	// M4_mac_up_s1_sat
    0U,	// M4_mpyri_addi
    12U,	// M4_mpyri_addr
    0U,	// M4_mpyri_addr_u2
    0U,	// M4_mpyrr_addi
    0U,	// M4_mpyrr_addr
    0U,	// M4_nac_up_s1_sat
    0U,	// M4_or_and
    0U,	// M4_or_andn
    0U,	// M4_or_or
    0U,	// M4_or_xor
    0U,	// M4_pmpyw
    0U,	// M4_pmpyw_acc
    0U,	// M4_vpmpyh
    0U,	// M4_vpmpyh_acc
    0U,	// M4_vrmpyeh_acc_s0
    0U,	// M4_vrmpyeh_acc_s1
    0U,	// M4_vrmpyeh_s0
    0U,	// M4_vrmpyeh_s1
    0U,	// M4_vrmpyoh_acc_s0
    0U,	// M4_vrmpyoh_acc_s1
    0U,	// M4_vrmpyoh_s0
    0U,	// M4_vrmpyoh_s1
    0U,	// M4_xor_and
    0U,	// M4_xor_andn
    0U,	// M4_xor_or
    0U,	// M4_xor_xacc
    0U,	// M5_vdmacbsu
    0U,	// M5_vdmpybsu
    0U,	// M5_vmacbsu
    0U,	// M5_vmacbuu
    0U,	// M5_vmpybsu
    0U,	// M5_vmpybuu
    0U,	// M5_vrmacbsu
    0U,	// M5_vrmacbuu
    0U,	// M5_vrmpybsu
    0U,	// M5_vrmpybuu
    0U,	// M6_vabsdiffb
    0U,	// M6_vabsdiffub
    0U,	// M7_dcmpyiw
    0U,	// M7_dcmpyiw_acc
    0U,	// M7_dcmpyiwc
    0U,	// M7_dcmpyiwc_acc
    0U,	// M7_dcmpyrw
    0U,	// M7_dcmpyrw_acc
    0U,	// M7_dcmpyrwc
    0U,	// M7_dcmpyrwc_acc
    0U,	// M7_wcmpyiw
    0U,	// M7_wcmpyiw_rnd
    0U,	// M7_wcmpyiwc
    0U,	// M7_wcmpyiwc_rnd
    0U,	// M7_wcmpyrw
    0U,	// M7_wcmpyrw_rnd
    0U,	// M7_wcmpyrwc
    0U,	// M7_wcmpyrwc_rnd
    0U,	// PS_call_stk
    0U,	// PS_callr_nr
    0U,	// PS_jmpret
    0U,	// PS_jmpretf
    0U,	// PS_jmpretfnew
    0U,	// PS_jmpretfnewpt
    0U,	// PS_jmprett
    0U,	// PS_jmprettnew
    0U,	// PS_jmprettnewpt
    0U,	// PS_loadrbabs
    0U,	// PS_loadrdabs
    0U,	// PS_loadrhabs
    0U,	// PS_loadriabs
    0U,	// PS_loadrubabs
    0U,	// PS_loadruhabs
    0U,	// PS_storerbabs
    0U,	// PS_storerbnewabs
    0U,	// PS_storerdabs
    0U,	// PS_storerfabs
    0U,	// PS_storerhabs
    0U,	// PS_storerhnewabs
    0U,	// PS_storeriabs
    0U,	// PS_storerinewabs
    0U,	// PS_trap1
    0U,	// R6_release_at_vi
    0U,	// R6_release_st_vi
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
    0U,	// RESTORE_DEALLOC_RET_JMP_V4_PIC
    0U,	// S2_addasl_rrri
    0U,	// S2_allocframe
    0U,	// S2_asl_i_p
    0U,	// S2_asl_i_p_acc
    0U,	// S2_asl_i_p_and
    0U,	// S2_asl_i_p_nac
    0U,	// S2_asl_i_p_or
    0U,	// S2_asl_i_p_xacc
    0U,	// S2_asl_i_r
    0U,	// S2_asl_i_r_acc
    0U,	// S2_asl_i_r_and
    0U,	// S2_asl_i_r_nac
    0U,	// S2_asl_i_r_or
    0U,	// S2_asl_i_r_sat
    0U,	// S2_asl_i_r_xacc
    0U,	// S2_asl_i_vh
    0U,	// S2_asl_i_vw
    0U,	// S2_asl_r_p
    0U,	// S2_asl_r_p_acc
    0U,	// S2_asl_r_p_and
    0U,	// S2_asl_r_p_nac
    0U,	// S2_asl_r_p_or
    0U,	// S2_asl_r_p_xor
    0U,	// S2_asl_r_r
    0U,	// S2_asl_r_r_acc
    0U,	// S2_asl_r_r_and
    0U,	// S2_asl_r_r_nac
    0U,	// S2_asl_r_r_or
    0U,	// S2_asl_r_r_sat
    0U,	// S2_asl_r_vh
    0U,	// S2_asl_r_vw
    0U,	// S2_asr_i_p
    0U,	// S2_asr_i_p_acc
    0U,	// S2_asr_i_p_and
    0U,	// S2_asr_i_p_nac
    0U,	// S2_asr_i_p_or
    0U,	// S2_asr_i_p_rnd
    0U,	// S2_asr_i_r
    0U,	// S2_asr_i_r_acc
    0U,	// S2_asr_i_r_and
    0U,	// S2_asr_i_r_nac
    0U,	// S2_asr_i_r_or
    0U,	// S2_asr_i_r_rnd
    0U,	// S2_asr_i_svw_trun
    0U,	// S2_asr_i_vh
    0U,	// S2_asr_i_vw
    0U,	// S2_asr_r_p
    0U,	// S2_asr_r_p_acc
    0U,	// S2_asr_r_p_and
    0U,	// S2_asr_r_p_nac
    0U,	// S2_asr_r_p_or
    0U,	// S2_asr_r_p_xor
    0U,	// S2_asr_r_r
    0U,	// S2_asr_r_r_acc
    0U,	// S2_asr_r_r_and
    0U,	// S2_asr_r_r_nac
    0U,	// S2_asr_r_r_or
    0U,	// S2_asr_r_r_sat
    0U,	// S2_asr_r_svw_trun
    0U,	// S2_asr_r_vh
    0U,	// S2_asr_r_vw
    0U,	// S2_brev
    0U,	// S2_brevp
    0U,	// S2_cabacdecbin
    0U,	// S2_cl0
    0U,	// S2_cl0p
    0U,	// S2_cl1
    0U,	// S2_cl1p
    0U,	// S2_clb
    0U,	// S2_clbnorm
    0U,	// S2_clbp
    0U,	// S2_clrbit_i
    0U,	// S2_clrbit_r
    0U,	// S2_ct0
    0U,	// S2_ct0p
    0U,	// S2_ct1
    0U,	// S2_ct1p
    0U,	// S2_deinterleave
    8U,	// S2_extractu
    0U,	// S2_extractu_rp
    8U,	// S2_extractup
    0U,	// S2_extractup_rp
    0U,	// S2_insert
    0U,	// S2_insert_rp
    0U,	// S2_insertp
    0U,	// S2_insertp_rp
    0U,	// S2_interleave
    0U,	// S2_lfsp
    0U,	// S2_lsl_r_p
    0U,	// S2_lsl_r_p_acc
    0U,	// S2_lsl_r_p_and
    0U,	// S2_lsl_r_p_nac
    0U,	// S2_lsl_r_p_or
    0U,	// S2_lsl_r_p_xor
    0U,	// S2_lsl_r_r
    0U,	// S2_lsl_r_r_acc
    0U,	// S2_lsl_r_r_and
    0U,	// S2_lsl_r_r_nac
    0U,	// S2_lsl_r_r_or
    0U,	// S2_lsl_r_vh
    0U,	// S2_lsl_r_vw
    0U,	// S2_lsr_i_p
    0U,	// S2_lsr_i_p_acc
    0U,	// S2_lsr_i_p_and
    0U,	// S2_lsr_i_p_nac
    0U,	// S2_lsr_i_p_or
    0U,	// S2_lsr_i_p_xacc
    0U,	// S2_lsr_i_r
    0U,	// S2_lsr_i_r_acc
    0U,	// S2_lsr_i_r_and
    0U,	// S2_lsr_i_r_nac
    0U,	// S2_lsr_i_r_or
    0U,	// S2_lsr_i_r_xacc
    0U,	// S2_lsr_i_vh
    0U,	// S2_lsr_i_vw
    0U,	// S2_lsr_r_p
    0U,	// S2_lsr_r_p_acc
    0U,	// S2_lsr_r_p_and
    0U,	// S2_lsr_r_p_nac
    0U,	// S2_lsr_r_p_or
    0U,	// S2_lsr_r_p_xor
    0U,	// S2_lsr_r_r
    0U,	// S2_lsr_r_r_acc
    0U,	// S2_lsr_r_r_and
    0U,	// S2_lsr_r_r_nac
    0U,	// S2_lsr_r_r_or
    0U,	// S2_lsr_r_vh
    0U,	// S2_lsr_r_vw
    0U,	// S2_mask
    0U,	// S2_packhl
    0U,	// S2_parityp
    16U,	// S2_pstorerbf_io
    20U,	// S2_pstorerbf_pi
    20U,	// S2_pstorerbfnew_pi
    48U,	// S2_pstorerbnewf_io
    52U,	// S2_pstorerbnewf_pi
    52U,	// S2_pstorerbnewfnew_pi
    48U,	// S2_pstorerbnewt_io
    52U,	// S2_pstorerbnewt_pi
    52U,	// S2_pstorerbnewtnew_pi
    16U,	// S2_pstorerbt_io
    20U,	// S2_pstorerbt_pi
    20U,	// S2_pstorerbtnew_pi
    16U,	// S2_pstorerdf_io
    20U,	// S2_pstorerdf_pi
    20U,	// S2_pstorerdfnew_pi
    16U,	// S2_pstorerdt_io
    20U,	// S2_pstorerdt_pi
    20U,	// S2_pstorerdtnew_pi
    80U,	// S2_pstorerff_io
    84U,	// S2_pstorerff_pi
    84U,	// S2_pstorerffnew_pi
    80U,	// S2_pstorerft_io
    84U,	// S2_pstorerft_pi
    84U,	// S2_pstorerftnew_pi
    16U,	// S2_pstorerhf_io
    20U,	// S2_pstorerhf_pi
    20U,	// S2_pstorerhfnew_pi
    48U,	// S2_pstorerhnewf_io
    52U,	// S2_pstorerhnewf_pi
    52U,	// S2_pstorerhnewfnew_pi
    48U,	// S2_pstorerhnewt_io
    52U,	// S2_pstorerhnewt_pi
    52U,	// S2_pstorerhnewtnew_pi
    16U,	// S2_pstorerht_io
    20U,	// S2_pstorerht_pi
    20U,	// S2_pstorerhtnew_pi
    16U,	// S2_pstorerif_io
    20U,	// S2_pstorerif_pi
    20U,	// S2_pstorerifnew_pi
    48U,	// S2_pstorerinewf_io
    52U,	// S2_pstorerinewf_pi
    52U,	// S2_pstorerinewfnew_pi
    48U,	// S2_pstorerinewt_io
    52U,	// S2_pstorerinewt_pi
    52U,	// S2_pstorerinewtnew_pi
    16U,	// S2_pstorerit_io
    20U,	// S2_pstorerit_pi
    20U,	// S2_pstoreritnew_pi
    0U,	// S2_setbit_i
    0U,	// S2_setbit_r
    0U,	// S2_shuffeb
    0U,	// S2_shuffeh
    0U,	// S2_shuffob
    0U,	// S2_shuffoh
    0U,	// S2_storerb_io
    0U,	// S2_storerb_pbr
    0U,	// S2_storerb_pci
    0U,	// S2_storerb_pcr
    0U,	// S2_storerb_pi
    0U,	// S2_storerb_pr
    0U,	// S2_storerbgp
    0U,	// S2_storerbnew_io
    0U,	// S2_storerbnew_pbr
    0U,	// S2_storerbnew_pci
    0U,	// S2_storerbnew_pcr
    0U,	// S2_storerbnew_pi
    0U,	// S2_storerbnew_pr
    0U,	// S2_storerbnewgp
    0U,	// S2_storerd_io
    0U,	// S2_storerd_pbr
    0U,	// S2_storerd_pci
    0U,	// S2_storerd_pcr
    0U,	// S2_storerd_pi
    0U,	// S2_storerd_pr
    0U,	// S2_storerdgp
    0U,	// S2_storerf_io
    0U,	// S2_storerf_pbr
    0U,	// S2_storerf_pci
    0U,	// S2_storerf_pcr
    0U,	// S2_storerf_pi
    0U,	// S2_storerf_pr
    0U,	// S2_storerfgp
    0U,	// S2_storerh_io
    0U,	// S2_storerh_pbr
    0U,	// S2_storerh_pci
    0U,	// S2_storerh_pcr
    0U,	// S2_storerh_pi
    0U,	// S2_storerh_pr
    0U,	// S2_storerhgp
    0U,	// S2_storerhnew_io
    0U,	// S2_storerhnew_pbr
    0U,	// S2_storerhnew_pci
    0U,	// S2_storerhnew_pcr
    0U,	// S2_storerhnew_pi
    0U,	// S2_storerhnew_pr
    0U,	// S2_storerhnewgp
    0U,	// S2_storeri_io
    0U,	// S2_storeri_pbr
    0U,	// S2_storeri_pci
    0U,	// S2_storeri_pcr
    0U,	// S2_storeri_pi
    0U,	// S2_storeri_pr
    0U,	// S2_storerigp
    0U,	// S2_storerinew_io
    0U,	// S2_storerinew_pbr
    0U,	// S2_storerinew_pci
    0U,	// S2_storerinew_pcr
    0U,	// S2_storerinew_pi
    0U,	// S2_storerinew_pr
    0U,	// S2_storerinewgp
    0U,	// S2_storew_locked
    0U,	// S2_storew_rl_at_vi
    0U,	// S2_storew_rl_st_vi
    0U,	// S2_svsathb
    0U,	// S2_svsathub
    0U,	// S2_tableidxb
    0U,	// S2_tableidxd
    0U,	// S2_tableidxh
    0U,	// S2_tableidxw
    0U,	// S2_togglebit_i
    0U,	// S2_togglebit_r
    0U,	// S2_tstbit_i
    0U,	// S2_tstbit_r
    0U,	// S2_valignib
    0U,	// S2_valignrb
    0U,	// S2_vcnegh
    0U,	// S2_vcrotate
    0U,	// S2_vrcnegh
    0U,	// S2_vrndpackwh
    0U,	// S2_vrndpackwhs
    0U,	// S2_vsathb
    0U,	// S2_vsathb_nopack
    0U,	// S2_vsathub
    0U,	// S2_vsathub_nopack
    0U,	// S2_vsatwh
    0U,	// S2_vsatwh_nopack
    0U,	// S2_vsatwuh
    0U,	// S2_vsatwuh_nopack
    0U,	// S2_vsplatrb
    0U,	// S2_vsplatrh
    0U,	// S2_vspliceib
    0U,	// S2_vsplicerb
    0U,	// S2_vsxtbh
    0U,	// S2_vsxthw
    0U,	// S2_vtrunehb
    0U,	// S2_vtrunewh
    0U,	// S2_vtrunohb
    0U,	// S2_vtrunowh
    0U,	// S2_vzxtbh
    0U,	// S2_vzxthw
    0U,	// S4_addaddi
    0U,	// S4_addi_asl_ri
    0U,	// S4_addi_lsr_ri
    0U,	// S4_andi_asl_ri
    0U,	// S4_andi_lsr_ri
    0U,	// S4_clbaddi
    0U,	// S4_clbpaddi
    0U,	// S4_clbpnorm
    8U,	// S4_extract
    0U,	// S4_extract_rp
    8U,	// S4_extractp
    0U,	// S4_extractp_rp
    0U,	// S4_lsli
    0U,	// S4_ntstbit_i
    0U,	// S4_ntstbit_r
    0U,	// S4_or_andi
    0U,	// S4_or_andix
    0U,	// S4_or_ori
    0U,	// S4_ori_asl_ri
    0U,	// S4_ori_lsr_ri
    0U,	// S4_parity
    0U,	// S4_pstorerbf_abs
    0U,	// S4_pstorerbf_rr
    0U,	// S4_pstorerbfnew_abs
    16U,	// S4_pstorerbfnew_io
    0U,	// S4_pstorerbfnew_rr
    0U,	// S4_pstorerbnewf_abs
    0U,	// S4_pstorerbnewf_rr
    0U,	// S4_pstorerbnewfnew_abs
    48U,	// S4_pstorerbnewfnew_io
    0U,	// S4_pstorerbnewfnew_rr
    0U,	// S4_pstorerbnewt_abs
    0U,	// S4_pstorerbnewt_rr
    0U,	// S4_pstorerbnewtnew_abs
    48U,	// S4_pstorerbnewtnew_io
    0U,	// S4_pstorerbnewtnew_rr
    0U,	// S4_pstorerbt_abs
    0U,	// S4_pstorerbt_rr
    0U,	// S4_pstorerbtnew_abs
    16U,	// S4_pstorerbtnew_io
    0U,	// S4_pstorerbtnew_rr
    0U,	// S4_pstorerdf_abs
    0U,	// S4_pstorerdf_rr
    0U,	// S4_pstorerdfnew_abs
    16U,	// S4_pstorerdfnew_io
    0U,	// S4_pstorerdfnew_rr
    0U,	// S4_pstorerdt_abs
    0U,	// S4_pstorerdt_rr
    0U,	// S4_pstorerdtnew_abs
    16U,	// S4_pstorerdtnew_io
    0U,	// S4_pstorerdtnew_rr
    0U,	// S4_pstorerff_abs
    0U,	// S4_pstorerff_rr
    0U,	// S4_pstorerffnew_abs
    80U,	// S4_pstorerffnew_io
    0U,	// S4_pstorerffnew_rr
    0U,	// S4_pstorerft_abs
    0U,	// S4_pstorerft_rr
    0U,	// S4_pstorerftnew_abs
    80U,	// S4_pstorerftnew_io
    0U,	// S4_pstorerftnew_rr
    0U,	// S4_pstorerhf_abs
    0U,	// S4_pstorerhf_rr
    0U,	// S4_pstorerhfnew_abs
    16U,	// S4_pstorerhfnew_io
    0U,	// S4_pstorerhfnew_rr
    0U,	// S4_pstorerhnewf_abs
    0U,	// S4_pstorerhnewf_rr
    0U,	// S4_pstorerhnewfnew_abs
    48U,	// S4_pstorerhnewfnew_io
    0U,	// S4_pstorerhnewfnew_rr
    0U,	// S4_pstorerhnewt_abs
    0U,	// S4_pstorerhnewt_rr
    0U,	// S4_pstorerhnewtnew_abs
    48U,	// S4_pstorerhnewtnew_io
    0U,	// S4_pstorerhnewtnew_rr
    0U,	// S4_pstorerht_abs
    0U,	// S4_pstorerht_rr
    0U,	// S4_pstorerhtnew_abs
    16U,	// S4_pstorerhtnew_io
    0U,	// S4_pstorerhtnew_rr
    0U,	// S4_pstorerif_abs
    0U,	// S4_pstorerif_rr
    0U,	// S4_pstorerifnew_abs
    16U,	// S4_pstorerifnew_io
    0U,	// S4_pstorerifnew_rr
    0U,	// S4_pstorerinewf_abs
    0U,	// S4_pstorerinewf_rr
    0U,	// S4_pstorerinewfnew_abs
    48U,	// S4_pstorerinewfnew_io
    0U,	// S4_pstorerinewfnew_rr
    0U,	// S4_pstorerinewt_abs
    0U,	// S4_pstorerinewt_rr
    0U,	// S4_pstorerinewtnew_abs
    48U,	// S4_pstorerinewtnew_io
    0U,	// S4_pstorerinewtnew_rr
    0U,	// S4_pstorerit_abs
    0U,	// S4_pstorerit_rr
    0U,	// S4_pstoreritnew_abs
    16U,	// S4_pstoreritnew_io
    0U,	// S4_pstoreritnew_rr
    0U,	// S4_stored_locked
    0U,	// S4_stored_rl_at_vi
    0U,	// S4_stored_rl_st_vi
    0U,	// S4_storeirb_io
    0U,	// S4_storeirbf_io
    0U,	// S4_storeirbfnew_io
    0U,	// S4_storeirbt_io
    0U,	// S4_storeirbtnew_io
    0U,	// S4_storeirh_io
    0U,	// S4_storeirhf_io
    0U,	// S4_storeirhfnew_io
    0U,	// S4_storeirht_io
    0U,	// S4_storeirhtnew_io
    0U,	// S4_storeiri_io
    0U,	// S4_storeirif_io
    0U,	// S4_storeirifnew_io
    0U,	// S4_storeirit_io
    0U,	// S4_storeiritnew_io
    0U,	// S4_storerb_ap
    0U,	// S4_storerb_rr
    0U,	// S4_storerb_ur
    0U,	// S4_storerbnew_ap
    0U,	// S4_storerbnew_rr
    0U,	// S4_storerbnew_ur
    0U,	// S4_storerd_ap
    0U,	// S4_storerd_rr
    0U,	// S4_storerd_ur
    0U,	// S4_storerf_ap
    0U,	// S4_storerf_rr
    0U,	// S4_storerf_ur
    0U,	// S4_storerh_ap
    0U,	// S4_storerh_rr
    0U,	// S4_storerh_ur
    0U,	// S4_storerhnew_ap
    0U,	// S4_storerhnew_rr
    0U,	// S4_storerhnew_ur
    0U,	// S4_storeri_ap
    0U,	// S4_storeri_rr
    0U,	// S4_storeri_ur
    0U,	// S4_storerinew_ap
    0U,	// S4_storerinew_rr
    0U,	// S4_storerinew_ur
    0U,	// S4_subaddi
    0U,	// S4_subi_asl_ri
    0U,	// S4_subi_lsr_ri
    0U,	// S4_vrcrotate
    0U,	// S4_vrcrotate_acc
    0U,	// S4_vxaddsubh
    0U,	// S4_vxaddsubhr
    0U,	// S4_vxaddsubw
    0U,	// S4_vxsubaddh
    0U,	// S4_vxsubaddhr
    0U,	// S4_vxsubaddw
    0U,	// S5_asrhub_rnd_sat
    0U,	// S5_asrhub_sat
    0U,	// S5_popcountp
    0U,	// S5_vasrhrnd
    0U,	// S6_rol_i_p
    0U,	// S6_rol_i_p_acc
    0U,	// S6_rol_i_p_and
    0U,	// S6_rol_i_p_nac
    0U,	// S6_rol_i_p_or
    0U,	// S6_rol_i_p_xacc
    0U,	// S6_rol_i_r
    0U,	// S6_rol_i_r_acc
    0U,	// S6_rol_i_r_and
    0U,	// S6_rol_i_r_nac
    0U,	// S6_rol_i_r_or
    0U,	// S6_rol_i_r_xacc
    0U,	// S6_vsplatrbp
    0U,	// S6_vtrunehb_ppp
    0U,	// S6_vtrunohb_ppp
    0U,	// SA1_addi
    0U,	// SA1_addrx
    0U,	// SA1_addsp
    0U,	// SA1_and1
    0U,	// SA1_clrf
    0U,	// SA1_clrfnew
    0U,	// SA1_clrt
    0U,	// SA1_clrtnew
    0U,	// SA1_cmpeqi
    0U,	// SA1_combine0i
    0U,	// SA1_combine1i
    0U,	// SA1_combine2i
    0U,	// SA1_combine3i
    0U,	// SA1_combinerz
    0U,	// SA1_combinezr
    0U,	// SA1_dec
    0U,	// SA1_inc
    0U,	// SA1_seti
    0U,	// SA1_setin1
    0U,	// SA1_sxtb
    0U,	// SA1_sxth
    0U,	// SA1_tfr
    0U,	// SA1_zxtb
    0U,	// SA1_zxth
    0U,	// SAVE_REGISTERS_CALL_V4
    0U,	// SAVE_REGISTERS_CALL_V4STK
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT
    0U,	// SAVE_REGISTERS_CALL_V4STK_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4STK_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_EXT
    0U,	// SAVE_REGISTERS_CALL_V4_EXT_PIC
    0U,	// SAVE_REGISTERS_CALL_V4_PIC
    0U,	// SL1_loadri_io
    0U,	// SL1_loadrub_io
    0U,	// SL2_deallocframe
    0U,	// SL2_jumpr31
    0U,	// SL2_jumpr31_f
    0U,	// SL2_jumpr31_fnew
    0U,	// SL2_jumpr31_t
    0U,	// SL2_jumpr31_tnew
    0U,	// SL2_loadrb_io
    0U,	// SL2_loadrd_sp
    0U,	// SL2_loadrh_io
    0U,	// SL2_loadri_sp
    0U,	// SL2_loadruh_io
    0U,	// SL2_return
    0U,	// SL2_return_f
    0U,	// SL2_return_fnew
    0U,	// SL2_return_t
    0U,	// SL2_return_tnew
    0U,	// SS1_storeb_io
    0U,	// SS1_storew_io
    0U,	// SS2_allocframe
    0U,	// SS2_storebi0
    0U,	// SS2_storebi1
    0U,	// SS2_stored_sp
    0U,	// SS2_storeh_io
    0U,	// SS2_storew_sp
    0U,	// SS2_storewi0
    0U,	// SS2_storewi1
    0U,	// TFRI64_V2_ext
    0U,	// TFRI64_V4
    0U,	// V6_extractw
    0U,	// V6_lvsplatb
    0U,	// V6_lvsplath
    0U,	// V6_lvsplatw
    0U,	// V6_pred_and
    0U,	// V6_pred_and_n
    0U,	// V6_pred_not
    0U,	// V6_pred_or
    0U,	// V6_pred_or_n
    0U,	// V6_pred_scalar2
    0U,	// V6_pred_scalar2v2
    0U,	// V6_pred_xor
    0U,	// V6_shuffeqh
    0U,	// V6_shuffeqw
    0U,	// V6_v6mpyhubs10
    0U,	// V6_v6mpyhubs10_vxx
    0U,	// V6_v6mpyvubs10
    0U,	// V6_v6mpyvubs10_vxx
    0U,	// V6_vL32Ub_ai
    0U,	// V6_vL32Ub_pi
    0U,	// V6_vL32Ub_ppu
    0U,	// V6_vL32b_ai
    0U,	// V6_vL32b_cur_ai
    0U,	// V6_vL32b_cur_npred_ai
    0U,	// V6_vL32b_cur_npred_pi
    0U,	// V6_vL32b_cur_npred_ppu
    0U,	// V6_vL32b_cur_pi
    0U,	// V6_vL32b_cur_ppu
    0U,	// V6_vL32b_cur_pred_ai
    0U,	// V6_vL32b_cur_pred_pi
    0U,	// V6_vL32b_cur_pred_ppu
    0U,	// V6_vL32b_npred_ai
    0U,	// V6_vL32b_npred_pi
    0U,	// V6_vL32b_npred_ppu
    0U,	// V6_vL32b_nt_ai
    0U,	// V6_vL32b_nt_cur_ai
    1U,	// V6_vL32b_nt_cur_npred_ai
    1U,	// V6_vL32b_nt_cur_npred_pi
    1U,	// V6_vL32b_nt_cur_npred_ppu
    0U,	// V6_vL32b_nt_cur_pi
    0U,	// V6_vL32b_nt_cur_ppu
    1U,	// V6_vL32b_nt_cur_pred_ai
    1U,	// V6_vL32b_nt_cur_pred_pi
    1U,	// V6_vL32b_nt_cur_pred_ppu
    1U,	// V6_vL32b_nt_npred_ai
    1U,	// V6_vL32b_nt_npred_pi
    1U,	// V6_vL32b_nt_npred_ppu
    0U,	// V6_vL32b_nt_pi
    0U,	// V6_vL32b_nt_ppu
    1U,	// V6_vL32b_nt_pred_ai
    1U,	// V6_vL32b_nt_pred_pi
    1U,	// V6_vL32b_nt_pred_ppu
    0U,	// V6_vL32b_nt_tmp_ai
    1U,	// V6_vL32b_nt_tmp_npred_ai
    1U,	// V6_vL32b_nt_tmp_npred_pi
    1U,	// V6_vL32b_nt_tmp_npred_ppu
    0U,	// V6_vL32b_nt_tmp_pi
    0U,	// V6_vL32b_nt_tmp_ppu
    1U,	// V6_vL32b_nt_tmp_pred_ai
    1U,	// V6_vL32b_nt_tmp_pred_pi
    1U,	// V6_vL32b_nt_tmp_pred_ppu
    0U,	// V6_vL32b_pi
    0U,	// V6_vL32b_ppu
    0U,	// V6_vL32b_pred_ai
    0U,	// V6_vL32b_pred_pi
    0U,	// V6_vL32b_pred_ppu
    0U,	// V6_vL32b_tmp_ai
    0U,	// V6_vL32b_tmp_npred_ai
    0U,	// V6_vL32b_tmp_npred_pi
    0U,	// V6_vL32b_tmp_npred_ppu
    0U,	// V6_vL32b_tmp_pi
    0U,	// V6_vL32b_tmp_ppu
    0U,	// V6_vL32b_tmp_pred_ai
    0U,	// V6_vL32b_tmp_pred_pi
    0U,	// V6_vL32b_tmp_pred_ppu
    0U,	// V6_vS32Ub_ai
    16U,	// V6_vS32Ub_npred_ai
    20U,	// V6_vS32Ub_npred_pi
    20U,	// V6_vS32Ub_npred_ppu
    0U,	// V6_vS32Ub_pi
    0U,	// V6_vS32Ub_ppu
    16U,	// V6_vS32Ub_pred_ai
    20U,	// V6_vS32Ub_pred_pi
    20U,	// V6_vS32Ub_pred_ppu
    0U,	// V6_vS32b_ai
    0U,	// V6_vS32b_new_ai
    48U,	// V6_vS32b_new_npred_ai
    52U,	// V6_vS32b_new_npred_pi
    52U,	// V6_vS32b_new_npred_ppu
    0U,	// V6_vS32b_new_pi
    0U,	// V6_vS32b_new_ppu
    48U,	// V6_vS32b_new_pred_ai
    52U,	// V6_vS32b_new_pred_pi
    52U,	// V6_vS32b_new_pred_ppu
    16U,	// V6_vS32b_npred_ai
    20U,	// V6_vS32b_npred_pi
    20U,	// V6_vS32b_npred_ppu
    16U,	// V6_vS32b_nqpred_ai
    20U,	// V6_vS32b_nqpred_pi
    20U,	// V6_vS32b_nqpred_ppu
    0U,	// V6_vS32b_nt_ai
    0U,	// V6_vS32b_nt_new_ai
    49U,	// V6_vS32b_nt_new_npred_ai
    53U,	// V6_vS32b_nt_new_npred_pi
    53U,	// V6_vS32b_nt_new_npred_ppu
    0U,	// V6_vS32b_nt_new_pi
    0U,	// V6_vS32b_nt_new_ppu
    49U,	// V6_vS32b_nt_new_pred_ai
    53U,	// V6_vS32b_nt_new_pred_pi
    53U,	// V6_vS32b_nt_new_pred_ppu
    17U,	// V6_vS32b_nt_npred_ai
    21U,	// V6_vS32b_nt_npred_pi
    21U,	// V6_vS32b_nt_npred_ppu
    17U,	// V6_vS32b_nt_nqpred_ai
    21U,	// V6_vS32b_nt_nqpred_pi
    21U,	// V6_vS32b_nt_nqpred_ppu
    0U,	// V6_vS32b_nt_pi
    0U,	// V6_vS32b_nt_ppu
    17U,	// V6_vS32b_nt_pred_ai
    21U,	// V6_vS32b_nt_pred_pi
    21U,	// V6_vS32b_nt_pred_ppu
    17U,	// V6_vS32b_nt_qpred_ai
    21U,	// V6_vS32b_nt_qpred_pi
    21U,	// V6_vS32b_nt_qpred_ppu
    0U,	// V6_vS32b_pi
    0U,	// V6_vS32b_ppu
    16U,	// V6_vS32b_pred_ai
    20U,	// V6_vS32b_pred_pi
    20U,	// V6_vS32b_pred_ppu
    16U,	// V6_vS32b_qpred_ai
    20U,	// V6_vS32b_qpred_pi
    20U,	// V6_vS32b_qpred_ppu
    0U,	// V6_vS32b_srls_ai
    0U,	// V6_vS32b_srls_pi
    0U,	// V6_vS32b_srls_ppu
    0U,	// V6_vabsb
    0U,	// V6_vabsb_sat
    0U,	// V6_vabsdiffh
    0U,	// V6_vabsdiffub
    0U,	// V6_vabsdiffuh
    0U,	// V6_vabsdiffw
    0U,	// V6_vabsh
    0U,	// V6_vabsh_sat
    0U,	// V6_vabsw
    0U,	// V6_vabsw_sat
    0U,	// V6_vaddb
    0U,	// V6_vaddb_dv
    0U,	// V6_vaddbnq
    0U,	// V6_vaddbq
    0U,	// V6_vaddbsat
    0U,	// V6_vaddbsat_dv
    25U,	// V6_vaddcarry
    0U,	// V6_vaddcarryo
    113U,	// V6_vaddcarrysat
    0U,	// V6_vaddclbh
    0U,	// V6_vaddclbw
    0U,	// V6_vaddh
    0U,	// V6_vaddh_dv
    0U,	// V6_vaddhnq
    0U,	// V6_vaddhq
    0U,	// V6_vaddhsat
    0U,	// V6_vaddhsat_dv
    0U,	// V6_vaddhw
    0U,	// V6_vaddhw_acc
    0U,	// V6_vaddubh
    0U,	// V6_vaddubh_acc
    0U,	// V6_vaddubsat
    0U,	// V6_vaddubsat_dv
    0U,	// V6_vaddububb_sat
    0U,	// V6_vadduhsat
    0U,	// V6_vadduhsat_dv
    0U,	// V6_vadduhw
    0U,	// V6_vadduhw_acc
    0U,	// V6_vadduwsat
    0U,	// V6_vadduwsat_dv
    1U,	// V6_vaddw
    1U,	// V6_vaddw_dv
    0U,	// V6_vaddwnq
    0U,	// V6_vaddwq
    1U,	// V6_vaddwsat
    1U,	// V6_vaddwsat_dv
    0U,	// V6_valignb
    0U,	// V6_valignbi
    0U,	// V6_vand
    0U,	// V6_vandnqrt
    0U,	// V6_vandnqrt_acc
    0U,	// V6_vandqrt
    0U,	// V6_vandqrt_acc
    0U,	// V6_vandvnqv
    0U,	// V6_vandvqv
    0U,	// V6_vandvrt
    0U,	// V6_vandvrt_acc
    0U,	// V6_vaslh
    0U,	// V6_vaslh_acc
    0U,	// V6_vaslhv
    0U,	// V6_vaslw
    0U,	// V6_vaslw_acc
    0U,	// V6_vaslwv
    0U,	// V6_vasr_into
    0U,	// V6_vasrh
    0U,	// V6_vasrh_acc
    0U,	// V6_vasrhbrndsat
    0U,	// V6_vasrhbsat
    1U,	// V6_vasrhubrndsat
    0U,	// V6_vasrhubsat
    0U,	// V6_vasrhv
    1U,	// V6_vasruhubrndsat
    0U,	// V6_vasruhubsat
    1U,	// V6_vasruwuhrndsat
    0U,	// V6_vasruwuhsat
    0U,	// V6_vasrw
    0U,	// V6_vasrw_acc
    0U,	// V6_vasrwh
    1U,	// V6_vasrwhrndsat
    0U,	// V6_vasrwhsat
    1U,	// V6_vasrwuhrndsat
    0U,	// V6_vasrwuhsat
    0U,	// V6_vasrwv
    0U,	// V6_vassign
    0U,	// V6_vavgb
    0U,	// V6_vavgbrnd
    0U,	// V6_vavgh
    0U,	// V6_vavghrnd
    0U,	// V6_vavgub
    0U,	// V6_vavgubrnd
    0U,	// V6_vavguh
    0U,	// V6_vavguhrnd
    0U,	// V6_vavguw
    0U,	// V6_vavguwrnd
    0U,	// V6_vavgw
    0U,	// V6_vavgwrnd
    0U,	// V6_vccombine
    0U,	// V6_vcl0h
    0U,	// V6_vcl0w
    0U,	// V6_vcmov
    0U,	// V6_vcombine
    0U,	// V6_vdeal
    0U,	// V6_vdealb
    0U,	// V6_vdealb4w
    0U,	// V6_vdealh
    0U,	// V6_vdealvdd
    0U,	// V6_vdelta
    0U,	// V6_vdmpybus
    0U,	// V6_vdmpybus_acc
    0U,	// V6_vdmpybus_dv
    0U,	// V6_vdmpybus_dv_acc
    0U,	// V6_vdmpyhb
    0U,	// V6_vdmpyhb_acc
    0U,	// V6_vdmpyhb_dv
    0U,	// V6_vdmpyhb_dv_acc
    0U,	// V6_vdmpyhisat
    0U,	// V6_vdmpyhisat_acc
    0U,	// V6_vdmpyhsat
    0U,	// V6_vdmpyhsat_acc
    0U,	// V6_vdmpyhsuisat
    0U,	// V6_vdmpyhsuisat_acc
    0U,	// V6_vdmpyhsusat
    0U,	// V6_vdmpyhsusat_acc
    0U,	// V6_vdmpyhvsat
    0U,	// V6_vdmpyhvsat_acc
    0U,	// V6_vdsaduh
    0U,	// V6_vdsaduh_acc
    0U,	// V6_veqb
    0U,	// V6_veqb_and
    0U,	// V6_veqb_or
    0U,	// V6_veqb_xor
    0U,	// V6_veqh
    0U,	// V6_veqh_and
    0U,	// V6_veqh_or
    0U,	// V6_veqh_xor
    0U,	// V6_veqw
    0U,	// V6_veqw_and
    0U,	// V6_veqw_or
    0U,	// V6_veqw_xor
    1U,	// V6_vgathermh
    0U,	// V6_vgathermhq
    1U,	// V6_vgathermhw
    0U,	// V6_vgathermhwq
    1U,	// V6_vgathermw
    0U,	// V6_vgathermwq
    0U,	// V6_vgtb
    0U,	// V6_vgtb_and
    0U,	// V6_vgtb_or
    0U,	// V6_vgtb_xor
    0U,	// V6_vgth
    0U,	// V6_vgth_and
    0U,	// V6_vgth_or
    0U,	// V6_vgth_xor
    0U,	// V6_vgtub
    0U,	// V6_vgtub_and
    0U,	// V6_vgtub_or
    0U,	// V6_vgtub_xor
    0U,	// V6_vgtuh
    0U,	// V6_vgtuh_and
    0U,	// V6_vgtuh_or
    0U,	// V6_vgtuh_xor
    0U,	// V6_vgtuw
    0U,	// V6_vgtuw_and
    0U,	// V6_vgtuw_or
    0U,	// V6_vgtuw_xor
    0U,	// V6_vgtw
    0U,	// V6_vgtw_and
    0U,	// V6_vgtw_or
    0U,	// V6_vgtw_xor
    0U,	// V6_vhist
    0U,	// V6_vhistq
    0U,	// V6_vinsertwr
    0U,	// V6_vlalignb
    0U,	// V6_vlalignbi
    0U,	// V6_vlsrb
    0U,	// V6_vlsrh
    0U,	// V6_vlsrhv
    0U,	// V6_vlsrw
    0U,	// V6_vlsrwv
    0U,	// V6_vlut4
    0U,	// V6_vlutvvb
    0U,	// V6_vlutvvb_nm
    0U,	// V6_vlutvvb_oracc
    0U,	// V6_vlutvvb_oracci
    0U,	// V6_vlutvvbi
    0U,	// V6_vlutvwh
    0U,	// V6_vlutvwh_nm
    0U,	// V6_vlutvwh_oracc
    0U,	// V6_vlutvwh_oracci
    0U,	// V6_vlutvwhi
    0U,	// V6_vmaxb
    0U,	// V6_vmaxh
    0U,	// V6_vmaxub
    0U,	// V6_vmaxuh
    0U,	// V6_vmaxw
    0U,	// V6_vminb
    0U,	// V6_vminh
    0U,	// V6_vminub
    0U,	// V6_vminuh
    0U,	// V6_vminw
    0U,	// V6_vmpabus
    0U,	// V6_vmpabus_acc
    0U,	// V6_vmpabusv
    0U,	// V6_vmpabuu
    0U,	// V6_vmpabuu_acc
    0U,	// V6_vmpabuuv
    0U,	// V6_vmpahb
    0U,	// V6_vmpahb_acc
    1U,	// V6_vmpahhsat
    0U,	// V6_vmpauhb
    0U,	// V6_vmpauhb_acc
    1U,	// V6_vmpauhuhsat
    0U,	// V6_vmpsuhuhsat
    0U,	// V6_vmpybus
    0U,	// V6_vmpybus_acc
    0U,	// V6_vmpybusv
    0U,	// V6_vmpybusv_acc
    0U,	// V6_vmpybv
    0U,	// V6_vmpybv_acc
    0U,	// V6_vmpyewuh
    0U,	// V6_vmpyewuh_64
    0U,	// V6_vmpyh
    0U,	// V6_vmpyh_acc
    0U,	// V6_vmpyhsat_acc
    0U,	// V6_vmpyhsrs
    0U,	// V6_vmpyhss
    0U,	// V6_vmpyhus
    0U,	// V6_vmpyhus_acc
    0U,	// V6_vmpyhv
    0U,	// V6_vmpyhv_acc
    0U,	// V6_vmpyhvsrs
    0U,	// V6_vmpyieoh
    0U,	// V6_vmpyiewh_acc
    0U,	// V6_vmpyiewuh
    0U,	// V6_vmpyiewuh_acc
    0U,	// V6_vmpyih
    0U,	// V6_vmpyih_acc
    0U,	// V6_vmpyihb
    0U,	// V6_vmpyihb_acc
    0U,	// V6_vmpyiowh
    0U,	// V6_vmpyiwb
    0U,	// V6_vmpyiwb_acc
    0U,	// V6_vmpyiwh
    0U,	// V6_vmpyiwh_acc
    0U,	// V6_vmpyiwub
    0U,	// V6_vmpyiwub_acc
    0U,	// V6_vmpyowh
    0U,	// V6_vmpyowh_64_acc
    0U,	// V6_vmpyowh_rnd
    0U,	// V6_vmpyowh_rnd_sacc
    0U,	// V6_vmpyowh_sacc
    0U,	// V6_vmpyub
    0U,	// V6_vmpyub_acc
    0U,	// V6_vmpyubv
    0U,	// V6_vmpyubv_acc
    0U,	// V6_vmpyuh
    0U,	// V6_vmpyuh_acc
    0U,	// V6_vmpyuhe
    0U,	// V6_vmpyuhe_acc
    0U,	// V6_vmpyuhv
    0U,	// V6_vmpyuhv_acc
    0U,	// V6_vmux
    0U,	// V6_vnavgb
    0U,	// V6_vnavgh
    0U,	// V6_vnavgub
    0U,	// V6_vnavgw
    0U,	// V6_vnccombine
    0U,	// V6_vncmov
    0U,	// V6_vnormamth
    0U,	// V6_vnormamtw
    0U,	// V6_vnot
    0U,	// V6_vor
    0U,	// V6_vpackeb
    0U,	// V6_vpackeh
    0U,	// V6_vpackhb_sat
    0U,	// V6_vpackhub_sat
    0U,	// V6_vpackob
    0U,	// V6_vpackoh
    0U,	// V6_vpackwh_sat
    0U,	// V6_vpackwuh_sat
    0U,	// V6_vpopcounth
    0U,	// V6_vprefixqb
    0U,	// V6_vprefixqh
    0U,	// V6_vprefixqw
    0U,	// V6_vrdelta
    0U,	// V6_vrmpybub_rtt
    0U,	// V6_vrmpybub_rtt_acc
    0U,	// V6_vrmpybus
    0U,	// V6_vrmpybus_acc
    8U,	// V6_vrmpybusi
    0U,	// V6_vrmpybusi_acc
    0U,	// V6_vrmpybusv
    0U,	// V6_vrmpybusv_acc
    0U,	// V6_vrmpybv
    0U,	// V6_vrmpybv_acc
    0U,	// V6_vrmpyub
    0U,	// V6_vrmpyub_acc
    0U,	// V6_vrmpyub_rtt
    0U,	// V6_vrmpyub_rtt_acc
    0U,	// V6_vrmpyubi
    0U,	// V6_vrmpyubi_acc
    0U,	// V6_vrmpyubv
    0U,	// V6_vrmpyubv_acc
    1U,	// V6_vrmpyzbb_rt
    1U,	// V6_vrmpyzbb_rt_acc
    1U,	// V6_vrmpyzbb_rx
    1U,	// V6_vrmpyzbb_rx_acc
    1U,	// V6_vrmpyzbub_rt
    1U,	// V6_vrmpyzbub_rt_acc
    1U,	// V6_vrmpyzbub_rx
    1U,	// V6_vrmpyzbub_rx_acc
    1U,	// V6_vrmpyzcb_rt
    1U,	// V6_vrmpyzcb_rt_acc
    1U,	// V6_vrmpyzcb_rx
    1U,	// V6_vrmpyzcb_rx_acc
    1U,	// V6_vrmpyzcbs_rt
    1U,	// V6_vrmpyzcbs_rt_acc
    1U,	// V6_vrmpyzcbs_rx
    1U,	// V6_vrmpyzcbs_rx_acc
    1U,	// V6_vrmpyznb_rt
    1U,	// V6_vrmpyznb_rt_acc
    1U,	// V6_vrmpyznb_rx
    1U,	// V6_vrmpyznb_rx_acc
    0U,	// V6_vror
    0U,	// V6_vrotr
    0U,	// V6_vroundhb
    0U,	// V6_vroundhub
    0U,	// V6_vrounduhub
    0U,	// V6_vrounduwuh
    0U,	// V6_vroundwh
    0U,	// V6_vroundwuh
    0U,	// V6_vrsadubi
    0U,	// V6_vrsadubi_acc
    0U,	// V6_vsatdw
    0U,	// V6_vsathub
    0U,	// V6_vsatuwuh
    0U,	// V6_vsatwh
    0U,	// V6_vsb
    1U,	// V6_vscattermh
    2U,	// V6_vscattermh_add
    0U,	// V6_vscattermhq
    2U,	// V6_vscattermhw
    2U,	// V6_vscattermhw_add
    0U,	// V6_vscattermhwq
    2U,	// V6_vscattermw
    2U,	// V6_vscattermw_add
    0U,	// V6_vscattermwq
    0U,	// V6_vsh
    0U,	// V6_vshufeh
    0U,	// V6_vshuff
    0U,	// V6_vshuffb
    0U,	// V6_vshuffeb
    0U,	// V6_vshuffh
    0U,	// V6_vshuffob
    0U,	// V6_vshuffvdd
    0U,	// V6_vshufoeb
    0U,	// V6_vshufoeh
    0U,	// V6_vshufoh
    0U,	// V6_vsubb
    0U,	// V6_vsubb_dv
    0U,	// V6_vsubbnq
    0U,	// V6_vsubbq
    0U,	// V6_vsubbsat
    0U,	// V6_vsubbsat_dv
    25U,	// V6_vsubcarry
    0U,	// V6_vsubcarryo
    0U,	// V6_vsubh
    0U,	// V6_vsubh_dv
    0U,	// V6_vsubhnq
    0U,	// V6_vsubhq
    0U,	// V6_vsubhsat
    0U,	// V6_vsubhsat_dv
    0U,	// V6_vsubhw
    0U,	// V6_vsububh
    0U,	// V6_vsububsat
    0U,	// V6_vsububsat_dv
    0U,	// V6_vsubububb_sat
    0U,	// V6_vsubuhsat
    0U,	// V6_vsubuhsat_dv
    0U,	// V6_vsubuhw
    0U,	// V6_vsubuwsat
    0U,	// V6_vsubuwsat_dv
    1U,	// V6_vsubw
    1U,	// V6_vsubw_dv
    0U,	// V6_vsubwnq
    0U,	// V6_vsubwq
    1U,	// V6_vsubwsat
    1U,	// V6_vsubwsat_dv
    0U,	// V6_vswap
    0U,	// V6_vtmpyb
    0U,	// V6_vtmpyb_acc
    0U,	// V6_vtmpybus
    0U,	// V6_vtmpybus_acc
    0U,	// V6_vtmpyhb
    0U,	// V6_vtmpyhb_acc
    0U,	// V6_vunpackb
    0U,	// V6_vunpackh
    0U,	// V6_vunpackob
    0U,	// V6_vunpackoh
    0U,	// V6_vunpackub
    0U,	// V6_vunpackuh
    0U,	// V6_vwhist128
    0U,	// V6_vwhist128m
    0U,	// V6_vwhist128q
    0U,	// V6_vwhist128qm
    0U,	// V6_vwhist256
    0U,	// V6_vwhist256_sat
    0U,	// V6_vwhist256q
    0U,	// V6_vwhist256q_sat
    0U,	// V6_vxor
    0U,	// V6_vzb
    0U,	// V6_vzh
    0U,	// V6_zLd_ai
    0U,	// V6_zLd_pi
    0U,	// V6_zLd_ppu
    0U,	// V6_zLd_pred_ai
    0U,	// V6_zLd_pred_pi
    0U,	// V6_zLd_pred_ppu
    0U,	// V6_zextract
    0U,	// Y2_barrier
    0U,	// Y2_break
    0U,	// Y2_dccleana
    0U,	// Y2_dccleaninva
    0U,	// Y2_dcfetchbo
    0U,	// Y2_dcinva
    0U,	// Y2_dczeroa
    0U,	// Y2_icinva
    0U,	// Y2_isync
    0U,	// Y2_syncht
    0U,	// Y2_wait
    0U,	// Y4_l2fetch
    0U,	// Y4_trace
    0U,	// Y5_l2fetch
    0U,	// Y6_diag
    0U,	// Y6_diag0
    0U,	// Y6_diag1
    0U,	// Y6_dmlink
    0U,	// Y6_dmpause
    0U,	// Y6_dmpoll
    0U,	// Y6_dmresume
    0U,	// Y6_dmstart
    0U,	// Y6_dmwait
    2U,	// dep_A2_addsat
    2U,	// dep_A2_subsat
    0U,	// dep_S2_packhl
    0U,	// invalid_decode
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  Bits |= (uint64_t)OpInfo2[MI->getOpcode()] << 48;
  return {AsmStrs+(Bits & 2047)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void HexagonInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 11) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_INSTR_REF, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_...
    return;
    break;
  case 1:
    // A2_addsp, A2_iconst, A2_neg, A2_not, A2_tfrp, A2_tfrpi, A2_vaddb_map, ...
    printOperand(MI, 0, O);
    break;
  case 2:
    // A2_tfrf, A2_tfrfnew, A2_tfrpf, A2_tfrpfnew, A2_tfrpt, A2_tfrptnew, A2_...
    printOperand(MI, 1, O);
    break;
  case 3:
    // CALLProfile, J2_call, J2_jump, J2_loop0i, J2_loop0iext, J2_loop0r, J2_...
    printBrtarget(MI, 0, O);
    break;
  case 4:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    printOperand(MI, 2, O);
    break;
  }


  // Fragment 1 encoded into 10 bits for 824 unique commands.
  switch ((Bits >> 14) & 1023) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, dup_A2_add, dup_A2_addi, A2_add, A2_addh_h16_hh, A2_addh_h16...
    O << " = add(";
    break;
  case 1:
    // A2_iconst
    O << " = iconst(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 2:
    // A2_neg, A2_negp, A2_negsat
    O << " = neg(";
    printOperand(MI, 1, O);
    break;
  case 3:
    // A2_not, A2_notp, C2_not, V6_pred_not
    O << " = not(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 4:
    // A2_tfrf, A2_tfrpf, A2_tfrpt, A2_tfrt, L2_ploadrbf_zomap, L2_ploadrbt_z...
    O << ") ";
    printOperand(MI, 0, O);
    break;
  case 5:
    // A2_tfrfnew, A2_tfrpfnew, A2_tfrptnew, A2_tfrtnew, L2_ploadrbfnew_zomap...
    O << ".new) ";
    printOperand(MI, 0, O);
    break;
  case 6:
    // A2_tfrp, C2_pxfer_map, V6_vassignp, dup_A2_tfr, A2_tfr, A2_tfrcrr, A2_...
    O << " = ";
    printOperand(MI, 1, O);
    break;
  case 7:
    // A2_tfrpi, dup_A2_tfrsi, A2_tfrsi, J4_jumpseti, SA1_seti, SA1_setin1, T...
    O << " = #";
    printOperand(MI, 1, O);
    break;
  case 8:
    // A2_vaddb_map, V6_vaddb_alt, V6_vaddb_dv_alt, V6_vaddbsat_alt, V6_vaddb...
    O << " = vaddb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 9:
    // A2_vsubb_map, V6_vsubb_alt, V6_vsubb_dv_alt, V6_vsubbsat_alt, V6_vsubb...
    O << " = vsubb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 10:
    // A2_zxtb, dup_A2_zxtb
    O << " = zxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 11:
    // A4_boundscheck, A4_boundscheck_hi, A4_boundscheck_lo
    O << " = boundscheck(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 12:
    // C2_cmpgei
    O << " = cmp.ge(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 13:
    // C2_cmpgeui
    O << " = cmp.geu(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 14:
    // C2_cmplt
    O << " = cmp.lt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 15:
    // C2_cmpltu
    O << " = cmp.ltu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 16:
    // J2_jumpf_nopred_map, J2_jumpt_nopred_map
    O << ") jump ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 17:
    // J2_jumprf_nopred_map, J2_jumprt_nopred_map
    O << ") jumpr ";
    printOperand(MI, 1, O);
    return;
    break;
  case 18:
    // J2_trap1_noregmap, S6_allocframe_to_raw, V6_zld0, Y2_dcfetch, A4_ext, ...
    O << ')';
    return;
    break;
  case 19:
    // L2_loadalignb_zomap, L2_loadalignb_io, L2_loadalignb_pbr, L2_loadalign...
    O << " = memb_fifo(";
    break;
  case 20:
    // L2_loadalignh_zomap, L2_loadalignh_io, L2_loadalignh_pbr, L2_loadalign...
    O << " = memh_fifo(";
    break;
  case 21:
    // L2_loadbsw2_zomap, L2_loadbsw4_zomap, L2_loadbsw2_io, L2_loadbsw2_pbr,...
    O << " = membh(";
    printOperand(MI, 1, O);
    break;
  case 22:
    // L2_loadbzw2_zomap, L2_loadbzw4_zomap, L2_loadbzw2_io, L2_loadbzw2_pbr,...
    O << " = memubh(";
    printOperand(MI, 1, O);
    break;
  case 23:
    // L2_loadrb_zomap, dup_L2_loadrb_io, L2_loadrb_io, L2_loadrb_pbr, L2_loa...
    O << " = memb(";
    printOperand(MI, 1, O);
    break;
  case 24:
    // L2_loadrd_zomap, dup_L2_loadrd_io, L2_loadrd_io, L2_loadrd_pbr, L2_loa...
    O << " = memd(";
    printOperand(MI, 1, O);
    break;
  case 25:
    // L2_loadrh_zomap, dup_L2_loadrh_io, L2_loadrh_io, L2_loadrh_pbr, L2_loa...
    O << " = memh(";
    printOperand(MI, 1, O);
    break;
  case 26:
    // L2_loadri_zomap, dup_L2_loadri_io, L2_loadri_io, L2_loadri_pbr, L2_loa...
    O << " = memw(";
    printOperand(MI, 1, O);
    break;
  case 27:
    // L2_loadrub_zomap, dup_L2_loadrub_io, L2_loadrub_io, L2_loadrub_pbr, L2...
    O << " = memub(";
    printOperand(MI, 1, O);
    break;
  case 28:
    // L2_loadruh_zomap, dup_L2_loadruh_io, L2_loadruh_io, L2_loadruh_pbr, L2...
    O << " = memuh(";
    printOperand(MI, 1, O);
    break;
  case 29:
    // L4_add_memopb_zomap, L4_add_memoph_zomap, L4_add_memopw_zomap
    O << ") += ";
    printOperand(MI, 1, O);
    return;
    break;
  case 30:
    // L4_and_memopb_zomap, L4_and_memoph_zomap, L4_and_memopw_zomap
    O << ") &= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 31:
    // L4_iadd_memopb_zomap, L4_iadd_memoph_zomap, L4_iadd_memopw_zomap
    O << ") += #";
    printOperand(MI, 1, O);
    return;
    break;
  case 32:
    // L4_iand_memopb_zomap, L4_iand_memoph_zomap, L4_iand_memopw_zomap
    O << ") = clrbit(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 33:
    // L4_ior_memopb_zomap, L4_ior_memoph_zomap, L4_ior_memopw_zomap
    O << ") = setbit(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 34:
    // L4_isub_memopb_zomap, L4_isub_memoph_zomap, L4_isub_memopw_zomap
    O << ") -= #";
    printOperand(MI, 1, O);
    return;
    break;
  case 35:
    // L4_or_memopb_zomap, L4_or_memoph_zomap, L4_or_memopw_zomap
    O << ") |= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 36:
    // L4_return_map_to_raw_f, L4_return_map_to_raw_t
    O << ") dealloc_return";
    return;
    break;
  case 37:
    // L4_return_map_to_raw_fnew_pnt, L4_return_map_to_raw_tnew_pnt
    O << ".new) dealloc_return:nt";
    return;
    break;
  case 38:
    // L4_return_map_to_raw_fnew_pt, L4_return_map_to_raw_tnew_pt
    O << ".new) dealloc_return:t";
    return;
    break;
  case 39:
    // L4_sub_memopb_zomap, L4_sub_memoph_zomap, L4_sub_memopw_zomap
    O << ") -= ";
    printOperand(MI, 1, O);
    return;
    break;
  case 40:
    // M2_mpysmi, M2_mpyi
    O << " = mpyi(";
    printOperand(MI, 1, O);
    break;
  case 41:
    // M2_mpyui
    O << " = mpyui(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 42:
    // M2_vrcmpys_acc_s1, M2_vrcmpys_acc_s1_h, M2_vrcmpys_acc_s1_l
    O << " += vrcmpys(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 43:
    // M2_vrcmpys_s1, M2_vrcmpys_s1rp, M2_vrcmpys_s1_h, M2_vrcmpys_s1_l, M2_v...
    O << " = vrcmpys(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 44:
    // M7_vdmpy
    O << " = vdmpyw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 45:
    // M7_vdmpy_acc
    O << " += vdmpyw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 46:
    // PS_tailcall_r, CALLProfile, EH_RETURN_JMPR, J2_call, J2_callr, J2_jump...
    return;
    break;
  case 47:
    // S2_asr_i_p_rnd_goodsyntax, S2_asr_i_r_rnd_goodsyntax
    O << " = asrrnd(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 48:
    // S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_p...
    O << ") memb(";
    break;
  case 49:
    // S2_pstorerdf_zomap, S2_pstorerdt_zomap, S2_pstorerdf_io, S2_pstorerdf_...
    O << ") memd(";
    break;
  case 50:
    // S2_pstorerff_zomap, S2_pstorerft_zomap, S2_pstorerhf_zomap, S2_pstorer...
    O << ") memh(";
    break;
  case 51:
    // S2_pstorerif_zomap, S2_pstorerinewf_zomap, S2_pstorerinewt_zomap, S2_p...
    O << ") memw(";
    break;
  case 52:
    // S2_storerb_zomap, S2_storerbnew_zomap, S2_storerd_zomap, S2_storerf_zo...
    O << ") = ";
    printOperand(MI, 1, O);
    break;
  case 53:
    // S2_tableidxb_goodsyntax, S2_tableidxb
    O << " = tableidxb(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 54:
    // S2_tableidxd_goodsyntax, S2_tableidxd
    O << " = tableidxd(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 55:
    // S2_tableidxh_goodsyntax, S2_tableidxh
    O << " = tableidxh(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 56:
    // S2_tableidxw_goodsyntax, S2_tableidxw
    O << " = tableidxw(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    break;
  case 57:
    // S4_pstorerbfnew_zomap, S4_pstorerbnewfnew_zomap, S4_pstorerbnewtnew_zo...
    O << ".new) memb(";
    break;
  case 58:
    // S4_pstorerdfnew_zomap, S4_pstorerdtnew_zomap, S2_pstorerdfnew_pi, S2_p...
    O << ".new) memd(";
    break;
  case 59:
    // S4_pstorerffnew_zomap, S4_pstorerftnew_zomap, S4_pstorerhfnew_zomap, S...
    O << ".new) memh(";
    break;
  case 60:
    // S4_pstorerifnew_zomap, S4_pstorerinewfnew_zomap, S4_pstorerinewtnew_zo...
    O << ".new) memw(";
    break;
  case 61:
    // S4_storeirb_zomap, S4_storeirh_zomap, S4_storeiri_zomap
    O << ") = #";
    printOperand(MI, 1, O);
    return;
    break;
  case 62:
    // S5_asrhub_rnd_sat_goodsyntax, S5_asrhub_rnd_sat, S5_asrhub_sat
    O << " = vasrhub(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    break;
  case 63:
    // S5_vasrhrnd_goodsyntax, V6_vasrh_alt, V6_vasrhv_alt, S2_asr_i_vh, S2_a...
    O << " = vasrh(";
    printOperand(MI, 1, O);
    break;
  case 64:
    // V6_MAP_equb, V6_MAP_equh, V6_MAP_equw, V6_veqb, V6_veqh, V6_veqw
    O << " = vcmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 65:
    // V6_MAP_equb_and, V6_MAP_equh_and, V6_MAP_equw_and, V6_veqb_and, V6_veq...
    O << " &= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 66:
    // V6_MAP_equb_ior, V6_MAP_equh_ior, V6_MAP_equw_ior, V6_veqb_or, V6_veqh...
    O << " |= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 67:
    // V6_MAP_equb_xor, V6_MAP_equh_xor, V6_MAP_equw_xor, V6_veqb_xor, V6_veq...
    O << " ^= vcmp.eq(";
    printOperand(MI, 2, O);
    break;
  case 68:
    // V6_extractw_alt
    O << ".w = vextract(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 69:
    // V6_hi
    O << " = hi(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 70:
    // V6_ld0, V6_ldnt0, V6_ldntnt0, V6_vL32b_ai, V6_vL32b_nt_ai, V6_vL32b_nt...
    O << " = vmem(";
    printOperand(MI, 1, O);
    break;
  case 71:
    // V6_ldu0, V6_vL32Ub_ai, V6_vL32Ub_pi, V6_vL32Ub_ppu
    O << " = vmemu(";
    printOperand(MI, 1, O);
    break;
  case 72:
    // V6_lo
    O << " = lo(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 73:
    // V6_stnnt0, V6_stnt0
    O << "):nt = ";
    printOperand(MI, 1, O);
    break;
  case 74:
    // V6_stnp0, V6_stnpnt0, V6_stnq0, V6_stnqnt0, V6_stp0, V6_stpnt0, V6_stq...
    O << ") vmem(";
    break;
  case 75:
    // V6_stunp0, V6_stup0, V6_vS32Ub_npred_ai, V6_vS32Ub_npred_pi, V6_vS32Ub...
    O << ") vmemu(";
    break;
  case 76:
    // V6_v6mpyhubs10_alt, V6_v6mpyvubs10_alt, V6_v6mpyhubs10, V6_v6mpyvubs10
    O << ".w = v6mpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 77:
    // V6_vabsb_alt, V6_vabsb_sat_alt
    O << " = vabsb(";
    printOperand(MI, 1, O);
    break;
  case 78:
    // V6_vabsdiffh_alt, M2_vabsdiffh
    O << " = vabsdiffh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 79:
    // V6_vabsdiffub_alt, M6_vabsdiffub
    O << " = vabsdiffub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 80:
    // V6_vabsdiffuh_alt
    O << " = vabsdiffuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 81:
    // V6_vabsdiffw_alt, M2_vabsdiffw
    O << " = vabsdiffw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 82:
    // V6_vabsh_alt, V6_vabsh_sat_alt, A2_vabsh, A2_vabshsat
    O << " = vabsh(";
    printOperand(MI, 1, O);
    break;
  case 83:
    // V6_vabsub_alt
    O << ".ub = vabs(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 84:
    // V6_vabsuh_alt
    O << ".uh = vabs(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 85:
    // V6_vabsuw_alt
    O << ".uw = vabs(";
    printOperand(MI, 1, O);
    O << ".w)";
    return;
    break;
  case 86:
    // V6_vabsw_alt, V6_vabsw_sat_alt, A2_vabsw, A2_vabswsat
    O << " = vabsw(";
    printOperand(MI, 1, O);
    break;
  case 87:
    // V6_vaddbnq_alt, V6_vaddbq_alt, V6_vsubbnq_alt, V6_vsubbq_alt
    O << ".b) ";
    printOperand(MI, 0, O);
    break;
  case 88:
    // V6_vaddh_alt, V6_vaddh_dv_alt, V6_vaddhsat_alt, V6_vaddhsat_dv_alt, V6...
    O << " = vaddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 89:
    // V6_vaddhnq_alt, V6_vaddhq_alt, V6_vsubhnq_alt, V6_vsubhq_alt
    O << ".h) ";
    printOperand(MI, 0, O);
    break;
  case 90:
    // V6_vaddhw_acc_alt
    O << " += vaddh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 91:
    // V6_vaddubh_acc_alt
    O << " += vaddub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 92:
    // V6_vaddubh_alt, V6_vaddubsat_alt, V6_vaddubsat_dv_alt, A2_vaddub, A2_v...
    O << " = vaddub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 93:
    // V6_vadduhsat_alt, V6_vadduhsat_dv_alt, V6_vadduhw_alt, A2_svadduhs, A2...
    O << " = vadduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 94:
    // V6_vadduhw_acc_alt
    O << " += vadduh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 95:
    // V6_vadduwsat_alt, V6_vadduwsat_dv_alt
    O << " = vadduw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 96:
    // V6_vaddw_alt, V6_vaddw_dv_alt, V6_vaddwsat_alt, V6_vaddwsat_dv_alt, A2...
    O << " = vaddw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 97:
    // V6_vaddwnq_alt, V6_vaddwq_alt, V6_vsubwnq_alt, V6_vsubwq_alt
    O << ".w) ";
    printOperand(MI, 0, O);
    break;
  case 98:
    // V6_vandnqrt_acc_alt
    O << ".ub |= vand(!";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 99:
    // V6_vandnqrt_alt
    O << ".ub = vand(!";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 100:
    // V6_vandqrt_acc_alt, V6_vandvrt_acc_alt
    O << ".ub |= vand(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 101:
    // V6_vandqrt_alt, V6_vandvrt_alt
    O << ".ub = vand(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 102:
    // V6_vaslh_acc_alt
    O << " += vaslh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 103:
    // V6_vaslh_alt, V6_vaslhv_alt, S2_asl_i_vh, S2_asl_r_vh
    O << " = vaslh(";
    printOperand(MI, 1, O);
    break;
  case 104:
    // V6_vaslw_acc_alt
    O << " += vaslw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 105:
    // V6_vaslw_alt, V6_vaslwv_alt, S2_asl_i_vw, S2_asl_r_vw
    O << " = vaslw(";
    printOperand(MI, 1, O);
    break;
  case 106:
    // V6_vasr_into_alt
    O << " = vasrinto(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 107:
    // V6_vasrh_acc_alt
    O << " += vasrh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 108:
    // V6_vasrw_acc_alt
    O << " += vasrw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 109:
    // V6_vasrw_alt, V6_vasrwv_alt, S2_asr_i_svw_trun, S2_asr_i_vw, S2_asr_r_...
    O << " = vasrw(";
    printOperand(MI, 1, O);
    break;
  case 110:
    // V6_vavgb_alt, V6_vavgbrnd_alt
    O << " = vavgb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 111:
    // V6_vavgh_alt, V6_vavghrnd_alt, A2_svavgh, A2_svavghs, A2_vavgh, A2_vav...
    O << " = vavgh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 112:
    // V6_vavgub_alt, V6_vavgubrnd_alt, A2_vavgub, A2_vavgubr
    O << " = vavgub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 113:
    // V6_vavguh_alt, V6_vavguhrnd_alt, A2_vavguh, A2_vavguhr
    O << " = vavguh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 114:
    // V6_vavguw_alt, V6_vavguwrnd_alt, A2_vavguw, A2_vavguwr
    O << " = vavguw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 115:
    // V6_vavgw_alt, V6_vavgwrnd_alt, A2_vavgw, A2_vavgwcr, A2_vavgwr
    O << " = vavgw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 116:
    // V6_vcl0h_alt
    O << " = vcl0h(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 117:
    // V6_vcl0w_alt
    O << " = vcl0w(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 118:
    // V6_vd0, V6_vdd0, SA1_clrf, SA1_clrfnew, SA1_clrt, SA1_clrtnew
    O << " = #0";
    return;
    break;
  case 119:
    // V6_vdealb4w_alt
    O << " = vdealb4w(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 120:
    // V6_vdealb_alt
    O << " = vdealb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 121:
    // V6_vdealh_alt
    O << " = vdealh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 122:
    // V6_vdmpybus_acc_alt, V6_vdmpybus_dv_acc_alt
    O << " += vdmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 123:
    // V6_vdmpybus_alt, V6_vdmpybus_dv_alt
    O << " = vdmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 124:
    // V6_vdmpyhb_acc_alt, V6_vdmpyhb_dv_acc_alt
    O << " += vdmpyhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 125:
    // V6_vdmpyhb_alt, V6_vdmpyhb_dv_alt
    O << " = vdmpyhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 126:
    // V6_vdmpyhisat_acc_alt, V6_vdmpyhsat_acc_alt, V6_vdmpyhvsat_acc_alt
    O << " += vdmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 127:
    // V6_vdmpyhisat_alt, V6_vdmpyhsat_alt, V6_vdmpyhvsat_alt
    O << " = vdmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 128:
    // V6_vdmpyhsuisat_acc_alt, V6_vdmpyhsusat_acc_alt
    O << " += vdmpyhsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 129:
    // V6_vdmpyhsuisat_alt, V6_vdmpyhsusat_alt
    O << " = vdmpyhsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 130:
    // V6_vdsaduh_acc_alt
    O << " += vdsaduh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 131:
    // V6_vdsaduh_alt
    O << " = vdsaduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 132:
    // V6_vlsrh_alt, V6_vlsrhv_alt, S2_lsr_i_vh, S2_lsr_r_vh
    O << " = vlsrh(";
    printOperand(MI, 1, O);
    break;
  case 133:
    // V6_vlsrw_alt, V6_vlsrwv_alt, S2_lsr_i_vw, S2_lsr_r_vw
    O << " = vlsrw(";
    printOperand(MI, 1, O);
    break;
  case 134:
    // V6_vmaxb_alt, A2_vmaxb
    O << " = vmaxb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 135:
    // V6_vmaxh_alt, A2_vmaxh
    O << " = vmaxh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 136:
    // V6_vmaxub_alt, A2_vmaxub
    O << " = vmaxub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 137:
    // V6_vmaxuh_alt, A2_vmaxuh
    O << " = vmaxuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 138:
    // V6_vmaxw_alt, A2_vmaxw
    O << " = vmaxw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 139:
    // V6_vminb_alt, A2_vminb
    O << " = vminb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 140:
    // V6_vminh_alt, A2_vminh
    O << " = vminh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 141:
    // V6_vminub_alt, A2_vminub
    O << " = vminub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 142:
    // V6_vminuh_alt, A2_vminuh
    O << " = vminuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 143:
    // V6_vminw_alt, A2_vminw
    O << " = vminw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 144:
    // V6_vmpabus_acc_alt
    O << " += vmpabus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 145:
    // V6_vmpabus_alt, V6_vmpabusv_alt
    O << " = vmpabus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 146:
    // V6_vmpabuu_acc_alt
    O << " += vmpabuu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 147:
    // V6_vmpabuu_alt, V6_vmpabuuv_alt
    O << " = vmpabuu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 148:
    // V6_vmpahb_acc_alt
    O << " += vmpahb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 149:
    // V6_vmpahb_alt
    O << " = vmpahb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 150:
    // V6_vmpauhb_acc_alt
    O << " += vmpauhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 151:
    // V6_vmpauhb_alt
    O << " = vmpauhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 152:
    // V6_vmpybus_acc_alt, V6_vmpybusv_acc_alt
    O << " += vmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 153:
    // V6_vmpybus_alt, V6_vmpybusv_alt
    O << " = vmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 154:
    // V6_vmpybv_acc_alt
    O << " += vmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 155:
    // V6_vmpybv_alt
    O << " = vmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 156:
    // V6_vmpyewuh_alt
    O << " = vmpyewuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 157:
    // V6_vmpyh_acc_alt, V6_vmpyhsat_acc_alt, V6_vmpyhv_acc_alt, M2_vmac2, M2...
    O << " += vmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 158:
    // V6_vmpyh_alt, V6_vmpyhsrs_alt, V6_vmpyhss_alt, V6_vmpyhv_alt, V6_vmpyh...
    O << " = vmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 159:
    // V6_vmpyhus_acc_alt
    O << " += vmpyhus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 160:
    // V6_vmpyhus_alt
    O << " = vmpyhus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 161:
    // V6_vmpyiewh_acc_alt
    O << " += vmpyiewh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 162:
    // V6_vmpyiewuh_acc_alt
    O << " += vmpyiewuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 163:
    // V6_vmpyiewuh_alt
    O << " = vmpyiewuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 164:
    // V6_vmpyih_acc_alt
    O << " += vmpyih(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 165:
    // V6_vmpyih_alt
    O << " = vmpyih(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 166:
    // V6_vmpyihb_acc_alt
    O << " += vmpyihb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 167:
    // V6_vmpyihb_alt
    O << " = vmpyihb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 168:
    // V6_vmpyiowh_alt
    O << " = vmpyiowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 169:
    // V6_vmpyiwb_acc_alt
    O << " += vmpyiwb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 170:
    // V6_vmpyiwb_alt
    O << " = vmpyiwb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 171:
    // V6_vmpyiwh_acc_alt
    O << " += vmpyiwh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 172:
    // V6_vmpyiwh_alt
    O << " = vmpyiwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 173:
    // V6_vmpyiwub_acc_alt
    O << " += vmpyiwub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 174:
    // V6_vmpyiwub_alt
    O << " = vmpyiwub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 175:
    // V6_vmpyowh_alt, V6_vmpyowh_rnd_alt
    O << " = vmpyowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 176:
    // V6_vmpyowh_rnd_sacc_alt, V6_vmpyowh_sacc_alt
    O << " += vmpyowh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 177:
    // V6_vmpyub_acc_alt, V6_vmpyubv_acc_alt
    O << " += vmpyub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 178:
    // V6_vmpyub_alt, V6_vmpyubv_alt
    O << " = vmpyub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 179:
    // V6_vmpyuh_acc_alt, V6_vmpyuhv_acc_alt
    O << " += vmpyuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 180:
    // V6_vmpyuh_alt, V6_vmpyuhv_alt
    O << " = vmpyuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 181:
    // V6_vnavgb_alt
    O << " = vnavgb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 182:
    // V6_vnavgh_alt, A2_svnavgh, A2_vnavgh, A2_vnavghcr, A2_vnavghr
    O << " = vnavgh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 183:
    // V6_vnavgub_alt
    O << " = vnavgub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 184:
    // V6_vnavgw_alt, A2_vnavgw, A2_vnavgwcr, A2_vnavgwr
    O << " = vnavgw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 185:
    // V6_vnormamth_alt
    O << " = vnormamth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 186:
    // V6_vnormamtw_alt
    O << " = vnormamtw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 187:
    // V6_vpackeb_alt
    O << " = vpackeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 188:
    // V6_vpackeh_alt
    O << " = vpackeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 189:
    // V6_vpackhb_sat_alt
    O << " = vpackhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 190:
    // V6_vpackhub_sat_alt
    O << " = vpackhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 191:
    // V6_vpackob_alt
    O << " = vpackob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 192:
    // V6_vpackoh_alt
    O << " = vpackoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 193:
    // V6_vpackwh_sat_alt
    O << " = vpackwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 194:
    // V6_vpackwuh_sat_alt
    O << " = vpackwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 195:
    // V6_vpopcounth_alt
    O << " = vpopcounth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 196:
    // V6_vrmpybub_rtt_acc_alt, V6_vrmpybub_rtt_acc, V6_vrmpybus_acc, V6_vrmp...
    O << ".w += vrmpy(";
    printOperand(MI, 2, O);
    break;
  case 197:
    // V6_vrmpybub_rtt_alt, V6_vrmpybub_rtt, V6_vrmpybus, V6_vrmpybusi, V6_vr...
    O << ".w = vrmpy(";
    printOperand(MI, 1, O);
    break;
  case 198:
    // V6_vrmpybus_acc_alt, V6_vrmpybusi_acc_alt, V6_vrmpybusv_acc_alt
    O << " += vrmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 199:
    // V6_vrmpybus_alt, V6_vrmpybusi_alt, V6_vrmpybusv_alt
    O << " = vrmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 200:
    // V6_vrmpybv_acc_alt
    O << " += vrmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 201:
    // V6_vrmpybv_alt
    O << " = vrmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 202:
    // V6_vrmpyub_acc_alt, V6_vrmpyubi_acc_alt, V6_vrmpyubv_acc_alt
    O << " += vrmpyub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 203:
    // V6_vrmpyub_alt, V6_vrmpyubi_alt, V6_vrmpyubv_alt
    O << " = vrmpyub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 204:
    // V6_vrmpyub_rtt_acc_alt, V6_vrmpyub_acc, V6_vrmpyub_rtt_acc, V6_vrmpyub...
    O << ".uw += vrmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    break;
  case 205:
    // V6_vrmpyub_rtt_alt, V6_vrmpyub, V6_vrmpyub_rtt, V6_vrmpyubi, V6_vrmpyu...
    O << ".uw = vrmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 206:
    // V6_vrotr_alt
    O << " = vrotr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 207:
    // V6_vroundhb_alt
    O << " = vroundhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 208:
    // V6_vroundhub_alt
    O << " = vroundhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 209:
    // V6_vrounduhub_alt
    O << " = vrounduhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 210:
    // V6_vrounduwuh_alt
    O << " = vrounduwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 211:
    // V6_vroundwh_alt
    O << " = vroundwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 212:
    // V6_vroundwuh_alt
    O << " = vroundwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 213:
    // V6_vrsadubi_acc_alt, A2_vrsadub_acc
    O << " += vrsadub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 214:
    // V6_vrsadubi_alt, A2_vrsadub
    O << " = vrsadub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 215:
    // V6_vsathub_alt, S2_svsathub, S2_vsathub, S2_vsathub_nopack
    O << " = vsathub(";
    printOperand(MI, 1, O);
    break;
  case 216:
    // V6_vsatuwuh_alt
    O << " = vsatuwuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 217:
    // V6_vsatwh_alt, S2_vsatwh, S2_vsatwh_nopack
    O << " = vsatwh(";
    printOperand(MI, 1, O);
    break;
  case 218:
    // V6_vsb_alt
    O << " = vsxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 219:
    // V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_alt, V6_vs...
    O << ',';
    break;
  case 220:
    // V6_vscattermhq_alt, V6_vscattermwhq_alt, V6_vscattermwq_alt, V6_vscatt...
    O << ") vscatter(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 221:
    // V6_vsh_alt
    O << " = vsxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 222:
    // V6_vshufeh_alt
    O << " = vshuffeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 223:
    // V6_vshuffb_alt
    O << " = vshuffb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 224:
    // V6_vshuffeb_alt
    O << " = vshuffeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 225:
    // V6_vshuffh_alt
    O << " = vshuffh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 226:
    // V6_vshuffob_alt
    O << " = vshuffob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 227:
    // V6_vshufoeb_alt
    O << " = vshuffoeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 228:
    // V6_vshufoeh_alt
    O << " = vshuffoeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 229:
    // V6_vshufoh_alt
    O << " = vshuffoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 230:
    // V6_vsubh_alt, V6_vsubh_dv_alt, V6_vsubhsat_alt, V6_vsubhsat_dv_alt, V6...
    O << " = vsubh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 231:
    // V6_vsububh_alt, V6_vsububsat_alt, V6_vsububsat_dv_alt, A2_vsubub, A2_v...
    O << " = vsubub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 232:
    // V6_vsubuhsat_alt, V6_vsubuhsat_dv_alt, V6_vsubuhw_alt, A2_svsubuhs, A2...
    O << " = vsubuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 233:
    // V6_vsubuwsat_alt, V6_vsubuwsat_dv_alt
    O << " = vsubuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 234:
    // V6_vsubw_alt, V6_vsubw_dv_alt, V6_vsubwsat_alt, V6_vsubwsat_dv_alt, A2...
    O << " = vsubw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 235:
    // V6_vtmpyb_acc_alt
    O << " += vtmpyb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 236:
    // V6_vtmpyb_alt
    O << " = vtmpyb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 237:
    // V6_vtmpybus_acc_alt
    O << " += vtmpybus(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 238:
    // V6_vtmpybus_alt
    O << " = vtmpybus(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 239:
    // V6_vtmpyhb_acc_alt
    O << " += vtmpyhb(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 240:
    // V6_vtmpyhb_alt
    O << " = vtmpyhb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 241:
    // V6_vunpackb_alt
    O << " = vunpackb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 242:
    // V6_vunpackh_alt
    O << " = vunpackh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 243:
    // V6_vunpackob_alt
    O << " |= vunpackob(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 244:
    // V6_vunpackoh_alt
    O << " |= vunpackoh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 245:
    // V6_vunpackub_alt
    O << " = vunpackub(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 246:
    // V6_vunpackuh_alt
    O << " = vunpackuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 247:
    // V6_vzb_alt
    O << " = vzxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 248:
    // V6_vzh_alt
    O << " = vzxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 249:
    // V6_zldp0, V6_zLd_pred_ai, V6_zLd_pred_pi, V6_zLd_pred_ppu
    O << ") z = vmem(";
    break;
  case 250:
    // dup_A2_andir, A2_and, A2_andir, A2_andp, A4_andn, A4_andnp, C2_and, C2...
    O << " = and(";
    printOperand(MI, 1, O);
    break;
  case 251:
    // dup_A2_combineii, dup_A4_combineii, dup_A4_combineir, A2_combineii, A4...
    O << " = combine(#";
    printOperand(MI, 1, O);
    break;
  case 252:
    // dup_A2_sxtb, A2_sxtb, SA1_sxtb
    O << " = sxtb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 253:
    // dup_A2_sxth, A2_sxth, SA1_sxth
    O << " = sxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 254:
    // dup_A2_zxth, A2_zxth, SA1_zxth
    O << " = zxth(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 255:
    // dup_A4_combineri, A2_combine_hh, A2_combine_hl, A2_combine_lh, A2_comb...
    O << " = combine(";
    printOperand(MI, 1, O);
    break;
  case 256:
    // dup_C2_cmpeqi, A4_rcmpeq, A4_rcmpeqi, C2_cmpeq, C2_cmpeqi, C2_cmpeqp
    O << " = cmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 257:
    // dup_L2_deallocframe, L2_deallocframe
    O << " = deallocframe(";
    printOperand(MI, 1, O);
    O << "):raw";
    return;
    break;
  case 258:
    // dup_S2_allocframe, J2_loop0i, J2_loop0iext, J2_loop1i, J2_loop1iext, J...
    O << ",#";
    break;
  case 259:
    // dup_S2_storerb_io, dup_S2_storerd_io, dup_S2_storerh_io, dup_S2_storer...
    O << "+#";
    printOperand(MI, 1, O);
    break;
  case 260:
    // A2_abs, A2_absp, A2_abssat
    O << " = abs(";
    printOperand(MI, 1, O);
    break;
  case 261:
    // A2_aslh
    O << " = aslh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 262:
    // A2_asrh
    O << " = asrh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 263:
    // A2_max, A2_maxp
    O << " = max(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 264:
    // A2_maxu, A2_maxup
    O << " = maxu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 265:
    // A2_min, A2_minp
    O << " = min(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 266:
    // A2_minu, A2_minup
    O << " = minu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 267:
    // A2_or, A2_orir, A2_orp, A4_orn, A4_ornp, C2_or, C2_orn, C4_or_and, C4_...
    O << " = or(";
    printOperand(MI, 1, O);
    break;
  case 268:
    // A2_roundsat, A4_round_ri, A4_round_ri_sat, A4_round_rr, A4_round_rr_sa...
    O << " = round(";
    printOperand(MI, 1, O);
    break;
  case 269:
    // A2_sat
    O << " = sat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 270:
    // A2_satb
    O << " = satb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 271:
    // A2_sath
    O << " = sath(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 272:
    // A2_satub
    O << " = satub(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 273:
    // A2_satuh
    O << " = satuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 274:
    // A2_sub, A2_subh_h16_hh, A2_subh_h16_hl, A2_subh_h16_lh, A2_subh_h16_ll...
    O << " = sub(";
    break;
  case 275:
    // A2_subri, S4_subi_asl_ri, S4_subi_lsr_ri
    O << " = sub(#";
    printOperand(MI, 1, O);
    break;
  case 276:
    // A2_swiz
    O << " = swiz(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 277:
    // A2_sxtw
    O << " = sxtw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 278:
    // A2_tfrih, HI
    O << ".h = #";
    break;
  case 279:
    // A2_tfril, LO
    O << ".l = #";
    break;
  case 280:
    // A2_vcmpbeq, A4_vcmpbeqi
    O << " = vcmpb.eq(";
    printOperand(MI, 1, O);
    break;
  case 281:
    // A2_vcmpbgtu, A4_vcmpbgtui
    O << " = vcmpb.gtu(";
    printOperand(MI, 1, O);
    break;
  case 282:
    // A2_vcmpheq, A4_vcmpheqi
    O << " = vcmph.eq(";
    printOperand(MI, 1, O);
    break;
  case 283:
    // A2_vcmphgt, A4_vcmphgti
    O << " = vcmph.gt(";
    printOperand(MI, 1, O);
    break;
  case 284:
    // A2_vcmphgtu, A4_vcmphgtui
    O << " = vcmph.gtu(";
    printOperand(MI, 1, O);
    break;
  case 285:
    // A2_vcmpweq, A4_vcmpweqi
    O << " = vcmpw.eq(";
    printOperand(MI, 1, O);
    break;
  case 286:
    // A2_vcmpwgt, A4_vcmpwgti
    O << " = vcmpw.gt(";
    printOperand(MI, 1, O);
    break;
  case 287:
    // A2_vcmpwgtu, A4_vcmpwgtui
    O << " = vcmpw.gtu(";
    printOperand(MI, 1, O);
    break;
  case 288:
    // A2_vconj
    O << " = vconj(";
    printOperand(MI, 1, O);
    O << "):sat";
    return;
    break;
  case 289:
    // A2_vmaxuw
    O << " = vmaxuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 290:
    // A2_vminuw
    O << " = vminuw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 291:
    // A2_vraddub
    O << " = vraddub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 292:
    // A2_vraddub_acc
    O << " += vraddub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 293:
    // A2_xor, A2_xorp, C2_xor, V6_pred_xor
    O << " = xor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 294:
    // A4_bitsplit, A4_bitspliti
    O << " = bitsplit(";
    printOperand(MI, 1, O);
    break;
  case 295:
    // A4_cmpbeq, A4_cmpbeqi
    O << " = cmpb.eq(";
    printOperand(MI, 1, O);
    break;
  case 296:
    // A4_cmpbgt, A4_cmpbgti
    O << " = cmpb.gt(";
    printOperand(MI, 1, O);
    break;
  case 297:
    // A4_cmpbgtu, A4_cmpbgtui
    O << " = cmpb.gtu(";
    printOperand(MI, 1, O);
    break;
  case 298:
    // A4_cmpheq, A4_cmpheqi
    O << " = cmph.eq(";
    printOperand(MI, 1, O);
    break;
  case 299:
    // A4_cmphgt, A4_cmphgti
    O << " = cmph.gt(";
    printOperand(MI, 1, O);
    break;
  case 300:
    // A4_cmphgtu, A4_cmphgtui
    O << " = cmph.gtu(";
    printOperand(MI, 1, O);
    break;
  case 301:
    // A4_cround_ri, A4_cround_rr, A7_croundd_ri, A7_croundd_rr
    O << " = cround(";
    printOperand(MI, 1, O);
    break;
  case 302:
    // A4_modwrapu
    O << " = modwrap(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 303:
    // A4_rcmpneq, A4_rcmpneqi, C4_cmpneq, C4_cmpneqi
    O << " = !cmp.eq(";
    printOperand(MI, 1, O);
    break;
  case 304:
    // A4_tlbmatch
    O << " = tlbmatch(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 305:
    // A4_vcmpbeq_any
    O << " = any8(vcmpb.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "))";
    return;
    break;
  case 306:
    // A4_vcmpbgt, A4_vcmpbgti
    O << " = vcmpb.gt(";
    printOperand(MI, 1, O);
    break;
  case 307:
    // A4_vrmaxh
    O << " = vrmaxh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 308:
    // A4_vrmaxuh
    O << " = vrmaxuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 309:
    // A4_vrmaxuw
    O << " = vrmaxuw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 310:
    // A4_vrmaxw
    O << " = vrmaxw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 311:
    // A4_vrminh
    O << " = vrminh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 312:
    // A4_vrminuh
    O << " = vrminuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 313:
    // A4_vrminuw
    O << " = vrminuw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 314:
    // A4_vrminw
    O << " = vrminw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 315:
    // A5_vaddhubs
    O << " = vaddhub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 316:
    // A6_vcmpbeq_notany
    O << " = !any8(vcmpb.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "))";
    return;
    break;
  case 317:
    // A7_clip
    O << " = clip(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 318:
    // A7_vclip
    O << " = vclip(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 319:
    // C2_all8
    O << " = all8(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 320:
    // C2_any8
    O << " = any8(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 321:
    // C2_bitsclr, C2_bitsclri
    O << " = bitsclr(";
    printOperand(MI, 1, O);
    break;
  case 322:
    // C2_bitsset
    O << " = bitsset(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 323:
    // C2_cmpgt, C2_cmpgti, C2_cmpgtp
    O << " = cmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 324:
    // C2_cmpgtu, C2_cmpgtui, C2_cmpgtup
    O << " = cmp.gtu(";
    printOperand(MI, 1, O);
    break;
  case 325:
    // C2_mask
    O << " = mask(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 326:
    // C2_mux, C2_muxii, C2_muxir, C2_muxri
    O << " = mux(";
    printOperand(MI, 1, O);
    break;
  case 327:
    // C2_vitpack
    O << " = vitpack(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 328:
    // C2_vmux, V6_vmux
    O << " = vmux(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 329:
    // C4_addipc
    O << " = add(pc,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 330:
    // C4_cmplte, C4_cmpltei
    O << " = !cmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 331:
    // C4_cmplteu, C4_cmplteui
    O << " = !cmp.gtu(";
    printOperand(MI, 1, O);
    break;
  case 332:
    // C4_fastcorner9
    O << " = fastcorner9(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 333:
    // C4_fastcorner9_not
    O << " = !fastcorner9(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 334:
    // C4_nbitsclr, C4_nbitsclri
    O << " = !bitsclr(";
    printOperand(MI, 1, O);
    break;
  case 335:
    // C4_nbitsset
    O << " = !bitsset(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 336:
    // CONST32
    O << " = CONST32(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 337:
    // CONST64
    O << " = CONST64(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 338:
    // F2_conv_d2df
    O << " = convert_d2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 339:
    // F2_conv_d2sf
    O << " = convert_d2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 340:
    // F2_conv_df2d, F2_conv_df2d_chop
    O << " = convert_df2d(";
    printOperand(MI, 1, O);
    break;
  case 341:
    // F2_conv_df2sf
    O << " = convert_df2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 342:
    // F2_conv_df2ud, F2_conv_df2ud_chop
    O << " = convert_df2ud(";
    printOperand(MI, 1, O);
    break;
  case 343:
    // F2_conv_df2uw, F2_conv_df2uw_chop
    O << " = convert_df2uw(";
    printOperand(MI, 1, O);
    break;
  case 344:
    // F2_conv_df2w, F2_conv_df2w_chop
    O << " = convert_df2w(";
    printOperand(MI, 1, O);
    break;
  case 345:
    // F2_conv_sf2d, F2_conv_sf2d_chop
    O << " = convert_sf2d(";
    printOperand(MI, 1, O);
    break;
  case 346:
    // F2_conv_sf2df
    O << " = convert_sf2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 347:
    // F2_conv_sf2ud, F2_conv_sf2ud_chop
    O << " = convert_sf2ud(";
    printOperand(MI, 1, O);
    break;
  case 348:
    // F2_conv_sf2uw, F2_conv_sf2uw_chop
    O << " = convert_sf2uw(";
    printOperand(MI, 1, O);
    break;
  case 349:
    // F2_conv_sf2w, F2_conv_sf2w_chop
    O << " = convert_sf2w(";
    printOperand(MI, 1, O);
    break;
  case 350:
    // F2_conv_ud2df
    O << " = convert_ud2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 351:
    // F2_conv_ud2sf
    O << " = convert_ud2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 352:
    // F2_conv_uw2df
    O << " = convert_uw2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 353:
    // F2_conv_uw2sf
    O << " = convert_uw2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 354:
    // F2_conv_w2df
    O << " = convert_w2df(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 355:
    // F2_conv_w2sf
    O << " = convert_w2sf(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 356:
    // F2_dfadd
    O << " = dfadd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 357:
    // F2_dfclass
    O << " = dfclass(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 358:
    // F2_dfcmpeq
    O << " = dfcmp.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 359:
    // F2_dfcmpge
    O << " = dfcmp.ge(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 360:
    // F2_dfcmpgt
    O << " = dfcmp.gt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 361:
    // F2_dfcmpuo
    O << " = dfcmp.uo(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 362:
    // F2_dfimm_n, F2_dfimm_p
    O << " = dfmake(#";
    printOperand(MI, 1, O);
    break;
  case 363:
    // F2_dfmax
    O << " = dfmax(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 364:
    // F2_dfmin
    O << " = dfmin(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 365:
    // F2_dfmpyfix
    O << " = dfmpyfix(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 366:
    // F2_dfmpyhh
    O << " += dfmpyhh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 367:
    // F2_dfmpylh
    O << " += dfmpylh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 368:
    // F2_dfmpyll
    O << " = dfmpyll(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 369:
    // F2_dfsub
    O << " = dfsub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 370:
    // F2_sfadd
    O << " = sfadd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 371:
    // F2_sfclass
    O << " = sfclass(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 372:
    // F2_sfcmpeq
    O << " = sfcmp.eq(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 373:
    // F2_sfcmpge
    O << " = sfcmp.ge(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 374:
    // F2_sfcmpgt
    O << " = sfcmp.gt(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 375:
    // F2_sfcmpuo
    O << " = sfcmp.uo(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 376:
    // F2_sffixupd
    O << " = sffixupd(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 377:
    // F2_sffixupn
    O << " = sffixupn(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 378:
    // F2_sffixupr
    O << " = sffixupr(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 379:
    // F2_sffma, F2_sffma_lib, F2_sffma_sc
    O << " += sfmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 380:
    // F2_sffms, F2_sffms_lib
    O << " -= sfmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 381:
    // F2_sfimm_n, F2_sfimm_p
    O << " = sfmake(#";
    printOperand(MI, 1, O);
    break;
  case 382:
    // F2_sfmax
    O << " = sfmax(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 383:
    // F2_sfmin
    O << " = sfmin(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 384:
    // F2_sfmpy
    O << " = sfmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 385:
    // F2_sfsub
    O << " = sfsub(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 386:
    // J2_callf, J2_callt
    O << ") call ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 387:
    // J2_callrf, J2_callrt
    O << ") callr ";
    printOperand(MI, 1, O);
    return;
    break;
  case 388:
    // J2_jumpf, J2_jumpt
    O << ") jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 389:
    // J2_jumpfnew, J2_jumptnew
    O << ".new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 390:
    // J2_jumpfnewpt, J2_jumptnewpt
    O << ".new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 391:
    // J2_jumpfpt, J2_jumptpt
    O << ") jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 392:
    // J2_jumprf, J2_jumprt, PS_jmpretf, PS_jmprett
    O << ") jumpr:nt ";
    printOperand(MI, 1, O);
    return;
    break;
  case 393:
    // J2_jumprfnew, J2_jumprtnew, PS_jmpretfnew, PS_jmprettnew
    O << ".new) jumpr:nt ";
    printOperand(MI, 1, O);
    return;
    break;
  case 394:
    // J2_jumprfnewpt, J2_jumprtnewpt, PS_jmpretfnewpt, PS_jmprettnewpt
    O << ".new) jumpr:t ";
    printOperand(MI, 1, O);
    return;
    break;
  case 395:
    // J2_jumprfpt, J2_jumprtpt
    O << ") jumpr:t ";
    printOperand(MI, 1, O);
    return;
    break;
  case 396:
    // J2_jumprgtez
    O << ">=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 397:
    // J2_jumprgtezpt
    O << ">=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 398:
    // J2_jumprltez
    O << "<=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 399:
    // J2_jumprltezpt
    O << "<=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 400:
    // J2_jumprnz
    O << "==#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 401:
    // J2_jumprnzpt
    O << "==#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 402:
    // J2_jumprz
    O << "!=#0) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 403:
    // J2_jumprzpt
    O << "!=#0) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 404:
    // J4_cmpeq_f_jumpnv_nt, J4_cmpeq_f_jumpnv_t, J4_cmpeq_t_jumpnv_nt, J4_cm...
    O << ".new,";
    printOperand(MI, 1, O);
    break;
  case 405:
    // J4_cmpeqi_f_jumpnv_nt, J4_cmpeqi_f_jumpnv_t, J4_cmpeqi_t_jumpnv_nt, J4...
    O << ".new,#";
    printOperand(MI, 1, O);
    break;
  case 406:
    // J4_tstbit0_f_jumpnv_nt, J4_tstbit0_t_jumpnv_nt
    O << ".new,#0)) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 407:
    // J4_tstbit0_f_jumpnv_t, J4_tstbit0_t_jumpnv_t
    O << ".new,#0)) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 408:
    // J4_tstbit0_fp0_jump_nt
    O << ",#0); if (!p0.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 409:
    // J4_tstbit0_fp0_jump_t
    O << ",#0); if (!p0.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 410:
    // J4_tstbit0_fp1_jump_nt
    O << ",#0); if (!p1.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 411:
    // J4_tstbit0_fp1_jump_t
    O << ",#0); if (!p1.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 412:
    // J4_tstbit0_tp0_jump_nt
    O << ",#0); if (p0.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 413:
    // J4_tstbit0_tp0_jump_t
    O << ",#0); if (p0.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 414:
    // J4_tstbit0_tp1_jump_nt
    O << ",#0); if (p1.new) jump:nt ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 415:
    // J4_tstbit0_tp1_jump_t
    O << ",#0); if (p1.new) jump:t ";
    printBrtarget(MI, 1, O);
    return;
    break;
  case 416:
    // L2_loadrbgp
    O << " = memb(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 417:
    // L2_loadrdgp
    O << " = memd(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 418:
    // L2_loadrhgp
    O << " = memh(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 419:
    // L2_loadrigp
    O << " = memw(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 420:
    // L2_loadrubgp
    O << " = memub(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 421:
    // L2_loadruhgp
    O << " = memuh(gp+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 422:
    // L2_loadw_aq
    O << " = memw_aq(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 423:
    // L2_loadw_locked
    O << " = memw_locked(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 424:
    // L4_loadd_aq
    O << " = memd_aq(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 425:
    // L4_loadd_locked
    O << " = memd_locked(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 426:
    // L4_return
    O << " = dealloc_return(";
    printOperand(MI, 1, O);
    O << "):raw";
    return;
    break;
  case 427:
    // M2_acci, M2_accii
    O << " += add(";
    printOperand(MI, 2, O);
    break;
  case 428:
    // M2_cmaci_s0
    O << " += cmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 429:
    // M2_cmacr_s0
    O << " += cmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 430:
    // M2_cmacs_s0, M2_cmacs_s1, M2_cmacsc_s0, M2_cmacsc_s1
    O << " += cmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 431:
    // M2_cmpyi_s0
    O << " = cmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 432:
    // M2_cmpyr_s0
    O << " = cmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 433:
    // M2_cmpyrs_s0, M2_cmpyrs_s1, M2_cmpyrsc_s0, M2_cmpyrsc_s1, M2_cmpys_s0,...
    O << " = cmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 434:
    // M2_cnacs_s0, M2_cnacs_s1, M2_cnacsc_s0, M2_cnacsc_s1
    O << " -= cmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 435:
    // M2_dpmpyss_acc_s0, M2_mpy_acc_hh_s0, M2_mpy_acc_hh_s1, M2_mpy_acc_hl_s...
    O << " += mpy(";
    printOperand(MI, 2, O);
    break;
  case 436:
    // M2_dpmpyss_nac_s0, M2_mpy_nac_hh_s0, M2_mpy_nac_hh_s1, M2_mpy_nac_hl_s...
    O << " -= mpy(";
    printOperand(MI, 2, O);
    break;
  case 437:
    // M2_dpmpyss_rnd_s0, M2_dpmpyss_s0, M2_hmmpyh_rs1, M2_hmmpyh_s1, M2_hmmp...
    O << " = mpy(";
    printOperand(MI, 1, O);
    break;
  case 438:
    // M2_dpmpyuu_acc_s0, M2_mpyu_acc_hh_s0, M2_mpyu_acc_hh_s1, M2_mpyu_acc_h...
    O << " += mpyu(";
    printOperand(MI, 2, O);
    break;
  case 439:
    // M2_dpmpyuu_nac_s0, M2_mpyu_nac_hh_s0, M2_mpyu_nac_hh_s1, M2_mpyu_nac_h...
    O << " -= mpyu(";
    printOperand(MI, 2, O);
    break;
  case 440:
    // M2_dpmpyuu_s0, M2_mpyu_hh_s0, M2_mpyu_hh_s1, M2_mpyu_hl_s0, M2_mpyu_hl...
    O << " = mpyu(";
    printOperand(MI, 1, O);
    break;
  case 441:
    // M2_maci, M2_macsip
    O << " += mpyi(";
    printOperand(MI, 2, O);
    break;
  case 442:
    // M2_macsin, M2_mnaci
    O << " -= mpyi(";
    printOperand(MI, 2, O);
    break;
  case 443:
    // M2_mmachs_rs0, M2_mmachs_rs1, M2_mmachs_s0, M2_mmachs_s1
    O << " += vmpywoh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 444:
    // M2_mmacls_rs0, M2_mmacls_rs1, M2_mmacls_s0, M2_mmacls_s1
    O << " += vmpyweh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 445:
    // M2_mmacuhs_rs0, M2_mmacuhs_rs1, M2_mmacuhs_s0, M2_mmacuhs_s1
    O << " += vmpywouh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 446:
    // M2_mmaculs_rs0, M2_mmaculs_rs1, M2_mmaculs_s0, M2_mmaculs_s1
    O << " += vmpyweuh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 447:
    // M2_mmpyh_rs0, M2_mmpyh_rs1, M2_mmpyh_s0, M2_mmpyh_s1
    O << " = vmpywoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 448:
    // M2_mmpyl_rs0, M2_mmpyl_rs1, M2_mmpyl_s0, M2_mmpyl_s1
    O << " = vmpyweh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 449:
    // M2_mmpyuh_rs0, M2_mmpyuh_rs1, M2_mmpyuh_s0, M2_mmpyuh_s1
    O << " = vmpywouh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 450:
    // M2_mmpyul_rs0, M2_mmpyul_rs1, M2_mmpyul_s0, M2_mmpyul_s1
    O << " = vmpyweuh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 451:
    // M2_mpysin
    O << " = -mpyi(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 452:
    // M2_mpysip
    O << " = +mpyi(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 453:
    // M2_mpysu_up
    O << " = mpysu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 454:
    // M2_nacci, M2_naccii
    O << " -= add(";
    printOperand(MI, 2, O);
    break;
  case 455:
    // M2_subacc
    O << " += sub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 456:
    // M2_vcmac_s0_sat_i
    O << " += vcmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 457:
    // M2_vcmac_s0_sat_r
    O << " += vcmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 458:
    // M2_vcmpy_s0_sat_i, M2_vcmpy_s1_sat_i
    O << " = vcmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 459:
    // M2_vcmpy_s0_sat_r, M2_vcmpy_s1_sat_r
    O << " = vcmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 460:
    // M2_vdmacs_s0, M2_vdmacs_s1
    O << " += vdmpy(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 461:
    // M2_vdmpyrs_s0, M2_vdmpyrs_s1, M2_vdmpys_s0, M2_vdmpys_s1
    O << " = vdmpy(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 462:
    // M2_vmac2es, M2_vmac2es_s0, M2_vmac2es_s1
    O << " += vmpyeh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 463:
    // M2_vmac2su_s0, M2_vmac2su_s1
    O << " += vmpyhsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 464:
    // M2_vmpy2es_s0, M2_vmpy2es_s1
    O << " = vmpyeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 465:
    // M2_vmpy2su_s0, M2_vmpy2su_s1
    O << " = vmpyhsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 466:
    // M2_vraddh
    O << " = vraddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 467:
    // M2_vradduh
    O << " = vradduh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 468:
    // M2_vrcmaci_s0, M2_vrcmaci_s0c
    O << " += vrcmpyi(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 469:
    // M2_vrcmacr_s0, M2_vrcmacr_s0c
    O << " += vrcmpyr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 470:
    // M2_vrcmpyi_s0, M2_vrcmpyi_s0c
    O << " = vrcmpyi(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 471:
    // M2_vrcmpyr_s0, M2_vrcmpyr_s0c
    O << " = vrcmpyr(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 472:
    // M2_vrmac_s0
    O << " += vrmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 473:
    // M2_vrmpy_s0
    O << " = vrmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 474:
    // M2_xor_xacc, M4_xor_xacc
    O << " ^= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 475:
    // M4_and_and, M4_and_andn
    O << " &= and(";
    printOperand(MI, 2, O);
    break;
  case 476:
    // M4_and_or
    O << " &= or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 477:
    // M4_and_xor
    O << " &= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 478:
    // M4_cmpyi_wh, M4_cmpyi_whc
    O << " = cmpyiwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 479:
    // M4_cmpyr_wh, M4_cmpyr_whc
    O << " = cmpyrwh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 480:
    // M4_mpyri_addi, M4_mpyrr_addi, S4_addi_asl_ri, S4_addi_lsr_ri
    O << " = add(#";
    printOperand(MI, 1, O);
    break;
  case 481:
    // M4_or_and, M4_or_andn, S4_or_andi
    O << " |= and(";
    printOperand(MI, 2, O);
    break;
  case 482:
    // M4_or_or, S4_or_ori
    O << " |= or(";
    printOperand(MI, 2, O);
    break;
  case 483:
    // M4_or_xor
    O << " |= xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 484:
    // M4_pmpyw
    O << " = pmpyw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 485:
    // M4_pmpyw_acc
    O << " ^= pmpyw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 486:
    // M4_vpmpyh
    O << " = vpmpyh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 487:
    // M4_vpmpyh_acc
    O << " ^= vpmpyh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 488:
    // M4_vrmpyeh_acc_s0, M4_vrmpyeh_acc_s1
    O << " += vrmpyweh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 489:
    // M4_vrmpyeh_s0, M4_vrmpyeh_s1
    O << " = vrmpyweh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 490:
    // M4_vrmpyoh_acc_s0, M4_vrmpyoh_acc_s1
    O << " += vrmpywoh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 491:
    // M4_vrmpyoh_s0, M4_vrmpyoh_s1
    O << " = vrmpywoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 492:
    // M4_xor_and, M4_xor_andn
    O << " ^= and(";
    printOperand(MI, 2, O);
    break;
  case 493:
    // M4_xor_or
    O << " ^= or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 494:
    // M5_vdmacbsu
    O << " += vdmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "):sat";
    return;
    break;
  case 495:
    // M5_vdmpybsu
    O << " = vdmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 496:
    // M5_vmacbsu
    O << " += vmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 497:
    // M5_vmacbuu
    O << " += vmpybu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 498:
    // M5_vmpybsu
    O << " = vmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 499:
    // M5_vmpybuu
    O << " = vmpybu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 500:
    // M5_vrmacbsu
    O << " += vrmpybsu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 501:
    // M5_vrmacbuu
    O << " += vrmpybu(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 502:
    // M5_vrmpybsu
    O << " = vrmpybsu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 503:
    // M5_vrmpybuu
    O << " = vrmpybu(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 504:
    // M6_vabsdiffb
    O << " = vabsdiffb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 505:
    // M7_dcmpyiw, M7_dcmpyiwc, M7_wcmpyiw, M7_wcmpyiw_rnd, M7_wcmpyiwc, M7_w...
    O << " = cmpyiw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 506:
    // M7_dcmpyiw_acc, M7_dcmpyiwc_acc
    O << " += cmpyiw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 507:
    // M7_dcmpyrw, M7_dcmpyrwc, M7_wcmpyrw, M7_wcmpyrw_rnd, M7_wcmpyrwc, M7_w...
    O << " = cmpyrw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 508:
    // M7_dcmpyrw_acc, M7_dcmpyrwc_acc
    O << " += cmpyrw(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 509:
    // PS_loadrbabs
    O << " = memb(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 510:
    // PS_loadrdabs
    O << " = memd(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 511:
    // PS_loadrhabs
    O << " = memh(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 512:
    // PS_loadriabs
    O << " = memw(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 513:
    // PS_loadrubabs
    O << " = memub(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 514:
    // PS_loadruhabs
    O << " = memuh(#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 515:
    // R6_release_at_vi
    O << "):at";
    return;
    break;
  case 516:
    // R6_release_st_vi
    O << "):st";
    return;
    break;
  case 517:
    // S2_addasl_rrri
    O << " = addasl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 518:
    // S2_asl_i_p, S2_asl_i_r, S2_asl_i_r_sat, S2_asl_r_p, S2_asl_r_r, S2_asl...
    O << " = asl(";
    printOperand(MI, 1, O);
    break;
  case 519:
    // S2_asl_i_p_acc, S2_asl_i_r_acc, S2_asl_r_p_acc, S2_asl_r_r_acc
    O << " += asl(";
    printOperand(MI, 2, O);
    break;
  case 520:
    // S2_asl_i_p_and, S2_asl_i_r_and, S2_asl_r_p_and, S2_asl_r_r_and
    O << " &= asl(";
    printOperand(MI, 2, O);
    break;
  case 521:
    // S2_asl_i_p_nac, S2_asl_i_r_nac, S2_asl_r_p_nac, S2_asl_r_r_nac
    O << " -= asl(";
    printOperand(MI, 2, O);
    break;
  case 522:
    // S2_asl_i_p_or, S2_asl_i_r_or, S2_asl_r_p_or, S2_asl_r_r_or
    O << " |= asl(";
    printOperand(MI, 2, O);
    break;
  case 523:
    // S2_asl_i_p_xacc, S2_asl_i_r_xacc, S2_asl_r_p_xor
    O << " ^= asl(";
    printOperand(MI, 2, O);
    break;
  case 524:
    // S2_asr_i_p, S2_asr_i_p_rnd, S2_asr_i_r, S2_asr_i_r_rnd, S2_asr_r_p, S2...
    O << " = asr(";
    printOperand(MI, 1, O);
    break;
  case 525:
    // S2_asr_i_p_acc, S2_asr_i_r_acc, S2_asr_r_p_acc, S2_asr_r_r_acc
    O << " += asr(";
    printOperand(MI, 2, O);
    break;
  case 526:
    // S2_asr_i_p_and, S2_asr_i_r_and, S2_asr_r_p_and, S2_asr_r_r_and
    O << " &= asr(";
    printOperand(MI, 2, O);
    break;
  case 527:
    // S2_asr_i_p_nac, S2_asr_i_r_nac, S2_asr_r_p_nac, S2_asr_r_r_nac
    O << " -= asr(";
    printOperand(MI, 2, O);
    break;
  case 528:
    // S2_asr_i_p_or, S2_asr_i_r_or, S2_asr_r_p_or, S2_asr_r_r_or
    O << " |= asr(";
    printOperand(MI, 2, O);
    break;
  case 529:
    // S2_asr_r_p_xor
    O << " ^= asr(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 530:
    // S2_brev, S2_brevp
    O << " = brev(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 531:
    // S2_cabacdecbin
    O << " = decbin(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 532:
    // S2_cl0, S2_cl0p
    O << " = cl0(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 533:
    // S2_cl1, S2_cl1p
    O << " = cl1(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 534:
    // S2_clb, S2_clbp
    O << " = clb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 535:
    // S2_clbnorm, S4_clbpnorm
    O << " = normamt(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 536:
    // S2_clrbit_i, S2_clrbit_r
    O << " = clrbit(";
    printOperand(MI, 1, O);
    break;
  case 537:
    // S2_ct0, S2_ct0p
    O << " = ct0(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 538:
    // S2_ct1, S2_ct1p
    O << " = ct1(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 539:
    // S2_deinterleave
    O << " = deinterleave(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 540:
    // S2_extractu, S2_extractu_rp, S2_extractup, S2_extractup_rp
    O << " = extractu(";
    printOperand(MI, 1, O);
    break;
  case 541:
    // S2_insert, S2_insert_rp, S2_insertp, S2_insertp_rp
    O << " = insert(";
    printOperand(MI, 2, O);
    break;
  case 542:
    // S2_interleave
    O << " = interleave(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 543:
    // S2_lfsp
    O << " = lfs(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 544:
    // S2_lsl_r_p, S2_lsl_r_r
    O << " = lsl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 545:
    // S2_lsl_r_p_acc, S2_lsl_r_r_acc
    O << " += lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 546:
    // S2_lsl_r_p_and, S2_lsl_r_r_and
    O << " &= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 547:
    // S2_lsl_r_p_nac, S2_lsl_r_r_nac
    O << " -= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 548:
    // S2_lsl_r_p_or, S2_lsl_r_r_or
    O << " |= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 549:
    // S2_lsl_r_p_xor
    O << " ^= lsl(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 550:
    // S2_lsl_r_vh
    O << " = vlslh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 551:
    // S2_lsl_r_vw
    O << " = vlslw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 552:
    // S2_lsr_i_p, S2_lsr_i_r, S2_lsr_r_p, S2_lsr_r_r
    O << " = lsr(";
    printOperand(MI, 1, O);
    break;
  case 553:
    // S2_lsr_i_p_acc, S2_lsr_i_r_acc, S2_lsr_r_p_acc, S2_lsr_r_r_acc
    O << " += lsr(";
    printOperand(MI, 2, O);
    break;
  case 554:
    // S2_lsr_i_p_and, S2_lsr_i_r_and, S2_lsr_r_p_and, S2_lsr_r_r_and
    O << " &= lsr(";
    printOperand(MI, 2, O);
    break;
  case 555:
    // S2_lsr_i_p_nac, S2_lsr_i_r_nac, S2_lsr_r_p_nac, S2_lsr_r_r_nac
    O << " -= lsr(";
    printOperand(MI, 2, O);
    break;
  case 556:
    // S2_lsr_i_p_or, S2_lsr_i_r_or, S2_lsr_r_p_or, S2_lsr_r_r_or
    O << " |= lsr(";
    printOperand(MI, 2, O);
    break;
  case 557:
    // S2_lsr_i_p_xacc, S2_lsr_i_r_xacc, S2_lsr_r_p_xor
    O << " ^= lsr(";
    printOperand(MI, 2, O);
    break;
  case 558:
    // S2_mask
    O << " = mask(#";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 559:
    // S2_packhl, dep_S2_packhl
    O << " = packhl(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 560:
    // S2_parityp, S4_parity
    O << " = parity(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 561:
    // S2_setbit_i, S2_setbit_r
    O << " = setbit(";
    printOperand(MI, 1, O);
    break;
  case 562:
    // S2_shuffeb
    O << " = shuffeb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 563:
    // S2_shuffeh
    O << " = shuffeh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 564:
    // S2_shuffob
    O << " = shuffob(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 565:
    // S2_shuffoh
    O << " = shuffoh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 566:
    // S2_storerb_pbr, S2_storerb_pr, S2_storerbnew_pbr, S2_storerbnew_pr, S2...
    O << "++";
    printOperand(MI, 2, O);
    break;
  case 567:
    // S2_storerb_pci, S2_storerb_pi, S2_storerbnew_pci, S2_storerbnew_pi, S2...
    O << "++#";
    printOperand(MI, 2, O);
    break;
  case 568:
    // S2_storerb_pcr, S2_storerbnew_pcr, S2_storerd_pcr, S2_storerf_pcr, S2_...
    O << "++I:circ(";
    printOperand(MI, 2, O);
    O << ")) = ";
    printOperand(MI, 3, O);
    break;
  case 569:
    // S2_storew_rl_at_vi, S4_stored_rl_at_vi
    O << "):at = ";
    printOperand(MI, 1, O);
    return;
    break;
  case 570:
    // S2_storew_rl_st_vi, S4_stored_rl_st_vi
    O << "):st = ";
    printOperand(MI, 1, O);
    return;
    break;
  case 571:
    // S2_svsathb, S2_vsathb, S2_vsathb_nopack
    O << " = vsathb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 572:
    // S2_togglebit_i, S2_togglebit_r
    O << " = togglebit(";
    printOperand(MI, 1, O);
    break;
  case 573:
    // S2_tstbit_i, S2_tstbit_r
    O << " = tstbit(";
    printOperand(MI, 1, O);
    break;
  case 574:
    // S2_valignib, S2_valignrb
    O << " = valignb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 575:
    // S2_vcnegh
    O << " = vcnegh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 576:
    // S2_vcrotate
    O << " = vcrotate(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 577:
    // S2_vrcnegh
    O << " += vrcnegh(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 578:
    // S2_vrndpackwh, S2_vrndpackwhs
    O << " = vrndwh(";
    printOperand(MI, 1, O);
    break;
  case 579:
    // S2_vsatwuh, S2_vsatwuh_nopack
    O << " = vsatwuh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 580:
    // S2_vsplatrb, S6_vsplatrbp
    O << " = vsplatb(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 581:
    // S2_vsplatrh
    O << " = vsplath(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 582:
    // S2_vspliceib, S2_vsplicerb
    O << " = vspliceb(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 583:
    // S2_vsxtbh
    O << " = vsxtbh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 584:
    // S2_vsxthw
    O << " = vsxthw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 585:
    // S2_vtrunehb, S6_vtrunehb_ppp
    O << " = vtrunehb(";
    printOperand(MI, 1, O);
    break;
  case 586:
    // S2_vtrunewh
    O << " = vtrunewh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 587:
    // S2_vtrunohb, S6_vtrunohb_ppp
    O << " = vtrunohb(";
    printOperand(MI, 1, O);
    break;
  case 588:
    // S2_vtrunowh
    O << " = vtrunowh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 589:
    // S2_vzxtbh
    O << " = vzxtbh(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 590:
    // S2_vzxthw
    O << " = vzxthw(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 591:
    // S4_andi_asl_ri, S4_andi_lsr_ri
    O << " = and(#";
    printOperand(MI, 1, O);
    break;
  case 592:
    // S4_clbaddi, S4_clbpaddi
    O << " = add(clb(";
    printOperand(MI, 1, O);
    O << "),#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 593:
    // S4_extract, S4_extract_rp, S4_extractp, S4_extractp_rp
    O << " = extract(";
    printOperand(MI, 1, O);
    break;
  case 594:
    // S4_lsli
    O << " = lsl(#";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 595:
    // S4_ntstbit_i, S4_ntstbit_r
    O << " = !tstbit(";
    printOperand(MI, 1, O);
    break;
  case 596:
    // S4_ori_asl_ri, S4_ori_lsr_ri
    O << " = or(#";
    printOperand(MI, 1, O);
    break;
  case 597:
    // S4_pstorerbf_abs, S4_pstorerbnewf_abs, S4_pstorerbnewt_abs, S4_pstorer...
    O << ") memb(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 598:
    // S4_pstorerbfnew_abs, S4_pstorerbnewfnew_abs, S4_pstorerbnewtnew_abs, S...
    O << ".new) memb(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 599:
    // S4_pstorerdf_abs, S4_pstorerdt_abs
    O << ") memd(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 600:
    // S4_pstorerdfnew_abs, S4_pstorerdtnew_abs
    O << ".new) memd(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 601:
    // S4_pstorerff_abs, S4_pstorerft_abs, S4_pstorerhf_abs, S4_pstorerhnewf_...
    O << ") memh(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 602:
    // S4_pstorerffnew_abs, S4_pstorerftnew_abs, S4_pstorerhfnew_abs, S4_psto...
    O << ".new) memh(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 603:
    // S4_pstorerif_abs, S4_pstorerinewf_abs, S4_pstorerinewt_abs, S4_pstorer...
    O << ") memw(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 604:
    // S4_pstorerifnew_abs, S4_pstorerinewfnew_abs, S4_pstorerinewtnew_abs, S...
    O << ".new) memw(#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 605:
    // S4_storerb_ap, S4_storerbnew_ap, S4_storerd_ap, S4_storerf_ap, S4_stor...
    O << "=#";
    printOperand(MI, 1, O);
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 606:
    // S4_storerb_rr, S4_storerbnew_rr, S4_storerd_rr, S4_storerf_rr, S4_stor...
    O << '+';
    printOperand(MI, 1, O);
    O << "<<#";
    printOperand(MI, 2, O);
    O << ") = ";
    printOperand(MI, 3, O);
    break;
  case 607:
    // S4_storerb_ur, S4_storerbnew_ur, S4_storerd_ur, S4_storerf_ur, S4_stor...
    O << "<<#";
    printOperand(MI, 1, O);
    O << "+#";
    printOperand(MI, 2, O);
    O << ") = ";
    printOperand(MI, 3, O);
    break;
  case 608:
    // S4_vrcrotate
    O << " = vrcrotate(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 609:
    // S4_vrcrotate_acc
    O << " += vrcrotate(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ",#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 610:
    // S4_vxaddsubh, S4_vxaddsubhr
    O << " = vxaddsubh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 611:
    // S4_vxaddsubw
    O << " = vxaddsubw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 612:
    // S4_vxsubaddh, S4_vxsubaddhr
    O << " = vxsubaddh(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 613:
    // S4_vxsubaddw
    O << " = vxsubaddw(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << "):sat";
    return;
    break;
  case 614:
    // S5_popcountp
    O << " = popcount(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 615:
    // S6_rol_i_p, S6_rol_i_r
    O << " = rol(";
    printOperand(MI, 1, O);
    O << ",#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 616:
    // S6_rol_i_p_acc, S6_rol_i_r_acc
    O << " += rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 617:
    // S6_rol_i_p_and, S6_rol_i_r_and
    O << " &= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 618:
    // S6_rol_i_p_nac, S6_rol_i_r_nac
    O << " -= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 619:
    // S6_rol_i_p_or, S6_rol_i_r_or
    O << " |= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 620:
    // S6_rol_i_p_xacc, S6_rol_i_r_xacc
    O << " ^= rol(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 621:
    // SA1_addsp
    O << " = add(r29,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 622:
    // SA1_combine0i
    O << " = combine(#0,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 623:
    // SA1_combine1i
    O << " = combine(#1,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 624:
    // SA1_combine2i
    O << " = combine(#2,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 625:
    // SA1_combine3i
    O << " = combine(#3,#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 626:
    // SA1_combinezr
    O << " = combine(#0,";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 627:
    // SL2_loadrd_sp
    O << " = memd(r29+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 628:
    // SL2_loadri_sp
    O << " = memw(r29+#";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 629:
    // V6_extractw
    O << " = vextract(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 630:
    // V6_lvsplatb
    O << ".b = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 631:
    // V6_lvsplath
    O << ".h = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 632:
    // V6_lvsplatw
    O << " = vsplat(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 633:
    // V6_pred_scalar2
    O << " = vsetq(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 634:
    // V6_pred_scalar2v2
    O << " = vsetq2(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 635:
    // V6_shuffeqh, V6_vshuffeb
    O << ".b = vshuffe(";
    printOperand(MI, 1, O);
    break;
  case 636:
    // V6_shuffeqw, V6_vshufeh
    O << ".h = vshuffe(";
    printOperand(MI, 1, O);
    break;
  case 637:
    // V6_v6mpyhubs10_vxx, V6_v6mpyvubs10_vxx
    O << ".w += v6mpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".b,#";
    printOperand(MI, 4, O);
    break;
  case 638:
    // V6_vL32b_cur_ai, V6_vL32b_cur_pi, V6_vL32b_cur_ppu, V6_vL32b_nt_cur_ai...
    O << ".cur = vmem(";
    printOperand(MI, 1, O);
    break;
  case 639:
    // V6_vL32b_nt_tmp_ai, V6_vL32b_nt_tmp_pi, V6_vL32b_nt_tmp_ppu, V6_vL32b_...
    O << ".tmp = vmem(";
    printOperand(MI, 1, O);
    break;
  case 640:
    // V6_vabsb, V6_vabsb_sat
    O << ".b = vabs(";
    printOperand(MI, 1, O);
    break;
  case 641:
    // V6_vabsdiffh, V6_vabsdiffuh
    O << ".uh = vabsdiff(";
    printOperand(MI, 1, O);
    break;
  case 642:
    // V6_vabsdiffub
    O << ".ub = vabsdiff(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 643:
    // V6_vabsdiffw
    O << ".uw = vabsdiff(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 644:
    // V6_vabsh, V6_vabsh_sat
    O << ".h = vabs(";
    printOperand(MI, 1, O);
    break;
  case 645:
    // V6_vabsw, V6_vabsw_sat
    O << ".w = vabs(";
    printOperand(MI, 1, O);
    break;
  case 646:
    // V6_vaddb, V6_vaddb_dv, V6_vaddbsat, V6_vaddbsat_dv
    O << ".b = vadd(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 647:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vaddhw, V6_vadduhw, V6_vaddw, V6_vad...
    O << ".w = vadd(";
    break;
  case 648:
    // V6_vaddcarryo, V6_vsubcarryo
    O << ".w,";
    printOperand(MI, 1, O);
    break;
  case 649:
    // V6_vaddclbh
    O << ".h = vadd(vclb(";
    printOperand(MI, 1, O);
    O << ".h),";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 650:
    // V6_vaddclbw
    O << ".w = vadd(vclb(";
    printOperand(MI, 1, O);
    O << ".w),";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 651:
    // V6_vaddh, V6_vaddh_dv, V6_vaddhsat, V6_vaddhsat_dv, V6_vaddubh
    O << ".h = vadd(";
    printOperand(MI, 1, O);
    break;
  case 652:
    // V6_vaddhw_acc, V6_vadduhw_acc
    O << ".w += vadd(";
    printOperand(MI, 2, O);
    break;
  case 653:
    // V6_vaddubh_acc
    O << ".h += vadd(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 654:
    // V6_vaddubsat, V6_vaddubsat_dv, V6_vaddububb_sat
    O << ".ub = vadd(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 655:
    // V6_vadduhsat, V6_vadduhsat_dv
    O << ".uh = vadd(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh):sat";
    return;
    break;
  case 656:
    // V6_vadduwsat, V6_vadduwsat_dv
    O << ".uw = vadd(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw):sat";
    return;
    break;
  case 657:
    // V6_valignb, V6_valignbi
    O << " = valign(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 658:
    // V6_vand, V6_vandqrt, V6_vandvqv, V6_vandvrt
    O << " = vand(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 659:
    // V6_vandnqrt, V6_vandvnqv
    O << " = vand(!";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 660:
    // V6_vandnqrt_acc
    O << " |= vand(!";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 661:
    // V6_vandqrt_acc, V6_vandvrt_acc
    O << " |= vand(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 662:
    // V6_vaslh, V6_vaslhv
    O << ".h = vasl(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 663:
    // V6_vaslh_acc
    O << ".h += vasl(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 664:
    // V6_vaslw, V6_vaslwv
    O << ".w = vasl(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 665:
    // V6_vaslw_acc
    O << ".w += vasl(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 666:
    // V6_vasr_into
    O << ".w = vasrinto(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w)";
    return;
    break;
  case 667:
    // V6_vasrh, V6_vasrhv, V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat
    O << ".h = vasr(";
    printOperand(MI, 1, O);
    break;
  case 668:
    // V6_vasrh_acc
    O << ".h += vasr(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 669:
    // V6_vasrhbrndsat, V6_vasrhbsat
    O << ".b = vasr(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 670:
    // V6_vasrhubrndsat, V6_vasrhubsat, V6_vasruhubrndsat, V6_vasruhubsat
    O << ".ub = vasr(";
    printOperand(MI, 1, O);
    break;
  case 671:
    // V6_vasruwuhrndsat, V6_vasruwuhsat, V6_vasrwuhrndsat, V6_vasrwuhsat
    O << ".uh = vasr(";
    printOperand(MI, 1, O);
    break;
  case 672:
    // V6_vasrw, V6_vasrwv
    O << ".w = vasr(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 673:
    // V6_vasrw_acc
    O << ".w += vasr(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 674:
    // V6_vavgb, V6_vavgbrnd
    O << ".b = vavg(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 675:
    // V6_vavgh, V6_vavghrnd
    O << ".h = vavg(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 676:
    // V6_vavgub, V6_vavgubrnd
    O << ".ub = vavg(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 677:
    // V6_vavguh, V6_vavguhrnd
    O << ".uh = vavg(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    break;
  case 678:
    // V6_vavguw, V6_vavguwrnd
    O << ".uw = vavg(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    break;
  case 679:
    // V6_vavgw, V6_vavgwrnd
    O << ".w = vavg(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 680:
    // V6_vcl0h
    O << ".uh = vcl0(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 681:
    // V6_vcl0w
    O << ".uw = vcl0(";
    printOperand(MI, 1, O);
    O << ".uw)";
    return;
    break;
  case 682:
    // V6_vcombine
    O << " = vcombine(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 683:
    // V6_vdealb
    O << ".b = vdeal(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 684:
    // V6_vdealb4w
    O << ".b = vdeale(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 685:
    // V6_vdealh
    O << ".h = vdeal(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 686:
    // V6_vdealvdd
    O << " = vdeal(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 687:
    // V6_vdelta
    O << " = vdelta(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 688:
    // V6_vdmpybus, V6_vdmpybus_dv
    O << ".h = vdmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 689:
    // V6_vdmpybus_acc, V6_vdmpybus_dv_acc
    O << ".h += vdmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".b)";
    return;
    break;
  case 690:
    // V6_vdmpyhb, V6_vdmpyhb_dv, V6_vdmpyhisat, V6_vdmpyhsat, V6_vdmpyhsuisa...
    O << ".w = vdmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 691:
    // V6_vdmpyhb_acc, V6_vdmpyhb_dv_acc, V6_vdmpyhisat_acc, V6_vdmpyhsat_acc...
    O << ".w += vdmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 692:
    // V6_vdsaduh
    O << ".uw = vdsad(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 693:
    // V6_vdsaduh_acc
    O << ".uw += vdsad(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 694:
    // V6_vgathermhq, V6_vgathermhwq
    O << ") vtmp.h = vgather(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 695:
    // V6_vgathermwq
    O << ") vtmp.w = vgather(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ".w).w";
    return;
    break;
  case 696:
    // V6_vgtb, V6_vgth, V6_vgtub, V6_vgtuh, V6_vgtuw, V6_vgtw
    O << " = vcmp.gt(";
    printOperand(MI, 1, O);
    break;
  case 697:
    // V6_vgtb_and, V6_vgth_and, V6_vgtub_and, V6_vgtuh_and, V6_vgtuw_and, V6...
    O << " &= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 698:
    // V6_vgtb_or, V6_vgth_or, V6_vgtub_or, V6_vgtuh_or, V6_vgtuw_or, V6_vgtw...
    O << " |= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 699:
    // V6_vgtb_xor, V6_vgth_xor, V6_vgtub_xor, V6_vgtuh_xor, V6_vgtuw_xor, V6...
    O << " ^= vcmp.gt(";
    printOperand(MI, 2, O);
    break;
  case 700:
    // V6_vinsertwr
    O << ".w = vinsert(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 701:
    // V6_vlalignb, V6_vlalignbi
    O << " = vlalign(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    break;
  case 702:
    // V6_vlsrb
    O << ".ub = vlsr(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 703:
    // V6_vlsrh
    O << ".uh = vlsr(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 704:
    // V6_vlsrhv
    O << ".h = vlsr(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 705:
    // V6_vlsrw
    O << ".uw = vlsr(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 706:
    // V6_vlsrwv
    O << ".w = vlsr(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 707:
    // V6_vlut4
    O << ".h = vlut4(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 708:
    // V6_vlutvvb, V6_vlutvvb_nm, V6_vlutvvbi
    O << ".b = vlut32(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 709:
    // V6_vlutvvb_oracc, V6_vlutvvb_oracci
    O << ".b |= vlut32(";
    printOperand(MI, 2, O);
    O << ".b,";
    printOperand(MI, 3, O);
    break;
  case 710:
    // V6_vlutvwh, V6_vlutvwh_nm, V6_vlutvwhi
    O << ".h = vlut16(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 711:
    // V6_vlutvwh_oracc, V6_vlutvwh_oracci
    O << ".h |= vlut16(";
    printOperand(MI, 2, O);
    O << ".b,";
    printOperand(MI, 3, O);
    break;
  case 712:
    // V6_vmaxb
    O << ".b = vmax(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 713:
    // V6_vmaxh
    O << ".h = vmax(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 714:
    // V6_vmaxub
    O << ".ub = vmax(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 715:
    // V6_vmaxuh
    O << ".uh = vmax(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 716:
    // V6_vmaxw
    O << ".w = vmax(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 717:
    // V6_vminb
    O << ".b = vmin(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 718:
    // V6_vminh
    O << ".h = vmin(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 719:
    // V6_vminub
    O << ".ub = vmin(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 720:
    // V6_vminuh
    O << ".uh = vmin(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 721:
    // V6_vminw
    O << ".w = vmin(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 722:
    // V6_vmpabus, V6_vmpabusv, V6_vmpabuu, V6_vmpabuuv, V6_vmpahhsat, V6_vmp...
    O << ".h = vmpa(";
    printOperand(MI, 1, O);
    break;
  case 723:
    // V6_vmpabus_acc, V6_vmpabuu_acc
    O << ".h += vmpa(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    break;
  case 724:
    // V6_vmpahb, V6_vmpauhb
    O << ".w = vmpa(";
    printOperand(MI, 1, O);
    break;
  case 725:
    // V6_vmpahb_acc, V6_vmpauhb_acc
    O << ".w += vmpa(";
    printOperand(MI, 2, O);
    break;
  case 726:
    // V6_vmpsuhuhsat
    O << ".h = vmps(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh):sat";
    return;
    break;
  case 727:
    // V6_vmpybus, V6_vmpybusv, V6_vmpybv, V6_vmpyhsrs, V6_vmpyhss, V6_vmpyhv...
    O << ".h = vmpy(";
    printOperand(MI, 1, O);
    break;
  case 728:
    // V6_vmpybus_acc, V6_vmpybusv_acc, V6_vmpybv_acc
    O << ".h += vmpy(";
    printOperand(MI, 2, O);
    break;
  case 729:
    // V6_vmpyewuh
    O << ".w = vmpye(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 730:
    // V6_vmpyewuh_64
    O << " = vmpye(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 731:
    // V6_vmpyh, V6_vmpyhus, V6_vmpyhv
    O << ".w = vmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 732:
    // V6_vmpyh_acc, V6_vmpyhsat_acc, V6_vmpyhus_acc, V6_vmpyhv_acc
    O << ".w += vmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 733:
    // V6_vmpyieoh
    O << ".w = vmpyieo(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 734:
    // V6_vmpyiewh_acc, V6_vmpyiewuh_acc
    O << ".w += vmpyie(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 735:
    // V6_vmpyiewuh
    O << ".w = vmpyie(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 736:
    // V6_vmpyih, V6_vmpyihb
    O << ".h = vmpyi(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 737:
    // V6_vmpyih_acc, V6_vmpyihb_acc
    O << ".h += vmpyi(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 738:
    // V6_vmpyiowh
    O << ".w = vmpyio(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 739:
    // V6_vmpyiwb, V6_vmpyiwh, V6_vmpyiwub
    O << ".w = vmpyi(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 740:
    // V6_vmpyiwb_acc, V6_vmpyiwh_acc, V6_vmpyiwub_acc
    O << ".w += vmpyi(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 741:
    // V6_vmpyowh, V6_vmpyowh_rnd
    O << ".w = vmpyo(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    break;
  case 742:
    // V6_vmpyowh_64_acc
    O << " += vmpyo(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".h)";
    return;
    break;
  case 743:
    // V6_vmpyowh_rnd_sacc, V6_vmpyowh_sacc
    O << ".w += vmpyo(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 744:
    // V6_vmpyub, V6_vmpyubv
    O << ".uh = vmpy(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub)";
    return;
    break;
  case 745:
    // V6_vmpyub_acc, V6_vmpyubv_acc
    O << ".uh += vmpy(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub)";
    return;
    break;
  case 746:
    // V6_vmpyuh, V6_vmpyuhv
    O << ".uw = vmpy(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 747:
    // V6_vmpyuh_acc, V6_vmpyuhv_acc
    O << ".uw += vmpy(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 748:
    // V6_vmpyuhe
    O << ".uw = vmpye(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 749:
    // V6_vmpyuhe_acc
    O << ".uw += vmpye(";
    printOperand(MI, 2, O);
    O << ".uh,";
    printOperand(MI, 3, O);
    O << ".uh)";
    return;
    break;
  case 750:
    // V6_vnavgb, V6_vnavgub
    O << ".b = vnavg(";
    printOperand(MI, 1, O);
    break;
  case 751:
    // V6_vnavgh
    O << ".h = vnavg(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 752:
    // V6_vnavgw
    O << ".w = vnavg(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 753:
    // V6_vnormamth
    O << ".h = vnormamt(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 754:
    // V6_vnormamtw
    O << ".w = vnormamt(";
    printOperand(MI, 1, O);
    O << ".w)";
    return;
    break;
  case 755:
    // V6_vnot
    O << " = vnot(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 756:
    // V6_vor
    O << " = vor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 757:
    // V6_vpackeb
    O << ".b = vpacke(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 758:
    // V6_vpackeh
    O << ".h = vpacke(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 759:
    // V6_vpackhb_sat
    O << ".b = vpack(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 760:
    // V6_vpackhub_sat
    O << ".ub = vpack(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 761:
    // V6_vpackob
    O << ".b = vpacko(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 762:
    // V6_vpackoh
    O << ".h = vpacko(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 763:
    // V6_vpackwh_sat
    O << ".h = vpack(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 764:
    // V6_vpackwuh_sat
    O << ".uh = vpack(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 765:
    // V6_vpopcounth
    O << ".h = vpopcount(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 766:
    // V6_vprefixqb
    O << ".b = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 767:
    // V6_vprefixqh
    O << ".h = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 768:
    // V6_vprefixqw
    O << ".w = prefixsum(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 769:
    // V6_vrdelta
    O << " = vrdelta(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 770:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rx, V6_vrmpyzbub_rt, V6_vrmpyzbub_rx
    O << ".w = vrmpyz(";
    break;
  case 771:
    // V6_vrmpyzbb_rt_acc, V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rt_acc, V6_vrmpyz...
    O << ".w += vrmpyz(";
    break;
  case 772:
    // V6_vrmpyzcb_rt, V6_vrmpyzcb_rx
    O << ".w = vr16mpyz(";
    break;
  case 773:
    // V6_vrmpyzcb_rt_acc, V6_vrmpyzcb_rx_acc
    O << ".w += vr16mpyz(";
    break;
  case 774:
    // V6_vrmpyzcbs_rt, V6_vrmpyzcbs_rx
    O << ".w = vr16mpyzs(";
    break;
  case 775:
    // V6_vrmpyzcbs_rt_acc, V6_vrmpyzcbs_rx_acc
    O << ".w += vr16mpyzs(";
    break;
  case 776:
    // V6_vrmpyznb_rt, V6_vrmpyznb_rx
    O << ".w = vr8mpyz(";
    break;
  case 777:
    // V6_vrmpyznb_rt_acc, V6_vrmpyznb_rx_acc
    O << ".w += vr8mpyz(";
    break;
  case 778:
    // V6_vror
    O << " = vror(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 779:
    // V6_vrotr
    O << ".uw = vrotr(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw)";
    return;
    break;
  case 780:
    // V6_vroundhb
    O << ".b = vround(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h):sat";
    return;
    break;
  case 781:
    // V6_vroundhub, V6_vrounduhub
    O << ".ub = vround(";
    printOperand(MI, 1, O);
    break;
  case 782:
    // V6_vrounduwuh, V6_vroundwuh
    O << ".uh = vround(";
    printOperand(MI, 1, O);
    break;
  case 783:
    // V6_vroundwh
    O << ".h = vround(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w):sat";
    return;
    break;
  case 784:
    // V6_vrsadubi
    O << ".uw = vrsad(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    O << ".ub,#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 785:
    // V6_vrsadubi_acc
    O << ".uw += vrsad(";
    printOperand(MI, 2, O);
    O << ".ub,";
    printOperand(MI, 3, O);
    O << ".ub,#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 786:
    // V6_vsatdw
    O << ".w = vsatdw(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 787:
    // V6_vsathub
    O << ".ub = vsat(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 788:
    // V6_vsatuwuh
    O << ".uh = vsat(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw)";
    return;
    break;
  case 789:
    // V6_vsatwh
    O << ".h = vsat(";
    printOperand(MI, 1, O);
    O << ".w,";
    printOperand(MI, 2, O);
    O << ".w)";
    return;
    break;
  case 790:
    // V6_vsb
    O << ".h = vsxt(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 791:
    // V6_vsh
    O << ".w = vsxt(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 792:
    // V6_vshuffb
    O << ".b = vshuff(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 793:
    // V6_vshuffh
    O << ".h = vshuff(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 794:
    // V6_vshuffob
    O << ".b = vshuffo(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 795:
    // V6_vshuffvdd
    O << " = vshuff(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 796:
    // V6_vshufoeb
    O << ".b = vshuffoe(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 797:
    // V6_vshufoeh
    O << ".h = vshuffoe(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 798:
    // V6_vshufoh
    O << ".h = vshuffo(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 799:
    // V6_vsubb, V6_vsubb_dv, V6_vsubbsat, V6_vsubbsat_dv
    O << ".b = vsub(";
    printOperand(MI, 1, O);
    O << ".b,";
    printOperand(MI, 2, O);
    break;
  case 800:
    // V6_vsubcarry, V6_vsubhw, V6_vsubuhw, V6_vsubw, V6_vsubw_dv, V6_vsubwsa...
    O << ".w = vsub(";
    break;
  case 801:
    // V6_vsubh, V6_vsubh_dv, V6_vsubhsat, V6_vsubhsat_dv, V6_vsububh
    O << ".h = vsub(";
    printOperand(MI, 1, O);
    break;
  case 802:
    // V6_vsububsat, V6_vsububsat_dv, V6_vsubububb_sat
    O << ".ub = vsub(";
    printOperand(MI, 1, O);
    O << ".ub,";
    printOperand(MI, 2, O);
    break;
  case 803:
    // V6_vsubuhsat, V6_vsubuhsat_dv
    O << ".uh = vsub(";
    printOperand(MI, 1, O);
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh):sat";
    return;
    break;
  case 804:
    // V6_vsubuwsat, V6_vsubuwsat_dv
    O << ".uw = vsub(";
    printOperand(MI, 1, O);
    O << ".uw,";
    printOperand(MI, 2, O);
    O << ".uw):sat";
    return;
    break;
  case 805:
    // V6_vswap
    O << " = vswap(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 806:
    // V6_vtmpyb, V6_vtmpybus
    O << ".h = vtmpy(";
    printOperand(MI, 1, O);
    break;
  case 807:
    // V6_vtmpyb_acc, V6_vtmpybus_acc
    O << ".h += vtmpy(";
    printOperand(MI, 2, O);
    break;
  case 808:
    // V6_vtmpyhb
    O << ".w = vtmpy(";
    printOperand(MI, 1, O);
    O << ".h,";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 809:
    // V6_vtmpyhb_acc
    O << ".w += vtmpy(";
    printOperand(MI, 2, O);
    O << ".h,";
    printOperand(MI, 3, O);
    O << ".b)";
    return;
    break;
  case 810:
    // V6_vunpackb
    O << ".h = vunpack(";
    printOperand(MI, 1, O);
    O << ".b)";
    return;
    break;
  case 811:
    // V6_vunpackh
    O << ".w = vunpack(";
    printOperand(MI, 1, O);
    O << ".h)";
    return;
    break;
  case 812:
    // V6_vunpackob
    O << ".h |= vunpacko(";
    printOperand(MI, 2, O);
    O << ".b)";
    return;
    break;
  case 813:
    // V6_vunpackoh
    O << ".w |= vunpacko(";
    printOperand(MI, 2, O);
    O << ".h)";
    return;
    break;
  case 814:
    // V6_vunpackub
    O << ".uh = vunpack(";
    printOperand(MI, 1, O);
    O << ".ub)";
    return;
    break;
  case 815:
    // V6_vunpackuh
    O << ".uw = vunpack(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 816:
    // V6_vwhist256q_sat
    O << "):sat";
    return;
    break;
  case 817:
    // V6_vxor
    O << " = vxor(";
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 818:
    // V6_vzb
    O << ".uh = vzxt(";
    printOperand(MI, 1, O);
    O << ".ub)";
    return;
    break;
  case 819:
    // V6_vzh
    O << ".uw = vzxt(";
    printOperand(MI, 1, O);
    O << ".uh)";
    return;
    break;
  case 820:
    // V6_zextract
    O << " = zextract(";
    printOperand(MI, 1, O);
    O << ')';
    return;
    break;
  case 821:
    // Y6_dmpause
    O << " = dmpause";
    return;
    break;
  case 822:
    // Y6_dmpoll
    O << " = dmpoll";
    return;
    break;
  case 823:
    // Y6_dmwait
    O << " = dmwait";
    return;
    break;
  }


  // Fragment 2 encoded into 8 bits for 157 unique commands.
  switch ((Bits >> 24) & 255) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_z...
    printOperand(MI, 1, O);
    break;
  case 1:
    // A2_neg, A2_vaddb_map, A2_vsubb_map, A4_boundscheck, L2_loadbsw2_zomap,...
    O << ')';
    return;
    break;
  case 2:
    // A2_tfrf, A2_tfrfnew, A2_tfrpf, A2_tfrpfnew, A2_tfrpt, A2_tfrptnew, A2_...
    O << " = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 3:
    // A2_tfrp, A2_tfrpi, C2_pxfer_map, S2_storerb_zomap, S2_storerd_zomap, S...
    return;
    break;
  case 4:
    // L2_loadalignb_zomap, L2_loadalignh_zomap, dup_S2_allocframe, A2_tfrih,...
    printOperand(MI, 2, O);
    break;
  case 5:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    O << " = memb(";
    break;
  case 6:
    // L2_ploadrdf_zomap, L2_ploadrdfnew_zomap, L2_ploadrdt_zomap, L2_ploadrd...
    O << " = memd(";
    break;
  case 7:
    // L2_ploadrhf_zomap, L2_ploadrhfnew_zomap, L2_ploadrht_zomap, L2_ploadrh...
    O << " = memh(";
    break;
  case 8:
    // L2_ploadrif_zomap, L2_ploadrifnew_zomap, L2_ploadrit_zomap, L2_ploadri...
    O << " = memw(";
    break;
  case 9:
    // L2_ploadrubf_zomap, L2_ploadrubfnew_zomap, L2_ploadrubt_zomap, L2_ploa...
    O << " = memub(";
    break;
  case 10:
    // L2_ploadruhf_zomap, L2_ploadruhfnew_zomap, L2_ploadruht_zomap, L2_ploa...
    O << " = memuh(";
    break;
  case 11:
    // M2_mpysmi, S5_vasrhrnd_goodsyntax, V6_vrmpybusi_acc_alt, V6_vrmpybusi_...
    O << ",#";
    break;
  case 12:
    // M2_vrcmpys_acc_s1, M2_vrcmpys_s1, V6_vmpyhss_alt, V6_vmpyowh_alt, M2_c...
    O << "):<<1:sat";
    return;
    break;
  case 13:
    // M2_vrcmpys_s1rp, V6_vmpyhsrs_alt, V6_vmpyhvsrs_alt, V6_vmpyowh_rnd_alt...
    O << "):<<1:rnd:sat";
    return;
    break;
  case 14:
    // S2_storerbnew_zomap, S2_storerhnew_zomap, S2_storerinew_zomap, V6_stn0...
    O << ".new";
    return;
    break;
  case 15:
    // S2_storerf_zomap, PS_storerfabs, S2_storerf_pcr, S2_storerfgp, S4_psto...
    O << ".h";
    return;
    break;
  case 16:
    // S5_asrhub_rnd_sat_goodsyntax, A2_vnavghr, A2_vnavgwr, M2_cmpyrs_s0, M2...
    O << "):rnd:sat";
    return;
    break;
  case 17:
    // V6_MAP_equb, V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_vad...
    O << ".ub,";
    break;
  case 18:
    // V6_MAP_equh, V6_MAP_equh_and, V6_MAP_equh_ior, V6_MAP_equh_xor, V6_vab...
    O << ".uh,";
    break;
  case 19:
    // V6_MAP_equw, V6_MAP_equw_and, V6_MAP_equw_ior, V6_MAP_equw_xor, V6_vas...
    O << ".uw,";
    break;
  case 20:
    // V6_ldcnp0, V6_ldcnpnt0, V6_ldcp0, V6_ldcpnt0, V6_vL32b_cur_npred_ai, V...
    O << ".cur = vmem(";
    break;
  case 21:
    // V6_ldnp0, V6_ldnpnt0, V6_ldp0, V6_ldpnt0, V6_vL32b_npred_ai, V6_vL32b_...
    O << " = vmem(";
    break;
  case 22:
    // V6_ldnt0, V6_ldntnt0
    O << "):nt";
    return;
    break;
  case 23:
    // V6_ldtnp0, V6_ldtnpnt0, V6_ldtp0, V6_ldtpnt0, V6_vL32b_nt_tmp_npred_ai...
    O << ".tmp = vmem(";
    break;
  case 24:
    // V6_v6mpyhubs10_alt, V6_v6mpyvubs10_alt
    O << ".b10,#";
    printOperand(MI, 3, O);
    break;
  case 25:
    // V6_vabsb_sat_alt, V6_vabsh_sat_alt, V6_vabsw_sat_alt, V6_vaddbsat_alt,...
    O << "):sat";
    return;
    break;
  case 26:
    // V6_vaddbnq_alt, V6_vaddbq_alt, V6_vaddbnq, V6_vaddbq
    O << ".b += ";
    printOperand(MI, 3, O);
    O << ".b";
    return;
    break;
  case 27:
    // V6_vaddhnq_alt, V6_vaddhq_alt, V6_vaddhnq, V6_vaddhq
    O << ".h += ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 28:
    // V6_vaddwnq_alt, V6_vaddwq_alt, V6_vaddwnq, V6_vaddwq
    O << ".w += ";
    printOperand(MI, 3, O);
    O << ".w";
    return;
    break;
  case 29:
    // V6_vaslh_alt, V6_vaslhv_alt, V6_vaslw_alt, V6_vaslwv_alt, V6_vasrh_alt...
    O << ',';
    break;
  case 30:
    // V6_vavgbrnd_alt, V6_vavghrnd_alt, V6_vavgubrnd_alt, V6_vavguhrnd_alt, ...
    O << "):rnd";
    return;
    break;
  case 31:
    // V6_vdmpyhsuisat_acc_alt, V6_vdmpyhsuisat_alt
    O << ",#1):sat";
    return;
    break;
  case 32:
    // V6_vmpyowh_rnd_sacc_alt
    O << "):<<1:rnd:sat:shift";
    return;
    break;
  case 33:
    // V6_vmpyowh_sacc_alt
    O << "):<<1:sat:shift";
    return;
    break;
  case 34:
    // V6_vrmpybub_rtt_acc_alt, V6_vrmpybub_rtt_alt, V6_veqb, V6_veqb_and, V6...
    O << ".b,";
    break;
  case 35:
    // V6_vrmpyub_rtt_acc_alt, V6_vrmpyub_rtt_alt, V6_vavgub, V6_vmpabuu_acc,...
    O << ".ub)";
    return;
    break;
  case 36:
    // V6_vscattermhq_alt
    O << ".h) = ";
    printOperand(MI, 4, O);
    O << ".h";
    return;
    break;
  case 37:
    // V6_vscattermwhq_alt, V6_vscattermwq_alt
    O << ".w) = ";
    printOperand(MI, 4, O);
    break;
  case 38:
    // V6_vsubbnq_alt, V6_vsubbq_alt, V6_vsubbnq, V6_vsubbq
    O << ".b -= ";
    printOperand(MI, 3, O);
    O << ".b";
    return;
    break;
  case 39:
    // V6_vsubhnq_alt, V6_vsubhq_alt, V6_vsubhnq, V6_vsubhq
    O << ".h -= ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 40:
    // V6_vsubwnq_alt, V6_vsubwq_alt, V6_vsubwnq, V6_vsubwq
    O << ".w -= ";
    printOperand(MI, 3, O);
    O << ".w";
    return;
    break;
  case 41:
    // dup_C2_cmoveif, dup_C2_cmoveit, dup_C2_cmovenewif, dup_C2_cmovenewit, ...
    O << " = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 42:
    // dup_L2_loadrb_io, dup_L2_loadrd_io, dup_L2_loadrh_io, dup_L2_loadri_io...
    O << "+#";
    printOperand(MI, 2, O);
    break;
  case 43:
    // dup_S2_storerb_io, dup_S2_storerd_io, dup_S2_storerh_io, dup_S2_storer...
    O << ") = ";
    break;
  case 44:
    // dup_S4_storeirb_io, dup_S4_storeiri_io, S4_storeirb_io, S4_storeirh_io...
    O << ") = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 45:
    // A2_combine_hh, A2_combine_hl, M2_mpy_acc_hh_s0, M2_mpy_acc_hh_s1, M2_m...
    O << ".h,";
    break;
  case 46:
    // A2_combine_lh, A2_combine_ll, M2_mpy_acc_lh_s0, M2_mpy_acc_lh_s1, M2_m...
    O << ".l,";
    break;
  case 47:
    // A2_paddf, A2_paddfnew, A2_paddif, A2_paddifnew, A2_paddit, A2_padditne...
    O << " = add(";
    printOperand(MI, 2, O);
    break;
  case 48:
    // A2_pandf, A2_pandfnew, A2_pandt, A2_pandtnew
    O << " = and(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 49:
    // A2_porf, A2_porfnew, A2_port, A2_portnew
    O << " = or(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 50:
    // A2_psubf, A2_psubfnew, A2_psubt, A2_psubtnew
    O << " = sub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 51:
    // A2_pxorf, A2_pxorfnew, A2_pxort, A2_pxortnew
    O << " = xor(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 52:
    // A2_vavghcr, A2_vavgwcr
    O << "):crnd";
    return;
    break;
  case 53:
    // A2_vnavghcr, A2_vnavgwcr
    O << "):crnd:sat";
    return;
    break;
  case 54:
    // A4_andn, A4_andnp, A4_orn, A4_ornp, M4_and_andn, M4_or_andn, M4_xor_an...
    O << ",~";
    break;
  case 55:
    // A4_boundscheck_hi
    O << "):raw:hi";
    return;
    break;
  case 56:
    // A4_boundscheck_lo
    O << "):raw:lo";
    return;
    break;
  case 57:
    // A4_paslhf, A4_paslhfnew, A4_paslht, A4_paslhtnew
    O << " = aslh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 58:
    // A4_pasrhf, A4_pasrhfnew, A4_pasrht, A4_pasrhtnew
    O << " = asrh(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 59:
    // A4_psxtbf, A4_psxtbfnew, A4_psxtbt, A4_psxtbtnew
    O << " = sxtb(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 60:
    // A4_psxthf, A4_psxthfnew, A4_psxtht, A4_psxthtnew
    O << " = sxth(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 61:
    // A4_pzxtbf, A4_pzxtbfnew, A4_pzxtbt, A4_pzxtbtnew
    O << " = zxtb(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 62:
    // A4_pzxthf, A4_pzxthfnew, A4_pzxtht, A4_pzxthtnew
    O << " = zxth(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 63:
    // C2_andn, C2_orn, V6_pred_and_n, V6_pred_or_n
    O << ",!";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 64:
    // C2_ccombinewf, C2_ccombinewnewf, C2_ccombinewnewt, C2_ccombinewt
    O << " = combine(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 65:
    // C4_and_and, C4_and_andn, C4_or_and, C4_or_andn, S4_or_andix
    O << ",and(";
    printOperand(MI, 2, O);
    break;
  case 66:
    // C4_and_or, C4_and_orn, C4_or_or, C4_or_orn
    O << ",or(";
    printOperand(MI, 2, O);
    break;
  case 67:
    // F2_conv_df2d_chop, F2_conv_df2ud_chop, F2_conv_df2uw_chop, F2_conv_df2...
    O << "):chop";
    return;
    break;
  case 68:
    // F2_dfimm_n, F2_sfimm_n
    O << "):neg";
    return;
    break;
  case 69:
    // F2_dfimm_p, F2_sfimm_p
    O << "):pos";
    return;
    break;
  case 70:
    // F2_sffma_lib, F2_sffms_lib
    O << "):lib";
    return;
    break;
  case 71:
    // J4_cmpeq_f_jumpnv_nt, J4_cmpeq_t_jumpnv_nt, J4_cmpeqi_f_jumpnv_nt, J4_...
    O << ")) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 72:
    // J4_cmpeq_f_jumpnv_t, J4_cmpeq_t_jumpnv_t, J4_cmpeqi_f_jumpnv_t, J4_cmp...
    O << ")) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 73:
    // J4_jumpseti, J4_jumpsetr
    O << " ; jump ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 74:
    // L2_loadbsw2_pbr, L2_loadbsw2_pr, L2_loadbsw4_pbr, L2_loadbsw4_pr, L2_l...
    O << "++";
    printOperand(MI, 3, O);
    break;
  case 75:
    // L2_loadbsw2_pci, L2_loadbsw2_pi, L2_loadbsw4_pci, L2_loadbsw4_pi, L2_l...
    O << "++#";
    printOperand(MI, 3, O);
    break;
  case 76:
    // L2_loadbsw2_pcr, L2_loadbsw4_pcr, L2_loadbzw2_pcr, L2_loadbzw4_pcr, L2...
    O << "++I:circ(";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 77:
    // L4_add_memopb_io, L4_add_memoph_io, L4_add_memopw_io
    O << ") += ";
    printOperand(MI, 2, O);
    return;
    break;
  case 78:
    // L4_and_memopb_io, L4_and_memoph_io, L4_and_memopw_io
    O << ") &= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 79:
    // L4_iadd_memopb_io, L4_iadd_memoph_io, L4_iadd_memopw_io
    O << ") += #";
    printOperand(MI, 2, O);
    return;
    break;
  case 80:
    // L4_iand_memopb_io, L4_iand_memoph_io, L4_iand_memopw_io
    O << ") = clrbit(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 81:
    // L4_ior_memopb_io, L4_ior_memoph_io, L4_ior_memopw_io
    O << ") = setbit(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 82:
    // L4_isub_memopb_io, L4_isub_memoph_io, L4_isub_memopw_io
    O << ") -= #";
    printOperand(MI, 2, O);
    return;
    break;
  case 83:
    // L4_loadbsw2_ap, L4_loadbsw4_ap, L4_loadbzw2_ap, L4_loadbzw4_ap, L4_loa...
    O << "=#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 84:
    // L4_loadbsw2_ur, L4_loadbsw4_ur, L4_loadbzw2_ur, L4_loadbzw4_ur, L4_loa...
    O << "<<#";
    printOperand(MI, 2, O);
    O << "+#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 85:
    // L4_loadrb_rr, L4_loadrd_rr, L4_loadrh_rr, L4_loadri_rr, L4_loadrub_rr,...
    O << '+';
    printOperand(MI, 2, O);
    O << "<<#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 86:
    // L4_or_memopb_io, L4_or_memoph_io, L4_or_memopw_io
    O << ") |= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 87:
    // L4_ploadrbf_abs, L4_ploadrbfnew_abs, L4_ploadrbt_abs, L4_ploadrbtnew_a...
    O << " = memb(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 88:
    // L4_ploadrdf_abs, L4_ploadrdfnew_abs, L4_ploadrdt_abs, L4_ploadrdtnew_a...
    O << " = memd(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 89:
    // L4_ploadrhf_abs, L4_ploadrhfnew_abs, L4_ploadrht_abs, L4_ploadrhtnew_a...
    O << " = memh(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 90:
    // L4_ploadrif_abs, L4_ploadrifnew_abs, L4_ploadrit_abs, L4_ploadritnew_a...
    O << " = memw(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 91:
    // L4_ploadrubf_abs, L4_ploadrubfnew_abs, L4_ploadrubt_abs, L4_ploadrubtn...
    O << " = memub(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 92:
    // L4_ploadruhf_abs, L4_ploadruhfnew_abs, L4_ploadruht_abs, L4_ploadruhtn...
    O << " = memuh(#";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 93:
    // L4_return_f, L4_return_fnew_pnt, L4_return_fnew_pt, L4_return_t, L4_re...
    O << " = dealloc_return(";
    printOperand(MI, 2, O);
    break;
  case 94:
    // L4_sub_memopb_io, L4_sub_memoph_io, L4_sub_memopw_io
    O << ") -= ";
    printOperand(MI, 2, O);
    return;
    break;
  case 95:
    // M2_cmacsc_s0, M2_cmpysc_s0, M2_cnacsc_s0
    O << "*):sat";
    return;
    break;
  case 96:
    // M2_cmacsc_s1, M2_cmpysc_s1, M2_cnacsc_s1, M7_wcmpyiwc, M7_wcmpyrwc
    O << "*):<<1:sat";
    return;
    break;
  case 97:
    // M2_cmpyrsc_s0
    O << "*):rnd:sat";
    return;
    break;
  case 98:
    // M2_cmpyrsc_s1, M4_cmpyi_whc, M4_cmpyr_whc, M7_wcmpyiwc_rnd, M7_wcmpyrw...
    O << "*):<<1:rnd:sat";
    return;
    break;
  case 99:
    // M2_vrcmaci_s0c, M2_vrcmacr_s0c, M2_vrcmpyi_s0c, M2_vrcmpyr_s0c, M7_dcm...
    O << "*)";
    return;
    break;
  case 100:
    // M2_vrcmpys_acc_s1_h, M2_vrcmpys_s1_h
    O << "):<<1:sat:raw:hi";
    return;
    break;
  case 101:
    // M2_vrcmpys_acc_s1_l, M2_vrcmpys_s1_l
    O << "):<<1:sat:raw:lo";
    return;
    break;
  case 102:
    // M2_vrcmpys_s1rp_h
    O << "):<<1:rnd:sat:raw:hi";
    return;
    break;
  case 103:
    // M2_vrcmpys_s1rp_l
    O << "):<<1:rnd:sat:raw:lo";
    return;
    break;
  case 104:
    // M4_mpyri_addi, M4_mpyrr_addi
    O << ",mpyi(";
    printOperand(MI, 2, O);
    break;
  case 105:
    // M4_vrmpyeh_acc_s1, M4_vrmpyeh_s1, M4_vrmpyoh_acc_s1, M4_vrmpyoh_s1
    O << "):<<1";
    return;
    break;
  case 106:
    // S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_pi, S2_pstorerbne...
    printOperand(MI, 0, O);
    break;
  case 107:
    // S2_storerb_pbr, S2_storerbnew_pbr, S2_storerd_pbr, S2_storerf_pbr, S2_...
    O << ":brev) = ";
    printOperand(MI, 3, O);
    break;
  case 108:
    // S2_storerb_pci, S2_storerbnew_pci, S2_storerd_pci, S2_storerf_pci, S2_...
    O << ":circ(";
    printOperand(MI, 3, O);
    O << ")) = ";
    printOperand(MI, 4, O);
    break;
  case 109:
    // S2_tableidxb, S2_tableidxd, S2_tableidxh, S2_tableidxw, S5_asrhub_rnd_...
    O << "):raw";
    return;
    break;
  case 110:
    // S4_addi_asl_ri, S4_andi_asl_ri, S4_ori_asl_ri, S4_subi_asl_ri
    O << ",asl(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 111:
    // S4_addi_lsr_ri, S4_andi_lsr_ri, S4_ori_lsr_ri, S4_subi_lsr_ri
    O << ",lsr(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 112:
    // S4_vxaddsubhr, S4_vxsubaddhr
    O << "):rnd:>>1:sat";
    return;
    break;
  case 113:
    // SA1_and1
    O << ",#1)";
    return;
    break;
  case 114:
    // SA1_combinerz
    O << ",#0)";
    return;
    break;
  case 115:
    // SA1_zxtb
    O << ",#255)";
    return;
    break;
  case 116:
    // SS2_storebi0, SS2_storewi0
    O << ") = #0";
    return;
    break;
  case 117:
    // SS2_storebi1, SS2_storewi1
    O << ") = #1";
    return;
    break;
  case 118:
    // V6_shuffeqw, V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat, V6_vasrwuhrndsa...
    O << ".w,";
    break;
  case 119:
    // V6_v6mpyhubs10, V6_v6mpyvubs10, V6_vlutvvb_oracci, V6_vlutvvbi
    O << ".b,#";
    break;
  case 120:
    // V6_v6mpyhubs10_vxx
    O << "):h";
    return;
    break;
  case 121:
    // V6_v6mpyvubs10_vxx
    O << "):v";
    return;
    break;
  case 122:
    // V6_vS32b_nt_ai, V6_vS32b_nt_new_ai, V6_vS32b_nt_new_pi, V6_vS32b_nt_ne...
    O << "):nt = ";
    break;
  case 123:
    // V6_vS32b_srls_ai, V6_vS32b_srls_pi, V6_vS32b_srls_ppu
    O << "):scatter_release";
    return;
    break;
  case 124:
    // V6_vabsb, V6_vaddb, V6_vaddb_dv, V6_vavgb, V6_vdmpyhb, V6_vdmpyhb_acc,...
    O << ".b)";
    return;
    break;
  case 125:
    // V6_vabsb_sat, V6_vaddbsat, V6_vaddbsat_dv, V6_vaddububb_sat, V6_vsubbs...
    O << ".b):sat";
    return;
    break;
  case 126:
    // V6_vabsh, V6_vaslhv, V6_vavgh, V6_vmpyh, V6_vmpyh_acc, V6_vmpyhv, V6_v...
    O << ".h)";
    return;
    break;
  case 127:
    // V6_vabsh_sat, V6_vdmpyhisat, V6_vdmpyhisat_acc, V6_vdmpyhsat, V6_vdmpy...
    O << ".h):sat";
    return;
    break;
  case 128:
    // V6_vabsw, V6_vaslwv, V6_vasrwv, V6_vavgw
    O << ".w)";
    return;
    break;
  case 129:
    // V6_vabsw_sat
    O << ".w):sat";
    return;
    break;
  case 130:
    // V6_vaddcarryo
    O << " = vadd(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w):carry";
    return;
    break;
  case 131:
    // V6_vaddubsat, V6_vaddubsat_dv, V6_vsububsat, V6_vsububsat_dv
    O << ".ub):sat";
    return;
    break;
  case 132:
    // V6_vavgbrnd
    O << ".b):rnd";
    return;
    break;
  case 133:
    // V6_vavghrnd
    O << ".h):rnd";
    return;
    break;
  case 134:
    // V6_vavgubrnd
    O << ".ub):rnd";
    return;
    break;
  case 135:
    // V6_vavguh, V6_vmpyhus, V6_vmpyhus_acc, V6_vmpyiewuh_acc
    O << ".uh)";
    return;
    break;
  case 136:
    // V6_vavguhrnd
    O << ".uh):rnd";
    return;
    break;
  case 137:
    // V6_vavguw
    O << ".uw)";
    return;
    break;
  case 138:
    // V6_vavguwrnd
    O << ".uw):rnd";
    return;
    break;
  case 139:
    // V6_vavgwrnd
    O << ".w):rnd";
    return;
    break;
  case 140:
    // V6_vccombine, V6_vnccombine
    O << " = vcombine(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 141:
    // V6_vdmpyhsuisat, V6_vdmpyhsuisat_acc
    O << ".uh,#1):sat";
    return;
    break;
  case 142:
    // V6_vdmpyhsusat, V6_vdmpyhsusat_acc
    O << ".uh):sat";
    return;
    break;
  case 143:
    // V6_vgathermhq
    O << ".h).h";
    return;
    break;
  case 144:
    // V6_vgathermhwq
    O << ".w).h";
    return;
    break;
  case 145:
    // V6_vlutvwh_oracci, V6_vlutvwhi
    O << ".h,#";
    break;
  case 146:
    // V6_vmpyowh
    O << ".h):<<1:sat";
    return;
    break;
  case 147:
    // V6_vmpyowh_rnd
    O << ".h):<<1:rnd:sat";
    return;
    break;
  case 148:
    // V6_vmpyowh_rnd_sacc
    O << ".h):<<1:rnd:sat:shift";
    return;
    break;
  case 149:
    // V6_vmpyowh_sacc
    O << ".h):<<1:sat:shift";
    return;
    break;
  case 150:
    // V6_vrmpyubi, V6_vrmpyubi_acc
    O << ".ub,#";
    break;
  case 151:
    // V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rx_acc, V6_vrmpyzcb_rx_acc, V6_vrmpyz...
    printOperand(MI, 3, O);
    break;
  case 152:
    // V6_vscattermhq
    O << ".h).h = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 153:
    // V6_vscattermhwq
    O << ".w).h = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 154:
    // V6_vscattermwq
    O << ".w).w = ";
    printOperand(MI, 4, O);
    return;
    break;
  case 155:
    // V6_vsubcarryo
    O << " = vsub(";
    printOperand(MI, 2, O);
    O << ".w,";
    printOperand(MI, 3, O);
    O << ".w):carry";
    return;
    break;
  case 156:
    // dep_S2_packhl
    O << "):deprecated";
    return;
    break;
  }


  // Fragment 3 encoded into 6 bits for 56 unique commands.
  switch ((Bits >> 32) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_...
    O << ',';
    break;
  case 1:
    // L2_loadalignb_zomap, L2_loadalignh_zomap, V6_zldp0, dup_L2_loadrb_io, ...
    O << ')';
    return;
    break;
  case 2:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    printOperand(MI, 2, O);
    break;
  case 3:
    // S2_pstorerbf_zomap, S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_p...
    O << ") = ";
    printOperand(MI, 2, O);
    break;
  case 4:
    // S4_storeirbf_zomap, S4_storeirbfnew_zomap, S4_storeirbt_zomap, S4_stor...
    O << ") = #";
    printOperand(MI, 2, O);
    return;
    break;
  case 5:
    // V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_MAP_equh_and, V6...
    printOperand(MI, 3, O);
    break;
  case 6:
    // V6_stnpnt0, V6_stnqnt0, V6_stpnt0, V6_stqnt0
    O << "):nt = ";
    printOperand(MI, 2, O);
    return;
    break;
  case 7:
    // V6_v6mpyhubs10_alt
    O << "):h";
    return;
    break;
  case 8:
    // V6_v6mpyvubs10_alt
    O << "):v";
    return;
    break;
  case 9:
    // V6_vrmpybusi_acc_alt, V6_vrmpyubi_acc_alt, V6_vrsadubi_acc_alt, F2_sff...
    printOperand(MI, 4, O);
    break;
  case 10:
    // V6_vscattermwhq_alt, S2_storerf_pbr, S2_storerf_pci
    O << ".h";
    return;
    break;
  case 11:
    // V6_vscattermwq_alt
    O << ".w";
    return;
    break;
  case 12:
    // dup_A2_addi, A2_addi, A2_paddif, A2_paddifnew, A2_paddit, A2_padditnew...
    O << ",#";
    break;
  case 13:
    // dup_S2_allocframe, L4_return_f, L4_return_t, S2_allocframe
    O << "):raw";
    return;
    break;
  case 14:
    // A2_addh_h16_hh, A2_addh_h16_hl, A2_addh_h16_sat_hh, A2_addh_h16_sat_hl...
    O << ".h,";
    printOperand(MI, 2, O);
    break;
  case 15:
    // A2_addh_h16_lh, A2_addh_h16_ll, A2_addh_h16_sat_lh, A2_addh_h16_sat_ll...
    O << ".l,";
    printOperand(MI, 2, O);
    break;
  case 16:
    // A2_tfrih, A2_tfril, HI, LO, S2_storerb_pbr, S2_storerb_pci, S2_storerd...
    return;
    break;
  case 17:
    // A5_ACS
    O << " = vacsh(";
    printOperand(MI, 3, O);
    O << ',';
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 18:
    // A6_vminub_RdP
    O << " = vminub(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 19:
    // C4_and_andn, C4_and_orn, C4_or_andn, C4_or_orn
    O << ",!";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 20:
    // F2_sfinvsqrta
    O << " = sfinvsqrta(";
    printOperand(MI, 2, O);
    O << ')';
    return;
    break;
  case 21:
    // F2_sfrecipa
    O << " = sfrecipa(";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 22:
    // J4_cmpeq_fp0_jump_nt, J4_cmpeqi_fp0_jump_nt, J4_cmpeqn1_fp0_jump_nt, J...
    O << "); if (!p0.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 23:
    // J4_cmpeq_fp0_jump_t, J4_cmpeqi_fp0_jump_t, J4_cmpeqn1_fp0_jump_t, J4_c...
    O << "); if (!p0.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 24:
    // J4_cmpeq_fp1_jump_nt, J4_cmpeqi_fp1_jump_nt, J4_cmpeqn1_fp1_jump_nt, J...
    O << "); if (!p1.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 25:
    // J4_cmpeq_fp1_jump_t, J4_cmpeqi_fp1_jump_t, J4_cmpeqn1_fp1_jump_t, J4_c...
    O << "); if (!p1.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 26:
    // J4_cmpeq_tp0_jump_nt, J4_cmpeqi_tp0_jump_nt, J4_cmpeqn1_tp0_jump_nt, J...
    O << "); if (p0.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 27:
    // J4_cmpeq_tp0_jump_t, J4_cmpeqi_tp0_jump_t, J4_cmpeqn1_tp0_jump_t, J4_c...
    O << "); if (p0.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 28:
    // J4_cmpeq_tp1_jump_nt, J4_cmpeqi_tp1_jump_nt, J4_cmpeqn1_tp1_jump_nt, J...
    O << "); if (p1.new) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 29:
    // J4_cmpeq_tp1_jump_t, J4_cmpeqi_tp1_jump_t, J4_cmpeqn1_tp1_jump_t, J4_c...
    O << "); if (p1.new) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 30:
    // J4_cmplt_f_jumpnv_nt, J4_cmplt_t_jumpnv_nt, J4_cmpltu_f_jumpnv_nt, J4_...
    O << ".new)) jump:nt ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 31:
    // J4_cmplt_f_jumpnv_t, J4_cmplt_t_jumpnv_t, J4_cmpltu_f_jumpnv_t, J4_cmp...
    O << ".new)) jump:t ";
    printBrtarget(MI, 2, O);
    return;
    break;
  case 32:
    // L2_loadalignb_io, L2_loadalignh_io, S2_pstorerbf_io, S2_pstorerbnewf_i...
    O << "+#";
    break;
  case 33:
    // L2_loadalignb_pbr, L2_loadalignb_pr, L2_loadalignh_pbr, L2_loadalignh_...
    O << "++";
    break;
  case 34:
    // L2_loadalignb_pci, L2_loadalignb_pi, L2_loadalignh_pci, L2_loadalignh_...
    O << "++#";
    break;
  case 35:
    // L2_loadalignb_pcr, L2_loadalignh_pcr
    O << "++I:circ(";
    printOperand(MI, 4, O);
    O << "))";
    return;
    break;
  case 36:
    // L2_loadbsw2_pbr, L2_loadbsw4_pbr, L2_loadbzw2_pbr, L2_loadbzw4_pbr, L2...
    O << ":brev)";
    return;
    break;
  case 37:
    // L2_loadbsw2_pci, L2_loadbsw4_pci, L2_loadbzw2_pci, L2_loadbzw4_pci, L2...
    O << ":circ(";
    printOperand(MI, 4, O);
    O << "))";
    return;
    break;
  case 38:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    printOperand(MI, 1, O);
    break;
  case 39:
    // L4_loadalignb_ap, L4_loadalignh_ap
    O << "=#";
    printOperand(MI, 3, O);
    O << ')';
    return;
    break;
  case 40:
    // L4_loadalignb_ur, L4_loadalignh_ur
    O << "<<#";
    printOperand(MI, 3, O);
    O << "+#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 41:
    // L4_return_fnew_pnt, L4_return_tnew_pnt
    O << "):nt:raw";
    return;
    break;
  case 42:
    // L4_return_fnew_pt, L4_return_tnew_pt
    O << "):t:raw";
    return;
    break;
  case 43:
    // M4_mpyri_addr, M4_mpyrr_addr
    O << ",mpyi(";
    printOperand(MI, 2, O);
    break;
  case 44:
    // M4_mpyri_addr_u2
    O << ",mpyi(#";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 45:
    // S2_storerbnew_pbr, S2_storerbnew_pci, S2_storerhnew_pbr, S2_storerhnew...
    O << ".new";
    return;
    break;
  case 46:
    // S4_addaddi
    O << ",add(";
    printOperand(MI, 2, O);
    O << ",#";
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 47:
    // S4_pstorerbf_rr, S4_pstorerbfnew_rr, S4_pstorerbnewf_rr, S4_pstorerbne...
    O << '+';
    printOperand(MI, 2, O);
    O << "<<#";
    printOperand(MI, 3, O);
    O << ") = ";
    printOperand(MI, 4, O);
    break;
  case 48:
    // S4_subaddi
    O << ",sub(#";
    printOperand(MI, 2, O);
    O << ',';
    printOperand(MI, 3, O);
    O << "))";
    return;
    break;
  case 49:
    // SA1_inc
    O << ",#1)";
    return;
    break;
  case 50:
    // V6_vL32b_nt_ai, V6_vL32b_nt_cur_ai, V6_vL32b_nt_cur_pi, V6_vL32b_nt_cu...
    O << "):nt";
    return;
    break;
  case 51:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vaddw, V6_vaddw_dv, V6_vaddwsat, V6_...
    O << ".w,";
    break;
  case 52:
    // V6_vadduhw, V6_vsubuhw
    O << ".uh,";
    printOperand(MI, 2, O);
    O << ".uh)";
    return;
    break;
  case 53:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rt_acc, V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc...
    O << ".b,";
    break;
  case 54:
    // V6_vrmpyzcb_rt, V6_vrmpyzcb_rt_acc, V6_vrmpyzcb_rx, V6_vrmpyzcb_rx_acc...
    O << ".c,";
    break;
  case 55:
    // V6_vrmpyznb_rt, V6_vrmpyznb_rt_acc, V6_vrmpyznb_rx, V6_vrmpyznb_rx_acc
    O << ".n,";
    break;
  }


  // Fragment 4 encoded into 6 bits for 57 unique commands.
  switch ((Bits >> 38) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vscattermh_add_alt, V6_vscattermh_alt, V6_vscattermw_add_...
    printOperand(MI, 2, O);
    break;
  case 1:
    // L2_ploadrbf_zomap, L2_ploadrbfnew_zomap, L2_ploadrbt_zomap, L2_ploadrb...
    O << ')';
    return;
    break;
  case 2:
    // S2_pstorerbf_zomap, S2_pstorerbt_zomap, S2_pstorerdf_zomap, S2_pstorer...
    return;
    break;
  case 3:
    // S2_pstorerbnewf_zomap, S2_pstorerbnewt_zomap, S2_pstorerhnewf_zomap, S...
    O << ".new";
    return;
    break;
  case 4:
    // S2_pstorerff_zomap, S2_pstorerft_zomap, S4_pstorerffnew_zomap, S4_psto...
    O << ".h";
    return;
    break;
  case 5:
    // S5_vasrhrnd_goodsyntax, M2_dpmpyss_rnd_s0, S2_asr_i_p_rnd, S2_asr_i_r_...
    O << "):rnd";
    return;
    break;
  case 6:
    // V6_MAP_equb, V6_MAP_equb_and, V6_MAP_equb_ior, V6_MAP_equb_xor, V6_vrm...
    O << ".ub)";
    return;
    break;
  case 7:
    // V6_MAP_equh, V6_MAP_equh_and, V6_MAP_equh_ior, V6_MAP_equh_xor, V6_vab...
    O << ".uh)";
    return;
    break;
  case 8:
    // V6_MAP_equw, V6_MAP_equw_and, V6_MAP_equw_ior, V6_MAP_equw_xor, V6_vgt...
    O << ".uw)";
    return;
    break;
  case 9:
    // V6_ldcnpnt0, V6_ldcpnt0, V6_ldnpnt0, V6_ldpnt0, V6_ldtnpnt0, V6_ldtpnt...
    O << "):nt";
    return;
    break;
  case 10:
    // V6_vtran2x2_map, L2_loadalignb_pbr, L2_loadalignb_pci, L2_loadalignb_p...
    printOperand(MI, 4, O);
    break;
  case 11:
    // A2_addh_h16_hh, A2_addh_h16_lh, A2_subh_h16_hh, A2_subh_h16_lh
    O << ".h):<<16";
    return;
    break;
  case 12:
    // A2_addh_h16_hl, A2_addh_h16_ll, A2_subh_h16_hl, A2_subh_h16_ll
    O << ".l):<<16";
    return;
    break;
  case 13:
    // A2_addh_h16_sat_hh, A2_addh_h16_sat_lh, A2_subh_h16_sat_hh, A2_subh_h1...
    O << ".h):sat:<<16";
    return;
    break;
  case 14:
    // A2_addh_h16_sat_hl, A2_addh_h16_sat_ll, A2_subh_h16_sat_hl, A2_subh_h1...
    O << ".l):sat:<<16";
    return;
    break;
  case 15:
    // A2_addh_l16_hl, A2_combine_hh, A2_combine_lh, A2_subh_l16_hl, M2_mpy_a...
    O << ".h)";
    return;
    break;
  case 16:
    // A2_addh_l16_ll, A2_combine_hl, A2_combine_ll, A2_subh_l16_ll, M2_mpy_a...
    O << ".l)";
    return;
    break;
  case 17:
    // A2_addh_l16_sat_hl, A2_subh_l16_sat_hl, M2_mpy_acc_sat_hh_s0, M2_mpy_a...
    O << ".h):sat";
    return;
    break;
  case 18:
    // A2_addh_l16_sat_ll, A2_subh_l16_sat_ll, M2_mpy_acc_sat_hl_s0, M2_mpy_a...
    O << ".l):sat";
    return;
    break;
  case 19:
    // A2_paddf, A2_paddfnew, A2_paddif, A2_paddifnew, A2_paddit, A2_padditne...
    printOperand(MI, 3, O);
    break;
  case 20:
    // A4_round_ri_sat, A4_round_rr_sat, S2_asl_i_r_sat, S2_asl_r_r_sat, S2_a...
    O << "):sat";
    return;
    break;
  case 21:
    // C2_mux, C2_muxri, M4_mpyrr_addr
    O << ',';
    printOperand(MI, 3, O);
    break;
  case 22:
    // C2_muxii, C2_muxir, M4_mpyri_addr, S2_extractu, S2_extractup, S2_inser...
    O << ",#";
    break;
  case 23:
    // F2_sffma_sc
    O << "):scale";
    return;
    break;
  case 24:
    // L2_ploadrbf_io, L2_ploadrbfnew_io, L2_ploadrbt_io, L2_ploadrbtnew_io, ...
    O << "+#";
    printOperand(MI, 3, O);
    break;
  case 25:
    // L2_ploadrbf_pi, L2_ploadrbfnew_pi, L2_ploadrbt_pi, L2_ploadrbtnew_pi, ...
    O << "++#";
    printOperand(MI, 4, O);
    break;
  case 26:
    // L4_ploadrbf_rr, L4_ploadrbfnew_rr, L4_ploadrbt_rr, L4_ploadrbtnew_rr, ...
    O << '+';
    printOperand(MI, 3, O);
    O << "<<#";
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 27:
    // M2_hmmpyh_rs1, M2_mpy_sat_rnd_hh_s1, M2_mpy_sat_rnd_lh_s1, V6_vmpyhsrs...
    O << ".h):<<1:rnd:sat";
    return;
    break;
  case 28:
    // M2_hmmpyh_s1, M2_mpy_acc_sat_hh_s1, M2_mpy_acc_sat_lh_s1, M2_mpy_nac_s...
    O << ".h):<<1:sat";
    return;
    break;
  case 29:
    // M2_hmmpyl_rs1, M2_mpy_sat_rnd_hl_s1, M2_mpy_sat_rnd_ll_s1
    O << ".l):<<1:rnd:sat";
    return;
    break;
  case 30:
    // M2_hmmpyl_s1, M2_mpy_acc_sat_hl_s1, M2_mpy_acc_sat_ll_s1, M2_mpy_nac_s...
    O << ".l):<<1:sat";
    return;
    break;
  case 31:
    // M2_mpy_acc_hh_s1, M2_mpy_acc_lh_s1, M2_mpy_hh_s1, M2_mpy_lh_s1, M2_mpy...
    O << ".h):<<1";
    return;
    break;
  case 32:
    // M2_mpy_acc_hl_s1, M2_mpy_acc_ll_s1, M2_mpy_hl_s1, M2_mpy_ll_s1, M2_mpy...
    O << ".l):<<1";
    return;
    break;
  case 33:
    // M2_mpy_rnd_hh_s0, M2_mpy_rnd_lh_s0, M2_mpyd_rnd_hh_s0, M2_mpyd_rnd_lh_...
    O << ".h):rnd";
    return;
    break;
  case 34:
    // M2_mpy_rnd_hh_s1, M2_mpy_rnd_lh_s1, M2_mpyd_rnd_hh_s1, M2_mpyd_rnd_lh_...
    O << ".h):<<1:rnd";
    return;
    break;
  case 35:
    // M2_mpy_rnd_hl_s0, M2_mpy_rnd_ll_s0, M2_mpyd_rnd_hl_s0, M2_mpyd_rnd_ll_...
    O << ".l):rnd";
    return;
    break;
  case 36:
    // M2_mpy_rnd_hl_s1, M2_mpy_rnd_ll_s1, M2_mpyd_rnd_hl_s1, M2_mpyd_rnd_ll_...
    O << ".l):<<1:rnd";
    return;
    break;
  case 37:
    // M2_mpy_sat_rnd_hh_s0, M2_mpy_sat_rnd_lh_s0
    O << ".h):rnd:sat";
    return;
    break;
  case 38:
    // M2_mpy_sat_rnd_hl_s0, M2_mpy_sat_rnd_ll_s0
    O << ".l):rnd:sat";
    return;
    break;
  case 39:
    // M2_mpy_up_s1
    O << "):<<1";
    return;
    break;
  case 40:
    // M2_mpy_up_s1_sat, M4_mac_up_s1_sat, M4_nac_up_s1_sat
    O << "):<<1:sat";
    return;
    break;
  case 41:
    // S5_vasrhrnd
    O << "):raw";
    return;
    break;
  case 42:
    // V6_shuffeqw, V6_veqw, V6_veqw_and, V6_veqw_or, V6_veqw_xor, V6_vgtw, V...
    O << ".w)";
    return;
    break;
  case 43:
    // V6_v6mpyhubs10
    O << "):h";
    return;
    break;
  case 44:
    // V6_v6mpyvubs10
    O << "):v";
    return;
    break;
  case 45:
    // V6_vL32b_cur_npred_ppu, V6_vL32b_cur_pred_ppu, V6_vL32b_npred_ppu, V6_...
    O << "++";
    printOperand(MI, 4, O);
    break;
  case 46:
    // V6_vasrhubrndsat, V6_vasrhubsat, V6_vmpahhsat
    O << ".h,";
    printOperand(MI, 3, O);
    break;
  case 47:
    // V6_vasruhubrndsat, V6_vasruhubsat, V6_vmpauhuhsat
    O << ".uh,";
    printOperand(MI, 3, O);
    break;
  case 48:
    // V6_vasruwuhrndsat, V6_vasruwuhsat
    O << ".uw,";
    printOperand(MI, 3, O);
    break;
  case 49:
    // V6_vasrwh, V6_vasrwhrndsat, V6_vasrwhsat, V6_vasrwuhrndsat, V6_vasrwuh...
    O << ".w,";
    printOperand(MI, 3, O);
    break;
  case 50:
    // V6_veqb, V6_veqb_and, V6_veqb_or, V6_veqb_xor, V6_vgtb, V6_vgtb_and, V...
    O << ".b)";
    return;
    break;
  case 51:
    // V6_vlutvvb_nm, V6_vlutvwh_nm
    O << "):nomatch";
    return;
    break;
  case 52:
    // V6_vrmpybusi, V6_vrmpybusi_acc
    O << ".b,#";
    break;
  case 53:
    // V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc, V6_vrmpyzbub_rx, V6_vrmpyzbub_rx_a...
    printOperand(MI, 1, O);
    break;
  case 54:
    // V6_vrounduhub
    O << ".uh):sat";
    return;
    break;
  case 55:
    // V6_vrounduwuh
    O << ".uw):sat";
    return;
    break;
  case 56:
    // V6_vroundwuh
    O << ".w):sat";
    return;
    break;
  }


  // Fragment 5 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 44) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A2_addsp, V6_vtran2x2_map, dup_A2_add, dup_A2_addi, A2_add, A2_addi, A...
    O << ')';
    return;
    break;
  case 1:
    // V6_vscattermh_add_alt
    O << ".h) += ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 2:
    // V6_vscattermh_alt
    O << ".h) = ";
    printOperand(MI, 3, O);
    O << ".h";
    return;
    break;
  case 3:
    // V6_vscattermw_add_alt, V6_vscattermwh_add_alt
    O << ".w) += ";
    printOperand(MI, 3, O);
    break;
  case 4:
    // V6_vscattermw_alt, V6_vscattermwh_alt
    O << ".w) = ";
    printOperand(MI, 3, O);
    break;
  case 5:
    // A2_addpsat, A2_addsat, A2_subsat, V6_vasrhubsat, V6_vasruhubsat, V6_va...
    O << "):sat";
    return;
    break;
  case 6:
    // A2_addsph
    O << "):raw:hi";
    return;
    break;
  case 7:
    // A2_addspl
    O << "):raw:lo";
    return;
    break;
  case 8:
    // A4_addp_c, A4_subp_c
    O << ',';
    printOperand(MI, 1, O);
    O << "):carry";
    return;
    break;
  case 9:
    // C2_muxii, C2_muxir, M4_mpyri_addr, S2_extractu, S2_extractup, S4_extra...
    printOperand(MI, 3, O);
    break;
  case 10:
    // C4_and_and, C4_and_or, C4_or_and, C4_or_or, M4_mpyri_addi, M4_mpyrr_ad...
    O << "))";
    return;
    break;
  case 11:
    // L2_loadalignb_pbr, L2_loadalignh_pbr
    O << ":brev)";
    return;
    break;
  case 12:
    // L2_loadalignb_pci, L2_loadalignh_pci
    O << ":circ(";
    printOperand(MI, 5, O);
    O << "))";
    return;
    break;
  case 13:
    // S2_insert, S2_insertp, V6_vrmpybusi_acc
    printOperand(MI, 4, O);
    O << ')';
    return;
    break;
  case 14:
    // S2_pstorerbf_io, S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_...
    O << ") = ";
    break;
  case 15:
    // S4_storeirbf_io, S4_storeirbfnew_io, S4_storeirbt_io, S4_storeirbtnew_...
    O << ") = #";
    printOperand(MI, 3, O);
    return;
    break;
  case 16:
    // V6_vL32b_nt_cur_npred_ai, V6_vL32b_nt_cur_npred_pi, V6_vL32b_nt_cur_np...
    O << "):nt";
    return;
    break;
  case 17:
    // V6_vS32b_nt_new_npred_ai, V6_vS32b_nt_new_npred_pi, V6_vS32b_nt_new_np...
    O << "):nt = ";
    break;
  case 18:
    // V6_vaddcarry, V6_vaddcarrysat, V6_vsubcarry
    O << ".w,";
    break;
  case 19:
    // V6_vaddw, V6_vaddw_dv, V6_vsubw, V6_vsubw_dv
    O << ".w)";
    return;
    break;
  case 20:
    // V6_vaddwsat, V6_vaddwsat_dv, V6_vsubwsat, V6_vsubwsat_dv
    O << ".w):sat";
    return;
    break;
  case 21:
    // V6_vasrhubrndsat, V6_vasruhubrndsat, V6_vasruwuhrndsat, V6_vasrwhrndsa...
    O << "):rnd:sat";
    return;
    break;
  case 22:
    // V6_vgathermh
    O << ".h).h";
    return;
    break;
  case 23:
    // V6_vgathermhw
    O << ".w).h";
    return;
    break;
  case 24:
    // V6_vgathermw
    O << ".w).w";
    return;
    break;
  case 25:
    // V6_vmpahhsat
    O << ".h):sat";
    return;
    break;
  case 26:
    // V6_vmpauhuhsat
    O << ".uh):sat";
    return;
    break;
  case 27:
    // V6_vrmpyzbb_rt, V6_vrmpyzbb_rt_acc, V6_vrmpyzcb_rt, V6_vrmpyzcb_rt_acc...
    O << ".b)";
    return;
    break;
  case 28:
    // V6_vrmpyzbb_rx, V6_vrmpyzbb_rx_acc, V6_vrmpyzcb_rx, V6_vrmpyzcb_rx_acc...
    O << ".b++)";
    return;
    break;
  case 29:
    // V6_vrmpyzbub_rt, V6_vrmpyzbub_rt_acc
    O << ".ub)";
    return;
    break;
  case 30:
    // V6_vrmpyzbub_rx, V6_vrmpyzbub_rx_acc
    O << ".ub++)";
    return;
    break;
  case 31:
    // V6_vscattermh
    O << ".h).h = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 32:
    // V6_vscattermh_add
    O << ".h).h += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 33:
    // V6_vscattermhw
    O << ".w).h = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 34:
    // V6_vscattermhw_add
    O << ".w).h += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 35:
    // V6_vscattermw
    O << ".w).w = ";
    printOperand(MI, 3, O);
    return;
    break;
  case 36:
    // V6_vscattermw_add
    O << ".w).w += ";
    printOperand(MI, 3, O);
    return;
    break;
  case 37:
    // dep_A2_addsat, dep_A2_subsat
    O << "):sat:deprecated";
    return;
    break;
  }


  // Fragment 6 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 50) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // V6_vscattermw_add_alt, V6_vscattermw_alt
    O << ".w";
    return;
    break;
  case 1:
    // V6_vscattermwh_add_alt, V6_vscattermwh_alt
    O << ".h";
    return;
    break;
  case 2:
    // C2_muxii, C2_muxir, S2_extractu, S2_extractup, S4_extract, S4_extractp...
    O << ')';
    return;
    break;
  case 3:
    // M4_mpyri_addr
    O << "))";
    return;
    break;
  case 4:
    // S2_pstorerbf_io, S2_pstorerbnewf_io, S2_pstorerbnewt_io, S2_pstorerbt_...
    printOperand(MI, 3, O);
    break;
  case 5:
    // S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbnewf_pi, S2_pstorerbne...
    printOperand(MI, 4, O);
    break;
  case 6:
    // V6_vaddcarry, V6_vsubcarry
    printOperand(MI, 1, O);
    O << "):carry";
    return;
    break;
  }


  // Fragment 7 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 53) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // S2_pstorerbf_io, S2_pstorerbf_pi, S2_pstorerbfnew_pi, S2_pstorerbt_io,...
    return;
    break;
  case 1:
    // S2_pstorerbnewf_io, S2_pstorerbnewf_pi, S2_pstorerbnewfnew_pi, S2_psto...
    O << ".new";
    return;
    break;
  case 2:
    // S2_pstorerff_io, S2_pstorerff_pi, S2_pstorerffnew_pi, S2_pstorerft_io,...
    O << ".h";
    return;
    break;
  case 3:
    // V6_vaddcarrysat
    O << "):carry:sat";
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *HexagonInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 277 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "__10000000\0"
  /* 11 */ "__1000000\0"
  /* 21 */ "__10000010\0"
  /* 32 */ "__1000010\0"
  /* 42 */ "c11:10\0"
  /* 49 */ "g11:10\0"
  /* 56 */ "r11:10\0"
  /* 63 */ "v11:10\0"
  /* 70 */ "g10\0"
  /* 74 */ "r10\0"
  /* 78 */ "v10\0"
  /* 82 */ "__10000020\0"
  /* 93 */ "__1000020\0"
  /* 103 */ "g21:20\0"
  /* 110 */ "r21:20\0"
  /* 117 */ "v21:20\0"
  /* 124 */ "v23:20\0"
  /* 131 */ "g20\0"
  /* 135 */ "r20\0"
  /* 139 */ "v20\0"
  /* 143 */ "__10000030\0"
  /* 154 */ "__1000030\0"
  /* 164 */ "c31:30\0"
  /* 171 */ "g31:30\0"
  /* 178 */ "r31:30\0"
  /* 185 */ "v31:30\0"
  /* 192 */ "g30\0"
  /* 196 */ "r30\0"
  /* 200 */ "v30\0"
  /* 204 */ "c1:0\0"
  /* 209 */ "g1:0\0"
  /* 214 */ "r1:0\0"
  /* 219 */ "v1:0\0"
  /* 224 */ "p3:0\0"
  /* 229 */ "v3:0\0"
  /* 234 */ "sa0\0"
  /* 238 */ "lc0\0"
  /* 242 */ "m0\0"
  /* 245 */ "p0\0"
  /* 248 */ "q0\0"
  /* 251 */ "r0\0"
  /* 254 */ "cs0\0"
  /* 258 */ "gpmucnt0\0"
  /* 267 */ "v0\0"
  /* 270 */ "__10000001\0"
  /* 281 */ "__1000001\0"
  /* 291 */ "__10000011\0"
  /* 302 */ "__1000011\0"
  /* 312 */ "v10:11\0"
  /* 319 */ "g11\0"
  /* 323 */ "r11\0"
  /* 327 */ "v11\0"
  /* 331 */ "__10000021\0"
  /* 342 */ "__1000021\0"
  /* 352 */ "v20:21\0"
  /* 359 */ "g21\0"
  /* 363 */ "r21\0"
  /* 367 */ "v21\0"
  /* 371 */ "v30:31\0"
  /* 378 */ "g31\0"
  /* 382 */ "r31\0"
  /* 386 */ "v31\0"
  /* 390 */ "v0:1\0"
  /* 395 */ "sa1\0"
  /* 399 */ "lc1\0"
  /* 403 */ "m1\0"
  /* 406 */ "p1\0"
  /* 409 */ "q1\0"
  /* 412 */ "r1\0"
  /* 415 */ "cs1\0"
  /* 419 */ "gpmucnt1\0"
  /* 428 */ "v1\0"
  /* 431 */ "__10000002\0"
  /* 442 */ "__1000002\0"
  /* 452 */ "__10000012\0"
  /* 463 */ "__1000012\0"
  /* 473 */ "c13:12\0"
  /* 480 */ "g13:12\0"
  /* 487 */ "r13:12\0"
  /* 494 */ "v13:12\0"
  /* 501 */ "v15:12\0"
  /* 508 */ "g12\0"
  /* 512 */ "r12\0"
  /* 516 */ "v12\0"
  /* 520 */ "__10000022\0"
  /* 531 */ "__1000022\0"
  /* 541 */ "g23:22\0"
  /* 548 */ "r23:22\0"
  /* 555 */ "v23:22\0"
  /* 562 */ "g22\0"
  /* 566 */ "r22\0"
  /* 570 */ "v22\0"
  /* 574 */ "c3:2\0"
  /* 579 */ "g3:2\0"
  /* 584 */ "r3:2\0"
  /* 589 */ "v3:2\0"
  /* 594 */ "p2\0"
  /* 597 */ "q2\0"
  /* 600 */ "r2\0"
  /* 603 */ "gpmucnt2\0"
  /* 612 */ "v2\0"
  /* 615 */ "__10000003\0"
  /* 626 */ "__1000003\0"
  /* 636 */ "__10000013\0"
  /* 647 */ "__1000013\0"
  /* 657 */ "v12:13\0"
  /* 664 */ "g13\0"
  /* 668 */ "r13\0"
  /* 672 */ "v13\0"
  /* 676 */ "__10000023\0"
  /* 687 */ "__1000023\0"
  /* 697 */ "v22:23\0"
  /* 704 */ "g23\0"
  /* 708 */ "r23\0"
  /* 712 */ "v23\0"
  /* 716 */ "v2:3\0"
  /* 721 */ "p3\0"
  /* 724 */ "q3\0"
  /* 727 */ "r3\0"
  /* 730 */ "gpmucnt3\0"
  /* 739 */ "v3\0"
  /* 742 */ "__10000004\0"
  /* 753 */ "__1000004\0"
  /* 763 */ "__10000014\0"
  /* 774 */ "__1000014\0"
  /* 784 */ "c15:14\0"
  /* 791 */ "g15:14\0"
  /* 798 */ "r15:14\0"
  /* 805 */ "v15:14\0"
  /* 812 */ "g14\0"
  /* 816 */ "r14\0"
  /* 820 */ "v14\0"
  /* 824 */ "__10000024\0"
  /* 835 */ "__1000024\0"
  /* 845 */ "g25:24\0"
  /* 852 */ "r25:24\0"
  /* 859 */ "v25:24\0"
  /* 866 */ "v27:24\0"
  /* 873 */ "r24\0"
  /* 877 */ "v24\0"
  /* 881 */ "c5:4\0"
  /* 886 */ "g5:4\0"
  /* 891 */ "r5:4\0"
  /* 896 */ "v5:4\0"
  /* 901 */ "v7:4\0"
  /* 906 */ "g4\0"
  /* 909 */ "r4\0"
  /* 912 */ "gpmucnt4\0"
  /* 921 */ "v4\0"
  /* 924 */ "__10000005\0"
  /* 935 */ "__1000005\0"
  /* 945 */ "__10000015\0"
  /* 956 */ "__1000015\0"
  /* 966 */ "v14:15\0"
  /* 973 */ "g15\0"
  /* 977 */ "r15\0"
  /* 981 */ "v15\0"
  /* 985 */ "__10000025\0"
  /* 996 */ "__1000025\0"
  /* 1006 */ "v24:25\0"
  /* 1013 */ "r25\0"
  /* 1017 */ "v25\0"
  /* 1021 */ "v4:5\0"
  /* 1026 */ "c5\0"
  /* 1029 */ "g5\0"
  /* 1032 */ "r5\0"
  /* 1035 */ "gpmucnt5\0"
  /* 1044 */ "v5\0"
  /* 1047 */ "__10000006\0"
  /* 1058 */ "__1000006\0"
  /* 1068 */ "__10000016\0"
  /* 1079 */ "__1000016\0"
  /* 1089 */ "c17:16\0"
  /* 1096 */ "g17:16\0"
  /* 1103 */ "r17:16\0"
  /* 1110 */ "v17:16\0"
  /* 1117 */ "v19:16\0"
  /* 1124 */ "r16\0"
  /* 1128 */ "v16\0"
  /* 1132 */ "__10000026\0"
  /* 1143 */ "__1000026\0"
  /* 1153 */ "g27:26\0"
  /* 1160 */ "r27:26\0"
  /* 1167 */ "v27:26\0"
  /* 1174 */ "r26\0"
  /* 1178 */ "v26\0"
  /* 1182 */ "c7:6\0"
  /* 1187 */ "g7:6\0"
  /* 1192 */ "r7:6\0"
  /* 1197 */ "v7:6\0"
  /* 1202 */ "g6\0"
  /* 1205 */ "r6\0"
  /* 1208 */ "gpmucnt6\0"
  /* 1217 */ "v6\0"
  /* 1220 */ "__10000007\0"
  /* 1231 */ "__1000007\0"
  /* 1241 */ "__10000017\0"
  /* 1252 */ "__1000017\0"
  /* 1262 */ "v16:17\0"
  /* 1269 */ "r17\0"
  /* 1273 */ "v17\0"
  /* 1277 */ "__10000027\0"
  /* 1288 */ "__1000027\0"
  /* 1298 */ "v26:27\0"
  /* 1305 */ "r27\0"
  /* 1309 */ "v27\0"
  /* 1313 */ "v6:7\0"
  /* 1318 */ "g7\0"
  /* 1321 */ "r7\0"
  /* 1324 */ "gpmucnt7\0"
  /* 1333 */ "v7\0"
  /* 1336 */ "__10000008\0"
  /* 1347 */ "__1000008\0"
  /* 1357 */ "__10000018\0"
  /* 1368 */ "__1000018\0"
  /* 1378 */ "c19:18\0"
  /* 1385 */ "g19:18\0"
  /* 1392 */ "r19:18\0"
  /* 1399 */ "v19:18\0"
  /* 1406 */ "r18\0"
  /* 1410 */ "v18\0"
  /* 1414 */ "__10000028\0"
  /* 1425 */ "__1000028\0"
  /* 1435 */ "v31:28\0"
  /* 1442 */ "g29:28\0"
  /* 1449 */ "r29:28\0"
  /* 1456 */ "v29:28\0"
  /* 1463 */ "r28\0"
  /* 1467 */ "v28\0"
  /* 1471 */ "v11:8\0"
  /* 1477 */ "c9:8\0"
  /* 1482 */ "g9:8\0"
  /* 1487 */ "r9:8\0"
  /* 1492 */ "v9:8\0"
  /* 1497 */ "c8\0"
  /* 1500 */ "g8\0"
  /* 1503 */ "r8\0"
  /* 1506 */ "v8\0"
  /* 1509 */ "__10000009\0"
  /* 1520 */ "__1000009\0"
  /* 1530 */ "__10000019\0"
  /* 1541 */ "__1000019\0"
  /* 1551 */ "v18:19\0"
  /* 1558 */ "r19\0"
  /* 1562 */ "v19\0"
  /* 1566 */ "__10000029\0"
  /* 1577 */ "__1000029\0"
  /* 1587 */ "v28:29\0"
  /* 1594 */ "r29\0"
  /* 1598 */ "v29\0"
  /* 1602 */ "__9999999\0"
  /* 1612 */ "__999999\0"
  /* 1621 */ "v8:9\0"
  /* 1626 */ "g9\0"
  /* 1629 */ "r9\0"
  /* 1632 */ "v9\0"
  /* 1635 */ "gbadva\0"
  /* 1642 */ "pc\0"
  /* 1645 */ "usr.ovf\0"
  /* 1653 */ "gpcyclehi\0"
  /* 1663 */ "upcyclehi\0"
  /* 1673 */ "utimerhi\0"
  /* 1682 */ "pktcounthi\0"
  /* 1693 */ "gpcyclelo\0"
  /* 1703 */ "upcyclelo\0"
  /* 1713 */ "utimerlo\0"
  /* 1722 */ "pktcountlo\0"
  /* 1733 */ "ugp\0"
  /* 1737 */ "vtmp\0"
  /* 1742 */ "gosp\0"
  /* 1747 */ "gelr\0"
  /* 1752 */ "gsr\0"
  /* 1756 */ "usr\0"
  /* 1760 */ "framelimit\0"
  /* 1771 */ "framekey\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint16_t RegAsmOffset[] = {
    473, 1771, 1760, 1747, 1742, 1734, 1653, 1693, 1752, 1642, 1378, 1682, 1722, 1733, 
    784, 1663, 1703, 1756, 1645, 164, 1673, 1713, 1737, 1026, 1497, 254, 415, 214, 
    584, 891, 1192, 1487, 56, 487, 798, 1103, 1392, 110, 548, 852, 1160, 1449, 
    178, 1635, 906, 1029, 1202, 1318, 1500, 1626, 70, 319, 508, 664, 812, 973, 
    131, 359, 562, 704, 192, 378, 258, 419, 603, 730, 912, 1035, 1208, 1324, 
    238, 399, 242, 403, 245, 406, 594, 721, 248, 409, 597, 724, 251, 412, 
    600, 727, 909, 1032, 1205, 1321, 1503, 1629, 74, 323, 512, 668, 816, 977, 
    1124, 1269, 1406, 1558, 135, 363, 566, 708, 873, 1013, 1174, 1305, 1463, 1594, 
    196, 382, 234, 395, 267, 428, 612, 739, 921, 1044, 1217, 1333, 1506, 1632, 
    78, 327, 516, 672, 820, 981, 1128, 1273, 1410, 1562, 139, 367, 570, 712, 
    877, 1017, 1178, 1309, 1467, 1598, 200, 386, 1612, 11, 281, 442, 626, 753, 
    935, 1058, 1231, 1347, 1520, 32, 302, 463, 647, 774, 956, 1079, 1252, 1368, 
    1541, 93, 342, 531, 687, 835, 996, 1143, 1288, 1425, 1577, 154, 1602, 0, 
    270, 431, 615, 742, 924, 1047, 1220, 1336, 1509, 21, 291, 452, 636, 763, 
    945, 1068, 1241, 1357, 1530, 82, 331, 520, 676, 824, 985, 1132, 1277, 1414, 
    1566, 143, 229, 901, 1471, 501, 1117, 124, 866, 1435, 219, 589, 896, 1197, 
    1492, 63, 494, 805, 1110, 1399, 117, 555, 859, 1167, 1456, 185, 390, 716, 
    1021, 1313, 1621, 312, 657, 966, 1262, 1551, 352, 697, 1006, 1298, 1587, 371, 
    204, 574, 881, 1182, 1477, 42, 1089, 209, 579, 886, 1187, 1482, 49, 480, 
    791, 1096, 1385, 103, 541, 845, 1153, 1442, 171, 224, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool HexagonInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {Hexagon::A2_andir, 0, 1 },
    {Hexagon::A2_paddif, 1, 1 },
    {Hexagon::A2_paddifnew, 2, 1 },
    {Hexagon::A2_paddit, 3, 1 },
    {Hexagon::A2_padditnew, 4, 1 },
    {Hexagon::A2_subri, 5, 2 },
    {Hexagon::A2_vaddub, 7, 1 },
    {Hexagon::A2_vsubub, 8, 1 },
    {Hexagon::C2_cmpgt, 9, 1 },
    {Hexagon::C2_cmpgtu, 10, 1 },
    {Hexagon::C2_or, 11, 1 },
    {Hexagon::J2_jumpf, 12, 1 },
    {Hexagon::J2_jumprf, 13, 1 },
    {Hexagon::J2_jumprt, 14, 1 },
    {Hexagon::J2_jumpt, 15, 1 },
    {Hexagon::J2_trap1, 16, 1 },
    {Hexagon::L2_deallocframe, 17, 1 },
    {Hexagon::L2_loadalignb_io, 18, 1 },
    {Hexagon::L2_loadalignh_io, 19, 1 },
    {Hexagon::L2_loadbsw2_io, 20, 1 },
    {Hexagon::L2_loadbsw4_io, 21, 1 },
    {Hexagon::L2_loadbzw2_io, 22, 1 },
    {Hexagon::L2_loadbzw4_io, 23, 1 },
    {Hexagon::L2_loadrb_io, 24, 1 },
    {Hexagon::L2_loadrd_io, 25, 1 },
    {Hexagon::L2_loadrh_io, 26, 1 },
    {Hexagon::L2_loadri_io, 27, 1 },
    {Hexagon::L2_loadrub_io, 28, 1 },
    {Hexagon::L2_loadruh_io, 29, 1 },
    {Hexagon::L2_ploadrbf_io, 30, 1 },
    {Hexagon::L2_ploadrbfnew_io, 31, 1 },
    {Hexagon::L2_ploadrbt_io, 32, 1 },
    {Hexagon::L2_ploadrbtnew_io, 33, 1 },
    {Hexagon::L2_ploadrdf_io, 34, 1 },
    {Hexagon::L2_ploadrdfnew_io, 35, 1 },
    {Hexagon::L2_ploadrdt_io, 36, 1 },
    {Hexagon::L2_ploadrdtnew_io, 37, 1 },
    {Hexagon::L2_ploadrhf_io, 38, 1 },
    {Hexagon::L2_ploadrhfnew_io, 39, 1 },
    {Hexagon::L2_ploadrht_io, 40, 1 },
    {Hexagon::L2_ploadrhtnew_io, 41, 1 },
    {Hexagon::L2_ploadrif_io, 42, 1 },
    {Hexagon::L2_ploadrifnew_io, 43, 1 },
    {Hexagon::L2_ploadrit_io, 44, 1 },
    {Hexagon::L2_ploadritnew_io, 45, 1 },
    {Hexagon::L2_ploadrubf_io, 46, 1 },
    {Hexagon::L2_ploadrubfnew_io, 47, 1 },
    {Hexagon::L2_ploadrubt_io, 48, 1 },
    {Hexagon::L2_ploadrubtnew_io, 49, 1 },
    {Hexagon::L2_ploadruhf_io, 50, 1 },
    {Hexagon::L2_ploadruhfnew_io, 51, 1 },
    {Hexagon::L2_ploadruht_io, 52, 1 },
    {Hexagon::L2_ploadruhtnew_io, 53, 1 },
    {Hexagon::L4_add_memopb_io, 54, 1 },
    {Hexagon::L4_add_memoph_io, 55, 1 },
    {Hexagon::L4_add_memopw_io, 56, 1 },
    {Hexagon::L4_and_memopb_io, 57, 1 },
    {Hexagon::L4_and_memoph_io, 58, 1 },
    {Hexagon::L4_and_memopw_io, 59, 1 },
    {Hexagon::L4_iadd_memopb_io, 60, 1 },
    {Hexagon::L4_iadd_memoph_io, 61, 1 },
    {Hexagon::L4_iadd_memopw_io, 62, 1 },
    {Hexagon::L4_iand_memopb_io, 63, 1 },
    {Hexagon::L4_iand_memoph_io, 64, 1 },
    {Hexagon::L4_iand_memopw_io, 65, 1 },
    {Hexagon::L4_ior_memopb_io, 66, 1 },
    {Hexagon::L4_ior_memoph_io, 67, 1 },
    {Hexagon::L4_ior_memopw_io, 68, 1 },
    {Hexagon::L4_isub_memopb_io, 69, 1 },
    {Hexagon::L4_isub_memoph_io, 70, 1 },
    {Hexagon::L4_isub_memopw_io, 71, 1 },
    {Hexagon::L4_or_memopb_io, 72, 1 },
    {Hexagon::L4_or_memoph_io, 73, 1 },
    {Hexagon::L4_or_memopw_io, 74, 1 },
    {Hexagon::L4_return, 75, 1 },
    {Hexagon::L4_return_f, 76, 1 },
    {Hexagon::L4_return_fnew_pnt, 77, 1 },
    {Hexagon::L4_return_fnew_pt, 78, 1 },
    {Hexagon::L4_return_t, 79, 1 },
    {Hexagon::L4_return_tnew_pnt, 80, 1 },
    {Hexagon::L4_return_tnew_pt, 81, 1 },
    {Hexagon::L4_sub_memopb_io, 82, 1 },
    {Hexagon::L4_sub_memoph_io, 83, 1 },
    {Hexagon::L4_sub_memopw_io, 84, 1 },
    {Hexagon::M2_mpyi, 85, 1 },
    {Hexagon::M7_dcmpyrwc, 86, 1 },
    {Hexagon::M7_dcmpyrwc_acc, 87, 1 },
    {Hexagon::S2_allocframe, 88, 1 },
    {Hexagon::S2_pstorerbf_io, 89, 1 },
    {Hexagon::S2_pstorerbnewf_io, 90, 1 },
    {Hexagon::S2_pstorerbnewt_io, 91, 1 },
    {Hexagon::S2_pstorerbt_io, 92, 1 },
    {Hexagon::S2_pstorerdf_io, 93, 1 },
    {Hexagon::S2_pstorerdt_io, 94, 1 },
    {Hexagon::S2_pstorerff_io, 95, 1 },
    {Hexagon::S2_pstorerft_io, 96, 1 },
    {Hexagon::S2_pstorerhf_io, 97, 1 },
    {Hexagon::S2_pstorerhnewf_io, 98, 1 },
    {Hexagon::S2_pstorerhnewt_io, 99, 1 },
    {Hexagon::S2_pstorerht_io, 100, 1 },
    {Hexagon::S2_pstorerif_io, 101, 1 },
    {Hexagon::S2_pstorerinewf_io, 102, 1 },
    {Hexagon::S2_pstorerinewt_io, 103, 1 },
    {Hexagon::S2_pstorerit_io, 104, 1 },
    {Hexagon::S2_storerb_io, 105, 1 },
    {Hexagon::S2_storerbnew_io, 106, 1 },
    {Hexagon::S2_storerd_io, 107, 1 },
    {Hexagon::S2_storerf_io, 108, 1 },
    {Hexagon::S2_storerh_io, 109, 1 },
    {Hexagon::S2_storerhnew_io, 110, 1 },
    {Hexagon::S2_storeri_io, 111, 1 },
    {Hexagon::S2_storerinew_io, 112, 1 },
    {Hexagon::S2_tableidxb, 113, 1 },
    {Hexagon::S4_pstorerbfnew_io, 114, 1 },
    {Hexagon::S4_pstorerbnewfnew_io, 115, 1 },
    {Hexagon::S4_pstorerbnewtnew_io, 116, 1 },
    {Hexagon::S4_pstorerbtnew_io, 117, 1 },
    {Hexagon::S4_pstorerdfnew_io, 118, 1 },
    {Hexagon::S4_pstorerdtnew_io, 119, 1 },
    {Hexagon::S4_pstorerffnew_io, 120, 1 },
    {Hexagon::S4_pstorerftnew_io, 121, 1 },
    {Hexagon::S4_pstorerhfnew_io, 122, 1 },
    {Hexagon::S4_pstorerhnewfnew_io, 123, 1 },
    {Hexagon::S4_pstorerhnewtnew_io, 124, 1 },
    {Hexagon::S4_pstorerhtnew_io, 125, 1 },
    {Hexagon::S4_pstorerifnew_io, 126, 1 },
    {Hexagon::S4_pstorerinewfnew_io, 127, 1 },
    {Hexagon::S4_pstorerinewtnew_io, 128, 1 },
    {Hexagon::S4_pstoreritnew_io, 129, 1 },
    {Hexagon::S4_storeirb_io, 130, 1 },
    {Hexagon::S4_storeirbf_io, 131, 1 },
    {Hexagon::S4_storeirbfnew_io, 132, 1 },
    {Hexagon::S4_storeirbt_io, 133, 1 },
    {Hexagon::S4_storeirbtnew_io, 134, 1 },
    {Hexagon::S4_storeirh_io, 135, 1 },
    {Hexagon::S4_storeirhf_io, 136, 1 },
    {Hexagon::S4_storeirhfnew_io, 137, 1 },
    {Hexagon::S4_storeirht_io, 138, 1 },
    {Hexagon::S4_storeirhtnew_io, 139, 1 },
    {Hexagon::S4_storeiri_io, 140, 1 },
    {Hexagon::S4_storeirif_io, 141, 1 },
    {Hexagon::S4_storeirifnew_io, 142, 1 },
    {Hexagon::S4_storeirit_io, 143, 1 },
    {Hexagon::S4_storeiritnew_io, 144, 1 },
    {Hexagon::V6_extractw, 145, 1 },
    {Hexagon::V6_v6mpyhubs10, 146, 1 },
    {Hexagon::V6_v6mpyvubs10, 147, 1 },
    {Hexagon::V6_vL32Ub_ai, 148, 1 },
    {Hexagon::V6_vL32b_ai, 149, 1 },
    {Hexagon::V6_vL32b_cur_npred_pi, 150, 1 },
    {Hexagon::V6_vL32b_cur_pred_pi, 151, 1 },
    {Hexagon::V6_vL32b_npred_ai, 152, 1 },
    {Hexagon::V6_vL32b_npred_pi, 153, 1 },
    {Hexagon::V6_vL32b_nt_cur_npred_pi, 154, 1 },
    {Hexagon::V6_vL32b_nt_cur_pred_pi, 155, 1 },
    {Hexagon::V6_vL32b_nt_npred_ai, 156, 1 },
    {Hexagon::V6_vL32b_nt_npred_pi, 157, 1 },
    {Hexagon::V6_vL32b_nt_pred_ai, 158, 1 },
    {Hexagon::V6_vL32b_nt_tmp_pred_ai, 159, 1 },
    {Hexagon::V6_vL32b_pred_ai, 160, 1 },
    {Hexagon::V6_vL32b_tmp_pred_ai, 161, 1 },
    {Hexagon::V6_vS32Ub_ai, 162, 1 },
    {Hexagon::V6_vS32Ub_npred_ai, 163, 1 },
    {Hexagon::V6_vS32Ub_pred_ai, 164, 1 },
    {Hexagon::V6_vS32b_ai, 165, 1 },
    {Hexagon::V6_vS32b_new_ai, 166, 1 },
    {Hexagon::V6_vS32b_npred_ai, 167, 1 },
    {Hexagon::V6_vS32b_nqpred_ai, 168, 1 },
    {Hexagon::V6_vS32b_nt_ai, 169, 1 },
    {Hexagon::V6_vS32b_nt_new_ai, 170, 1 },
    {Hexagon::V6_vS32b_nt_npred_ai, 171, 1 },
    {Hexagon::V6_vS32b_nt_nqpred_ai, 172, 1 },
    {Hexagon::V6_vS32b_nt_pred_ai, 173, 1 },
    {Hexagon::V6_vS32b_nt_qpred_ai, 174, 1 },
    {Hexagon::V6_vS32b_pred_ai, 175, 1 },
    {Hexagon::V6_vS32b_qpred_ai, 176, 1 },
    {Hexagon::V6_vabsb_sat, 177, 1 },
    {Hexagon::V6_vabsdiffh, 178, 1 },
    {Hexagon::V6_vabsdiffub, 179, 1 },
    {Hexagon::V6_vabsdiffuh, 180, 1 },
    {Hexagon::V6_vabsdiffw, 181, 1 },
    {Hexagon::V6_vabsh_sat, 182, 1 },
    {Hexagon::V6_vabsw_sat, 183, 1 },
    {Hexagon::V6_vaddb, 184, 1 },
    {Hexagon::V6_vaddb_dv, 185, 1 },
    {Hexagon::V6_vaddbnq, 186, 1 },
    {Hexagon::V6_vaddbq, 187, 1 },
    {Hexagon::V6_vaddbsat, 188, 1 },
    {Hexagon::V6_vaddbsat_dv, 189, 1 },
    {Hexagon::V6_vaddh, 190, 1 },
    {Hexagon::V6_vaddh_dv, 191, 1 },
    {Hexagon::V6_vaddhnq, 192, 1 },
    {Hexagon::V6_vaddhq, 193, 1 },
    {Hexagon::V6_vaddhsat, 194, 1 },
    {Hexagon::V6_vaddhsat_dv, 195, 1 },
    {Hexagon::V6_vaddhw, 196, 1 },
    {Hexagon::V6_vaddhw_acc, 197, 1 },
    {Hexagon::V6_vaddubh, 198, 1 },
    {Hexagon::V6_vaddubh_acc, 199, 1 },
    {Hexagon::V6_vaddubsat, 200, 1 },
    {Hexagon::V6_vaddubsat_dv, 201, 1 },
    {Hexagon::V6_vadduhsat, 202, 1 },
    {Hexagon::V6_vadduhsat_dv, 203, 1 },
    {Hexagon::V6_vadduhw, 204, 1 },
    {Hexagon::V6_vadduhw_acc, 205, 1 },
    {Hexagon::V6_vadduwsat, 206, 1 },
    {Hexagon::V6_vadduwsat_dv, 207, 1 },
    {Hexagon::V6_vaddw, 208, 1 },
    {Hexagon::V6_vaddw_dv, 209, 1 },
    {Hexagon::V6_vaddwnq, 210, 1 },
    {Hexagon::V6_vaddwq, 211, 1 },
    {Hexagon::V6_vaddwsat, 212, 1 },
    {Hexagon::V6_vaddwsat_dv, 213, 1 },
    {Hexagon::V6_vandnqrt, 214, 1 },
    {Hexagon::V6_vandnqrt_acc, 215, 1 },
    {Hexagon::V6_vandqrt, 216, 1 },
    {Hexagon::V6_vandqrt_acc, 217, 1 },
    {Hexagon::V6_vandvrt, 218, 1 },
    {Hexagon::V6_vandvrt_acc, 219, 1 },
    {Hexagon::V6_vaslh, 220, 1 },
    {Hexagon::V6_vaslh_acc, 221, 1 },
    {Hexagon::V6_vaslhv, 222, 1 },
    {Hexagon::V6_vaslw, 223, 1 },
    {Hexagon::V6_vaslw_acc, 224, 1 },
    {Hexagon::V6_vaslwv, 225, 1 },
    {Hexagon::V6_vasr_into, 226, 1 },
    {Hexagon::V6_vasrh, 227, 1 },
    {Hexagon::V6_vasrh_acc, 228, 1 },
    {Hexagon::V6_vasrhv, 229, 1 },
    {Hexagon::V6_vasrw, 230, 1 },
    {Hexagon::V6_vasrw_acc, 231, 1 },
    {Hexagon::V6_vasrwv, 232, 1 },
    {Hexagon::V6_vavgb, 233, 1 },
    {Hexagon::V6_vavgbrnd, 234, 1 },
    {Hexagon::V6_vavgh, 235, 1 },
    {Hexagon::V6_vavghrnd, 236, 1 },
    {Hexagon::V6_vavgub, 237, 1 },
    {Hexagon::V6_vavgubrnd, 238, 1 },
    {Hexagon::V6_vavguh, 239, 1 },
    {Hexagon::V6_vavguhrnd, 240, 1 },
    {Hexagon::V6_vavguw, 241, 1 },
    {Hexagon::V6_vavguwrnd, 242, 1 },
    {Hexagon::V6_vavgw, 243, 1 },
    {Hexagon::V6_vavgwrnd, 244, 1 },
    {Hexagon::V6_vcl0h, 245, 1 },
    {Hexagon::V6_vcl0w, 246, 1 },
    {Hexagon::V6_vdealb, 247, 1 },
    {Hexagon::V6_vdealb4w, 248, 1 },
    {Hexagon::V6_vdealh, 249, 1 },
    {Hexagon::V6_vdmpybus, 250, 1 },
    {Hexagon::V6_vdmpybus_acc, 251, 1 },
    {Hexagon::V6_vdmpybus_dv, 252, 1 },
    {Hexagon::V6_vdmpybus_dv_acc, 253, 1 },
    {Hexagon::V6_vdmpyhb, 254, 1 },
    {Hexagon::V6_vdmpyhb_acc, 255, 1 },
    {Hexagon::V6_vdmpyhb_dv, 256, 1 },
    {Hexagon::V6_vdmpyhb_dv_acc, 257, 1 },
    {Hexagon::V6_vdmpyhisat, 258, 1 },
    {Hexagon::V6_vdmpyhisat_acc, 259, 1 },
    {Hexagon::V6_vdmpyhsat, 260, 1 },
    {Hexagon::V6_vdmpyhsat_acc, 261, 1 },
    {Hexagon::V6_vdmpyhsuisat, 262, 1 },
    {Hexagon::V6_vdmpyhsuisat_acc, 263, 1 },
    {Hexagon::V6_vdmpyhsusat, 264, 1 },
    {Hexagon::V6_vdmpyhsusat_acc, 265, 1 },
    {Hexagon::V6_vdmpyhvsat, 266, 1 },
    {Hexagon::V6_vdmpyhvsat_acc, 267, 1 },
    {Hexagon::V6_vdsaduh, 268, 1 },
    {Hexagon::V6_vdsaduh_acc, 269, 1 },
    {Hexagon::V6_veqb, 270, 1 },
    {Hexagon::V6_veqb_and, 271, 1 },
    {Hexagon::V6_veqb_or, 272, 1 },
    {Hexagon::V6_veqb_xor, 273, 1 },
    {Hexagon::V6_veqh, 274, 1 },
    {Hexagon::V6_veqh_and, 275, 1 },
    {Hexagon::V6_veqh_or, 276, 1 },
    {Hexagon::V6_veqh_xor, 277, 1 },
    {Hexagon::V6_veqw, 278, 1 },
    {Hexagon::V6_veqw_and, 279, 1 },
    {Hexagon::V6_veqw_or, 280, 1 },
    {Hexagon::V6_veqw_xor, 281, 1 },
    {Hexagon::V6_vlsrh, 282, 1 },
    {Hexagon::V6_vlsrhv, 283, 1 },
    {Hexagon::V6_vlsrw, 284, 1 },
    {Hexagon::V6_vlsrwv, 285, 1 },
    {Hexagon::V6_vmaxb, 286, 1 },
    {Hexagon::V6_vmaxh, 287, 1 },
    {Hexagon::V6_vmaxub, 288, 1 },
    {Hexagon::V6_vmaxuh, 289, 1 },
    {Hexagon::V6_vmaxw, 290, 1 },
    {Hexagon::V6_vminb, 291, 1 },
    {Hexagon::V6_vminh, 292, 1 },
    {Hexagon::V6_vminub, 293, 1 },
    {Hexagon::V6_vminuh, 294, 1 },
    {Hexagon::V6_vminw, 295, 1 },
    {Hexagon::V6_vmpabus, 296, 1 },
    {Hexagon::V6_vmpabus_acc, 297, 1 },
    {Hexagon::V6_vmpabusv, 298, 1 },
    {Hexagon::V6_vmpabuu, 299, 1 },
    {Hexagon::V6_vmpabuu_acc, 300, 1 },
    {Hexagon::V6_vmpabuuv, 301, 1 },
    {Hexagon::V6_vmpahb, 302, 1 },
    {Hexagon::V6_vmpahb_acc, 303, 1 },
    {Hexagon::V6_vmpauhb, 304, 1 },
    {Hexagon::V6_vmpauhb_acc, 305, 1 },
    {Hexagon::V6_vmpybus, 306, 1 },
    {Hexagon::V6_vmpybus_acc, 307, 1 },
    {Hexagon::V6_vmpybusv, 308, 1 },
    {Hexagon::V6_vmpybusv_acc, 309, 1 },
    {Hexagon::V6_vmpybv, 310, 1 },
    {Hexagon::V6_vmpybv_acc, 311, 1 },
    {Hexagon::V6_vmpyewuh, 312, 1 },
    {Hexagon::V6_vmpyh, 313, 1 },
    {Hexagon::V6_vmpyh_acc, 314, 1 },
    {Hexagon::V6_vmpyhsat_acc, 315, 1 },
    {Hexagon::V6_vmpyhsrs, 316, 1 },
    {Hexagon::V6_vmpyhss, 317, 1 },
    {Hexagon::V6_vmpyhus, 318, 1 },
    {Hexagon::V6_vmpyhus_acc, 319, 1 },
    {Hexagon::V6_vmpyhv, 320, 1 },
    {Hexagon::V6_vmpyhv_acc, 321, 1 },
    {Hexagon::V6_vmpyhvsrs, 322, 1 },
    {Hexagon::V6_vmpyiewh_acc, 323, 1 },
    {Hexagon::V6_vmpyiewuh, 324, 1 },
    {Hexagon::V6_vmpyiewuh_acc, 325, 1 },
    {Hexagon::V6_vmpyih, 326, 1 },
    {Hexagon::V6_vmpyih_acc, 327, 1 },
    {Hexagon::V6_vmpyihb, 328, 1 },
    {Hexagon::V6_vmpyihb_acc, 329, 1 },
    {Hexagon::V6_vmpyiowh, 330, 1 },
    {Hexagon::V6_vmpyiwb, 331, 1 },
    {Hexagon::V6_vmpyiwb_acc, 332, 1 },
    {Hexagon::V6_vmpyiwh, 333, 1 },
    {Hexagon::V6_vmpyiwh_acc, 334, 1 },
    {Hexagon::V6_vmpyiwub, 335, 1 },
    {Hexagon::V6_vmpyiwub_acc, 336, 1 },
    {Hexagon::V6_vmpyowh, 337, 1 },
    {Hexagon::V6_vmpyowh_rnd, 338, 1 },
    {Hexagon::V6_vmpyub, 339, 1 },
    {Hexagon::V6_vmpyub_acc, 340, 1 },
    {Hexagon::V6_vmpyubv, 341, 1 },
    {Hexagon::V6_vmpyubv_acc, 342, 1 },
    {Hexagon::V6_vmpyuh, 343, 1 },
    {Hexagon::V6_vmpyuh_acc, 344, 1 },
    {Hexagon::V6_vmpyuhv, 345, 1 },
    {Hexagon::V6_vmpyuhv_acc, 346, 1 },
    {Hexagon::V6_vnavgb, 347, 1 },
    {Hexagon::V6_vnavgh, 348, 1 },
    {Hexagon::V6_vnavgub, 349, 1 },
    {Hexagon::V6_vnavgw, 350, 1 },
    {Hexagon::V6_vnormamth, 351, 1 },
    {Hexagon::V6_vnormamtw, 352, 1 },
    {Hexagon::V6_vpackeb, 353, 1 },
    {Hexagon::V6_vpackeh, 354, 1 },
    {Hexagon::V6_vpackhb_sat, 355, 1 },
    {Hexagon::V6_vpackhub_sat, 356, 1 },
    {Hexagon::V6_vpackob, 357, 1 },
    {Hexagon::V6_vpackoh, 358, 1 },
    {Hexagon::V6_vpackwh_sat, 359, 1 },
    {Hexagon::V6_vpackwuh_sat, 360, 1 },
    {Hexagon::V6_vpopcounth, 361, 1 },
    {Hexagon::V6_vrmpybub_rtt, 362, 1 },
    {Hexagon::V6_vrmpybub_rtt_acc, 363, 1 },
    {Hexagon::V6_vrmpybus, 364, 1 },
    {Hexagon::V6_vrmpybus_acc, 365, 1 },
    {Hexagon::V6_vrmpybusi, 366, 1 },
    {Hexagon::V6_vrmpybusi_acc, 367, 1 },
    {Hexagon::V6_vrmpybusv, 368, 1 },
    {Hexagon::V6_vrmpybusv_acc, 369, 1 },
    {Hexagon::V6_vrmpybv, 370, 1 },
    {Hexagon::V6_vrmpybv_acc, 371, 1 },
    {Hexagon::V6_vrmpyub, 372, 1 },
    {Hexagon::V6_vrmpyub_acc, 373, 1 },
    {Hexagon::V6_vrmpyub_rtt, 374, 1 },
    {Hexagon::V6_vrmpyub_rtt_acc, 375, 1 },
    {Hexagon::V6_vrmpyubi, 376, 1 },
    {Hexagon::V6_vrmpyubi_acc, 377, 1 },
    {Hexagon::V6_vrmpyubv, 378, 1 },
    {Hexagon::V6_vrmpyubv_acc, 379, 1 },
    {Hexagon::V6_vrotr, 380, 1 },
    {Hexagon::V6_vroundhb, 381, 1 },
    {Hexagon::V6_vroundhub, 382, 1 },
    {Hexagon::V6_vrounduhub, 383, 1 },
    {Hexagon::V6_vrounduwuh, 384, 1 },
    {Hexagon::V6_vroundwh, 385, 1 },
    {Hexagon::V6_vroundwuh, 386, 1 },
    {Hexagon::V6_vrsadubi, 387, 1 },
    {Hexagon::V6_vrsadubi_acc, 388, 1 },
    {Hexagon::V6_vsathub, 389, 1 },
    {Hexagon::V6_vsatuwuh, 390, 1 },
    {Hexagon::V6_vsatwh, 391, 1 },
    {Hexagon::V6_vsb, 392, 1 },
    {Hexagon::V6_vscattermh, 393, 1 },
    {Hexagon::V6_vscattermh_add, 394, 1 },
    {Hexagon::V6_vscattermhq, 395, 1 },
    {Hexagon::V6_vscattermhw, 396, 1 },
    {Hexagon::V6_vscattermhw_add, 397, 1 },
    {Hexagon::V6_vscattermhwq, 398, 1 },
    {Hexagon::V6_vscattermw, 399, 1 },
    {Hexagon::V6_vscattermw_add, 400, 1 },
    {Hexagon::V6_vscattermwq, 401, 1 },
    {Hexagon::V6_vsh, 402, 1 },
    {Hexagon::V6_vshufeh, 403, 1 },
    {Hexagon::V6_vshuff, 404, 1 },
    {Hexagon::V6_vshuffb, 405, 1 },
    {Hexagon::V6_vshuffeb, 406, 1 },
    {Hexagon::V6_vshuffh, 407, 1 },
    {Hexagon::V6_vshuffob, 408, 1 },
    {Hexagon::V6_vshufoeb, 409, 1 },
    {Hexagon::V6_vshufoeh, 410, 1 },
    {Hexagon::V6_vshufoh, 411, 1 },
    {Hexagon::V6_vsubb, 412, 1 },
    {Hexagon::V6_vsubb_dv, 413, 1 },
    {Hexagon::V6_vsubbnq, 414, 1 },
    {Hexagon::V6_vsubbq, 415, 1 },
    {Hexagon::V6_vsubbsat, 416, 1 },
    {Hexagon::V6_vsubbsat_dv, 417, 1 },
    {Hexagon::V6_vsubh, 418, 1 },
    {Hexagon::V6_vsubh_dv, 419, 1 },
    {Hexagon::V6_vsubhnq, 420, 1 },
    {Hexagon::V6_vsubhq, 421, 1 },
    {Hexagon::V6_vsubhsat, 422, 1 },
    {Hexagon::V6_vsubhsat_dv, 423, 1 },
    {Hexagon::V6_vsubhw, 424, 1 },
    {Hexagon::V6_vsububh, 425, 1 },
    {Hexagon::V6_vsububsat, 426, 1 },
    {Hexagon::V6_vsububsat_dv, 427, 1 },
    {Hexagon::V6_vsubuhsat, 428, 1 },
    {Hexagon::V6_vsubuhsat_dv, 429, 1 },
    {Hexagon::V6_vsubuhw, 430, 1 },
    {Hexagon::V6_vsubuwsat, 431, 1 },
    {Hexagon::V6_vsubuwsat_dv, 432, 1 },
    {Hexagon::V6_vsubw, 433, 1 },
    {Hexagon::V6_vsubw_dv, 434, 2 },
    {Hexagon::V6_vsubwnq, 436, 1 },
    {Hexagon::V6_vsubwq, 437, 1 },
    {Hexagon::V6_vsubwsat, 438, 1 },
    {Hexagon::V6_vsubwsat_dv, 439, 1 },
    {Hexagon::V6_vtmpyb, 440, 1 },
    {Hexagon::V6_vtmpyb_acc, 441, 1 },
    {Hexagon::V6_vtmpybus, 442, 1 },
    {Hexagon::V6_vtmpybus_acc, 443, 1 },
    {Hexagon::V6_vtmpyhb, 444, 1 },
    {Hexagon::V6_vtmpyhb_acc, 445, 1 },
    {Hexagon::V6_vunpackb, 446, 1 },
    {Hexagon::V6_vunpackh, 447, 1 },
    {Hexagon::V6_vunpackoh, 448, 1 },
    {Hexagon::V6_vunpackub, 449, 1 },
    {Hexagon::V6_vunpackuh, 450, 1 },
    {Hexagon::V6_vxor, 451, 1 },
    {Hexagon::V6_vzb, 452, 1 },
    {Hexagon::V6_vzh, 453, 1 },
    {Hexagon::V6_zLd_ai, 454, 1 },
    {Hexagon::V6_zLd_pred_ai, 455, 1 },
    {Hexagon::Y2_dcfetchbo, 456, 1 },
  };

  static const AliasPattern Patterns[] = {
    // Hexagon::A2_andir - 0
    {0, 0, 3, 3 },
    // Hexagon::A2_paddif - 1
    {14, 3, 4, 4 },
    // Hexagon::A2_paddifnew - 2
    {31, 7, 4, 4 },
    // Hexagon::A2_paddit - 3
    {52, 11, 4, 4 },
    // Hexagon::A2_padditnew - 4
    {68, 15, 4, 4 },
    // Hexagon::A2_subri - 5
    {88, 19, 3, 3 },
    {101, 22, 3, 3 },
    // Hexagon::A2_vaddub - 7
    {114, 25, 3, 3 },
    // Hexagon::A2_vsubub - 8
    {132, 28, 3, 3 },
    // Hexagon::C2_cmpgt - 9
    {150, 31, 3, 3 },
    // Hexagon::C2_cmpgtu - 10
    {169, 34, 3, 3 },
    // Hexagon::C2_or - 11
    {189, 37, 3, 3 },
    // Hexagon::J2_jumpf - 12
    {197, 40, 2, 1 },
    // Hexagon::J2_jumprf - 13
    {216, 41, 2, 2 },
    // Hexagon::J2_jumprt - 14
    {234, 43, 2, 2 },
    // Hexagon::J2_jumpt - 15
    {251, 45, 2, 1 },
    // Hexagon::J2_trap1 - 16
    {269, 46, 3, 2 },
    // Hexagon::L2_deallocframe - 17
    {280, 48, 2, 2 },
    // Hexagon::L2_loadalignb_io - 18
    {293, 50, 4, 4 },
    // Hexagon::L2_loadalignh_io - 19
    {312, 54, 4, 4 },
    // Hexagon::L2_loadbsw2_io - 20
    {331, 58, 3, 3 },
    // Hexagon::L2_loadbsw4_io - 21
    {331, 61, 3, 3 },
    // Hexagon::L2_loadbzw2_io - 22
    {346, 64, 3, 3 },
    // Hexagon::L2_loadbzw4_io - 23
    {346, 67, 3, 3 },
    // Hexagon::L2_loadrb_io - 24
    {362, 70, 3, 3 },
    // Hexagon::L2_loadrd_io - 25
    {376, 73, 3, 3 },
    // Hexagon::L2_loadrh_io - 26
    {390, 76, 3, 3 },
    // Hexagon::L2_loadri_io - 27
    {404, 79, 3, 3 },
    // Hexagon::L2_loadrub_io - 28
    {418, 82, 3, 3 },
    // Hexagon::L2_loadruh_io - 29
    {433, 85, 3, 3 },
    // Hexagon::L2_ploadrbf_io - 30
    {448, 88, 4, 4 },
    // Hexagon::L2_ploadrbfnew_io - 31
    {471, 92, 4, 4 },
    // Hexagon::L2_ploadrbt_io - 32
    {498, 96, 4, 4 },
    // Hexagon::L2_ploadrbtnew_io - 33
    {520, 100, 4, 4 },
    // Hexagon::L2_ploadrdf_io - 34
    {546, 104, 4, 4 },
    // Hexagon::L2_ploadrdfnew_io - 35
    {569, 108, 4, 4 },
    // Hexagon::L2_ploadrdt_io - 36
    {596, 112, 4, 4 },
    // Hexagon::L2_ploadrdtnew_io - 37
    {618, 116, 4, 4 },
    // Hexagon::L2_ploadrhf_io - 38
    {644, 120, 4, 4 },
    // Hexagon::L2_ploadrhfnew_io - 39
    {667, 124, 4, 4 },
    // Hexagon::L2_ploadrht_io - 40
    {694, 128, 4, 4 },
    // Hexagon::L2_ploadrhtnew_io - 41
    {716, 132, 4, 4 },
    // Hexagon::L2_ploadrif_io - 42
    {742, 136, 4, 4 },
    // Hexagon::L2_ploadrifnew_io - 43
    {765, 140, 4, 4 },
    // Hexagon::L2_ploadrit_io - 44
    {792, 144, 4, 4 },
    // Hexagon::L2_ploadritnew_io - 45
    {814, 148, 4, 4 },
    // Hexagon::L2_ploadrubf_io - 46
    {840, 152, 4, 4 },
    // Hexagon::L2_ploadrubfnew_io - 47
    {864, 156, 4, 4 },
    // Hexagon::L2_ploadrubt_io - 48
    {892, 160, 4, 4 },
    // Hexagon::L2_ploadrubtnew_io - 49
    {915, 164, 4, 4 },
    // Hexagon::L2_ploadruhf_io - 50
    {942, 168, 4, 4 },
    // Hexagon::L2_ploadruhfnew_io - 51
    {966, 172, 4, 4 },
    // Hexagon::L2_ploadruht_io - 52
    {994, 176, 4, 4 },
    // Hexagon::L2_ploadruhtnew_io - 53
    {1017, 180, 4, 4 },
    // Hexagon::L4_add_memopb_io - 54
    {1044, 184, 3, 3 },
    // Hexagon::L4_add_memoph_io - 55
    {1059, 187, 3, 3 },
    // Hexagon::L4_add_memopw_io - 56
    {1074, 190, 3, 3 },
    // Hexagon::L4_and_memopb_io - 57
    {1089, 193, 3, 3 },
    // Hexagon::L4_and_memoph_io - 58
    {1104, 196, 3, 3 },
    // Hexagon::L4_and_memopw_io - 59
    {1119, 199, 3, 3 },
    // Hexagon::L4_iadd_memopb_io - 60
    {1134, 202, 3, 2 },
    // Hexagon::L4_iadd_memoph_io - 61
    {1150, 204, 3, 2 },
    // Hexagon::L4_iadd_memopw_io - 62
    {1166, 206, 3, 2 },
    // Hexagon::L4_iand_memopb_io - 63
    {1182, 208, 3, 2 },
    // Hexagon::L4_iand_memoph_io - 64
    {1205, 210, 3, 2 },
    // Hexagon::L4_iand_memopw_io - 65
    {1228, 212, 3, 2 },
    // Hexagon::L4_ior_memopb_io - 66
    {1251, 214, 3, 2 },
    // Hexagon::L4_ior_memoph_io - 67
    {1274, 216, 3, 2 },
    // Hexagon::L4_ior_memopw_io - 68
    {1297, 218, 3, 2 },
    // Hexagon::L4_isub_memopb_io - 69
    {1320, 220, 3, 2 },
    // Hexagon::L4_isub_memoph_io - 70
    {1336, 222, 3, 2 },
    // Hexagon::L4_isub_memopw_io - 71
    {1352, 224, 3, 2 },
    // Hexagon::L4_or_memopb_io - 72
    {1368, 226, 3, 3 },
    // Hexagon::L4_or_memoph_io - 73
    {1383, 229, 3, 3 },
    // Hexagon::L4_or_memopw_io - 74
    {1398, 232, 3, 3 },
    // Hexagon::L4_return - 75
    {1413, 235, 2, 2 },
    // Hexagon::L4_return_f - 76
    {1428, 237, 3, 3 },
    // Hexagon::L4_return_fnew_pnt - 77
    {1452, 240, 3, 3 },
    // Hexagon::L4_return_fnew_pt - 78
    {1483, 243, 3, 3 },
    // Hexagon::L4_return_t - 79
    {1513, 246, 3, 3 },
    // Hexagon::L4_return_tnew_pnt - 80
    {1536, 249, 3, 3 },
    // Hexagon::L4_return_tnew_pt - 81
    {1566, 252, 3, 3 },
    // Hexagon::L4_sub_memopb_io - 82
    {1595, 255, 3, 3 },
    // Hexagon::L4_sub_memoph_io - 83
    {1610, 258, 3, 3 },
    // Hexagon::L4_sub_memopw_io - 84
    {1625, 261, 3, 3 },
    // Hexagon::M2_mpyi - 85
    {1640, 264, 3, 3 },
    // Hexagon::M7_dcmpyrwc - 86
    {1658, 267, 3, 3 },
    // Hexagon::M7_dcmpyrwc_acc - 87
    {1677, 270, 4, 4 },
    // Hexagon::S2_allocframe - 88
    {1697, 274, 3, 2 },
    // Hexagon::S2_pstorerbf_io - 89
    {1713, 276, 4, 4 },
    // Hexagon::S2_pstorerbnewf_io - 90
    {1736, 280, 4, 4 },
    // Hexagon::S2_pstorerbnewt_io - 91
    {1763, 284, 4, 4 },
    // Hexagon::S2_pstorerbt_io - 92
    {1789, 288, 4, 4 },
    // Hexagon::S2_pstorerdf_io - 93
    {1811, 292, 4, 4 },
    // Hexagon::S2_pstorerdt_io - 94
    {1834, 296, 4, 4 },
    // Hexagon::S2_pstorerff_io - 95
    {1856, 300, 4, 4 },
    // Hexagon::S2_pstorerft_io - 96
    {1881, 304, 4, 4 },
    // Hexagon::S2_pstorerhf_io - 97
    {1905, 308, 4, 4 },
    // Hexagon::S2_pstorerhnewf_io - 98
    {1928, 312, 4, 4 },
    // Hexagon::S2_pstorerhnewt_io - 99
    {1955, 316, 4, 4 },
    // Hexagon::S2_pstorerht_io - 100
    {1981, 320, 4, 4 },
    // Hexagon::S2_pstorerif_io - 101
    {2003, 324, 4, 4 },
    // Hexagon::S2_pstorerinewf_io - 102
    {2026, 328, 4, 4 },
    // Hexagon::S2_pstorerinewt_io - 103
    {2053, 332, 4, 4 },
    // Hexagon::S2_pstorerit_io - 104
    {2079, 336, 4, 4 },
    // Hexagon::S2_storerb_io - 105
    {2101, 340, 3, 3 },
    // Hexagon::S2_storerbnew_io - 106
    {2115, 343, 3, 3 },
    // Hexagon::S2_storerd_io - 107
    {2133, 346, 3, 3 },
    // Hexagon::S2_storerf_io - 108
    {2147, 349, 3, 3 },
    // Hexagon::S2_storerh_io - 109
    {2163, 352, 3, 3 },
    // Hexagon::S2_storerhnew_io - 110
    {2177, 355, 3, 3 },
    // Hexagon::S2_storeri_io - 111
    {2195, 358, 3, 3 },
    // Hexagon::S2_storerinew_io - 112
    {2209, 361, 3, 3 },
    // Hexagon::S2_tableidxb - 113
    {2227, 364, 5, 4 },
    // Hexagon::S4_pstorerbfnew_io - 114
    {2254, 368, 4, 4 },
    // Hexagon::S4_pstorerbnewfnew_io - 115
    {2281, 372, 4, 4 },
    // Hexagon::S4_pstorerbnewtnew_io - 116
    {2312, 376, 4, 4 },
    // Hexagon::S4_pstorerbtnew_io - 117
    {2342, 380, 4, 4 },
    // Hexagon::S4_pstorerdfnew_io - 118
    {2368, 384, 4, 4 },
    // Hexagon::S4_pstorerdtnew_io - 119
    {2395, 388, 4, 4 },
    // Hexagon::S4_pstorerffnew_io - 120
    {2421, 392, 4, 4 },
    // Hexagon::S4_pstorerftnew_io - 121
    {2450, 396, 4, 4 },
    // Hexagon::S4_pstorerhfnew_io - 122
    {2478, 400, 4, 4 },
    // Hexagon::S4_pstorerhnewfnew_io - 123
    {2505, 404, 4, 4 },
    // Hexagon::S4_pstorerhnewtnew_io - 124
    {2536, 408, 4, 4 },
    // Hexagon::S4_pstorerhtnew_io - 125
    {2566, 412, 4, 4 },
    // Hexagon::S4_pstorerifnew_io - 126
    {2592, 416, 4, 4 },
    // Hexagon::S4_pstorerinewfnew_io - 127
    {2619, 420, 4, 4 },
    // Hexagon::S4_pstorerinewtnew_io - 128
    {2650, 424, 4, 4 },
    // Hexagon::S4_pstoreritnew_io - 129
    {2680, 428, 4, 4 },
    // Hexagon::S4_storeirb_io - 130
    {2706, 432, 3, 2 },
    // Hexagon::S4_storeirbf_io - 131
    {2721, 434, 4, 3 },
    // Hexagon::S4_storeirbfnew_io - 132
    {2745, 437, 4, 3 },
    // Hexagon::S4_storeirbt_io - 133
    {2773, 440, 4, 3 },
    // Hexagon::S4_storeirbtnew_io - 134
    {2796, 443, 4, 3 },
    // Hexagon::S4_storeirh_io - 135
    {2823, 446, 3, 2 },
    // Hexagon::S4_storeirhf_io - 136
    {2838, 448, 4, 3 },
    // Hexagon::S4_storeirhfnew_io - 137
    {2862, 451, 4, 3 },
    // Hexagon::S4_storeirht_io - 138
    {2890, 454, 4, 3 },
    // Hexagon::S4_storeirhtnew_io - 139
    {2913, 457, 4, 3 },
    // Hexagon::S4_storeiri_io - 140
    {2940, 460, 3, 2 },
    // Hexagon::S4_storeirif_io - 141
    {2955, 462, 4, 3 },
    // Hexagon::S4_storeirifnew_io - 142
    {2979, 465, 4, 3 },
    // Hexagon::S4_storeirit_io - 143
    {3007, 468, 4, 3 },
    // Hexagon::S4_storeiritnew_io - 144
    {3030, 471, 4, 3 },
    // Hexagon::V6_extractw - 145
    {3057, 474, 3, 3 },
    // Hexagon::V6_v6mpyhubs10 - 146
    {3080, 477, 4, 3 },
    // Hexagon::V6_v6mpyvubs10 - 147
    {3113, 480, 4, 3 },
    // Hexagon::V6_vL32Ub_ai - 148
    {3146, 483, 3, 3 },
    // Hexagon::V6_vL32b_ai - 149
    {3161, 486, 3, 3 },
    // Hexagon::V6_vL32b_cur_npred_pi - 150
    {3175, 489, 5, 5 },
    // Hexagon::V6_vL32b_cur_pred_pi - 151
    {3202, 494, 5, 5 },
    // Hexagon::V6_vL32b_npred_ai - 152
    {3228, 499, 4, 4 },
    // Hexagon::V6_vL32b_npred_pi - 153
    {3255, 503, 5, 5 },
    // Hexagon::V6_vL32b_nt_cur_npred_pi - 154
    {3278, 508, 5, 5 },
    // Hexagon::V6_vL32b_nt_cur_pred_pi - 155
    {3308, 513, 5, 5 },
    // Hexagon::V6_vL32b_nt_npred_ai - 156
    {3337, 518, 4, 4 },
    // Hexagon::V6_vL32b_nt_npred_pi - 157
    {3367, 522, 5, 5 },
    // Hexagon::V6_vL32b_nt_pred_ai - 158
    {3393, 527, 4, 4 },
    // Hexagon::V6_vL32b_nt_tmp_pred_ai - 159
    {3418, 531, 4, 4 },
    // Hexagon::V6_vL32b_pred_ai - 160
    {3447, 535, 4, 4 },
    // Hexagon::V6_vL32b_tmp_pred_ai - 161
    {3469, 539, 4, 4 },
    // Hexagon::V6_vS32Ub_ai - 162
    {3495, 543, 3, 3 },
    // Hexagon::V6_vS32Ub_npred_ai - 163
    {3510, 546, 4, 4 },
    // Hexagon::V6_vS32Ub_pred_ai - 164
    {3534, 550, 4, 4 },
    // Hexagon::V6_vS32b_ai - 165
    {3557, 554, 3, 3 },
    // Hexagon::V6_vS32b_new_ai - 166
    {3571, 557, 3, 3 },
    // Hexagon::V6_vS32b_npred_ai - 167
    {3589, 560, 4, 4 },
    // Hexagon::V6_vS32b_nqpred_ai - 168
    {3589, 564, 4, 4 },
    // Hexagon::V6_vS32b_nt_ai - 169
    {3612, 568, 3, 3 },
    // Hexagon::V6_vS32b_nt_new_ai - 170
    {3629, 571, 3, 3 },
    // Hexagon::V6_vS32b_nt_npred_ai - 171
    {3650, 574, 4, 4 },
    // Hexagon::V6_vS32b_nt_nqpred_ai - 172
    {3650, 578, 4, 4 },
    // Hexagon::V6_vS32b_nt_pred_ai - 173
    {3676, 582, 4, 4 },
    // Hexagon::V6_vS32b_nt_qpred_ai - 174
    {3676, 586, 4, 4 },
    // Hexagon::V6_vS32b_pred_ai - 175
    {3701, 590, 4, 4 },
    // Hexagon::V6_vS32b_qpred_ai - 176
    {3701, 594, 4, 4 },
    // Hexagon::V6_vabsb_sat - 177
    {3723, 598, 2, 2 },
    // Hexagon::V6_vabsdiffh - 178
    {3742, 600, 3, 3 },
    // Hexagon::V6_vabsdiffub - 179
    {3764, 603, 3, 3 },
    // Hexagon::V6_vabsdiffuh - 180
    {3787, 606, 3, 3 },
    // Hexagon::V6_vabsdiffw - 181
    {3810, 609, 3, 3 },
    // Hexagon::V6_vabsh_sat - 182
    {3832, 612, 2, 2 },
    // Hexagon::V6_vabsw_sat - 183
    {3851, 614, 2, 2 },
    // Hexagon::V6_vaddb - 184
    {114, 616, 3, 3 },
    // Hexagon::V6_vaddb_dv - 185
    {114, 619, 3, 3 },
    // Hexagon::V6_vaddbnq - 186
    {3870, 622, 4, 4 },
    // Hexagon::V6_vaddbq - 187
    {3894, 626, 4, 4 },
    // Hexagon::V6_vaddbsat - 188
    {3917, 630, 3, 3 },
    // Hexagon::V6_vaddbsat_dv - 189
    {3917, 633, 3, 3 },
    // Hexagon::V6_vaddh - 190
    {3939, 636, 3, 3 },
    // Hexagon::V6_vaddh_dv - 191
    {3939, 639, 3, 3 },
    // Hexagon::V6_vaddhnq - 192
    {3957, 642, 4, 4 },
    // Hexagon::V6_vaddhq - 193
    {3981, 646, 4, 4 },
    // Hexagon::V6_vaddhsat - 194
    {4004, 650, 3, 3 },
    // Hexagon::V6_vaddhsat_dv - 195
    {4004, 653, 3, 3 },
    // Hexagon::V6_vaddhw - 196
    {3939, 656, 3, 3 },
    // Hexagon::V6_vaddhw_acc - 197
    {4026, 659, 4, 4 },
    // Hexagon::V6_vaddubh - 198
    {4045, 663, 3, 3 },
    // Hexagon::V6_vaddubh_acc - 199
    {4064, 666, 4, 4 },
    // Hexagon::V6_vaddubsat - 200
    {4084, 670, 3, 3 },
    // Hexagon::V6_vaddubsat_dv - 201
    {4084, 673, 3, 3 },
    // Hexagon::V6_vadduhsat - 202
    {4107, 676, 3, 3 },
    // Hexagon::V6_vadduhsat_dv - 203
    {4107, 679, 3, 3 },
    // Hexagon::V6_vadduhw - 204
    {4130, 682, 3, 3 },
    // Hexagon::V6_vadduhw_acc - 205
    {4149, 685, 4, 4 },
    // Hexagon::V6_vadduwsat - 206
    {4169, 689, 3, 3 },
    // Hexagon::V6_vadduwsat_dv - 207
    {4169, 692, 3, 3 },
    // Hexagon::V6_vaddw - 208
    {4192, 695, 3, 3 },
    // Hexagon::V6_vaddw_dv - 209
    {4192, 698, 3, 3 },
    // Hexagon::V6_vaddwnq - 210
    {4210, 701, 4, 4 },
    // Hexagon::V6_vaddwq - 211
    {4234, 705, 4, 4 },
    // Hexagon::V6_vaddwsat - 212
    {4257, 709, 3, 3 },
    // Hexagon::V6_vaddwsat_dv - 213
    {4257, 712, 3, 3 },
    // Hexagon::V6_vandnqrt - 214
    {4279, 715, 3, 3 },
    // Hexagon::V6_vandnqrt_acc - 215
    {4306, 718, 4, 4 },
    // Hexagon::V6_vandqrt - 216
    {4334, 722, 3, 3 },
    // Hexagon::V6_vandqrt_acc - 217
    {4360, 725, 4, 4 },
    // Hexagon::V6_vandvrt - 218
    {4334, 729, 3, 3 },
    // Hexagon::V6_vandvrt_acc - 219
    {4360, 732, 4, 4 },
    // Hexagon::V6_vaslh - 220
    {4387, 736, 3, 3 },
    // Hexagon::V6_vaslh_acc - 221
    {4405, 739, 4, 4 },
    // Hexagon::V6_vaslhv - 222
    {4387, 743, 3, 3 },
    // Hexagon::V6_vaslw - 223
    {4424, 746, 3, 3 },
    // Hexagon::V6_vaslw_acc - 224
    {4442, 749, 4, 4 },
    // Hexagon::V6_vaslwv - 225
    {4424, 753, 3, 3 },
    // Hexagon::V6_vasr_into - 226
    {4461, 756, 4, 4 },
    // Hexagon::V6_vasrh - 227
    {4482, 760, 3, 3 },
    // Hexagon::V6_vasrh_acc - 228
    {4500, 763, 4, 4 },
    // Hexagon::V6_vasrhv - 229
    {4482, 767, 3, 3 },
    // Hexagon::V6_vasrw - 230
    {4519, 770, 3, 3 },
    // Hexagon::V6_vasrw_acc - 231
    {4537, 773, 4, 4 },
    // Hexagon::V6_vasrwv - 232
    {4519, 777, 3, 3 },
    // Hexagon::V6_vavgb - 233
    {4556, 780, 3, 3 },
    // Hexagon::V6_vavgbrnd - 234
    {4574, 783, 3, 3 },
    // Hexagon::V6_vavgh - 235
    {4596, 786, 3, 3 },
    // Hexagon::V6_vavghrnd - 236
    {4614, 789, 3, 3 },
    // Hexagon::V6_vavgub - 237
    {4636, 792, 3, 3 },
    // Hexagon::V6_vavgubrnd - 238
    {4655, 795, 3, 3 },
    // Hexagon::V6_vavguh - 239
    {4678, 798, 3, 3 },
    // Hexagon::V6_vavguhrnd - 240
    {4697, 801, 3, 3 },
    // Hexagon::V6_vavguw - 241
    {4720, 804, 3, 3 },
    // Hexagon::V6_vavguwrnd - 242
    {4739, 807, 3, 3 },
    // Hexagon::V6_vavgw - 243
    {4762, 810, 3, 3 },
    // Hexagon::V6_vavgwrnd - 244
    {4780, 813, 3, 3 },
    // Hexagon::V6_vcl0h - 245
    {4802, 816, 2, 2 },
    // Hexagon::V6_vcl0w - 246
    {4817, 818, 2, 2 },
    // Hexagon::V6_vdealb - 247
    {4832, 820, 2, 2 },
    // Hexagon::V6_vdealb4w - 248
    {4848, 822, 3, 3 },
    // Hexagon::V6_vdealh - 249
    {4869, 825, 2, 2 },
    // Hexagon::V6_vdmpybus - 250
    {4885, 827, 3, 3 },
    // Hexagon::V6_vdmpybus_acc - 251
    {4906, 830, 4, 4 },
    // Hexagon::V6_vdmpybus_dv - 252
    {4885, 834, 3, 3 },
    // Hexagon::V6_vdmpybus_dv_acc - 253
    {4906, 837, 4, 4 },
    // Hexagon::V6_vdmpyhb - 254
    {4928, 841, 3, 3 },
    // Hexagon::V6_vdmpyhb_acc - 255
    {4948, 844, 4, 4 },
    // Hexagon::V6_vdmpyhb_dv - 256
    {4928, 848, 3, 3 },
    // Hexagon::V6_vdmpyhb_dv_acc - 257
    {4948, 851, 4, 4 },
    // Hexagon::V6_vdmpyhisat - 258
    {4969, 855, 3, 3 },
    // Hexagon::V6_vdmpyhisat_acc - 259
    {4992, 858, 4, 4 },
    // Hexagon::V6_vdmpyhsat - 260
    {4969, 862, 3, 3 },
    // Hexagon::V6_vdmpyhsat_acc - 261
    {4992, 865, 4, 4 },
    // Hexagon::V6_vdmpyhsuisat - 262
    {5016, 869, 3, 3 },
    // Hexagon::V6_vdmpyhsuisat_acc - 263
    {5044, 872, 4, 4 },
    // Hexagon::V6_vdmpyhsusat - 264
    {5073, 876, 3, 3 },
    // Hexagon::V6_vdmpyhsusat_acc - 265
    {5098, 879, 4, 4 },
    // Hexagon::V6_vdmpyhvsat - 266
    {4969, 883, 3, 3 },
    // Hexagon::V6_vdmpyhvsat_acc - 267
    {4992, 886, 4, 4 },
    // Hexagon::V6_vdsaduh - 268
    {5124, 890, 3, 3 },
    // Hexagon::V6_vdsaduh_acc - 269
    {5144, 893, 4, 4 },
    // Hexagon::V6_veqb - 270
    {5165, 897, 3, 3 },
    // Hexagon::V6_veqb_and - 271
    {5191, 900, 4, 4 },
    // Hexagon::V6_veqb_or - 272
    {5218, 904, 4, 4 },
    // Hexagon::V6_veqb_xor - 273
    {5245, 908, 4, 4 },
    // Hexagon::V6_veqh - 274
    {5272, 912, 3, 3 },
    // Hexagon::V6_veqh_and - 275
    {5298, 915, 4, 4 },
    // Hexagon::V6_veqh_or - 276
    {5325, 919, 4, 4 },
    // Hexagon::V6_veqh_xor - 277
    {5352, 923, 4, 4 },
    // Hexagon::V6_veqw - 278
    {5379, 927, 3, 3 },
    // Hexagon::V6_veqw_and - 279
    {5405, 930, 4, 4 },
    // Hexagon::V6_veqw_or - 280
    {5432, 934, 4, 4 },
    // Hexagon::V6_veqw_xor - 281
    {5459, 938, 4, 4 },
    // Hexagon::V6_vlsrh - 282
    {5486, 942, 3, 3 },
    // Hexagon::V6_vlsrhv - 283
    {5486, 945, 3, 3 },
    // Hexagon::V6_vlsrw - 284
    {5504, 948, 3, 3 },
    // Hexagon::V6_vlsrwv - 285
    {5504, 951, 3, 3 },
    // Hexagon::V6_vmaxb - 286
    {5522, 954, 3, 3 },
    // Hexagon::V6_vmaxh - 287
    {5540, 957, 3, 3 },
    // Hexagon::V6_vmaxub - 288
    {5558, 960, 3, 3 },
    // Hexagon::V6_vmaxuh - 289
    {5577, 963, 3, 3 },
    // Hexagon::V6_vmaxw - 290
    {5596, 966, 3, 3 },
    // Hexagon::V6_vminb - 291
    {5614, 969, 3, 3 },
    // Hexagon::V6_vminh - 292
    {5632, 972, 3, 3 },
    // Hexagon::V6_vminub - 293
    {5650, 975, 3, 3 },
    // Hexagon::V6_vminuh - 294
    {5669, 978, 3, 3 },
    // Hexagon::V6_vminw - 295
    {5688, 981, 3, 3 },
    // Hexagon::V6_vmpabus - 296
    {5706, 984, 3, 3 },
    // Hexagon::V6_vmpabus_acc - 297
    {5726, 987, 4, 4 },
    // Hexagon::V6_vmpabusv - 298
    {5706, 991, 3, 3 },
    // Hexagon::V6_vmpabuu - 299
    {5747, 994, 3, 3 },
    // Hexagon::V6_vmpabuu_acc - 300
    {5767, 997, 4, 4 },
    // Hexagon::V6_vmpabuuv - 301
    {5747, 1001, 3, 3 },
    // Hexagon::V6_vmpahb - 302
    {5788, 1004, 3, 3 },
    // Hexagon::V6_vmpahb_acc - 303
    {5807, 1007, 4, 4 },
    // Hexagon::V6_vmpauhb - 304
    {5827, 1011, 3, 3 },
    // Hexagon::V6_vmpauhb_acc - 305
    {5847, 1014, 4, 4 },
    // Hexagon::V6_vmpybus - 306
    {5868, 1018, 3, 3 },
    // Hexagon::V6_vmpybus_acc - 307
    {5888, 1021, 4, 4 },
    // Hexagon::V6_vmpybusv - 308
    {5868, 1025, 3, 3 },
    // Hexagon::V6_vmpybusv_acc - 309
    {5888, 1028, 4, 4 },
    // Hexagon::V6_vmpybv - 310
    {5909, 1032, 3, 3 },
    // Hexagon::V6_vmpybv_acc - 311
    {5927, 1035, 4, 4 },
    // Hexagon::V6_vmpyewuh - 312
    {5946, 1039, 3, 3 },
    // Hexagon::V6_vmpyh - 313
    {5967, 1042, 3, 3 },
    // Hexagon::V6_vmpyh_acc - 314
    {5985, 1045, 4, 4 },
    // Hexagon::V6_vmpyhsat_acc - 315
    {6004, 1049, 4, 4 },
    // Hexagon::V6_vmpyhsrs - 316
    {6027, 1053, 3, 3 },
    // Hexagon::V6_vmpyhss - 317
    {6057, 1056, 3, 3 },
    // Hexagon::V6_vmpyhus - 318
    {6083, 1059, 3, 3 },
    // Hexagon::V6_vmpyhus_acc - 319
    {6103, 1062, 4, 4 },
    // Hexagon::V6_vmpyhv - 320
    {5967, 1066, 3, 3 },
    // Hexagon::V6_vmpyhv_acc - 321
    {5985, 1069, 4, 4 },
    // Hexagon::V6_vmpyhvsrs - 322
    {6027, 1073, 3, 3 },
    // Hexagon::V6_vmpyiewh_acc - 323
    {6124, 1076, 4, 4 },
    // Hexagon::V6_vmpyiewuh - 324
    {6146, 1080, 3, 3 },
    // Hexagon::V6_vmpyiewuh_acc - 325
    {6168, 1083, 4, 4 },
    // Hexagon::V6_vmpyih - 326
    {6191, 1087, 3, 3 },
    // Hexagon::V6_vmpyih_acc - 327
    {6210, 1090, 4, 4 },
    // Hexagon::V6_vmpyihb - 328
    {6230, 1094, 3, 3 },
    // Hexagon::V6_vmpyihb_acc - 329
    {6250, 1097, 4, 4 },
    // Hexagon::V6_vmpyiowh - 330
    {6271, 1101, 3, 3 },
    // Hexagon::V6_vmpyiwb - 331
    {6292, 1104, 3, 3 },
    // Hexagon::V6_vmpyiwb_acc - 332
    {6312, 1107, 4, 4 },
    // Hexagon::V6_vmpyiwh - 333
    {6333, 1111, 3, 3 },
    // Hexagon::V6_vmpyiwh_acc - 334
    {6353, 1114, 4, 4 },
    // Hexagon::V6_vmpyiwub - 335
    {6374, 1118, 3, 3 },
    // Hexagon::V6_vmpyiwub_acc - 336
    {6395, 1121, 4, 4 },
    // Hexagon::V6_vmpyowh - 337
    {6417, 1125, 3, 3 },
    // Hexagon::V6_vmpyowh_rnd - 338
    {6445, 1128, 3, 3 },
    // Hexagon::V6_vmpyub - 339
    {6477, 1131, 3, 3 },
    // Hexagon::V6_vmpyub_acc - 340
    {6496, 1134, 4, 4 },
    // Hexagon::V6_vmpyubv - 341
    {6477, 1138, 3, 3 },
    // Hexagon::V6_vmpyubv_acc - 342
    {6496, 1141, 4, 4 },
    // Hexagon::V6_vmpyuh - 343
    {6516, 1145, 3, 3 },
    // Hexagon::V6_vmpyuh_acc - 344
    {6535, 1148, 4, 4 },
    // Hexagon::V6_vmpyuhv - 345
    {6516, 1152, 3, 3 },
    // Hexagon::V6_vmpyuhv_acc - 346
    {6535, 1155, 4, 4 },
    // Hexagon::V6_vnavgb - 347
    {6555, 1159, 3, 3 },
    // Hexagon::V6_vnavgh - 348
    {6574, 1162, 3, 3 },
    // Hexagon::V6_vnavgub - 349
    {6593, 1165, 3, 3 },
    // Hexagon::V6_vnavgw - 350
    {6613, 1168, 3, 3 },
    // Hexagon::V6_vnormamth - 351
    {6632, 1171, 2, 2 },
    // Hexagon::V6_vnormamtw - 352
    {6651, 1173, 2, 2 },
    // Hexagon::V6_vpackeb - 353
    {6670, 1175, 3, 3 },
    // Hexagon::V6_vpackeh - 354
    {6690, 1178, 3, 3 },
    // Hexagon::V6_vpackhb_sat - 355
    {6710, 1181, 3, 3 },
    // Hexagon::V6_vpackhub_sat - 356
    {6734, 1184, 3, 3 },
    // Hexagon::V6_vpackob - 357
    {6759, 1187, 3, 3 },
    // Hexagon::V6_vpackoh - 358
    {6779, 1190, 3, 3 },
    // Hexagon::V6_vpackwh_sat - 359
    {6799, 1193, 3, 3 },
    // Hexagon::V6_vpackwuh_sat - 360
    {6823, 1196, 3, 3 },
    // Hexagon::V6_vpopcounth - 361
    {6848, 1199, 2, 2 },
    // Hexagon::V6_vrmpybub_rtt - 362
    {6868, 1201, 3, 3 },
    // Hexagon::V6_vrmpybub_rtt_acc - 363
    {6893, 1204, 4, 4 },
    // Hexagon::V6_vrmpybus - 364
    {6919, 1208, 3, 3 },
    // Hexagon::V6_vrmpybus_acc - 365
    {6940, 1211, 4, 4 },
    // Hexagon::V6_vrmpybusi - 366
    {6962, 1215, 4, 3 },
    // Hexagon::V6_vrmpybusi_acc - 367
    {6987, 1218, 5, 4 },
    // Hexagon::V6_vrmpybusv - 368
    {6919, 1222, 3, 3 },
    // Hexagon::V6_vrmpybusv_acc - 369
    {6940, 1225, 4, 4 },
    // Hexagon::V6_vrmpybv - 370
    {7013, 1229, 3, 3 },
    // Hexagon::V6_vrmpybv_acc - 371
    {7032, 1232, 4, 4 },
    // Hexagon::V6_vrmpyub - 372
    {7052, 1236, 3, 3 },
    // Hexagon::V6_vrmpyub_acc - 373
    {7072, 1239, 4, 4 },
    // Hexagon::V6_vrmpyub_rtt - 374
    {7093, 1243, 3, 3 },
    // Hexagon::V6_vrmpyub_rtt_acc - 375
    {7120, 1246, 4, 4 },
    // Hexagon::V6_vrmpyubi - 376
    {7148, 1250, 4, 3 },
    // Hexagon::V6_vrmpyubi_acc - 377
    {7172, 1253, 5, 4 },
    // Hexagon::V6_vrmpyubv - 378
    {7052, 1257, 3, 3 },
    // Hexagon::V6_vrmpyubv_acc - 379
    {7072, 1260, 4, 4 },
    // Hexagon::V6_vrotr - 380
    {7197, 1264, 3, 3 },
    // Hexagon::V6_vroundhb - 381
    {7215, 1267, 3, 3 },
    // Hexagon::V6_vroundhub - 382
    {7240, 1270, 3, 3 },
    // Hexagon::V6_vrounduhub - 383
    {7266, 1273, 3, 3 },
    // Hexagon::V6_vrounduwuh - 384
    {7293, 1276, 3, 3 },
    // Hexagon::V6_vroundwh - 385
    {7320, 1279, 3, 3 },
    // Hexagon::V6_vroundwuh - 386
    {7345, 1282, 3, 3 },
    // Hexagon::V6_vrsadubi - 387
    {7371, 1285, 4, 3 },
    // Hexagon::V6_vrsadubi_acc - 388
    {7395, 1288, 5, 4 },
    // Hexagon::V6_vsathub - 389
    {7420, 1292, 3, 3 },
    // Hexagon::V6_vsatuwuh - 390
    {7440, 1295, 3, 3 },
    // Hexagon::V6_vsatwh - 391
    {7461, 1298, 3, 3 },
    // Hexagon::V6_vsb - 392
    {7480, 1301, 2, 2 },
    // Hexagon::V6_vscattermh - 393
    {7495, 1303, 4, 4 },
    // Hexagon::V6_vscattermh_add - 394
    {7523, 1307, 4, 4 },
    // Hexagon::V6_vscattermhq - 395
    {7552, 1311, 5, 5 },
    // Hexagon::V6_vscattermhw - 396
    {7588, 1316, 4, 4 },
    // Hexagon::V6_vscattermhw_add - 397
    {7616, 1320, 4, 4 },
    // Hexagon::V6_vscattermhwq - 398
    {7645, 1324, 5, 5 },
    // Hexagon::V6_vscattermw - 399
    {7681, 1329, 4, 4 },
    // Hexagon::V6_vscattermw_add - 400
    {7709, 1333, 4, 4 },
    // Hexagon::V6_vscattermwq - 401
    {7738, 1337, 5, 5 },
    // Hexagon::V6_vsh - 402
    {7774, 1342, 2, 2 },
    // Hexagon::V6_vshufeh - 403
    {7789, 1344, 3, 3 },
    // Hexagon::V6_vshuff - 404
    {7810, 1347, 5, 5 },
    // Hexagon::V6_vshuffb - 405
    {7830, 1352, 2, 2 },
    // Hexagon::V6_vshuffeb - 406
    {7847, 1354, 3, 3 },
    // Hexagon::V6_vshuffh - 407
    {7868, 1357, 2, 2 },
    // Hexagon::V6_vshuffob - 408
    {7885, 1359, 3, 3 },
    // Hexagon::V6_vshufoeb - 409
    {7906, 1362, 3, 3 },
    // Hexagon::V6_vshufoeh - 410
    {7928, 1365, 3, 3 },
    // Hexagon::V6_vshufoh - 411
    {7950, 1368, 3, 3 },
    // Hexagon::V6_vsubb - 412
    {132, 1371, 3, 3 },
    // Hexagon::V6_vsubb_dv - 413
    {132, 1374, 3, 3 },
    // Hexagon::V6_vsubbnq - 414
    {7971, 1377, 4, 4 },
    // Hexagon::V6_vsubbq - 415
    {7995, 1381, 4, 4 },
    // Hexagon::V6_vsubbsat - 416
    {8018, 1385, 3, 3 },
    // Hexagon::V6_vsubbsat_dv - 417
    {8018, 1388, 3, 3 },
    // Hexagon::V6_vsubh - 418
    {8040, 1391, 3, 3 },
    // Hexagon::V6_vsubh_dv - 419
    {8040, 1394, 3, 3 },
    // Hexagon::V6_vsubhnq - 420
    {8058, 1397, 4, 4 },
    // Hexagon::V6_vsubhq - 421
    {8082, 1401, 4, 4 },
    // Hexagon::V6_vsubhsat - 422
    {8105, 1405, 3, 3 },
    // Hexagon::V6_vsubhsat_dv - 423
    {8105, 1408, 3, 3 },
    // Hexagon::V6_vsubhw - 424
    {8040, 1411, 3, 3 },
    // Hexagon::V6_vsububh - 425
    {8127, 1414, 3, 3 },
    // Hexagon::V6_vsububsat - 426
    {8146, 1417, 3, 3 },
    // Hexagon::V6_vsububsat_dv - 427
    {8146, 1420, 3, 3 },
    // Hexagon::V6_vsubuhsat - 428
    {8169, 1423, 3, 3 },
    // Hexagon::V6_vsubuhsat_dv - 429
    {8169, 1426, 3, 3 },
    // Hexagon::V6_vsubuhw - 430
    {8192, 1429, 3, 3 },
    // Hexagon::V6_vsubuwsat - 431
    {8211, 1432, 3, 3 },
    // Hexagon::V6_vsubuwsat_dv - 432
    {8211, 1435, 3, 3 },
    // Hexagon::V6_vsubw - 433
    {8234, 1438, 3, 3 },
    // Hexagon::V6_vsubw_dv - 434
    {8252, 1441, 3, 3 },
    {8234, 1444, 3, 3 },
    // Hexagon::V6_vsubwnq - 436
    {8260, 1447, 4, 4 },
    // Hexagon::V6_vsubwq - 437
    {8284, 1451, 4, 4 },
    // Hexagon::V6_vsubwsat - 438
    {8307, 1455, 3, 3 },
    // Hexagon::V6_vsubwsat_dv - 439
    {8307, 1458, 3, 3 },
    // Hexagon::V6_vtmpyb - 440
    {8329, 1461, 3, 3 },
    // Hexagon::V6_vtmpyb_acc - 441
    {8348, 1464, 4, 4 },
    // Hexagon::V6_vtmpybus - 442
    {8368, 1468, 3, 3 },
    // Hexagon::V6_vtmpybus_acc - 443
    {8389, 1471, 4, 4 },
    // Hexagon::V6_vtmpyhb - 444
    {8411, 1475, 3, 3 },
    // Hexagon::V6_vtmpyhb_acc - 445
    {8431, 1478, 4, 4 },
    // Hexagon::V6_vunpackb - 446
    {8452, 1482, 2, 2 },
    // Hexagon::V6_vunpackh - 447
    {8470, 1484, 2, 2 },
    // Hexagon::V6_vunpackoh - 448
    {8488, 1486, 3, 3 },
    // Hexagon::V6_vunpackub - 449
    {8508, 1489, 2, 2 },
    // Hexagon::V6_vunpackuh - 450
    {8527, 1491, 2, 2 },
    // Hexagon::V6_vxor - 451
    {8252, 1493, 3, 3 },
    // Hexagon::V6_vzb - 452
    {8546, 1496, 2, 2 },
    // Hexagon::V6_vzh - 453
    {8561, 1498, 2, 2 },
    // Hexagon::V6_zLd_ai - 454
    {8576, 1500, 2, 2 },
    // Hexagon::V6_zLd_pred_ai - 455
    {8589, 1502, 3, 3 },
    // Hexagon::Y2_dcfetchbo - 456
    {8610, 1505, 2, 2 },
  };

  static const AliasPatternCond Conds[] = {
    // (A2_andir IntRegs:$Rd32, IntRegs:$Rs32, 255) - 0
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(255)},
    // (A2_paddif IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 3
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_paddifnew IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 7
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_paddit IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 11
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_padditnew IntRegs:$Rd32, PredRegs:$Pu4, IntRegs:$Rs32, 0) - 15
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (A2_subri IntRegs:$Rd32, 0, IntRegs:$Rs32) - 19
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (A2_subri IntRegs:$Rd32, -1, IntRegs:$Rs32) - 22
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(-1)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (A2_vaddub DoubleRegs:$Rdd32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 25
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (A2_vsubub DoubleRegs:$Rdd32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 28
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (C2_cmpgt PredRegs:$Pd4, IntRegs:$Rt32, IntRegs:$Rs32) - 31
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (C2_cmpgtu PredRegs:$Pd4, IntRegs:$Rt32, IntRegs:$Rs32) - 34
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (C2_or PredRegs:$Pd4, PredRegs:$Ps4, PredRegs:$Ps4) - 37
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (J2_jumpf PredRegs:$Pu4, b30_2Imm:$Ii) - 40
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    // (J2_jumprf PredRegs:$Pu4, IntRegs:$Rs32) - 41
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (J2_jumprt PredRegs:$Pu4, IntRegs:$Rs32) - 43
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (J2_jumpt PredRegs:$Pu4, b30_2Imm:$Ii) - 45
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    // (J2_trap1 R0, u8_0Imm:$Ii) - 46
    {AliasPatternCond::K_Reg, Hexagon::R0},
    {AliasPatternCond::K_Ignore, 0},
    // (L2_deallocframe D15, R30) - 48
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L2_loadalignb_io DoubleRegs:$Ryy32, IntRegs:$Rs32, 0) - 50
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadalignh_io DoubleRegs:$Ryy32, IntRegs:$Rs32, 0) - 54
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbsw2_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 58
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbsw4_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 61
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbzw2_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 64
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadbzw4_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 67
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrb_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 70
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrd_io DoubleRegs:$Rdd32, IntRegs:$Rs32, 0) - 73
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrh_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 76
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadri_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 79
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadrub_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 82
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_loadruh_io IntRegs:$Rd32, IntRegs:$Rs32, 0) - 85
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 88
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 92
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbt_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 96
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrbtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 100
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdf_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 104
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdfnew_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 108
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdt_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 112
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrdtnew_io DoubleRegs:$Rdd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 116
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 120
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 124
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrht_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 128
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrhtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 132
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrif_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 136
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrifnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 140
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrit_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 144
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadritnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 148
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 152
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 156
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubt_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 160
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadrubtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 164
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhf_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 168
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhfnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 172
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruht_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 176
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L2_ploadruhtnew_io IntRegs:$Rd32, PredRegs:$Pt4, IntRegs:$Rs32, 0) - 180
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_add_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 184
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_add_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 187
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_add_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 190
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 193
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 196
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_and_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 199
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_iadd_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 202
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iadd_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 204
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iadd_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 206
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 208
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 210
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_iand_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 212
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 214
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 216
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_ior_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 218
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memopb_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 220
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memoph_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 222
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_isub_memopw_io IntRegs:$Rs32, 0, u5_0Imm:$II) - 224
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (L4_or_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 226
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_or_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 229
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_or_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 232
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_return D15, R30) - 235
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_f D15, PredRegs:$Pv4, R30) - 237
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_fnew_pnt D15, PredRegs:$Pv4, R30) - 240
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_fnew_pt D15, PredRegs:$Pv4, R30) - 243
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_t D15, PredRegs:$Pv4, R30) - 246
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_tnew_pnt D15, PredRegs:$Pv4, R30) - 249
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_return_tnew_pt D15, PredRegs:$Pv4, R30) - 252
    {AliasPatternCond::K_Reg, Hexagon::D15},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::R30},
    // (L4_sub_memopb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 255
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_sub_memoph_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 258
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (L4_sub_memopw_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 261
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (M2_mpyi IntRegs:$Rd32, IntRegs:$Rs32, IntRegs:$Rt32) - 264
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (M7_dcmpyrwc DoubleRegs:$Rdd32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 267
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (M7_dcmpyrwc_acc DoubleRegs:$Rxx32, DoubleRegs:$Rss32, DoubleRegs:$Rtt32) - 270
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_allocframe R29, u11_3Imm:$Ii) - 274
    {AliasPatternCond::K_Reg, Hexagon::R29},
    {AliasPatternCond::K_Ignore, 0},
    // (S2_pstorerbf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 276
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbnewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 280
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbnewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 284
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerbt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 288
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerdf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 292
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_pstorerdt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 296
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_pstorerff_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 300
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerft_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 304
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 308
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhnewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 312
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerhnewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 316
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerht_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 320
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerif_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 324
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerinewf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 328
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerinewt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 332
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_pstorerit_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 336
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerb_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 340
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerbnew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 343
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerd_io IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 346
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S2_storerf_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 349
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerh_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 352
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerhnew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 355
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storeri_io IntRegs:$Rs32, 0, IntRegs:$Rt32) - 358
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_storerinew_io IntRegs:$Rs32, 0, IntRegs:$Nt8) - 361
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S2_tableidxb IntRegs:$Rx32, IntRegs:$Rs32, u4_0Imm:$Ii, u5_0Imm:$II) - 364
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    // (S4_pstorerbfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 368
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbnewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 372
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbnewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 376
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerbtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 380
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerdfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 384
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S4_pstorerdtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, DoubleRegs:$Rtt32) - 388
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (S4_pstorerffnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 392
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerftnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 396
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 400
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhnewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 404
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhnewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 408
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerhtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 412
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerifnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 416
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerinewfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 420
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstorerinewtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Nt8) - 424
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_pstoreritnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, IntRegs:$Rt32) - 428
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (S4_storeirb_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 432
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 434
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 437
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbt_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 440
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirbtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 443
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirh_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 446
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhf_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 448
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhfnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 451
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirht_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 454
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirhtnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 457
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeiri_io IntRegs:$Rs32, 0, s32_0Imm:$II) - 460
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirif_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 462
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirifnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 465
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeirit_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 468
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (S4_storeiritnew_io PredRegs:$Pv4, IntRegs:$Rs32, 0, s32_0Imm:$II) - 471
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_extractw IntRegs:$Rd32, HvxVR:$Vu32, IntRegs:$Rs32) - 474
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_v6mpyhubs10 HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32, u2_0Imm:$Ii) - 477
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_v6mpyvubs10 HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32, u2_0Imm:$Ii) - 480
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vL32Ub_ai HvxVR:$Vd32, IntRegs:$Rt32, 0) - 483
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_ai HvxVR:$Vd32, IntRegs:$Rt32, 0) - 486
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_cur_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 489
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_cur_pred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 494
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_npred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 499
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 503
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_cur_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 508
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_cur_pred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 513
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_npred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 518
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_npred_pi HvxVR:$Vd32, IntRegs:$Rt32, PredRegs:$Pv4, 0) - 522
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 527
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_nt_tmp_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 531
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 535
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vL32b_tmp_pred_ai HvxVR:$Vd32, PredRegs:$Pv4, IntRegs:$Rt32, 0) - 539
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_vS32Ub_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 543
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32Ub_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 546
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32Ub_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 550
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 554
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_new_ai IntRegs:$Rt32, 0, HvxVR:$Os8) - 557
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 560
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nqpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 564
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_ai IntRegs:$Rt32, 0, HvxVR:$Vs32) - 568
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_new_ai IntRegs:$Rt32, 0, HvxVR:$Os8) - 571
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_npred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 574
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_nqpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 578
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 582
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_nt_qpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 586
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 590
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vS32b_qpred_ai HvxQR:$Qv4, IntRegs:$Rt32, 0, HvxVR:$Vs32) - 594
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsb_sat HvxVR:$Vd32, HvxVR:$Vu32) - 598
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 600
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 603
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 606
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsdiffw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 609
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsh_sat HvxVR:$Vd32, HvxVR:$Vu32) - 612
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vabsw_sat HvxVR:$Vd32, HvxVR:$Vu32) - 614
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 616
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 619
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddbnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 622
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 626
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 630
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddbsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 633
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 636
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddh_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 639
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddhnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 642
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 646
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 650
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 653
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 656
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddhw_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 659
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 663
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubh_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 666
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 670
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddubsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 673
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vadduhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 676
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 679
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vadduhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 682
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduhw_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 685
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 689
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vadduwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 692
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 695
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddw_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 698
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vaddwnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 701
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 705
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 709
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaddwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 712
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vandnqrt HvxVR:$Vd32, HvxQR:$Qu4, IntRegs:$Rt32) - 715
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandnqrt_acc HvxVR:$Vx32, HvxQR:$Qu4, IntRegs:$Rt32) - 718
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandqrt HvxVR:$Vd32, HvxQR:$Qu4, IntRegs:$Rt32) - 722
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandqrt_acc HvxVR:$Vx32, HvxQR:$Qu4, IntRegs:$Rt32) - 725
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandvrt HvxQR:$Qd4, HvxVR:$Vu32, IntRegs:$Rt32) - 729
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vandvrt_acc HvxQR:$Qx4, HvxVR:$Vu32, IntRegs:$Rt32) - 732
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 736
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 739
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 743
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vaslw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 746
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslw_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 749
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vaslwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 753
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasr_into HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 756
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasrh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 760
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 763
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 767
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vasrw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 770
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrw_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 773
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vasrwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 777
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 780
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgbrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 783
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 786
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavghrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 789
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 792
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgubrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 795
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 798
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguhrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 801
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 804
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavguwrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 807
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 810
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vavgwrnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 813
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vcl0h HvxVR:$Vd32, HvxVR:$Vu32) - 816
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vcl0w HvxVR:$Vd32, HvxVR:$Vu32) - 818
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealb HvxVR:$Vd32, HvxVR:$Vu32) - 820
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealb4w HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 822
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdealh HvxVR:$Vd32, HvxVR:$Vu32) - 825
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdmpybus HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 827
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 830
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_dv HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 834
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpybus_dv_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 837
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 841
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 844
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 848
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhb_dv_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 851
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhisat HvxVR:$Vd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 855
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhisat_acc HvxVR:$Vx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 858
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsat HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 862
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsat_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 865
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsuisat HvxVR:$Vd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 869
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsuisat_acc HvxVR:$Vx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 872
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsusat HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 876
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhsusat_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 879
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdmpyhvsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 883
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdmpyhvsat_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 886
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vdsaduh HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 890
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vdsaduh_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 893
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_veqb HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 897
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 900
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 904
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqb_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 908
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 912
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 915
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 919
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqh_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 923
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw HvxQR:$Qd4, HvxVR:$Vu32, HvxVR:$Vv32) - 927
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_and HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 930
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_or HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 934
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_veqw_xor HvxQR:$Qx4, HvxVR:$Vu32, HvxVR:$Vv32) - 938
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vlsrh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 942
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vlsrhv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 945
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vlsrw HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 948
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vlsrwv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 951
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 954
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 957
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 960
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 963
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmaxw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 966
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 969
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 972
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 975
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 978
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vminw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 981
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpabus HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 984
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabus_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 987
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabusv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 991
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vmpabuu HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 994
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabuu_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 997
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpabuuv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1001
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vmpahb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1004
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpahb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1007
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpauhb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1011
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpauhb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1014
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybus HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1018
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybus_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1021
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpybusv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1025
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybusv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1028
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1032
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpybv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1035
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyewuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1039
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyh HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1042
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyh_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1045
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhsat_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1049
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhsrs HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1053
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhss HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1056
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyhus HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1059
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhus_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1062
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1066
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1069
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyhvsrs HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1073
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewh_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1076
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1080
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiewuh_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1083
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyih HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1087
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyih_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1090
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyihb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1094
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyihb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1097
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiowh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1101
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyiwb HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1104
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwb_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1107
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwh HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1111
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwh_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1114
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwub HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1118
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyiwub_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1121
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyowh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1125
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyowh_rnd HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1128
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyub HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1131
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyub_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1134
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyubv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1138
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyubv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1141
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyuh HvxWR:$Vdd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1145
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyuh_acc HvxWR:$Vxx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1148
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vmpyuhv HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1152
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vmpyuhv_acc HvxWR:$Vxx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1155
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1159
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1162
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1165
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnavgw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1168
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnormamth HvxVR:$Vd32, HvxVR:$Vu32) - 1171
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vnormamtw HvxVR:$Vd32, HvxVR:$Vu32) - 1173
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackeb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1175
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackeh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1178
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackhb_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1181
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackhub_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1184
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackob HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1187
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackoh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1190
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackwh_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1193
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpackwuh_sat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1196
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vpopcounth HvxVR:$Vd32, HvxVR:$Vu32) - 1199
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybub_rtt HvxWR:$Vdd32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1201
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpybub_rtt_acc HvxWR:$Vxx32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1204
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpybus HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1208
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybus_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1211
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1215
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1218
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpybusv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1222
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybusv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1225
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1229
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpybv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1232
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpyub HvxVR:$Vd32, HvxVR:$Vu32, IntRegs:$Rt32) - 1236
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyub_acc HvxVR:$Vx32, HvxVR:$Vu32, IntRegs:$Rt32) - 1239
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyub_rtt HvxWR:$Vdd32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1243
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpyub_rtt_acc HvxWR:$Vxx32, HvxVR:$Vu32, DoubleRegs:$Rtt32) - 1246
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::DoubleRegsRegClassID},
    // (V6_vrmpyubi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1250
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyubi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1253
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrmpyubv HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1257
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrmpyubv_acc HvxVR:$Vx32, HvxVR:$Vu32, HvxVR:$Vv32) - 1260
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrotr HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1264
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundhb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1267
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundhub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1270
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrounduhub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1273
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrounduwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1276
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundwh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1279
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vroundwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1282
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vrsadubi HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1285
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vrsadubi_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32, u1_0Imm:$Ii) - 1288
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vsathub HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1292
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsatuwuh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1295
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsatwh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1298
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsb HvxWR:$Vdd32, HvxVR:$Vu32) - 1301
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermh IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1303
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermh_add IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1307
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1311
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhw IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1316
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhw_add IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1320
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermhwq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxWR:$Vvv32, HvxVR:$Vw32) - 1324
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermw IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1329
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermw_add IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1333
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vscattermwq HvxQR:$Qs4, IntRegs:$Rt32, ModRegs:$Mu2, HvxVR:$Vv32, HvxVR:$Vw32) - 1337
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::ModRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsh HvxWR:$Vdd32, HvxVR:$Vu32) - 1342
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufeh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1344
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuff HvxVR:$Vy32, HvxVR:$Vx32, IntRegs:$Rt32) - 1347
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vshuffb HvxVR:$Vd32, HvxVR:$Vu32) - 1352
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffeb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1354
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffh HvxVR:$Vd32, HvxVR:$Vu32) - 1357
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshuffob HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1359
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoeb HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1362
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoeh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1365
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vshufoh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1368
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubb HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1371
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubb_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1374
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubbnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1377
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1381
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1385
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubbsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1388
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubh HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1391
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubh_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1394
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubhnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1397
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1401
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1405
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1408
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1411
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububh HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1414
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1417
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsububsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1420
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubuhsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1423
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuhsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1426
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubuhw HvxWR:$Vdd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1429
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1432
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubuwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1435
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubw HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1438
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubw_dv HvxWR:$Vdd32, W15, W15) - 1441
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Reg, Hexagon::W15},
    {AliasPatternCond::K_Reg, Hexagon::W15},
    // (V6_vsubw_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1444
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vsubwnq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1447
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwq HvxVR:$Vx32, HvxQR:$Qv4, HvxVR:$Vu32) - 1451
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxQRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwsat HvxVR:$Vd32, HvxVR:$Vu32, HvxVR:$Vv32) - 1455
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vsubwsat_dv HvxWR:$Vdd32, HvxWR:$Vuu32, HvxWR:$Vvv32) - 1458
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    // (V6_vtmpyb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1461
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1464
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpybus HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1468
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpybus_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1471
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyhb HvxWR:$Vdd32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1475
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vtmpyhb_acc HvxWR:$Vxx32, HvxWR:$Vuu32, IntRegs:$Rt32) - 1478
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    // (V6_vunpackb HvxWR:$Vdd32, HvxVR:$Vu32) - 1482
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackh HvxWR:$Vdd32, HvxVR:$Vu32) - 1484
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackoh HvxWR:$Vxx32, HvxVR:$Vu32) - 1486
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackub HvxWR:$Vdd32, HvxVR:$Vu32) - 1489
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vunpackuh HvxWR:$Vdd32, HvxVR:$Vu32) - 1491
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vxor HvxVR:$Vd32, HvxVR:$Vd32, HvxVR:$Vd32) - 1493
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (V6_vzb HvxWR:$Vdd32, HvxVR:$Vu32) - 1496
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_vzh HvxWR:$Vdd32, HvxVR:$Vu32) - 1498
    {AliasPatternCond::K_RegClass, Hexagon::HvxWRRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::HvxVRRegClassID},
    // (V6_zLd_ai IntRegs:$Rt32, 0) - 1500
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (V6_zLd_pred_ai PredRegs:$Pv4, IntRegs:$Rt32, 0) - 1502
    {AliasPatternCond::K_RegClass, Hexagon::PredRegsRegClassID},
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (Y2_dcfetchbo IntRegs:$Rs32, 0) - 1505
    {AliasPatternCond::K_RegClass, Hexagon::IntRegsRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
  };

  static const char AsmStrings[] =
    /* 0 */ "$\x01 = zxtb($\x02)\0"
    /* 14 */ "if (!$\x02) $\x01 = $\x03\0"
    /* 31 */ "if (!$\x02.new) $\x01 = $\x03\0"
    /* 52 */ "if ($\x02) $\x01 = $\x03\0"
    /* 68 */ "if ($\x02.new) $\x01 = $\x03\0"
    /* 88 */ "$\x01 = neg($\x03)\0"
    /* 101 */ "$\x01 = not($\x03)\0"
    /* 114 */ "$\x01 = vaddb($\x02,$\x03)\0"
    /* 132 */ "$\x01 = vsubb($\x02,$\x03)\0"
    /* 150 */ "$\x01 = cmp.lt($\x03,$\x02)\0"
    /* 169 */ "$\x01 = cmp.ltu($\x03,$\x02)\0"
    /* 189 */ "$\x01 = $\x02\0"
    /* 197 */ "if (!$\x01) jump $\xFF\x02\x01\0"
    /* 216 */ "if (!$\x01) jumpr $\x02\0"
    /* 234 */ "if ($\x01) jumpr $\x02\0"
    /* 251 */ "if ($\x01) jump $\xFF\x02\x01\0"
    /* 269 */ "trap1(#$\x03)\0"
    /* 280 */ "deallocframe\0"
    /* 293 */ "$\x01 = memb_fifo($\x03)\0"
    /* 312 */ "$\x01 = memh_fifo($\x03)\0"
    /* 331 */ "$\x01 = membh($\x02)\0"
    /* 346 */ "$\x01 = memubh($\x02)\0"
    /* 362 */ "$\x01 = memb($\x02)\0"
    /* 376 */ "$\x01 = memd($\x02)\0"
    /* 390 */ "$\x01 = memh($\x02)\0"
    /* 404 */ "$\x01 = memw($\x02)\0"
    /* 418 */ "$\x01 = memub($\x02)\0"
    /* 433 */ "$\x01 = memuh($\x02)\0"
    /* 448 */ "if (!$\x02) $\x01 = memb($\x03)\0"
    /* 471 */ "if (!$\x02.new) $\x01 = memb($\x03)\0"
    /* 498 */ "if ($\x02) $\x01 = memb($\x03)\0"
    /* 520 */ "if ($\x02.new) $\x01 = memb($\x03)\0"
    /* 546 */ "if (!$\x02) $\x01 = memd($\x03)\0"
    /* 569 */ "if (!$\x02.new) $\x01 = memd($\x03)\0"
    /* 596 */ "if ($\x02) $\x01 = memd($\x03)\0"
    /* 618 */ "if ($\x02.new) $\x01 = memd($\x03)\0"
    /* 644 */ "if (!$\x02) $\x01 = memh($\x03)\0"
    /* 667 */ "if (!$\x02.new) $\x01 = memh($\x03)\0"
    /* 694 */ "if ($\x02) $\x01 = memh($\x03)\0"
    /* 716 */ "if ($\x02.new) $\x01 = memh($\x03)\0"
    /* 742 */ "if (!$\x02) $\x01 = memw($\x03)\0"
    /* 765 */ "if (!$\x02.new) $\x01 = memw($\x03)\0"
    /* 792 */ "if ($\x02) $\x01 = memw($\x03)\0"
    /* 814 */ "if ($\x02.new) $\x01 = memw($\x03)\0"
    /* 840 */ "if (!$\x02) $\x01 = memub($\x03)\0"
    /* 864 */ "if (!$\x02.new) $\x01 = memub($\x03)\0"
    /* 892 */ "if ($\x02) $\x01 = memub($\x03)\0"
    /* 915 */ "if ($\x02.new) $\x01 = memub($\x03)\0"
    /* 942 */ "if (!$\x02) $\x01 = memuh($\x03)\0"
    /* 966 */ "if (!$\x02.new) $\x01 = memuh($\x03)\0"
    /* 994 */ "if ($\x02) $\x01 = memuh($\x03)\0"
    /* 1017 */ "if ($\x02.new) $\x01 = memuh($\x03)\0"
    /* 1044 */ "memb($\x01) += $\x03\0"
    /* 1059 */ "memh($\x01) += $\x03\0"
    /* 1074 */ "memw($\x01) += $\x03\0"
    /* 1089 */ "memb($\x01) &= $\x03\0"
    /* 1104 */ "memh($\x01) &= $\x03\0"
    /* 1119 */ "memw($\x01) &= $\x03\0"
    /* 1134 */ "memb($\x01) += #$\x03\0"
    /* 1150 */ "memh($\x01) += #$\x03\0"
    /* 1166 */ "memw($\x01) += #$\x03\0"
    /* 1182 */ "memb($\x01) = clrbit(#$\x03)\0"
    /* 1205 */ "memh($\x01) = clrbit(#$\x03)\0"
    /* 1228 */ "memw($\x01) = clrbit(#$\x03)\0"
    /* 1251 */ "memb($\x01) = setbit(#$\x03)\0"
    /* 1274 */ "memh($\x01) = setbit(#$\x03)\0"
    /* 1297 */ "memw($\x01) = setbit(#$\x03)\0"
    /* 1320 */ "memb($\x01) -= #$\x03\0"
    /* 1336 */ "memh($\x01) -= #$\x03\0"
    /* 1352 */ "memw($\x01) -= #$\x03\0"
    /* 1368 */ "memb($\x01) |= $\x03\0"
    /* 1383 */ "memh($\x01) |= $\x03\0"
    /* 1398 */ "memw($\x01) |= $\x03\0"
    /* 1413 */ "dealloc_return\0"
    /* 1428 */ "if (!$\x02) dealloc_return\0"
    /* 1452 */ "if (!$\x02.new) dealloc_return:nt\0"
    /* 1483 */ "if (!$\x02.new) dealloc_return:t\0"
    /* 1513 */ "if ($\x02) dealloc_return\0"
    /* 1536 */ "if ($\x02.new) dealloc_return:nt\0"
    /* 1566 */ "if ($\x02.new) dealloc_return:t\0"
    /* 1595 */ "memb($\x01) -= $\x03\0"
    /* 1610 */ "memh($\x01) -= $\x03\0"
    /* 1625 */ "memw($\x01) -= $\x03\0"
    /* 1640 */ "$\x01 = mpyui($\x02,$\x03)\0"
    /* 1658 */ "$\x01 = vdmpyw($\x02,$\x03)\0"
    /* 1677 */ "$\x01 += vdmpyw($\x03,$\x04)\0"
    /* 1697 */ "allocframe(#$\x03)\0"
    /* 1713 */ "if (!$\x01) memb($\x02) = $\x04\0"
    /* 1736 */ "if (!$\x01) memb($\x02) = $\x04.new\0"
    /* 1763 */ "if ($\x01) memb($\x02) = $\x04.new\0"
    /* 1789 */ "if ($\x01) memb($\x02) = $\x04\0"
    /* 1811 */ "if (!$\x01) memd($\x02) = $\x04\0"
    /* 1834 */ "if ($\x01) memd($\x02) = $\x04\0"
    /* 1856 */ "if (!$\x01) memh($\x02) = $\x04.h\0"
    /* 1881 */ "if ($\x01) memh($\x02) = $\x04.h\0"
    /* 1905 */ "if (!$\x01) memh($\x02) = $\x04\0"
    /* 1928 */ "if (!$\x01) memh($\x02) = $\x04.new\0"
    /* 1955 */ "if ($\x01) memh($\x02) = $\x04.new\0"
    /* 1981 */ "if ($\x01) memh($\x02) = $\x04\0"
    /* 2003 */ "if (!$\x01) memw($\x02) = $\x04\0"
    /* 2026 */ "if (!$\x01) memw($\x02) = $\x04.new\0"
    /* 2053 */ "if ($\x01) memw($\x02) = $\x04.new\0"
    /* 2079 */ "if ($\x01) memw($\x02) = $\x04\0"
    /* 2101 */ "memb($\x01) = $\x03\0"
    /* 2115 */ "memb($\x01) = $\x03.new\0"
    /* 2133 */ "memd($\x01) = $\x03\0"
    /* 2147 */ "memh($\x01) = $\x03.h\0"
    /* 2163 */ "memh($\x01) = $\x03\0"
    /* 2177 */ "memh($\x01) = $\x03.new\0"
    /* 2195 */ "memw($\x01) = $\x03\0"
    /* 2209 */ "memw($\x01) = $\x03.new\0"
    /* 2227 */ "$\x01 = tableidxb($\x03,#$\x04,#$\x05)\0"
    /* 2254 */ "if (!$\x01.new) memb($\x02) = $\x04\0"
    /* 2281 */ "if (!$\x01.new) memb($\x02) = $\x04.new\0"
    /* 2312 */ "if ($\x01.new) memb($\x02) = $\x04.new\0"
    /* 2342 */ "if ($\x01.new) memb($\x02) = $\x04\0"
    /* 2368 */ "if (!$\x01.new) memd($\x02) = $\x04\0"
    /* 2395 */ "if ($\x01.new) memd($\x02) = $\x04\0"
    /* 2421 */ "if (!$\x01.new) memh($\x02) = $\x04.h\0"
    /* 2450 */ "if ($\x01.new) memh($\x02) = $\x04.h\0"
    /* 2478 */ "if (!$\x01.new) memh($\x02) = $\x04\0"
    /* 2505 */ "if (!$\x01.new) memh($\x02) = $\x04.new\0"
    /* 2536 */ "if ($\x01.new) memh($\x02) = $\x04.new\0"
    /* 2566 */ "if ($\x01.new) memh($\x02) = $\x04\0"
    /* 2592 */ "if (!$\x01.new) memw($\x02) = $\x04\0"
    /* 2619 */ "if (!$\x01.new) memw($\x02) = $\x04.new\0"
    /* 2650 */ "if ($\x01.new) memw($\x02) = $\x04.new\0"
    /* 2680 */ "if ($\x01.new) memw($\x02) = $\x04\0"
    /* 2706 */ "memb($\x01) = #$\x03\0"
    /* 2721 */ "if (!$\x01) memb($\x02) = #$\x04\0"
    /* 2745 */ "if (!$\x01.new) memb($\x02) = #$\x04\0"
    /* 2773 */ "if ($\x01) memb($\x02) = #$\x04\0"
    /* 2796 */ "if ($\x01.new) memb($\x02) = #$\x04\0"
    /* 2823 */ "memh($\x01) = #$\x03\0"
    /* 2838 */ "if (!$\x01) memh($\x02) = #$\x04\0"
    /* 2862 */ "if (!$\x01.new) memh($\x02) = #$\x04\0"
    /* 2890 */ "if ($\x01) memh($\x02) = #$\x04\0"
    /* 2913 */ "if ($\x01.new) memh($\x02) = #$\x04\0"
    /* 2940 */ "memw($\x01) = #$\x03\0"
    /* 2955 */ "if (!$\x01) memw($\x02) = #$\x04\0"
    /* 2979 */ "if (!$\x01.new) memw($\x02) = #$\x04\0"
    /* 3007 */ "if ($\x01) memw($\x02) = #$\x04\0"
    /* 3030 */ "if ($\x01.new) memw($\x02) = #$\x04\0"
    /* 3057 */ "$\x01.w = vextract($\x02,$\x03)\0"
    /* 3080 */ "$\x01.w = v6mpy($\x02.ub,$\x03.b10,#$\x04):h\0"
    /* 3113 */ "$\x01.w = v6mpy($\x02.ub,$\x03.b10,#$\x04):v\0"
    /* 3146 */ "$\x01 = vmemu($\x02)\0"
    /* 3161 */ "$\x01 = vmem($\x02)\0"
    /* 3175 */ "if (!$\x03) $\x01.cur = vmem($\x02)\0"
    /* 3202 */ "if ($\x03) $\x01.cur = vmem($\x02)\0"
    /* 3228 */ "if (!$\x02) $\x01.tmp = vmem($\x03)\0"
    /* 3255 */ "if (!$\x03) $\x01 = vmem($\x02)\0"
    /* 3278 */ "if (!$\x03) $\x01.cur = vmem($\x02):nt\0"
    /* 3308 */ "if ($\x03) $\x01.cur = vmem($\x02):nt\0"
    /* 3337 */ "if (!$\x02) $\x01.tmp = vmem($\x03):nt\0"
    /* 3367 */ "if (!$\x03) $\x01 = vmem($\x02):nt\0"
    /* 3393 */ "if ($\x02) $\x01 = vmem($\x03):nt\0"
    /* 3418 */ "if ($\x02) $\x01.tmp = vmem($\x03):nt\0"
    /* 3447 */ "if ($\x02) $\x01 = vmem($\x03)\0"
    /* 3469 */ "if ($\x02) $\x01.tmp = vmem($\x03)\0"
    /* 3495 */ "vmemu($\x01) = $\x03\0"
    /* 3510 */ "if (!$\x01) vmemu($\x02) = $\x04\0"
    /* 3534 */ "if ($\x01) vmemu($\x02) = $\x04\0"
    /* 3557 */ "vmem($\x01) = $\x03\0"
    /* 3571 */ "vmem($\x01) = $\x03.new\0"
    /* 3589 */ "if (!$\x01) vmem($\x02) = $\x04\0"
    /* 3612 */ "vmem($\x01):nt = $\x03\0"
    /* 3629 */ "vmem($\x01):nt = $\x03.new\0"
    /* 3650 */ "if (!$\x01) vmem($\x02):nt = $\x04\0"
    /* 3676 */ "if ($\x01) vmem($\x02):nt = $\x04\0"
    /* 3701 */ "if ($\x01) vmem($\x02) = $\x04\0"
    /* 3723 */ "$\x01 = vabsb($\x02):sat\0"
    /* 3742 */ "$\x01 = vabsdiffh($\x02,$\x03)\0"
    /* 3764 */ "$\x01 = vabsdiffub($\x02,$\x03)\0"
    /* 3787 */ "$\x01 = vabsdiffuh($\x02,$\x03)\0"
    /* 3810 */ "$\x01 = vabsdiffw($\x02,$\x03)\0"
    /* 3832 */ "$\x01 = vabsh($\x02):sat\0"
    /* 3851 */ "$\x01 = vabsw($\x02):sat\0"
    /* 3870 */ "if (!$\x02.b) $\x01.b += $\x04.b\0"
    /* 3894 */ "if ($\x02.b) $\x01.b += $\x04.b\0"
    /* 3917 */ "$\x01 = vaddb($\x02,$\x03):sat\0"
    /* 3939 */ "$\x01 = vaddh($\x02,$\x03)\0"
    /* 3957 */ "if (!$\x02.h) $\x01.h += $\x04.h\0"
    /* 3981 */ "if ($\x02.h) $\x01.h += $\x04.h\0"
    /* 4004 */ "$\x01 = vaddh($\x02,$\x03):sat\0"
    /* 4026 */ "$\x01 += vaddh($\x03,$\x04)\0"
    /* 4045 */ "$\x01 = vaddub($\x02,$\x03)\0"
    /* 4064 */ "$\x01 += vaddub($\x03,$\x04)\0"
    /* 4084 */ "$\x01 = vaddub($\x02,$\x03):sat\0"
    /* 4107 */ "$\x01 = vadduh($\x02,$\x03):sat\0"
    /* 4130 */ "$\x01 = vadduh($\x02,$\x03)\0"
    /* 4149 */ "$\x01 += vadduh($\x03,$\x04)\0"
    /* 4169 */ "$\x01 = vadduw($\x02,$\x03):sat\0"
    /* 4192 */ "$\x01 = vaddw($\x02,$\x03)\0"
    /* 4210 */ "if (!$\x02.w) $\x01.w += $\x04.w\0"
    /* 4234 */ "if ($\x02.w) $\x01.w += $\x04.w\0"
    /* 4257 */ "$\x01 = vaddw($\x02,$\x03):sat\0"
    /* 4279 */ "$\x01.ub = vand(!$\x02.ub,$\x03.ub)\0"
    /* 4306 */ "$\x01.ub |= vand(!$\x03.ub,$\x04.ub)\0"
    /* 4334 */ "$\x01.ub = vand($\x02.ub,$\x03.ub)\0"
    /* 4360 */ "$\x01.ub |= vand($\x03.ub,$\x04.ub)\0"
    /* 4387 */ "$\x01 = vaslh($\x02,$\x03)\0"
    /* 4405 */ "$\x01 += vaslh($\x03,$\x04)\0"
    /* 4424 */ "$\x01 = vaslw($\x02,$\x03)\0"
    /* 4442 */ "$\x01 += vaslw($\x03,$\x04)\0"
    /* 4461 */ "$\x01 = vasrinto($\x03,$\x04)\0"
    /* 4482 */ "$\x01 = vasrh($\x02,$\x03)\0"
    /* 4500 */ "$\x01 += vasrh($\x03,$\x04)\0"
    /* 4519 */ "$\x01 = vasrw($\x02,$\x03)\0"
    /* 4537 */ "$\x01 += vasrw($\x03,$\x04)\0"
    /* 4556 */ "$\x01 = vavgb($\x02,$\x03)\0"
    /* 4574 */ "$\x01 = vavgb($\x02,$\x03):rnd\0"
    /* 4596 */ "$\x01 = vavgh($\x02,$\x03)\0"
    /* 4614 */ "$\x01 = vavgh($\x02,$\x03):rnd\0"
    /* 4636 */ "$\x01 = vavgub($\x02,$\x03)\0"
    /* 4655 */ "$\x01 = vavgub($\x02,$\x03):rnd\0"
    /* 4678 */ "$\x01 = vavguh($\x02,$\x03)\0"
    /* 4697 */ "$\x01 = vavguh($\x02,$\x03):rnd\0"
    /* 4720 */ "$\x01 = vavguw($\x02,$\x03)\0"
    /* 4739 */ "$\x01 = vavguw($\x02,$\x03):rnd\0"
    /* 4762 */ "$\x01 = vavgw($\x02,$\x03)\0"
    /* 4780 */ "$\x01 = vavgw($\x02,$\x03):rnd\0"
    /* 4802 */ "$\x01 = vcl0h($\x02)\0"
    /* 4817 */ "$\x01 = vcl0w($\x02)\0"
    /* 4832 */ "$\x01 = vdealb($\x02)\0"
    /* 4848 */ "$\x01 = vdealb4w($\x02,$\x03)\0"
    /* 4869 */ "$\x01 = vdealh($\x02)\0"
    /* 4885 */ "$\x01 = vdmpybus($\x02,$\x03)\0"
    /* 4906 */ "$\x01 += vdmpybus($\x03,$\x04)\0"
    /* 4928 */ "$\x01 = vdmpyhb($\x02,$\x03)\0"
    /* 4948 */ "$\x01 += vdmpyhb($\x03,$\x04)\0"
    /* 4969 */ "$\x01 = vdmpyh($\x02,$\x03):sat\0"
    /* 4992 */ "$\x01 += vdmpyh($\x03,$\x04):sat\0"
    /* 5016 */ "$\x01 = vdmpyhsu($\x02,$\x03,#1):sat\0"
    /* 5044 */ "$\x01 += vdmpyhsu($\x03,$\x04,#1):sat\0"
    /* 5073 */ "$\x01 = vdmpyhsu($\x02,$\x03):sat\0"
    /* 5098 */ "$\x01 += vdmpyhsu($\x03,$\x04):sat\0"
    /* 5124 */ "$\x01 = vdsaduh($\x02,$\x03)\0"
    /* 5144 */ "$\x01 += vdsaduh($\x03,$\x04)\0"
    /* 5165 */ "$\x01 = vcmp.eq($\x02.ub,$\x03.ub)\0"
    /* 5191 */ "$\x01 &= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5218 */ "$\x01 |= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5245 */ "$\x01 ^= vcmp.eq($\x03.ub,$\x04.ub)\0"
    /* 5272 */ "$\x01 = vcmp.eq($\x02.uh,$\x03.uh)\0"
    /* 5298 */ "$\x01 &= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5325 */ "$\x01 |= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5352 */ "$\x01 ^= vcmp.eq($\x03.uh,$\x04.uh)\0"
    /* 5379 */ "$\x01 = vcmp.eq($\x02.uw,$\x03.uw)\0"
    /* 5405 */ "$\x01 &= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5432 */ "$\x01 |= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5459 */ "$\x01 ^= vcmp.eq($\x03.uw,$\x04.uw)\0"
    /* 5486 */ "$\x01 = vlsrh($\x02,$\x03)\0"
    /* 5504 */ "$\x01 = vlsrw($\x02,$\x03)\0"
    /* 5522 */ "$\x01 = vmaxb($\x02,$\x03)\0"
    /* 5540 */ "$\x01 = vmaxh($\x02,$\x03)\0"
    /* 5558 */ "$\x01 = vmaxub($\x02,$\x03)\0"
    /* 5577 */ "$\x01 = vmaxuh($\x02,$\x03)\0"
    /* 5596 */ "$\x01 = vmaxw($\x02,$\x03)\0"
    /* 5614 */ "$\x01 = vminb($\x02,$\x03)\0"
    /* 5632 */ "$\x01 = vminh($\x02,$\x03)\0"
    /* 5650 */ "$\x01 = vminub($\x02,$\x03)\0"
    /* 5669 */ "$\x01 = vminuh($\x02,$\x03)\0"
    /* 5688 */ "$\x01 = vminw($\x02,$\x03)\0"
    /* 5706 */ "$\x01 = vmpabus($\x02,$\x03)\0"
    /* 5726 */ "$\x01 += vmpabus($\x03,$\x04)\0"
    /* 5747 */ "$\x01 = vmpabuu($\x02,$\x03)\0"
    /* 5767 */ "$\x01 += vmpabuu($\x03,$\x04)\0"
    /* 5788 */ "$\x01 = vmpahb($\x02,$\x03)\0"
    /* 5807 */ "$\x01 += vmpahb($\x03,$\x04)\0"
    /* 5827 */ "$\x01 = vmpauhb($\x02,$\x03)\0"
    /* 5847 */ "$\x01 += vmpauhb($\x03,$\x04)\0"
    /* 5868 */ "$\x01 = vmpybus($\x02,$\x03)\0"
    /* 5888 */ "$\x01 += vmpybus($\x03,$\x04)\0"
    /* 5909 */ "$\x01 = vmpyb($\x02,$\x03)\0"
    /* 5927 */ "$\x01 += vmpyb($\x03,$\x04)\0"
    /* 5946 */ "$\x01 = vmpyewuh($\x02,$\x03)\0"
    /* 5967 */ "$\x01 = vmpyh($\x02,$\x03)\0"
    /* 5985 */ "$\x01 += vmpyh($\x03,$\x04)\0"
    /* 6004 */ "$\x01 += vmpyh($\x03,$\x04):sat\0"
    /* 6027 */ "$\x01 = vmpyh($\x02,$\x03):<<1:rnd:sat\0"
    /* 6057 */ "$\x01 = vmpyh($\x02,$\x03):<<1:sat\0"
    /* 6083 */ "$\x01 = vmpyhus($\x02,$\x03)\0"
    /* 6103 */ "$\x01 += vmpyhus($\x03,$\x04)\0"
    /* 6124 */ "$\x01 += vmpyiewh($\x03,$\x04)\0"
    /* 6146 */ "$\x01 = vmpyiewuh($\x02,$\x03)\0"
    /* 6168 */ "$\x01 += vmpyiewuh($\x03,$\x04)\0"
    /* 6191 */ "$\x01 = vmpyih($\x02,$\x03)\0"
    /* 6210 */ "$\x01 += vmpyih($\x03,$\x04)\0"
    /* 6230 */ "$\x01 = vmpyihb($\x02,$\x03)\0"
    /* 6250 */ "$\x01 += vmpyihb($\x03,$\x04)\0"
    /* 6271 */ "$\x01 = vmpyiowh($\x02,$\x03)\0"
    /* 6292 */ "$\x01 = vmpyiwb($\x02,$\x03)\0"
    /* 6312 */ "$\x01 += vmpyiwb($\x03,$\x04)\0"
    /* 6333 */ "$\x01 = vmpyiwh($\x02,$\x03)\0"
    /* 6353 */ "$\x01 += vmpyiwh($\x03,$\x04)\0"
    /* 6374 */ "$\x01 = vmpyiwub($\x02,$\x03)\0"
    /* 6395 */ "$\x01 += vmpyiwub($\x03,$\x04)\0"
    /* 6417 */ "$\x01 = vmpyowh($\x02,$\x03):<<1:sat\0"
    /* 6445 */ "$\x01 = vmpyowh($\x02,$\x03):<<1:rnd:sat\0"
    /* 6477 */ "$\x01 = vmpyub($\x02,$\x03)\0"
    /* 6496 */ "$\x01 += vmpyub($\x03,$\x04)\0"
    /* 6516 */ "$\x01 = vmpyuh($\x02,$\x03)\0"
    /* 6535 */ "$\x01 += vmpyuh($\x03,$\x04)\0"
    /* 6555 */ "$\x01 = vnavgb($\x02,$\x03)\0"
    /* 6574 */ "$\x01 = vnavgh($\x02,$\x03)\0"
    /* 6593 */ "$\x01 = vnavgub($\x02,$\x03)\0"
    /* 6613 */ "$\x01 = vnavgw($\x02,$\x03)\0"
    /* 6632 */ "$\x01 = vnormamth($\x02)\0"
    /* 6651 */ "$\x01 = vnormamtw($\x02)\0"
    /* 6670 */ "$\x01 = vpackeb($\x02,$\x03)\0"
    /* 6690 */ "$\x01 = vpackeh($\x02,$\x03)\0"
    /* 6710 */ "$\x01 = vpackhb($\x02,$\x03):sat\0"
    /* 6734 */ "$\x01 = vpackhub($\x02,$\x03):sat\0"
    /* 6759 */ "$\x01 = vpackob($\x02,$\x03)\0"
    /* 6779 */ "$\x01 = vpackoh($\x02,$\x03)\0"
    /* 6799 */ "$\x01 = vpackwh($\x02,$\x03):sat\0"
    /* 6823 */ "$\x01 = vpackwuh($\x02,$\x03):sat\0"
    /* 6848 */ "$\x01 = vpopcounth($\x02)\0"
    /* 6868 */ "$\x01.w = vrmpy($\x02.b,$\x03.ub)\0"
    /* 6893 */ "$\x01.w += vrmpy($\x03.b,$\x04.ub)\0"
    /* 6919 */ "$\x01 = vrmpybus($\x02,$\x03)\0"
    /* 6940 */ "$\x01 += vrmpybus($\x03,$\x04)\0"
    /* 6962 */ "$\x01 = vrmpybus($\x02,$\x03,#$\x04)\0"
    /* 6987 */ "$\x01 += vrmpybus($\x03,$\x04,#$\x05)\0"
    /* 7013 */ "$\x01 = vrmpyb($\x02,$\x03)\0"
    /* 7032 */ "$\x01 += vrmpyb($\x03,$\x04)\0"
    /* 7052 */ "$\x01 = vrmpyub($\x02,$\x03)\0"
    /* 7072 */ "$\x01 += vrmpyub($\x03,$\x04)\0"
    /* 7093 */ "$\x01.uw = vrmpy($\x02.ub,$\x03.ub)\0"
    /* 7120 */ "$\x01.uw += vrmpy($\x03.ub,$\x04.ub)\0"
    /* 7148 */ "$\x01 = vrmpyub($\x02,$\x03,#$\x04)\0"
    /* 7172 */ "$\x01 += vrmpyub($\x03,$\x04,#$\x05)\0"
    /* 7197 */ "$\x01 = vrotr($\x02,$\x03)\0"
    /* 7215 */ "$\x01 = vroundhb($\x02,$\x03):sat\0"
    /* 7240 */ "$\x01 = vroundhub($\x02,$\x03):sat\0"
    /* 7266 */ "$\x01 = vrounduhub($\x02,$\x03):sat\0"
    /* 7293 */ "$\x01 = vrounduwuh($\x02,$\x03):sat\0"
    /* 7320 */ "$\x01 = vroundwh($\x02,$\x03):sat\0"
    /* 7345 */ "$\x01 = vroundwuh($\x02,$\x03):sat\0"
    /* 7371 */ "$\x01 = vrsadub($\x02,$\x03,#$\x04)\0"
    /* 7395 */ "$\x01 += vrsadub($\x03,$\x04,#$\x05)\0"
    /* 7420 */ "$\x01 = vsathub($\x02,$\x03)\0"
    /* 7440 */ "$\x01 = vsatuwuh($\x02,$\x03)\0"
    /* 7461 */ "$\x01 = vsatwh($\x02,$\x03)\0"
    /* 7480 */ "$\x01 = vsxtb($\x02)\0"
    /* 7495 */ "vscatter($\x01,$\x02,$\x03.h) = $\x04.h\0"
    /* 7523 */ "vscatter($\x01,$\x02,$\x03.h) += $\x04.h\0"
    /* 7552 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.h) = $\x05.h\0"
    /* 7588 */ "vscatter($\x01,$\x02,$\x03.w) = $\x04.h\0"
    /* 7616 */ "vscatter($\x01,$\x02,$\x03.w) += $\x04.h\0"
    /* 7645 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.w) = $\x05.h\0"
    /* 7681 */ "vscatter($\x01,$\x02,$\x03.w) = $\x04.w\0"
    /* 7709 */ "vscatter($\x01,$\x02,$\x03.w) += $\x04.w\0"
    /* 7738 */ "if ($\x01) vscatter($\x02,$\x03,$\x04.w) = $\x05.w\0"
    /* 7774 */ "$\x01 = vsxth($\x02)\0"
    /* 7789 */ "$\x01 = vshuffeh($\x02,$\x03)\0"
    /* 7810 */ "vtrans2x2($\x01,$\x02,$\x05)\0"
    /* 7830 */ "$\x01 = vshuffb($\x02)\0"
    /* 7847 */ "$\x01 = vshuffeb($\x02,$\x03)\0"
    /* 7868 */ "$\x01 = vshuffh($\x02)\0"
    /* 7885 */ "$\x01 = vshuffob($\x02,$\x03)\0"
    /* 7906 */ "$\x01 = vshuffoeb($\x02,$\x03)\0"
    /* 7928 */ "$\x01 = vshuffoeh($\x02,$\x03)\0"
    /* 7950 */ "$\x01 = vshuffoh($\x02,$\x03)\0"
    /* 7971 */ "if (!$\x02.b) $\x01.b -= $\x04.b\0"
    /* 7995 */ "if ($\x02.b) $\x01.b -= $\x04.b\0"
    /* 8018 */ "$\x01 = vsubb($\x02,$\x03):sat\0"
    /* 8040 */ "$\x01 = vsubh($\x02,$\x03)\0"
    /* 8058 */ "if (!$\x02.h) $\x01.h -= $\x04.h\0"
    /* 8082 */ "if ($\x02.h) $\x01.h -= $\x04.h\0"
    /* 8105 */ "$\x01 = vsubh($\x02,$\x03):sat\0"
    /* 8127 */ "$\x01 = vsubub($\x02,$\x03)\0"
    /* 8146 */ "$\x01 = vsubub($\x02,$\x03):sat\0"
    /* 8169 */ "$\x01 = vsubuh($\x02,$\x03):sat\0"
    /* 8192 */ "$\x01 = vsubuh($\x02,$\x03)\0"
    /* 8211 */ "$\x01 = vsubuw($\x02,$\x03):sat\0"
    /* 8234 */ "$\x01 = vsubw($\x02,$\x03)\0"
    /* 8252 */ "$\x01 = #0\0"
    /* 8260 */ "if (!$\x02.w) $\x01.w -= $\x04.w\0"
    /* 8284 */ "if ($\x02.w) $\x01.w -= $\x04.w\0"
    /* 8307 */ "$\x01 = vsubw($\x02,$\x03):sat\0"
    /* 8329 */ "$\x01 = vtmpyb($\x02,$\x03)\0"
    /* 8348 */ "$\x01 += vtmpyb($\x03,$\x04)\0"
    /* 8368 */ "$\x01 = vtmpybus($\x02,$\x03)\0"
    /* 8389 */ "$\x01 += vtmpybus($\x03,$\x04)\0"
    /* 8411 */ "$\x01 = vtmpyhb($\x02,$\x03)\0"
    /* 8431 */ "$\x01 += vtmpyhb($\x03,$\x04)\0"
    /* 8452 */ "$\x01 = vunpackb($\x02)\0"
    /* 8470 */ "$\x01 = vunpackh($\x02)\0"
    /* 8488 */ "$\x01 |= vunpackoh($\x03)\0"
    /* 8508 */ "$\x01 = vunpackub($\x02)\0"
    /* 8527 */ "$\x01 = vunpackuh($\x02)\0"
    /* 8546 */ "$\x01 = vzxtb($\x02)\0"
    /* 8561 */ "$\x01 = vzxth($\x02)\0"
    /* 8576 */ "z = vmem($\x01)\0"
    /* 8589 */ "if ($\x01) z = vmem($\x02)\0"
    /* 8610 */ "dcfetch($\x01)\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, nullptr, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void HexagonInstPrinter::printCustomAliasOperand(
         const MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printBrtarget(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
