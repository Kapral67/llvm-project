/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Hexagon {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_INSTR_REF	= 14,
    DBG_LABEL	= 15,
    REG_SEQUENCE	= 16,
    COPY	= 17,
    BUNDLE	= 18,
    LIFETIME_START	= 19,
    LIFETIME_END	= 20,
    PSEUDO_PROBE	= 21,
    STACKMAP	= 22,
    FENTRY_CALL	= 23,
    PATCHPOINT	= 24,
    LOAD_STACK_GUARD	= 25,
    PREALLOCATED_SETUP	= 26,
    PREALLOCATED_ARG	= 27,
    STATEPOINT	= 28,
    LOCAL_ESCAPE	= 29,
    FAULTING_OP	= 30,
    PATCHABLE_OP	= 31,
    PATCHABLE_FUNCTION_ENTER	= 32,
    PATCHABLE_RET	= 33,
    PATCHABLE_FUNCTION_EXIT	= 34,
    PATCHABLE_TAIL_CALL	= 35,
    PATCHABLE_EVENT_CALL	= 36,
    PATCHABLE_TYPED_EVENT_CALL	= 37,
    ICALL_BRANCH_FUNNEL	= 38,
    G_ASSERT_ZEXT	= 39,
    G_ADD	= 40,
    G_SUB	= 41,
    G_MUL	= 42,
    G_SDIV	= 43,
    G_UDIV	= 44,
    G_SREM	= 45,
    G_UREM	= 46,
    G_AND	= 47,
    G_OR	= 48,
    G_XOR	= 49,
    G_IMPLICIT_DEF	= 50,
    G_PHI	= 51,
    G_FRAME_INDEX	= 52,
    G_GLOBAL_VALUE	= 53,
    G_EXTRACT	= 54,
    G_UNMERGE_VALUES	= 55,
    G_INSERT	= 56,
    G_MERGE_VALUES	= 57,
    G_BUILD_VECTOR	= 58,
    G_BUILD_VECTOR_TRUNC	= 59,
    G_CONCAT_VECTORS	= 60,
    G_PTRTOINT	= 61,
    G_INTTOPTR	= 62,
    G_BITCAST	= 63,
    G_FREEZE	= 64,
    G_INTRINSIC_TRUNC	= 65,
    G_INTRINSIC_ROUND	= 66,
    G_INTRINSIC_LRINT	= 67,
    G_INTRINSIC_ROUNDEVEN	= 68,
    G_READCYCLECOUNTER	= 69,
    G_LOAD	= 70,
    G_SEXTLOAD	= 71,
    G_ZEXTLOAD	= 72,
    G_INDEXED_LOAD	= 73,
    G_INDEXED_SEXTLOAD	= 74,
    G_INDEXED_ZEXTLOAD	= 75,
    G_STORE	= 76,
    G_INDEXED_STORE	= 77,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 78,
    G_ATOMIC_CMPXCHG	= 79,
    G_ATOMICRMW_XCHG	= 80,
    G_ATOMICRMW_ADD	= 81,
    G_ATOMICRMW_SUB	= 82,
    G_ATOMICRMW_AND	= 83,
    G_ATOMICRMW_NAND	= 84,
    G_ATOMICRMW_OR	= 85,
    G_ATOMICRMW_XOR	= 86,
    G_ATOMICRMW_MAX	= 87,
    G_ATOMICRMW_MIN	= 88,
    G_ATOMICRMW_UMAX	= 89,
    G_ATOMICRMW_UMIN	= 90,
    G_ATOMICRMW_FADD	= 91,
    G_ATOMICRMW_FSUB	= 92,
    G_FENCE	= 93,
    G_BRCOND	= 94,
    G_BRINDIRECT	= 95,
    G_INTRINSIC	= 96,
    G_INTRINSIC_W_SIDE_EFFECTS	= 97,
    G_ANYEXT	= 98,
    G_TRUNC	= 99,
    G_CONSTANT	= 100,
    G_FCONSTANT	= 101,
    G_VASTART	= 102,
    G_VAARG	= 103,
    G_SEXT	= 104,
    G_SEXT_INREG	= 105,
    G_ZEXT	= 106,
    G_SHL	= 107,
    G_LSHR	= 108,
    G_ASHR	= 109,
    G_FSHL	= 110,
    G_FSHR	= 111,
    G_ICMP	= 112,
    G_FCMP	= 113,
    G_SELECT	= 114,
    G_UADDO	= 115,
    G_UADDE	= 116,
    G_USUBO	= 117,
    G_USUBE	= 118,
    G_SADDO	= 119,
    G_SADDE	= 120,
    G_SSUBO	= 121,
    G_SSUBE	= 122,
    G_UMULO	= 123,
    G_SMULO	= 124,
    G_UMULH	= 125,
    G_SMULH	= 126,
    G_UADDSAT	= 127,
    G_SADDSAT	= 128,
    G_USUBSAT	= 129,
    G_SSUBSAT	= 130,
    G_USHLSAT	= 131,
    G_SSHLSAT	= 132,
    G_SMULFIX	= 133,
    G_UMULFIX	= 134,
    G_SMULFIXSAT	= 135,
    G_UMULFIXSAT	= 136,
    G_SDIVFIX	= 137,
    G_UDIVFIX	= 138,
    G_SDIVFIXSAT	= 139,
    G_UDIVFIXSAT	= 140,
    G_FADD	= 141,
    G_FSUB	= 142,
    G_FMUL	= 143,
    G_FMA	= 144,
    G_FMAD	= 145,
    G_FDIV	= 146,
    G_FREM	= 147,
    G_FPOW	= 148,
    G_FPOWI	= 149,
    G_FEXP	= 150,
    G_FEXP2	= 151,
    G_FLOG	= 152,
    G_FLOG2	= 153,
    G_FLOG10	= 154,
    G_FNEG	= 155,
    G_FPEXT	= 156,
    G_FPTRUNC	= 157,
    G_FPTOSI	= 158,
    G_FPTOUI	= 159,
    G_SITOFP	= 160,
    G_UITOFP	= 161,
    G_FABS	= 162,
    G_FCOPYSIGN	= 163,
    G_FCANONICALIZE	= 164,
    G_FMINNUM	= 165,
    G_FMAXNUM	= 166,
    G_FMINNUM_IEEE	= 167,
    G_FMAXNUM_IEEE	= 168,
    G_FMINIMUM	= 169,
    G_FMAXIMUM	= 170,
    G_PTR_ADD	= 171,
    G_PTRMASK	= 172,
    G_SMIN	= 173,
    G_SMAX	= 174,
    G_UMIN	= 175,
    G_UMAX	= 176,
    G_ABS	= 177,
    G_BR	= 178,
    G_BRJT	= 179,
    G_INSERT_VECTOR_ELT	= 180,
    G_EXTRACT_VECTOR_ELT	= 181,
    G_SHUFFLE_VECTOR	= 182,
    G_CTTZ	= 183,
    G_CTTZ_ZERO_UNDEF	= 184,
    G_CTLZ	= 185,
    G_CTLZ_ZERO_UNDEF	= 186,
    G_CTPOP	= 187,
    G_BSWAP	= 188,
    G_BITREVERSE	= 189,
    G_FCEIL	= 190,
    G_FCOS	= 191,
    G_FSIN	= 192,
    G_FSQRT	= 193,
    G_FFLOOR	= 194,
    G_FRINT	= 195,
    G_FNEARBYINT	= 196,
    G_ADDRSPACE_CAST	= 197,
    G_BLOCK_ADDR	= 198,
    G_JUMP_TABLE	= 199,
    G_DYN_STACKALLOC	= 200,
    G_STRICT_FADD	= 201,
    G_STRICT_FSUB	= 202,
    G_STRICT_FMUL	= 203,
    G_STRICT_FDIV	= 204,
    G_STRICT_FREM	= 205,
    G_STRICT_FMA	= 206,
    G_STRICT_FSQRT	= 207,
    G_READ_REGISTER	= 208,
    G_WRITE_REGISTER	= 209,
    G_MEMCPY	= 210,
    G_MEMMOVE	= 211,
    G_MEMSET	= 212,
    G_VECREDUCE_SEQ_FADD	= 213,
    G_VECREDUCE_SEQ_FMUL	= 214,
    G_VECREDUCE_FADD	= 215,
    G_VECREDUCE_FMUL	= 216,
    G_VECREDUCE_FMAX	= 217,
    G_VECREDUCE_FMIN	= 218,
    G_VECREDUCE_ADD	= 219,
    G_VECREDUCE_MUL	= 220,
    G_VECREDUCE_AND	= 221,
    G_VECREDUCE_OR	= 222,
    G_VECREDUCE_XOR	= 223,
    G_VECREDUCE_SMAX	= 224,
    G_VECREDUCE_SMIN	= 225,
    G_VECREDUCE_UMAX	= 226,
    G_VECREDUCE_UMIN	= 227,
    A2_addsp	= 228,
    A2_iconst	= 229,
    A2_neg	= 230,
    A2_not	= 231,
    A2_tfrf	= 232,
    A2_tfrfnew	= 233,
    A2_tfrp	= 234,
    A2_tfrpf	= 235,
    A2_tfrpfnew	= 236,
    A2_tfrpi	= 237,
    A2_tfrpt	= 238,
    A2_tfrptnew	= 239,
    A2_tfrt	= 240,
    A2_tfrtnew	= 241,
    A2_vaddb_map	= 242,
    A2_vsubb_map	= 243,
    A2_zxtb	= 244,
    A4_boundscheck	= 245,
    ADJCALLSTACKDOWN	= 246,
    ADJCALLSTACKUP	= 247,
    C2_cmpgei	= 248,
    C2_cmpgeui	= 249,
    C2_cmplt	= 250,
    C2_cmpltu	= 251,
    C2_pxfer_map	= 252,
    DUPLEX_Pseudo	= 253,
    ENDLOOP0	= 254,
    ENDLOOP01	= 255,
    ENDLOOP1	= 256,
    J2_endloop0	= 257,
    J2_endloop01	= 258,
    J2_endloop1	= 259,
    J2_jumpf_nopred_map	= 260,
    J2_jumprf_nopred_map	= 261,
    J2_jumprt_nopred_map	= 262,
    J2_jumpt_nopred_map	= 263,
    J2_trap1_noregmap	= 264,
    L2_loadalignb_zomap	= 265,
    L2_loadalignh_zomap	= 266,
    L2_loadbsw2_zomap	= 267,
    L2_loadbsw4_zomap	= 268,
    L2_loadbzw2_zomap	= 269,
    L2_loadbzw4_zomap	= 270,
    L2_loadrb_zomap	= 271,
    L2_loadrd_zomap	= 272,
    L2_loadrh_zomap	= 273,
    L2_loadri_zomap	= 274,
    L2_loadrub_zomap	= 275,
    L2_loadruh_zomap	= 276,
    L2_ploadrbf_zomap	= 277,
    L2_ploadrbfnew_zomap	= 278,
    L2_ploadrbt_zomap	= 279,
    L2_ploadrbtnew_zomap	= 280,
    L2_ploadrdf_zomap	= 281,
    L2_ploadrdfnew_zomap	= 282,
    L2_ploadrdt_zomap	= 283,
    L2_ploadrdtnew_zomap	= 284,
    L2_ploadrhf_zomap	= 285,
    L2_ploadrhfnew_zomap	= 286,
    L2_ploadrht_zomap	= 287,
    L2_ploadrhtnew_zomap	= 288,
    L2_ploadrif_zomap	= 289,
    L2_ploadrifnew_zomap	= 290,
    L2_ploadrit_zomap	= 291,
    L2_ploadritnew_zomap	= 292,
    L2_ploadrubf_zomap	= 293,
    L2_ploadrubfnew_zomap	= 294,
    L2_ploadrubt_zomap	= 295,
    L2_ploadrubtnew_zomap	= 296,
    L2_ploadruhf_zomap	= 297,
    L2_ploadruhfnew_zomap	= 298,
    L2_ploadruht_zomap	= 299,
    L2_ploadruhtnew_zomap	= 300,
    L4_add_memopb_zomap	= 301,
    L4_add_memoph_zomap	= 302,
    L4_add_memopw_zomap	= 303,
    L4_and_memopb_zomap	= 304,
    L4_and_memoph_zomap	= 305,
    L4_and_memopw_zomap	= 306,
    L4_iadd_memopb_zomap	= 307,
    L4_iadd_memoph_zomap	= 308,
    L4_iadd_memopw_zomap	= 309,
    L4_iand_memopb_zomap	= 310,
    L4_iand_memoph_zomap	= 311,
    L4_iand_memopw_zomap	= 312,
    L4_ior_memopb_zomap	= 313,
    L4_ior_memoph_zomap	= 314,
    L4_ior_memopw_zomap	= 315,
    L4_isub_memopb_zomap	= 316,
    L4_isub_memoph_zomap	= 317,
    L4_isub_memopw_zomap	= 318,
    L4_or_memopb_zomap	= 319,
    L4_or_memoph_zomap	= 320,
    L4_or_memopw_zomap	= 321,
    L4_return_map_to_raw_f	= 322,
    L4_return_map_to_raw_fnew_pnt	= 323,
    L4_return_map_to_raw_fnew_pt	= 324,
    L4_return_map_to_raw_t	= 325,
    L4_return_map_to_raw_tnew_pnt	= 326,
    L4_return_map_to_raw_tnew_pt	= 327,
    L4_sub_memopb_zomap	= 328,
    L4_sub_memoph_zomap	= 329,
    L4_sub_memopw_zomap	= 330,
    L6_deallocframe_map_to_raw	= 331,
    L6_return_map_to_raw	= 332,
    LDriw_ctr	= 333,
    LDriw_pred	= 334,
    M2_mpysmi	= 335,
    M2_mpyui	= 336,
    M2_vrcmpys_acc_s1	= 337,
    M2_vrcmpys_s1	= 338,
    M2_vrcmpys_s1rp	= 339,
    M7_vdmpy	= 340,
    M7_vdmpy_acc	= 341,
    PS_aligna	= 342,
    PS_alloca	= 343,
    PS_call_nr	= 344,
    PS_crash	= 345,
    PS_false	= 346,
    PS_fi	= 347,
    PS_fia	= 348,
    PS_loadrb_pci	= 349,
    PS_loadrb_pcr	= 350,
    PS_loadrd_pci	= 351,
    PS_loadrd_pcr	= 352,
    PS_loadrh_pci	= 353,
    PS_loadrh_pcr	= 354,
    PS_loadri_pci	= 355,
    PS_loadri_pcr	= 356,
    PS_loadrub_pci	= 357,
    PS_loadrub_pcr	= 358,
    PS_loadruh_pci	= 359,
    PS_loadruh_pcr	= 360,
    PS_pselect	= 361,
    PS_qfalse	= 362,
    PS_qtrue	= 363,
    PS_storerb_pci	= 364,
    PS_storerb_pcr	= 365,
    PS_storerd_pci	= 366,
    PS_storerd_pcr	= 367,
    PS_storerf_pci	= 368,
    PS_storerf_pcr	= 369,
    PS_storerh_pci	= 370,
    PS_storerh_pcr	= 371,
    PS_storeri_pci	= 372,
    PS_storeri_pcr	= 373,
    PS_tailcall_i	= 374,
    PS_tailcall_r	= 375,
    PS_true	= 376,
    PS_vdd0	= 377,
    PS_vloadrq_ai	= 378,
    PS_vloadrv_ai	= 379,
    PS_vloadrv_nt_ai	= 380,
    PS_vloadrw_ai	= 381,
    PS_vloadrw_nt_ai	= 382,
    PS_vmulw	= 383,
    PS_vmulw_acc	= 384,
    PS_vselect	= 385,
    PS_vstorerq_ai	= 386,
    PS_vstorerv_ai	= 387,
    PS_vstorerv_nt_ai	= 388,
    PS_vstorerw_ai	= 389,
    PS_vstorerw_nt_ai	= 390,
    PS_wselect	= 391,
    S2_asr_i_p_rnd_goodsyntax	= 392,
    S2_asr_i_r_rnd_goodsyntax	= 393,
    S2_pstorerbf_zomap	= 394,
    S2_pstorerbnewf_zomap	= 395,
    S2_pstorerbnewt_zomap	= 396,
    S2_pstorerbt_zomap	= 397,
    S2_pstorerdf_zomap	= 398,
    S2_pstorerdt_zomap	= 399,
    S2_pstorerff_zomap	= 400,
    S2_pstorerft_zomap	= 401,
    S2_pstorerhf_zomap	= 402,
    S2_pstorerhnewf_zomap	= 403,
    S2_pstorerhnewt_zomap	= 404,
    S2_pstorerht_zomap	= 405,
    S2_pstorerif_zomap	= 406,
    S2_pstorerinewf_zomap	= 407,
    S2_pstorerinewt_zomap	= 408,
    S2_pstorerit_zomap	= 409,
    S2_storerb_zomap	= 410,
    S2_storerbnew_zomap	= 411,
    S2_storerd_zomap	= 412,
    S2_storerf_zomap	= 413,
    S2_storerh_zomap	= 414,
    S2_storerhnew_zomap	= 415,
    S2_storeri_zomap	= 416,
    S2_storerinew_zomap	= 417,
    S2_tableidxb_goodsyntax	= 418,
    S2_tableidxd_goodsyntax	= 419,
    S2_tableidxh_goodsyntax	= 420,
    S2_tableidxw_goodsyntax	= 421,
    S4_pstorerbfnew_zomap	= 422,
    S4_pstorerbnewfnew_zomap	= 423,
    S4_pstorerbnewtnew_zomap	= 424,
    S4_pstorerbtnew_zomap	= 425,
    S4_pstorerdfnew_zomap	= 426,
    S4_pstorerdtnew_zomap	= 427,
    S4_pstorerffnew_zomap	= 428,
    S4_pstorerftnew_zomap	= 429,
    S4_pstorerhfnew_zomap	= 430,
    S4_pstorerhnewfnew_zomap	= 431,
    S4_pstorerhnewtnew_zomap	= 432,
    S4_pstorerhtnew_zomap	= 433,
    S4_pstorerifnew_zomap	= 434,
    S4_pstorerinewfnew_zomap	= 435,
    S4_pstorerinewtnew_zomap	= 436,
    S4_pstoreritnew_zomap	= 437,
    S4_storeirb_zomap	= 438,
    S4_storeirbf_zomap	= 439,
    S4_storeirbfnew_zomap	= 440,
    S4_storeirbt_zomap	= 441,
    S4_storeirbtnew_zomap	= 442,
    S4_storeirh_zomap	= 443,
    S4_storeirhf_zomap	= 444,
    S4_storeirhfnew_zomap	= 445,
    S4_storeirht_zomap	= 446,
    S4_storeirhtnew_zomap	= 447,
    S4_storeiri_zomap	= 448,
    S4_storeirif_zomap	= 449,
    S4_storeirifnew_zomap	= 450,
    S4_storeirit_zomap	= 451,
    S4_storeiritnew_zomap	= 452,
    S5_asrhub_rnd_sat_goodsyntax	= 453,
    S5_vasrhrnd_goodsyntax	= 454,
    S6_allocframe_to_raw	= 455,
    STriw_ctr	= 456,
    STriw_pred	= 457,
    V6_MAP_equb	= 458,
    V6_MAP_equb_and	= 459,
    V6_MAP_equb_ior	= 460,
    V6_MAP_equb_xor	= 461,
    V6_MAP_equh	= 462,
    V6_MAP_equh_and	= 463,
    V6_MAP_equh_ior	= 464,
    V6_MAP_equh_xor	= 465,
    V6_MAP_equw	= 466,
    V6_MAP_equw_and	= 467,
    V6_MAP_equw_ior	= 468,
    V6_MAP_equw_xor	= 469,
    V6_extractw_alt	= 470,
    V6_hi	= 471,
    V6_ld0	= 472,
    V6_ldcnp0	= 473,
    V6_ldcnpnt0	= 474,
    V6_ldcp0	= 475,
    V6_ldcpnt0	= 476,
    V6_ldnp0	= 477,
    V6_ldnpnt0	= 478,
    V6_ldnt0	= 479,
    V6_ldntnt0	= 480,
    V6_ldp0	= 481,
    V6_ldpnt0	= 482,
    V6_ldtnp0	= 483,
    V6_ldtnpnt0	= 484,
    V6_ldtp0	= 485,
    V6_ldtpnt0	= 486,
    V6_ldu0	= 487,
    V6_lo	= 488,
    V6_st0	= 489,
    V6_stn0	= 490,
    V6_stnnt0	= 491,
    V6_stnp0	= 492,
    V6_stnpnt0	= 493,
    V6_stnq0	= 494,
    V6_stnqnt0	= 495,
    V6_stnt0	= 496,
    V6_stp0	= 497,
    V6_stpnt0	= 498,
    V6_stq0	= 499,
    V6_stqnt0	= 500,
    V6_stu0	= 501,
    V6_stunp0	= 502,
    V6_stup0	= 503,
    V6_v6mpyhubs10_alt	= 504,
    V6_v6mpyvubs10_alt	= 505,
    V6_vabsb_alt	= 506,
    V6_vabsb_sat_alt	= 507,
    V6_vabsdiffh_alt	= 508,
    V6_vabsdiffub_alt	= 509,
    V6_vabsdiffuh_alt	= 510,
    V6_vabsdiffw_alt	= 511,
    V6_vabsh_alt	= 512,
    V6_vabsh_sat_alt	= 513,
    V6_vabsub_alt	= 514,
    V6_vabsuh_alt	= 515,
    V6_vabsuw_alt	= 516,
    V6_vabsw_alt	= 517,
    V6_vabsw_sat_alt	= 518,
    V6_vaddb_alt	= 519,
    V6_vaddb_dv_alt	= 520,
    V6_vaddbnq_alt	= 521,
    V6_vaddbq_alt	= 522,
    V6_vaddbsat_alt	= 523,
    V6_vaddbsat_dv_alt	= 524,
    V6_vaddh_alt	= 525,
    V6_vaddh_dv_alt	= 526,
    V6_vaddhnq_alt	= 527,
    V6_vaddhq_alt	= 528,
    V6_vaddhsat_alt	= 529,
    V6_vaddhsat_dv_alt	= 530,
    V6_vaddhw_acc_alt	= 531,
    V6_vaddhw_alt	= 532,
    V6_vaddubh_acc_alt	= 533,
    V6_vaddubh_alt	= 534,
    V6_vaddubsat_alt	= 535,
    V6_vaddubsat_dv_alt	= 536,
    V6_vadduhsat_alt	= 537,
    V6_vadduhsat_dv_alt	= 538,
    V6_vadduhw_acc_alt	= 539,
    V6_vadduhw_alt	= 540,
    V6_vadduwsat_alt	= 541,
    V6_vadduwsat_dv_alt	= 542,
    V6_vaddw_alt	= 543,
    V6_vaddw_dv_alt	= 544,
    V6_vaddwnq_alt	= 545,
    V6_vaddwq_alt	= 546,
    V6_vaddwsat_alt	= 547,
    V6_vaddwsat_dv_alt	= 548,
    V6_vandnqrt_acc_alt	= 549,
    V6_vandnqrt_alt	= 550,
    V6_vandqrt_acc_alt	= 551,
    V6_vandqrt_alt	= 552,
    V6_vandvrt_acc_alt	= 553,
    V6_vandvrt_alt	= 554,
    V6_vaslh_acc_alt	= 555,
    V6_vaslh_alt	= 556,
    V6_vaslhv_alt	= 557,
    V6_vaslw_acc_alt	= 558,
    V6_vaslw_alt	= 559,
    V6_vaslwv_alt	= 560,
    V6_vasr_into_alt	= 561,
    V6_vasrh_acc_alt	= 562,
    V6_vasrh_alt	= 563,
    V6_vasrhv_alt	= 564,
    V6_vasrw_acc_alt	= 565,
    V6_vasrw_alt	= 566,
    V6_vasrwv_alt	= 567,
    V6_vassignp	= 568,
    V6_vavgb_alt	= 569,
    V6_vavgbrnd_alt	= 570,
    V6_vavgh_alt	= 571,
    V6_vavghrnd_alt	= 572,
    V6_vavgub_alt	= 573,
    V6_vavgubrnd_alt	= 574,
    V6_vavguh_alt	= 575,
    V6_vavguhrnd_alt	= 576,
    V6_vavguw_alt	= 577,
    V6_vavguwrnd_alt	= 578,
    V6_vavgw_alt	= 579,
    V6_vavgwrnd_alt	= 580,
    V6_vcl0h_alt	= 581,
    V6_vcl0w_alt	= 582,
    V6_vd0	= 583,
    V6_vdd0	= 584,
    V6_vdealb4w_alt	= 585,
    V6_vdealb_alt	= 586,
    V6_vdealh_alt	= 587,
    V6_vdmpybus_acc_alt	= 588,
    V6_vdmpybus_alt	= 589,
    V6_vdmpybus_dv_acc_alt	= 590,
    V6_vdmpybus_dv_alt	= 591,
    V6_vdmpyhb_acc_alt	= 592,
    V6_vdmpyhb_alt	= 593,
    V6_vdmpyhb_dv_acc_alt	= 594,
    V6_vdmpyhb_dv_alt	= 595,
    V6_vdmpyhisat_acc_alt	= 596,
    V6_vdmpyhisat_alt	= 597,
    V6_vdmpyhsat_acc_alt	= 598,
    V6_vdmpyhsat_alt	= 599,
    V6_vdmpyhsuisat_acc_alt	= 600,
    V6_vdmpyhsuisat_alt	= 601,
    V6_vdmpyhsusat_acc_alt	= 602,
    V6_vdmpyhsusat_alt	= 603,
    V6_vdmpyhvsat_acc_alt	= 604,
    V6_vdmpyhvsat_alt	= 605,
    V6_vdsaduh_acc_alt	= 606,
    V6_vdsaduh_alt	= 607,
    V6_vgathermh_pseudo	= 608,
    V6_vgathermhq_pseudo	= 609,
    V6_vgathermhw_pseudo	= 610,
    V6_vgathermhwq_pseudo	= 611,
    V6_vgathermw_pseudo	= 612,
    V6_vgathermwq_pseudo	= 613,
    V6_vlsrh_alt	= 614,
    V6_vlsrhv_alt	= 615,
    V6_vlsrw_alt	= 616,
    V6_vlsrwv_alt	= 617,
    V6_vmaxb_alt	= 618,
    V6_vmaxh_alt	= 619,
    V6_vmaxub_alt	= 620,
    V6_vmaxuh_alt	= 621,
    V6_vmaxw_alt	= 622,
    V6_vminb_alt	= 623,
    V6_vminh_alt	= 624,
    V6_vminub_alt	= 625,
    V6_vminuh_alt	= 626,
    V6_vminw_alt	= 627,
    V6_vmpabus_acc_alt	= 628,
    V6_vmpabus_alt	= 629,
    V6_vmpabusv_alt	= 630,
    V6_vmpabuu_acc_alt	= 631,
    V6_vmpabuu_alt	= 632,
    V6_vmpabuuv_alt	= 633,
    V6_vmpahb_acc_alt	= 634,
    V6_vmpahb_alt	= 635,
    V6_vmpauhb_acc_alt	= 636,
    V6_vmpauhb_alt	= 637,
    V6_vmpybus_acc_alt	= 638,
    V6_vmpybus_alt	= 639,
    V6_vmpybusv_acc_alt	= 640,
    V6_vmpybusv_alt	= 641,
    V6_vmpybv_acc_alt	= 642,
    V6_vmpybv_alt	= 643,
    V6_vmpyewuh_alt	= 644,
    V6_vmpyh_acc_alt	= 645,
    V6_vmpyh_alt	= 646,
    V6_vmpyhsat_acc_alt	= 647,
    V6_vmpyhsrs_alt	= 648,
    V6_vmpyhss_alt	= 649,
    V6_vmpyhus_acc_alt	= 650,
    V6_vmpyhus_alt	= 651,
    V6_vmpyhv_acc_alt	= 652,
    V6_vmpyhv_alt	= 653,
    V6_vmpyhvsrs_alt	= 654,
    V6_vmpyiewh_acc_alt	= 655,
    V6_vmpyiewuh_acc_alt	= 656,
    V6_vmpyiewuh_alt	= 657,
    V6_vmpyih_acc_alt	= 658,
    V6_vmpyih_alt	= 659,
    V6_vmpyihb_acc_alt	= 660,
    V6_vmpyihb_alt	= 661,
    V6_vmpyiowh_alt	= 662,
    V6_vmpyiwb_acc_alt	= 663,
    V6_vmpyiwb_alt	= 664,
    V6_vmpyiwh_acc_alt	= 665,
    V6_vmpyiwh_alt	= 666,
    V6_vmpyiwub_acc_alt	= 667,
    V6_vmpyiwub_alt	= 668,
    V6_vmpyowh_alt	= 669,
    V6_vmpyowh_rnd_alt	= 670,
    V6_vmpyowh_rnd_sacc_alt	= 671,
    V6_vmpyowh_sacc_alt	= 672,
    V6_vmpyub_acc_alt	= 673,
    V6_vmpyub_alt	= 674,
    V6_vmpyubv_acc_alt	= 675,
    V6_vmpyubv_alt	= 676,
    V6_vmpyuh_acc_alt	= 677,
    V6_vmpyuh_alt	= 678,
    V6_vmpyuhv_acc_alt	= 679,
    V6_vmpyuhv_alt	= 680,
    V6_vnavgb_alt	= 681,
    V6_vnavgh_alt	= 682,
    V6_vnavgub_alt	= 683,
    V6_vnavgw_alt	= 684,
    V6_vnormamth_alt	= 685,
    V6_vnormamtw_alt	= 686,
    V6_vpackeb_alt	= 687,
    V6_vpackeh_alt	= 688,
    V6_vpackhb_sat_alt	= 689,
    V6_vpackhub_sat_alt	= 690,
    V6_vpackob_alt	= 691,
    V6_vpackoh_alt	= 692,
    V6_vpackwh_sat_alt	= 693,
    V6_vpackwuh_sat_alt	= 694,
    V6_vpopcounth_alt	= 695,
    V6_vrmpybub_rtt_acc_alt	= 696,
    V6_vrmpybub_rtt_alt	= 697,
    V6_vrmpybus_acc_alt	= 698,
    V6_vrmpybus_alt	= 699,
    V6_vrmpybusi_acc_alt	= 700,
    V6_vrmpybusi_alt	= 701,
    V6_vrmpybusv_acc_alt	= 702,
    V6_vrmpybusv_alt	= 703,
    V6_vrmpybv_acc_alt	= 704,
    V6_vrmpybv_alt	= 705,
    V6_vrmpyub_acc_alt	= 706,
    V6_vrmpyub_alt	= 707,
    V6_vrmpyub_rtt_acc_alt	= 708,
    V6_vrmpyub_rtt_alt	= 709,
    V6_vrmpyubi_acc_alt	= 710,
    V6_vrmpyubi_alt	= 711,
    V6_vrmpyubv_acc_alt	= 712,
    V6_vrmpyubv_alt	= 713,
    V6_vrotr_alt	= 714,
    V6_vroundhb_alt	= 715,
    V6_vroundhub_alt	= 716,
    V6_vrounduhub_alt	= 717,
    V6_vrounduwuh_alt	= 718,
    V6_vroundwh_alt	= 719,
    V6_vroundwuh_alt	= 720,
    V6_vrsadubi_acc_alt	= 721,
    V6_vrsadubi_alt	= 722,
    V6_vsathub_alt	= 723,
    V6_vsatuwuh_alt	= 724,
    V6_vsatwh_alt	= 725,
    V6_vsb_alt	= 726,
    V6_vscattermh_add_alt	= 727,
    V6_vscattermh_alt	= 728,
    V6_vscattermhq_alt	= 729,
    V6_vscattermw_add_alt	= 730,
    V6_vscattermw_alt	= 731,
    V6_vscattermwh_add_alt	= 732,
    V6_vscattermwh_alt	= 733,
    V6_vscattermwhq_alt	= 734,
    V6_vscattermwq_alt	= 735,
    V6_vsh_alt	= 736,
    V6_vshufeh_alt	= 737,
    V6_vshuffb_alt	= 738,
    V6_vshuffeb_alt	= 739,
    V6_vshuffh_alt	= 740,
    V6_vshuffob_alt	= 741,
    V6_vshufoeb_alt	= 742,
    V6_vshufoeh_alt	= 743,
    V6_vshufoh_alt	= 744,
    V6_vsubb_alt	= 745,
    V6_vsubb_dv_alt	= 746,
    V6_vsubbnq_alt	= 747,
    V6_vsubbq_alt	= 748,
    V6_vsubbsat_alt	= 749,
    V6_vsubbsat_dv_alt	= 750,
    V6_vsubh_alt	= 751,
    V6_vsubh_dv_alt	= 752,
    V6_vsubhnq_alt	= 753,
    V6_vsubhq_alt	= 754,
    V6_vsubhsat_alt	= 755,
    V6_vsubhsat_dv_alt	= 756,
    V6_vsubhw_alt	= 757,
    V6_vsububh_alt	= 758,
    V6_vsububsat_alt	= 759,
    V6_vsububsat_dv_alt	= 760,
    V6_vsubuhsat_alt	= 761,
    V6_vsubuhsat_dv_alt	= 762,
    V6_vsubuhw_alt	= 763,
    V6_vsubuwsat_alt	= 764,
    V6_vsubuwsat_dv_alt	= 765,
    V6_vsubw_alt	= 766,
    V6_vsubw_dv_alt	= 767,
    V6_vsubwnq_alt	= 768,
    V6_vsubwq_alt	= 769,
    V6_vsubwsat_alt	= 770,
    V6_vsubwsat_dv_alt	= 771,
    V6_vtmpyb_acc_alt	= 772,
    V6_vtmpyb_alt	= 773,
    V6_vtmpybus_acc_alt	= 774,
    V6_vtmpybus_alt	= 775,
    V6_vtmpyhb_acc_alt	= 776,
    V6_vtmpyhb_alt	= 777,
    V6_vtran2x2_map	= 778,
    V6_vunpackb_alt	= 779,
    V6_vunpackh_alt	= 780,
    V6_vunpackob_alt	= 781,
    V6_vunpackoh_alt	= 782,
    V6_vunpackub_alt	= 783,
    V6_vunpackuh_alt	= 784,
    V6_vzb_alt	= 785,
    V6_vzh_alt	= 786,
    V6_zld0	= 787,
    V6_zldp0	= 788,
    Y2_dcfetch	= 789,
    dup_A2_add	= 790,
    dup_A2_addi	= 791,
    dup_A2_andir	= 792,
    dup_A2_combineii	= 793,
    dup_A2_sxtb	= 794,
    dup_A2_sxth	= 795,
    dup_A2_tfr	= 796,
    dup_A2_tfrsi	= 797,
    dup_A2_zxtb	= 798,
    dup_A2_zxth	= 799,
    dup_A4_combineii	= 800,
    dup_A4_combineir	= 801,
    dup_A4_combineri	= 802,
    dup_C2_cmoveif	= 803,
    dup_C2_cmoveit	= 804,
    dup_C2_cmovenewif	= 805,
    dup_C2_cmovenewit	= 806,
    dup_C2_cmpeqi	= 807,
    dup_L2_deallocframe	= 808,
    dup_L2_loadrb_io	= 809,
    dup_L2_loadrd_io	= 810,
    dup_L2_loadrh_io	= 811,
    dup_L2_loadri_io	= 812,
    dup_L2_loadrub_io	= 813,
    dup_L2_loadruh_io	= 814,
    dup_S2_allocframe	= 815,
    dup_S2_storerb_io	= 816,
    dup_S2_storerd_io	= 817,
    dup_S2_storerh_io	= 818,
    dup_S2_storeri_io	= 819,
    dup_S4_storeirb_io	= 820,
    dup_S4_storeiri_io	= 821,
    A2_abs	= 822,
    A2_absp	= 823,
    A2_abssat	= 824,
    A2_add	= 825,
    A2_addh_h16_hh	= 826,
    A2_addh_h16_hl	= 827,
    A2_addh_h16_lh	= 828,
    A2_addh_h16_ll	= 829,
    A2_addh_h16_sat_hh	= 830,
    A2_addh_h16_sat_hl	= 831,
    A2_addh_h16_sat_lh	= 832,
    A2_addh_h16_sat_ll	= 833,
    A2_addh_l16_hl	= 834,
    A2_addh_l16_ll	= 835,
    A2_addh_l16_sat_hl	= 836,
    A2_addh_l16_sat_ll	= 837,
    A2_addi	= 838,
    A2_addp	= 839,
    A2_addpsat	= 840,
    A2_addsat	= 841,
    A2_addsph	= 842,
    A2_addspl	= 843,
    A2_and	= 844,
    A2_andir	= 845,
    A2_andp	= 846,
    A2_aslh	= 847,
    A2_asrh	= 848,
    A2_combine_hh	= 849,
    A2_combine_hl	= 850,
    A2_combine_lh	= 851,
    A2_combine_ll	= 852,
    A2_combineii	= 853,
    A2_combinew	= 854,
    A2_max	= 855,
    A2_maxp	= 856,
    A2_maxu	= 857,
    A2_maxup	= 858,
    A2_min	= 859,
    A2_minp	= 860,
    A2_minu	= 861,
    A2_minup	= 862,
    A2_negp	= 863,
    A2_negsat	= 864,
    A2_nop	= 865,
    A2_notp	= 866,
    A2_or	= 867,
    A2_orir	= 868,
    A2_orp	= 869,
    A2_paddf	= 870,
    A2_paddfnew	= 871,
    A2_paddif	= 872,
    A2_paddifnew	= 873,
    A2_paddit	= 874,
    A2_padditnew	= 875,
    A2_paddt	= 876,
    A2_paddtnew	= 877,
    A2_pandf	= 878,
    A2_pandfnew	= 879,
    A2_pandt	= 880,
    A2_pandtnew	= 881,
    A2_porf	= 882,
    A2_porfnew	= 883,
    A2_port	= 884,
    A2_portnew	= 885,
    A2_psubf	= 886,
    A2_psubfnew	= 887,
    A2_psubt	= 888,
    A2_psubtnew	= 889,
    A2_pxorf	= 890,
    A2_pxorfnew	= 891,
    A2_pxort	= 892,
    A2_pxortnew	= 893,
    A2_roundsat	= 894,
    A2_sat	= 895,
    A2_satb	= 896,
    A2_sath	= 897,
    A2_satub	= 898,
    A2_satuh	= 899,
    A2_sub	= 900,
    A2_subh_h16_hh	= 901,
    A2_subh_h16_hl	= 902,
    A2_subh_h16_lh	= 903,
    A2_subh_h16_ll	= 904,
    A2_subh_h16_sat_hh	= 905,
    A2_subh_h16_sat_hl	= 906,
    A2_subh_h16_sat_lh	= 907,
    A2_subh_h16_sat_ll	= 908,
    A2_subh_l16_hl	= 909,
    A2_subh_l16_ll	= 910,
    A2_subh_l16_sat_hl	= 911,
    A2_subh_l16_sat_ll	= 912,
    A2_subp	= 913,
    A2_subri	= 914,
    A2_subsat	= 915,
    A2_svaddh	= 916,
    A2_svaddhs	= 917,
    A2_svadduhs	= 918,
    A2_svavgh	= 919,
    A2_svavghs	= 920,
    A2_svnavgh	= 921,
    A2_svsubh	= 922,
    A2_svsubhs	= 923,
    A2_svsubuhs	= 924,
    A2_swiz	= 925,
    A2_sxtb	= 926,
    A2_sxth	= 927,
    A2_sxtw	= 928,
    A2_tfr	= 929,
    A2_tfrcrr	= 930,
    A2_tfrih	= 931,
    A2_tfril	= 932,
    A2_tfrrcr	= 933,
    A2_tfrsi	= 934,
    A2_vabsh	= 935,
    A2_vabshsat	= 936,
    A2_vabsw	= 937,
    A2_vabswsat	= 938,
    A2_vaddh	= 939,
    A2_vaddhs	= 940,
    A2_vaddub	= 941,
    A2_vaddubs	= 942,
    A2_vadduhs	= 943,
    A2_vaddw	= 944,
    A2_vaddws	= 945,
    A2_vavgh	= 946,
    A2_vavghcr	= 947,
    A2_vavghr	= 948,
    A2_vavgub	= 949,
    A2_vavgubr	= 950,
    A2_vavguh	= 951,
    A2_vavguhr	= 952,
    A2_vavguw	= 953,
    A2_vavguwr	= 954,
    A2_vavgw	= 955,
    A2_vavgwcr	= 956,
    A2_vavgwr	= 957,
    A2_vcmpbeq	= 958,
    A2_vcmpbgtu	= 959,
    A2_vcmpheq	= 960,
    A2_vcmphgt	= 961,
    A2_vcmphgtu	= 962,
    A2_vcmpweq	= 963,
    A2_vcmpwgt	= 964,
    A2_vcmpwgtu	= 965,
    A2_vconj	= 966,
    A2_vmaxb	= 967,
    A2_vmaxh	= 968,
    A2_vmaxub	= 969,
    A2_vmaxuh	= 970,
    A2_vmaxuw	= 971,
    A2_vmaxw	= 972,
    A2_vminb	= 973,
    A2_vminh	= 974,
    A2_vminub	= 975,
    A2_vminuh	= 976,
    A2_vminuw	= 977,
    A2_vminw	= 978,
    A2_vnavgh	= 979,
    A2_vnavghcr	= 980,
    A2_vnavghr	= 981,
    A2_vnavgw	= 982,
    A2_vnavgwcr	= 983,
    A2_vnavgwr	= 984,
    A2_vraddub	= 985,
    A2_vraddub_acc	= 986,
    A2_vrsadub	= 987,
    A2_vrsadub_acc	= 988,
    A2_vsubh	= 989,
    A2_vsubhs	= 990,
    A2_vsubub	= 991,
    A2_vsububs	= 992,
    A2_vsubuhs	= 993,
    A2_vsubw	= 994,
    A2_vsubws	= 995,
    A2_xor	= 996,
    A2_xorp	= 997,
    A2_zxth	= 998,
    A4_addp_c	= 999,
    A4_andn	= 1000,
    A4_andnp	= 1001,
    A4_bitsplit	= 1002,
    A4_bitspliti	= 1003,
    A4_boundscheck_hi	= 1004,
    A4_boundscheck_lo	= 1005,
    A4_cmpbeq	= 1006,
    A4_cmpbeqi	= 1007,
    A4_cmpbgt	= 1008,
    A4_cmpbgti	= 1009,
    A4_cmpbgtu	= 1010,
    A4_cmpbgtui	= 1011,
    A4_cmpheq	= 1012,
    A4_cmpheqi	= 1013,
    A4_cmphgt	= 1014,
    A4_cmphgti	= 1015,
    A4_cmphgtu	= 1016,
    A4_cmphgtui	= 1017,
    A4_combineii	= 1018,
    A4_combineir	= 1019,
    A4_combineri	= 1020,
    A4_cround_ri	= 1021,
    A4_cround_rr	= 1022,
    A4_ext	= 1023,
    A4_modwrapu	= 1024,
    A4_orn	= 1025,
    A4_ornp	= 1026,
    A4_paslhf	= 1027,
    A4_paslhfnew	= 1028,
    A4_paslht	= 1029,
    A4_paslhtnew	= 1030,
    A4_pasrhf	= 1031,
    A4_pasrhfnew	= 1032,
    A4_pasrht	= 1033,
    A4_pasrhtnew	= 1034,
    A4_psxtbf	= 1035,
    A4_psxtbfnew	= 1036,
    A4_psxtbt	= 1037,
    A4_psxtbtnew	= 1038,
    A4_psxthf	= 1039,
    A4_psxthfnew	= 1040,
    A4_psxtht	= 1041,
    A4_psxthtnew	= 1042,
    A4_pzxtbf	= 1043,
    A4_pzxtbfnew	= 1044,
    A4_pzxtbt	= 1045,
    A4_pzxtbtnew	= 1046,
    A4_pzxthf	= 1047,
    A4_pzxthfnew	= 1048,
    A4_pzxtht	= 1049,
    A4_pzxthtnew	= 1050,
    A4_rcmpeq	= 1051,
    A4_rcmpeqi	= 1052,
    A4_rcmpneq	= 1053,
    A4_rcmpneqi	= 1054,
    A4_round_ri	= 1055,
    A4_round_ri_sat	= 1056,
    A4_round_rr	= 1057,
    A4_round_rr_sat	= 1058,
    A4_subp_c	= 1059,
    A4_tfrcpp	= 1060,
    A4_tfrpcp	= 1061,
    A4_tlbmatch	= 1062,
    A4_vcmpbeq_any	= 1063,
    A4_vcmpbeqi	= 1064,
    A4_vcmpbgt	= 1065,
    A4_vcmpbgti	= 1066,
    A4_vcmpbgtui	= 1067,
    A4_vcmpheqi	= 1068,
    A4_vcmphgti	= 1069,
    A4_vcmphgtui	= 1070,
    A4_vcmpweqi	= 1071,
    A4_vcmpwgti	= 1072,
    A4_vcmpwgtui	= 1073,
    A4_vrmaxh	= 1074,
    A4_vrmaxuh	= 1075,
    A4_vrmaxuw	= 1076,
    A4_vrmaxw	= 1077,
    A4_vrminh	= 1078,
    A4_vrminuh	= 1079,
    A4_vrminuw	= 1080,
    A4_vrminw	= 1081,
    A5_ACS	= 1082,
    A5_vaddhubs	= 1083,
    A6_vcmpbeq_notany	= 1084,
    A6_vminub_RdP	= 1085,
    A7_clip	= 1086,
    A7_croundd_ri	= 1087,
    A7_croundd_rr	= 1088,
    A7_vclip	= 1089,
    C2_all8	= 1090,
    C2_and	= 1091,
    C2_andn	= 1092,
    C2_any8	= 1093,
    C2_bitsclr	= 1094,
    C2_bitsclri	= 1095,
    C2_bitsset	= 1096,
    C2_ccombinewf	= 1097,
    C2_ccombinewnewf	= 1098,
    C2_ccombinewnewt	= 1099,
    C2_ccombinewt	= 1100,
    C2_cmoveif	= 1101,
    C2_cmoveit	= 1102,
    C2_cmovenewif	= 1103,
    C2_cmovenewit	= 1104,
    C2_cmpeq	= 1105,
    C2_cmpeqi	= 1106,
    C2_cmpeqp	= 1107,
    C2_cmpgt	= 1108,
    C2_cmpgti	= 1109,
    C2_cmpgtp	= 1110,
    C2_cmpgtu	= 1111,
    C2_cmpgtui	= 1112,
    C2_cmpgtup	= 1113,
    C2_mask	= 1114,
    C2_mux	= 1115,
    C2_muxii	= 1116,
    C2_muxir	= 1117,
    C2_muxri	= 1118,
    C2_not	= 1119,
    C2_or	= 1120,
    C2_orn	= 1121,
    C2_tfrpr	= 1122,
    C2_tfrrp	= 1123,
    C2_vitpack	= 1124,
    C2_vmux	= 1125,
    C2_xor	= 1126,
    C4_addipc	= 1127,
    C4_and_and	= 1128,
    C4_and_andn	= 1129,
    C4_and_or	= 1130,
    C4_and_orn	= 1131,
    C4_cmplte	= 1132,
    C4_cmpltei	= 1133,
    C4_cmplteu	= 1134,
    C4_cmplteui	= 1135,
    C4_cmpneq	= 1136,
    C4_cmpneqi	= 1137,
    C4_fastcorner9	= 1138,
    C4_fastcorner9_not	= 1139,
    C4_nbitsclr	= 1140,
    C4_nbitsclri	= 1141,
    C4_nbitsset	= 1142,
    C4_or_and	= 1143,
    C4_or_andn	= 1144,
    C4_or_or	= 1145,
    C4_or_orn	= 1146,
    CALLProfile	= 1147,
    CONST32	= 1148,
    CONST64	= 1149,
    DuplexIClass0	= 1150,
    DuplexIClass1	= 1151,
    DuplexIClass2	= 1152,
    DuplexIClass3	= 1153,
    DuplexIClass4	= 1154,
    DuplexIClass5	= 1155,
    DuplexIClass6	= 1156,
    DuplexIClass7	= 1157,
    DuplexIClass8	= 1158,
    DuplexIClass9	= 1159,
    DuplexIClassA	= 1160,
    DuplexIClassB	= 1161,
    DuplexIClassC	= 1162,
    DuplexIClassD	= 1163,
    DuplexIClassE	= 1164,
    DuplexIClassF	= 1165,
    EH_RETURN_JMPR	= 1166,
    F2_conv_d2df	= 1167,
    F2_conv_d2sf	= 1168,
    F2_conv_df2d	= 1169,
    F2_conv_df2d_chop	= 1170,
    F2_conv_df2sf	= 1171,
    F2_conv_df2ud	= 1172,
    F2_conv_df2ud_chop	= 1173,
    F2_conv_df2uw	= 1174,
    F2_conv_df2uw_chop	= 1175,
    F2_conv_df2w	= 1176,
    F2_conv_df2w_chop	= 1177,
    F2_conv_sf2d	= 1178,
    F2_conv_sf2d_chop	= 1179,
    F2_conv_sf2df	= 1180,
    F2_conv_sf2ud	= 1181,
    F2_conv_sf2ud_chop	= 1182,
    F2_conv_sf2uw	= 1183,
    F2_conv_sf2uw_chop	= 1184,
    F2_conv_sf2w	= 1185,
    F2_conv_sf2w_chop	= 1186,
    F2_conv_ud2df	= 1187,
    F2_conv_ud2sf	= 1188,
    F2_conv_uw2df	= 1189,
    F2_conv_uw2sf	= 1190,
    F2_conv_w2df	= 1191,
    F2_conv_w2sf	= 1192,
    F2_dfadd	= 1193,
    F2_dfclass	= 1194,
    F2_dfcmpeq	= 1195,
    F2_dfcmpge	= 1196,
    F2_dfcmpgt	= 1197,
    F2_dfcmpuo	= 1198,
    F2_dfimm_n	= 1199,
    F2_dfimm_p	= 1200,
    F2_dfmax	= 1201,
    F2_dfmin	= 1202,
    F2_dfmpyfix	= 1203,
    F2_dfmpyhh	= 1204,
    F2_dfmpylh	= 1205,
    F2_dfmpyll	= 1206,
    F2_dfsub	= 1207,
    F2_sfadd	= 1208,
    F2_sfclass	= 1209,
    F2_sfcmpeq	= 1210,
    F2_sfcmpge	= 1211,
    F2_sfcmpgt	= 1212,
    F2_sfcmpuo	= 1213,
    F2_sffixupd	= 1214,
    F2_sffixupn	= 1215,
    F2_sffixupr	= 1216,
    F2_sffma	= 1217,
    F2_sffma_lib	= 1218,
    F2_sffma_sc	= 1219,
    F2_sffms	= 1220,
    F2_sffms_lib	= 1221,
    F2_sfimm_n	= 1222,
    F2_sfimm_p	= 1223,
    F2_sfinvsqrta	= 1224,
    F2_sfmax	= 1225,
    F2_sfmin	= 1226,
    F2_sfmpy	= 1227,
    F2_sfrecipa	= 1228,
    F2_sfsub	= 1229,
    G4_tfrgcpp	= 1230,
    G4_tfrgcrr	= 1231,
    G4_tfrgpcp	= 1232,
    G4_tfrgrcr	= 1233,
    HI	= 1234,
    J2_call	= 1235,
    J2_callf	= 1236,
    J2_callr	= 1237,
    J2_callrf	= 1238,
    J2_callrt	= 1239,
    J2_callt	= 1240,
    J2_jump	= 1241,
    J2_jumpf	= 1242,
    J2_jumpfnew	= 1243,
    J2_jumpfnewpt	= 1244,
    J2_jumpfpt	= 1245,
    J2_jumpr	= 1246,
    J2_jumprf	= 1247,
    J2_jumprfnew	= 1248,
    J2_jumprfnewpt	= 1249,
    J2_jumprfpt	= 1250,
    J2_jumprgtez	= 1251,
    J2_jumprgtezpt	= 1252,
    J2_jumprltez	= 1253,
    J2_jumprltezpt	= 1254,
    J2_jumprnz	= 1255,
    J2_jumprnzpt	= 1256,
    J2_jumprt	= 1257,
    J2_jumprtnew	= 1258,
    J2_jumprtnewpt	= 1259,
    J2_jumprtpt	= 1260,
    J2_jumprz	= 1261,
    J2_jumprzpt	= 1262,
    J2_jumpt	= 1263,
    J2_jumptnew	= 1264,
    J2_jumptnewpt	= 1265,
    J2_jumptpt	= 1266,
    J2_loop0i	= 1267,
    J2_loop0iext	= 1268,
    J2_loop0r	= 1269,
    J2_loop0rext	= 1270,
    J2_loop1i	= 1271,
    J2_loop1iext	= 1272,
    J2_loop1r	= 1273,
    J2_loop1rext	= 1274,
    J2_pause	= 1275,
    J2_ploop1si	= 1276,
    J2_ploop1sr	= 1277,
    J2_ploop2si	= 1278,
    J2_ploop2sr	= 1279,
    J2_ploop3si	= 1280,
    J2_ploop3sr	= 1281,
    J2_trap0	= 1282,
    J2_trap1	= 1283,
    J4_cmpeq_f_jumpnv_nt	= 1284,
    J4_cmpeq_f_jumpnv_t	= 1285,
    J4_cmpeq_fp0_jump_nt	= 1286,
    J4_cmpeq_fp0_jump_t	= 1287,
    J4_cmpeq_fp1_jump_nt	= 1288,
    J4_cmpeq_fp1_jump_t	= 1289,
    J4_cmpeq_t_jumpnv_nt	= 1290,
    J4_cmpeq_t_jumpnv_t	= 1291,
    J4_cmpeq_tp0_jump_nt	= 1292,
    J4_cmpeq_tp0_jump_t	= 1293,
    J4_cmpeq_tp1_jump_nt	= 1294,
    J4_cmpeq_tp1_jump_t	= 1295,
    J4_cmpeqi_f_jumpnv_nt	= 1296,
    J4_cmpeqi_f_jumpnv_t	= 1297,
    J4_cmpeqi_fp0_jump_nt	= 1298,
    J4_cmpeqi_fp0_jump_t	= 1299,
    J4_cmpeqi_fp1_jump_nt	= 1300,
    J4_cmpeqi_fp1_jump_t	= 1301,
    J4_cmpeqi_t_jumpnv_nt	= 1302,
    J4_cmpeqi_t_jumpnv_t	= 1303,
    J4_cmpeqi_tp0_jump_nt	= 1304,
    J4_cmpeqi_tp0_jump_t	= 1305,
    J4_cmpeqi_tp1_jump_nt	= 1306,
    J4_cmpeqi_tp1_jump_t	= 1307,
    J4_cmpeqn1_f_jumpnv_nt	= 1308,
    J4_cmpeqn1_f_jumpnv_t	= 1309,
    J4_cmpeqn1_fp0_jump_nt	= 1310,
    J4_cmpeqn1_fp0_jump_t	= 1311,
    J4_cmpeqn1_fp1_jump_nt	= 1312,
    J4_cmpeqn1_fp1_jump_t	= 1313,
    J4_cmpeqn1_t_jumpnv_nt	= 1314,
    J4_cmpeqn1_t_jumpnv_t	= 1315,
    J4_cmpeqn1_tp0_jump_nt	= 1316,
    J4_cmpeqn1_tp0_jump_t	= 1317,
    J4_cmpeqn1_tp1_jump_nt	= 1318,
    J4_cmpeqn1_tp1_jump_t	= 1319,
    J4_cmpgt_f_jumpnv_nt	= 1320,
    J4_cmpgt_f_jumpnv_t	= 1321,
    J4_cmpgt_fp0_jump_nt	= 1322,
    J4_cmpgt_fp0_jump_t	= 1323,
    J4_cmpgt_fp1_jump_nt	= 1324,
    J4_cmpgt_fp1_jump_t	= 1325,
    J4_cmpgt_t_jumpnv_nt	= 1326,
    J4_cmpgt_t_jumpnv_t	= 1327,
    J4_cmpgt_tp0_jump_nt	= 1328,
    J4_cmpgt_tp0_jump_t	= 1329,
    J4_cmpgt_tp1_jump_nt	= 1330,
    J4_cmpgt_tp1_jump_t	= 1331,
    J4_cmpgti_f_jumpnv_nt	= 1332,
    J4_cmpgti_f_jumpnv_t	= 1333,
    J4_cmpgti_fp0_jump_nt	= 1334,
    J4_cmpgti_fp0_jump_t	= 1335,
    J4_cmpgti_fp1_jump_nt	= 1336,
    J4_cmpgti_fp1_jump_t	= 1337,
    J4_cmpgti_t_jumpnv_nt	= 1338,
    J4_cmpgti_t_jumpnv_t	= 1339,
    J4_cmpgti_tp0_jump_nt	= 1340,
    J4_cmpgti_tp0_jump_t	= 1341,
    J4_cmpgti_tp1_jump_nt	= 1342,
    J4_cmpgti_tp1_jump_t	= 1343,
    J4_cmpgtn1_f_jumpnv_nt	= 1344,
    J4_cmpgtn1_f_jumpnv_t	= 1345,
    J4_cmpgtn1_fp0_jump_nt	= 1346,
    J4_cmpgtn1_fp0_jump_t	= 1347,
    J4_cmpgtn1_fp1_jump_nt	= 1348,
    J4_cmpgtn1_fp1_jump_t	= 1349,
    J4_cmpgtn1_t_jumpnv_nt	= 1350,
    J4_cmpgtn1_t_jumpnv_t	= 1351,
    J4_cmpgtn1_tp0_jump_nt	= 1352,
    J4_cmpgtn1_tp0_jump_t	= 1353,
    J4_cmpgtn1_tp1_jump_nt	= 1354,
    J4_cmpgtn1_tp1_jump_t	= 1355,
    J4_cmpgtu_f_jumpnv_nt	= 1356,
    J4_cmpgtu_f_jumpnv_t	= 1357,
    J4_cmpgtu_fp0_jump_nt	= 1358,
    J4_cmpgtu_fp0_jump_t	= 1359,
    J4_cmpgtu_fp1_jump_nt	= 1360,
    J4_cmpgtu_fp1_jump_t	= 1361,
    J4_cmpgtu_t_jumpnv_nt	= 1362,
    J4_cmpgtu_t_jumpnv_t	= 1363,
    J4_cmpgtu_tp0_jump_nt	= 1364,
    J4_cmpgtu_tp0_jump_t	= 1365,
    J4_cmpgtu_tp1_jump_nt	= 1366,
    J4_cmpgtu_tp1_jump_t	= 1367,
    J4_cmpgtui_f_jumpnv_nt	= 1368,
    J4_cmpgtui_f_jumpnv_t	= 1369,
    J4_cmpgtui_fp0_jump_nt	= 1370,
    J4_cmpgtui_fp0_jump_t	= 1371,
    J4_cmpgtui_fp1_jump_nt	= 1372,
    J4_cmpgtui_fp1_jump_t	= 1373,
    J4_cmpgtui_t_jumpnv_nt	= 1374,
    J4_cmpgtui_t_jumpnv_t	= 1375,
    J4_cmpgtui_tp0_jump_nt	= 1376,
    J4_cmpgtui_tp0_jump_t	= 1377,
    J4_cmpgtui_tp1_jump_nt	= 1378,
    J4_cmpgtui_tp1_jump_t	= 1379,
    J4_cmplt_f_jumpnv_nt	= 1380,
    J4_cmplt_f_jumpnv_t	= 1381,
    J4_cmplt_t_jumpnv_nt	= 1382,
    J4_cmplt_t_jumpnv_t	= 1383,
    J4_cmpltu_f_jumpnv_nt	= 1384,
    J4_cmpltu_f_jumpnv_t	= 1385,
    J4_cmpltu_t_jumpnv_nt	= 1386,
    J4_cmpltu_t_jumpnv_t	= 1387,
    J4_hintjumpr	= 1388,
    J4_jumpseti	= 1389,
    J4_jumpsetr	= 1390,
    J4_tstbit0_f_jumpnv_nt	= 1391,
    J4_tstbit0_f_jumpnv_t	= 1392,
    J4_tstbit0_fp0_jump_nt	= 1393,
    J4_tstbit0_fp0_jump_t	= 1394,
    J4_tstbit0_fp1_jump_nt	= 1395,
    J4_tstbit0_fp1_jump_t	= 1396,
    J4_tstbit0_t_jumpnv_nt	= 1397,
    J4_tstbit0_t_jumpnv_t	= 1398,
    J4_tstbit0_tp0_jump_nt	= 1399,
    J4_tstbit0_tp0_jump_t	= 1400,
    J4_tstbit0_tp1_jump_nt	= 1401,
    J4_tstbit0_tp1_jump_t	= 1402,
    L2_deallocframe	= 1403,
    L2_loadalignb_io	= 1404,
    L2_loadalignb_pbr	= 1405,
    L2_loadalignb_pci	= 1406,
    L2_loadalignb_pcr	= 1407,
    L2_loadalignb_pi	= 1408,
    L2_loadalignb_pr	= 1409,
    L2_loadalignh_io	= 1410,
    L2_loadalignh_pbr	= 1411,
    L2_loadalignh_pci	= 1412,
    L2_loadalignh_pcr	= 1413,
    L2_loadalignh_pi	= 1414,
    L2_loadalignh_pr	= 1415,
    L2_loadbsw2_io	= 1416,
    L2_loadbsw2_pbr	= 1417,
    L2_loadbsw2_pci	= 1418,
    L2_loadbsw2_pcr	= 1419,
    L2_loadbsw2_pi	= 1420,
    L2_loadbsw2_pr	= 1421,
    L2_loadbsw4_io	= 1422,
    L2_loadbsw4_pbr	= 1423,
    L2_loadbsw4_pci	= 1424,
    L2_loadbsw4_pcr	= 1425,
    L2_loadbsw4_pi	= 1426,
    L2_loadbsw4_pr	= 1427,
    L2_loadbzw2_io	= 1428,
    L2_loadbzw2_pbr	= 1429,
    L2_loadbzw2_pci	= 1430,
    L2_loadbzw2_pcr	= 1431,
    L2_loadbzw2_pi	= 1432,
    L2_loadbzw2_pr	= 1433,
    L2_loadbzw4_io	= 1434,
    L2_loadbzw4_pbr	= 1435,
    L2_loadbzw4_pci	= 1436,
    L2_loadbzw4_pcr	= 1437,
    L2_loadbzw4_pi	= 1438,
    L2_loadbzw4_pr	= 1439,
    L2_loadrb_io	= 1440,
    L2_loadrb_pbr	= 1441,
    L2_loadrb_pci	= 1442,
    L2_loadrb_pcr	= 1443,
    L2_loadrb_pi	= 1444,
    L2_loadrb_pr	= 1445,
    L2_loadrbgp	= 1446,
    L2_loadrd_io	= 1447,
    L2_loadrd_pbr	= 1448,
    L2_loadrd_pci	= 1449,
    L2_loadrd_pcr	= 1450,
    L2_loadrd_pi	= 1451,
    L2_loadrd_pr	= 1452,
    L2_loadrdgp	= 1453,
    L2_loadrh_io	= 1454,
    L2_loadrh_pbr	= 1455,
    L2_loadrh_pci	= 1456,
    L2_loadrh_pcr	= 1457,
    L2_loadrh_pi	= 1458,
    L2_loadrh_pr	= 1459,
    L2_loadrhgp	= 1460,
    L2_loadri_io	= 1461,
    L2_loadri_pbr	= 1462,
    L2_loadri_pci	= 1463,
    L2_loadri_pcr	= 1464,
    L2_loadri_pi	= 1465,
    L2_loadri_pr	= 1466,
    L2_loadrigp	= 1467,
    L2_loadrub_io	= 1468,
    L2_loadrub_pbr	= 1469,
    L2_loadrub_pci	= 1470,
    L2_loadrub_pcr	= 1471,
    L2_loadrub_pi	= 1472,
    L2_loadrub_pr	= 1473,
    L2_loadrubgp	= 1474,
    L2_loadruh_io	= 1475,
    L2_loadruh_pbr	= 1476,
    L2_loadruh_pci	= 1477,
    L2_loadruh_pcr	= 1478,
    L2_loadruh_pi	= 1479,
    L2_loadruh_pr	= 1480,
    L2_loadruhgp	= 1481,
    L2_loadw_aq	= 1482,
    L2_loadw_locked	= 1483,
    L2_ploadrbf_io	= 1484,
    L2_ploadrbf_pi	= 1485,
    L2_ploadrbfnew_io	= 1486,
    L2_ploadrbfnew_pi	= 1487,
    L2_ploadrbt_io	= 1488,
    L2_ploadrbt_pi	= 1489,
    L2_ploadrbtnew_io	= 1490,
    L2_ploadrbtnew_pi	= 1491,
    L2_ploadrdf_io	= 1492,
    L2_ploadrdf_pi	= 1493,
    L2_ploadrdfnew_io	= 1494,
    L2_ploadrdfnew_pi	= 1495,
    L2_ploadrdt_io	= 1496,
    L2_ploadrdt_pi	= 1497,
    L2_ploadrdtnew_io	= 1498,
    L2_ploadrdtnew_pi	= 1499,
    L2_ploadrhf_io	= 1500,
    L2_ploadrhf_pi	= 1501,
    L2_ploadrhfnew_io	= 1502,
    L2_ploadrhfnew_pi	= 1503,
    L2_ploadrht_io	= 1504,
    L2_ploadrht_pi	= 1505,
    L2_ploadrhtnew_io	= 1506,
    L2_ploadrhtnew_pi	= 1507,
    L2_ploadrif_io	= 1508,
    L2_ploadrif_pi	= 1509,
    L2_ploadrifnew_io	= 1510,
    L2_ploadrifnew_pi	= 1511,
    L2_ploadrit_io	= 1512,
    L2_ploadrit_pi	= 1513,
    L2_ploadritnew_io	= 1514,
    L2_ploadritnew_pi	= 1515,
    L2_ploadrubf_io	= 1516,
    L2_ploadrubf_pi	= 1517,
    L2_ploadrubfnew_io	= 1518,
    L2_ploadrubfnew_pi	= 1519,
    L2_ploadrubt_io	= 1520,
    L2_ploadrubt_pi	= 1521,
    L2_ploadrubtnew_io	= 1522,
    L2_ploadrubtnew_pi	= 1523,
    L2_ploadruhf_io	= 1524,
    L2_ploadruhf_pi	= 1525,
    L2_ploadruhfnew_io	= 1526,
    L2_ploadruhfnew_pi	= 1527,
    L2_ploadruht_io	= 1528,
    L2_ploadruht_pi	= 1529,
    L2_ploadruhtnew_io	= 1530,
    L2_ploadruhtnew_pi	= 1531,
    L4_add_memopb_io	= 1532,
    L4_add_memoph_io	= 1533,
    L4_add_memopw_io	= 1534,
    L4_and_memopb_io	= 1535,
    L4_and_memoph_io	= 1536,
    L4_and_memopw_io	= 1537,
    L4_iadd_memopb_io	= 1538,
    L4_iadd_memoph_io	= 1539,
    L4_iadd_memopw_io	= 1540,
    L4_iand_memopb_io	= 1541,
    L4_iand_memoph_io	= 1542,
    L4_iand_memopw_io	= 1543,
    L4_ior_memopb_io	= 1544,
    L4_ior_memoph_io	= 1545,
    L4_ior_memopw_io	= 1546,
    L4_isub_memopb_io	= 1547,
    L4_isub_memoph_io	= 1548,
    L4_isub_memopw_io	= 1549,
    L4_loadalignb_ap	= 1550,
    L4_loadalignb_ur	= 1551,
    L4_loadalignh_ap	= 1552,
    L4_loadalignh_ur	= 1553,
    L4_loadbsw2_ap	= 1554,
    L4_loadbsw2_ur	= 1555,
    L4_loadbsw4_ap	= 1556,
    L4_loadbsw4_ur	= 1557,
    L4_loadbzw2_ap	= 1558,
    L4_loadbzw2_ur	= 1559,
    L4_loadbzw4_ap	= 1560,
    L4_loadbzw4_ur	= 1561,
    L4_loadd_aq	= 1562,
    L4_loadd_locked	= 1563,
    L4_loadrb_ap	= 1564,
    L4_loadrb_rr	= 1565,
    L4_loadrb_ur	= 1566,
    L4_loadrd_ap	= 1567,
    L4_loadrd_rr	= 1568,
    L4_loadrd_ur	= 1569,
    L4_loadrh_ap	= 1570,
    L4_loadrh_rr	= 1571,
    L4_loadrh_ur	= 1572,
    L4_loadri_ap	= 1573,
    L4_loadri_rr	= 1574,
    L4_loadri_ur	= 1575,
    L4_loadrub_ap	= 1576,
    L4_loadrub_rr	= 1577,
    L4_loadrub_ur	= 1578,
    L4_loadruh_ap	= 1579,
    L4_loadruh_rr	= 1580,
    L4_loadruh_ur	= 1581,
    L4_or_memopb_io	= 1582,
    L4_or_memoph_io	= 1583,
    L4_or_memopw_io	= 1584,
    L4_ploadrbf_abs	= 1585,
    L4_ploadrbf_rr	= 1586,
    L4_ploadrbfnew_abs	= 1587,
    L4_ploadrbfnew_rr	= 1588,
    L4_ploadrbt_abs	= 1589,
    L4_ploadrbt_rr	= 1590,
    L4_ploadrbtnew_abs	= 1591,
    L4_ploadrbtnew_rr	= 1592,
    L4_ploadrdf_abs	= 1593,
    L4_ploadrdf_rr	= 1594,
    L4_ploadrdfnew_abs	= 1595,
    L4_ploadrdfnew_rr	= 1596,
    L4_ploadrdt_abs	= 1597,
    L4_ploadrdt_rr	= 1598,
    L4_ploadrdtnew_abs	= 1599,
    L4_ploadrdtnew_rr	= 1600,
    L4_ploadrhf_abs	= 1601,
    L4_ploadrhf_rr	= 1602,
    L4_ploadrhfnew_abs	= 1603,
    L4_ploadrhfnew_rr	= 1604,
    L4_ploadrht_abs	= 1605,
    L4_ploadrht_rr	= 1606,
    L4_ploadrhtnew_abs	= 1607,
    L4_ploadrhtnew_rr	= 1608,
    L4_ploadrif_abs	= 1609,
    L4_ploadrif_rr	= 1610,
    L4_ploadrifnew_abs	= 1611,
    L4_ploadrifnew_rr	= 1612,
    L4_ploadrit_abs	= 1613,
    L4_ploadrit_rr	= 1614,
    L4_ploadritnew_abs	= 1615,
    L4_ploadritnew_rr	= 1616,
    L4_ploadrubf_abs	= 1617,
    L4_ploadrubf_rr	= 1618,
    L4_ploadrubfnew_abs	= 1619,
    L4_ploadrubfnew_rr	= 1620,
    L4_ploadrubt_abs	= 1621,
    L4_ploadrubt_rr	= 1622,
    L4_ploadrubtnew_abs	= 1623,
    L4_ploadrubtnew_rr	= 1624,
    L4_ploadruhf_abs	= 1625,
    L4_ploadruhf_rr	= 1626,
    L4_ploadruhfnew_abs	= 1627,
    L4_ploadruhfnew_rr	= 1628,
    L4_ploadruht_abs	= 1629,
    L4_ploadruht_rr	= 1630,
    L4_ploadruhtnew_abs	= 1631,
    L4_ploadruhtnew_rr	= 1632,
    L4_return	= 1633,
    L4_return_f	= 1634,
    L4_return_fnew_pnt	= 1635,
    L4_return_fnew_pt	= 1636,
    L4_return_t	= 1637,
    L4_return_tnew_pnt	= 1638,
    L4_return_tnew_pt	= 1639,
    L4_sub_memopb_io	= 1640,
    L4_sub_memoph_io	= 1641,
    L4_sub_memopw_io	= 1642,
    L6_memcpy	= 1643,
    LO	= 1644,
    M2_acci	= 1645,
    M2_accii	= 1646,
    M2_cmaci_s0	= 1647,
    M2_cmacr_s0	= 1648,
    M2_cmacs_s0	= 1649,
    M2_cmacs_s1	= 1650,
    M2_cmacsc_s0	= 1651,
    M2_cmacsc_s1	= 1652,
    M2_cmpyi_s0	= 1653,
    M2_cmpyr_s0	= 1654,
    M2_cmpyrs_s0	= 1655,
    M2_cmpyrs_s1	= 1656,
    M2_cmpyrsc_s0	= 1657,
    M2_cmpyrsc_s1	= 1658,
    M2_cmpys_s0	= 1659,
    M2_cmpys_s1	= 1660,
    M2_cmpysc_s0	= 1661,
    M2_cmpysc_s1	= 1662,
    M2_cnacs_s0	= 1663,
    M2_cnacs_s1	= 1664,
    M2_cnacsc_s0	= 1665,
    M2_cnacsc_s1	= 1666,
    M2_dpmpyss_acc_s0	= 1667,
    M2_dpmpyss_nac_s0	= 1668,
    M2_dpmpyss_rnd_s0	= 1669,
    M2_dpmpyss_s0	= 1670,
    M2_dpmpyuu_acc_s0	= 1671,
    M2_dpmpyuu_nac_s0	= 1672,
    M2_dpmpyuu_s0	= 1673,
    M2_hmmpyh_rs1	= 1674,
    M2_hmmpyh_s1	= 1675,
    M2_hmmpyl_rs1	= 1676,
    M2_hmmpyl_s1	= 1677,
    M2_maci	= 1678,
    M2_macsin	= 1679,
    M2_macsip	= 1680,
    M2_mmachs_rs0	= 1681,
    M2_mmachs_rs1	= 1682,
    M2_mmachs_s0	= 1683,
    M2_mmachs_s1	= 1684,
    M2_mmacls_rs0	= 1685,
    M2_mmacls_rs1	= 1686,
    M2_mmacls_s0	= 1687,
    M2_mmacls_s1	= 1688,
    M2_mmacuhs_rs0	= 1689,
    M2_mmacuhs_rs1	= 1690,
    M2_mmacuhs_s0	= 1691,
    M2_mmacuhs_s1	= 1692,
    M2_mmaculs_rs0	= 1693,
    M2_mmaculs_rs1	= 1694,
    M2_mmaculs_s0	= 1695,
    M2_mmaculs_s1	= 1696,
    M2_mmpyh_rs0	= 1697,
    M2_mmpyh_rs1	= 1698,
    M2_mmpyh_s0	= 1699,
    M2_mmpyh_s1	= 1700,
    M2_mmpyl_rs0	= 1701,
    M2_mmpyl_rs1	= 1702,
    M2_mmpyl_s0	= 1703,
    M2_mmpyl_s1	= 1704,
    M2_mmpyuh_rs0	= 1705,
    M2_mmpyuh_rs1	= 1706,
    M2_mmpyuh_s0	= 1707,
    M2_mmpyuh_s1	= 1708,
    M2_mmpyul_rs0	= 1709,
    M2_mmpyul_rs1	= 1710,
    M2_mmpyul_s0	= 1711,
    M2_mmpyul_s1	= 1712,
    M2_mnaci	= 1713,
    M2_mpy_acc_hh_s0	= 1714,
    M2_mpy_acc_hh_s1	= 1715,
    M2_mpy_acc_hl_s0	= 1716,
    M2_mpy_acc_hl_s1	= 1717,
    M2_mpy_acc_lh_s0	= 1718,
    M2_mpy_acc_lh_s1	= 1719,
    M2_mpy_acc_ll_s0	= 1720,
    M2_mpy_acc_ll_s1	= 1721,
    M2_mpy_acc_sat_hh_s0	= 1722,
    M2_mpy_acc_sat_hh_s1	= 1723,
    M2_mpy_acc_sat_hl_s0	= 1724,
    M2_mpy_acc_sat_hl_s1	= 1725,
    M2_mpy_acc_sat_lh_s0	= 1726,
    M2_mpy_acc_sat_lh_s1	= 1727,
    M2_mpy_acc_sat_ll_s0	= 1728,
    M2_mpy_acc_sat_ll_s1	= 1729,
    M2_mpy_hh_s0	= 1730,
    M2_mpy_hh_s1	= 1731,
    M2_mpy_hl_s0	= 1732,
    M2_mpy_hl_s1	= 1733,
    M2_mpy_lh_s0	= 1734,
    M2_mpy_lh_s1	= 1735,
    M2_mpy_ll_s0	= 1736,
    M2_mpy_ll_s1	= 1737,
    M2_mpy_nac_hh_s0	= 1738,
    M2_mpy_nac_hh_s1	= 1739,
    M2_mpy_nac_hl_s0	= 1740,
    M2_mpy_nac_hl_s1	= 1741,
    M2_mpy_nac_lh_s0	= 1742,
    M2_mpy_nac_lh_s1	= 1743,
    M2_mpy_nac_ll_s0	= 1744,
    M2_mpy_nac_ll_s1	= 1745,
    M2_mpy_nac_sat_hh_s0	= 1746,
    M2_mpy_nac_sat_hh_s1	= 1747,
    M2_mpy_nac_sat_hl_s0	= 1748,
    M2_mpy_nac_sat_hl_s1	= 1749,
    M2_mpy_nac_sat_lh_s0	= 1750,
    M2_mpy_nac_sat_lh_s1	= 1751,
    M2_mpy_nac_sat_ll_s0	= 1752,
    M2_mpy_nac_sat_ll_s1	= 1753,
    M2_mpy_rnd_hh_s0	= 1754,
    M2_mpy_rnd_hh_s1	= 1755,
    M2_mpy_rnd_hl_s0	= 1756,
    M2_mpy_rnd_hl_s1	= 1757,
    M2_mpy_rnd_lh_s0	= 1758,
    M2_mpy_rnd_lh_s1	= 1759,
    M2_mpy_rnd_ll_s0	= 1760,
    M2_mpy_rnd_ll_s1	= 1761,
    M2_mpy_sat_hh_s0	= 1762,
    M2_mpy_sat_hh_s1	= 1763,
    M2_mpy_sat_hl_s0	= 1764,
    M2_mpy_sat_hl_s1	= 1765,
    M2_mpy_sat_lh_s0	= 1766,
    M2_mpy_sat_lh_s1	= 1767,
    M2_mpy_sat_ll_s0	= 1768,
    M2_mpy_sat_ll_s1	= 1769,
    M2_mpy_sat_rnd_hh_s0	= 1770,
    M2_mpy_sat_rnd_hh_s1	= 1771,
    M2_mpy_sat_rnd_hl_s0	= 1772,
    M2_mpy_sat_rnd_hl_s1	= 1773,
    M2_mpy_sat_rnd_lh_s0	= 1774,
    M2_mpy_sat_rnd_lh_s1	= 1775,
    M2_mpy_sat_rnd_ll_s0	= 1776,
    M2_mpy_sat_rnd_ll_s1	= 1777,
    M2_mpy_up	= 1778,
    M2_mpy_up_s1	= 1779,
    M2_mpy_up_s1_sat	= 1780,
    M2_mpyd_acc_hh_s0	= 1781,
    M2_mpyd_acc_hh_s1	= 1782,
    M2_mpyd_acc_hl_s0	= 1783,
    M2_mpyd_acc_hl_s1	= 1784,
    M2_mpyd_acc_lh_s0	= 1785,
    M2_mpyd_acc_lh_s1	= 1786,
    M2_mpyd_acc_ll_s0	= 1787,
    M2_mpyd_acc_ll_s1	= 1788,
    M2_mpyd_hh_s0	= 1789,
    M2_mpyd_hh_s1	= 1790,
    M2_mpyd_hl_s0	= 1791,
    M2_mpyd_hl_s1	= 1792,
    M2_mpyd_lh_s0	= 1793,
    M2_mpyd_lh_s1	= 1794,
    M2_mpyd_ll_s0	= 1795,
    M2_mpyd_ll_s1	= 1796,
    M2_mpyd_nac_hh_s0	= 1797,
    M2_mpyd_nac_hh_s1	= 1798,
    M2_mpyd_nac_hl_s0	= 1799,
    M2_mpyd_nac_hl_s1	= 1800,
    M2_mpyd_nac_lh_s0	= 1801,
    M2_mpyd_nac_lh_s1	= 1802,
    M2_mpyd_nac_ll_s0	= 1803,
    M2_mpyd_nac_ll_s1	= 1804,
    M2_mpyd_rnd_hh_s0	= 1805,
    M2_mpyd_rnd_hh_s1	= 1806,
    M2_mpyd_rnd_hl_s0	= 1807,
    M2_mpyd_rnd_hl_s1	= 1808,
    M2_mpyd_rnd_lh_s0	= 1809,
    M2_mpyd_rnd_lh_s1	= 1810,
    M2_mpyd_rnd_ll_s0	= 1811,
    M2_mpyd_rnd_ll_s1	= 1812,
    M2_mpyi	= 1813,
    M2_mpysin	= 1814,
    M2_mpysip	= 1815,
    M2_mpysu_up	= 1816,
    M2_mpyu_acc_hh_s0	= 1817,
    M2_mpyu_acc_hh_s1	= 1818,
    M2_mpyu_acc_hl_s0	= 1819,
    M2_mpyu_acc_hl_s1	= 1820,
    M2_mpyu_acc_lh_s0	= 1821,
    M2_mpyu_acc_lh_s1	= 1822,
    M2_mpyu_acc_ll_s0	= 1823,
    M2_mpyu_acc_ll_s1	= 1824,
    M2_mpyu_hh_s0	= 1825,
    M2_mpyu_hh_s1	= 1826,
    M2_mpyu_hl_s0	= 1827,
    M2_mpyu_hl_s1	= 1828,
    M2_mpyu_lh_s0	= 1829,
    M2_mpyu_lh_s1	= 1830,
    M2_mpyu_ll_s0	= 1831,
    M2_mpyu_ll_s1	= 1832,
    M2_mpyu_nac_hh_s0	= 1833,
    M2_mpyu_nac_hh_s1	= 1834,
    M2_mpyu_nac_hl_s0	= 1835,
    M2_mpyu_nac_hl_s1	= 1836,
    M2_mpyu_nac_lh_s0	= 1837,
    M2_mpyu_nac_lh_s1	= 1838,
    M2_mpyu_nac_ll_s0	= 1839,
    M2_mpyu_nac_ll_s1	= 1840,
    M2_mpyu_up	= 1841,
    M2_mpyud_acc_hh_s0	= 1842,
    M2_mpyud_acc_hh_s1	= 1843,
    M2_mpyud_acc_hl_s0	= 1844,
    M2_mpyud_acc_hl_s1	= 1845,
    M2_mpyud_acc_lh_s0	= 1846,
    M2_mpyud_acc_lh_s1	= 1847,
    M2_mpyud_acc_ll_s0	= 1848,
    M2_mpyud_acc_ll_s1	= 1849,
    M2_mpyud_hh_s0	= 1850,
    M2_mpyud_hh_s1	= 1851,
    M2_mpyud_hl_s0	= 1852,
    M2_mpyud_hl_s1	= 1853,
    M2_mpyud_lh_s0	= 1854,
    M2_mpyud_lh_s1	= 1855,
    M2_mpyud_ll_s0	= 1856,
    M2_mpyud_ll_s1	= 1857,
    M2_mpyud_nac_hh_s0	= 1858,
    M2_mpyud_nac_hh_s1	= 1859,
    M2_mpyud_nac_hl_s0	= 1860,
    M2_mpyud_nac_hl_s1	= 1861,
    M2_mpyud_nac_lh_s0	= 1862,
    M2_mpyud_nac_lh_s1	= 1863,
    M2_mpyud_nac_ll_s0	= 1864,
    M2_mpyud_nac_ll_s1	= 1865,
    M2_nacci	= 1866,
    M2_naccii	= 1867,
    M2_subacc	= 1868,
    M2_vabsdiffh	= 1869,
    M2_vabsdiffw	= 1870,
    M2_vcmac_s0_sat_i	= 1871,
    M2_vcmac_s0_sat_r	= 1872,
    M2_vcmpy_s0_sat_i	= 1873,
    M2_vcmpy_s0_sat_r	= 1874,
    M2_vcmpy_s1_sat_i	= 1875,
    M2_vcmpy_s1_sat_r	= 1876,
    M2_vdmacs_s0	= 1877,
    M2_vdmacs_s1	= 1878,
    M2_vdmpyrs_s0	= 1879,
    M2_vdmpyrs_s1	= 1880,
    M2_vdmpys_s0	= 1881,
    M2_vdmpys_s1	= 1882,
    M2_vmac2	= 1883,
    M2_vmac2es	= 1884,
    M2_vmac2es_s0	= 1885,
    M2_vmac2es_s1	= 1886,
    M2_vmac2s_s0	= 1887,
    M2_vmac2s_s1	= 1888,
    M2_vmac2su_s0	= 1889,
    M2_vmac2su_s1	= 1890,
    M2_vmpy2es_s0	= 1891,
    M2_vmpy2es_s1	= 1892,
    M2_vmpy2s_s0	= 1893,
    M2_vmpy2s_s0pack	= 1894,
    M2_vmpy2s_s1	= 1895,
    M2_vmpy2s_s1pack	= 1896,
    M2_vmpy2su_s0	= 1897,
    M2_vmpy2su_s1	= 1898,
    M2_vraddh	= 1899,
    M2_vradduh	= 1900,
    M2_vrcmaci_s0	= 1901,
    M2_vrcmaci_s0c	= 1902,
    M2_vrcmacr_s0	= 1903,
    M2_vrcmacr_s0c	= 1904,
    M2_vrcmpyi_s0	= 1905,
    M2_vrcmpyi_s0c	= 1906,
    M2_vrcmpyr_s0	= 1907,
    M2_vrcmpyr_s0c	= 1908,
    M2_vrcmpys_acc_s1_h	= 1909,
    M2_vrcmpys_acc_s1_l	= 1910,
    M2_vrcmpys_s1_h	= 1911,
    M2_vrcmpys_s1_l	= 1912,
    M2_vrcmpys_s1rp_h	= 1913,
    M2_vrcmpys_s1rp_l	= 1914,
    M2_vrmac_s0	= 1915,
    M2_vrmpy_s0	= 1916,
    M2_xor_xacc	= 1917,
    M4_and_and	= 1918,
    M4_and_andn	= 1919,
    M4_and_or	= 1920,
    M4_and_xor	= 1921,
    M4_cmpyi_wh	= 1922,
    M4_cmpyi_whc	= 1923,
    M4_cmpyr_wh	= 1924,
    M4_cmpyr_whc	= 1925,
    M4_mac_up_s1_sat	= 1926,
    M4_mpyri_addi	= 1927,
    M4_mpyri_addr	= 1928,
    M4_mpyri_addr_u2	= 1929,
    M4_mpyrr_addi	= 1930,
    M4_mpyrr_addr	= 1931,
    M4_nac_up_s1_sat	= 1932,
    M4_or_and	= 1933,
    M4_or_andn	= 1934,
    M4_or_or	= 1935,
    M4_or_xor	= 1936,
    M4_pmpyw	= 1937,
    M4_pmpyw_acc	= 1938,
    M4_vpmpyh	= 1939,
    M4_vpmpyh_acc	= 1940,
    M4_vrmpyeh_acc_s0	= 1941,
    M4_vrmpyeh_acc_s1	= 1942,
    M4_vrmpyeh_s0	= 1943,
    M4_vrmpyeh_s1	= 1944,
    M4_vrmpyoh_acc_s0	= 1945,
    M4_vrmpyoh_acc_s1	= 1946,
    M4_vrmpyoh_s0	= 1947,
    M4_vrmpyoh_s1	= 1948,
    M4_xor_and	= 1949,
    M4_xor_andn	= 1950,
    M4_xor_or	= 1951,
    M4_xor_xacc	= 1952,
    M5_vdmacbsu	= 1953,
    M5_vdmpybsu	= 1954,
    M5_vmacbsu	= 1955,
    M5_vmacbuu	= 1956,
    M5_vmpybsu	= 1957,
    M5_vmpybuu	= 1958,
    M5_vrmacbsu	= 1959,
    M5_vrmacbuu	= 1960,
    M5_vrmpybsu	= 1961,
    M5_vrmpybuu	= 1962,
    M6_vabsdiffb	= 1963,
    M6_vabsdiffub	= 1964,
    M7_dcmpyiw	= 1965,
    M7_dcmpyiw_acc	= 1966,
    M7_dcmpyiwc	= 1967,
    M7_dcmpyiwc_acc	= 1968,
    M7_dcmpyrw	= 1969,
    M7_dcmpyrw_acc	= 1970,
    M7_dcmpyrwc	= 1971,
    M7_dcmpyrwc_acc	= 1972,
    M7_wcmpyiw	= 1973,
    M7_wcmpyiw_rnd	= 1974,
    M7_wcmpyiwc	= 1975,
    M7_wcmpyiwc_rnd	= 1976,
    M7_wcmpyrw	= 1977,
    M7_wcmpyrw_rnd	= 1978,
    M7_wcmpyrwc	= 1979,
    M7_wcmpyrwc_rnd	= 1980,
    PS_call_stk	= 1981,
    PS_callr_nr	= 1982,
    PS_jmpret	= 1983,
    PS_jmpretf	= 1984,
    PS_jmpretfnew	= 1985,
    PS_jmpretfnewpt	= 1986,
    PS_jmprett	= 1987,
    PS_jmprettnew	= 1988,
    PS_jmprettnewpt	= 1989,
    PS_loadrbabs	= 1990,
    PS_loadrdabs	= 1991,
    PS_loadrhabs	= 1992,
    PS_loadriabs	= 1993,
    PS_loadrubabs	= 1994,
    PS_loadruhabs	= 1995,
    PS_storerbabs	= 1996,
    PS_storerbnewabs	= 1997,
    PS_storerdabs	= 1998,
    PS_storerfabs	= 1999,
    PS_storerhabs	= 2000,
    PS_storerhnewabs	= 2001,
    PS_storeriabs	= 2002,
    PS_storerinewabs	= 2003,
    PS_trap1	= 2004,
    R6_release_at_vi	= 2005,
    R6_release_st_vi	= 2006,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4	= 2007,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT	= 2008,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC	= 2009,
    RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC	= 2010,
    RESTORE_DEALLOC_RET_JMP_V4	= 2011,
    RESTORE_DEALLOC_RET_JMP_V4_EXT	= 2012,
    RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC	= 2013,
    RESTORE_DEALLOC_RET_JMP_V4_PIC	= 2014,
    S2_addasl_rrri	= 2015,
    S2_allocframe	= 2016,
    S2_asl_i_p	= 2017,
    S2_asl_i_p_acc	= 2018,
    S2_asl_i_p_and	= 2019,
    S2_asl_i_p_nac	= 2020,
    S2_asl_i_p_or	= 2021,
    S2_asl_i_p_xacc	= 2022,
    S2_asl_i_r	= 2023,
    S2_asl_i_r_acc	= 2024,
    S2_asl_i_r_and	= 2025,
    S2_asl_i_r_nac	= 2026,
    S2_asl_i_r_or	= 2027,
    S2_asl_i_r_sat	= 2028,
    S2_asl_i_r_xacc	= 2029,
    S2_asl_i_vh	= 2030,
    S2_asl_i_vw	= 2031,
    S2_asl_r_p	= 2032,
    S2_asl_r_p_acc	= 2033,
    S2_asl_r_p_and	= 2034,
    S2_asl_r_p_nac	= 2035,
    S2_asl_r_p_or	= 2036,
    S2_asl_r_p_xor	= 2037,
    S2_asl_r_r	= 2038,
    S2_asl_r_r_acc	= 2039,
    S2_asl_r_r_and	= 2040,
    S2_asl_r_r_nac	= 2041,
    S2_asl_r_r_or	= 2042,
    S2_asl_r_r_sat	= 2043,
    S2_asl_r_vh	= 2044,
    S2_asl_r_vw	= 2045,
    S2_asr_i_p	= 2046,
    S2_asr_i_p_acc	= 2047,
    S2_asr_i_p_and	= 2048,
    S2_asr_i_p_nac	= 2049,
    S2_asr_i_p_or	= 2050,
    S2_asr_i_p_rnd	= 2051,
    S2_asr_i_r	= 2052,
    S2_asr_i_r_acc	= 2053,
    S2_asr_i_r_and	= 2054,
    S2_asr_i_r_nac	= 2055,
    S2_asr_i_r_or	= 2056,
    S2_asr_i_r_rnd	= 2057,
    S2_asr_i_svw_trun	= 2058,
    S2_asr_i_vh	= 2059,
    S2_asr_i_vw	= 2060,
    S2_asr_r_p	= 2061,
    S2_asr_r_p_acc	= 2062,
    S2_asr_r_p_and	= 2063,
    S2_asr_r_p_nac	= 2064,
    S2_asr_r_p_or	= 2065,
    S2_asr_r_p_xor	= 2066,
    S2_asr_r_r	= 2067,
    S2_asr_r_r_acc	= 2068,
    S2_asr_r_r_and	= 2069,
    S2_asr_r_r_nac	= 2070,
    S2_asr_r_r_or	= 2071,
    S2_asr_r_r_sat	= 2072,
    S2_asr_r_svw_trun	= 2073,
    S2_asr_r_vh	= 2074,
    S2_asr_r_vw	= 2075,
    S2_brev	= 2076,
    S2_brevp	= 2077,
    S2_cabacdecbin	= 2078,
    S2_cl0	= 2079,
    S2_cl0p	= 2080,
    S2_cl1	= 2081,
    S2_cl1p	= 2082,
    S2_clb	= 2083,
    S2_clbnorm	= 2084,
    S2_clbp	= 2085,
    S2_clrbit_i	= 2086,
    S2_clrbit_r	= 2087,
    S2_ct0	= 2088,
    S2_ct0p	= 2089,
    S2_ct1	= 2090,
    S2_ct1p	= 2091,
    S2_deinterleave	= 2092,
    S2_extractu	= 2093,
    S2_extractu_rp	= 2094,
    S2_extractup	= 2095,
    S2_extractup_rp	= 2096,
    S2_insert	= 2097,
    S2_insert_rp	= 2098,
    S2_insertp	= 2099,
    S2_insertp_rp	= 2100,
    S2_interleave	= 2101,
    S2_lfsp	= 2102,
    S2_lsl_r_p	= 2103,
    S2_lsl_r_p_acc	= 2104,
    S2_lsl_r_p_and	= 2105,
    S2_lsl_r_p_nac	= 2106,
    S2_lsl_r_p_or	= 2107,
    S2_lsl_r_p_xor	= 2108,
    S2_lsl_r_r	= 2109,
    S2_lsl_r_r_acc	= 2110,
    S2_lsl_r_r_and	= 2111,
    S2_lsl_r_r_nac	= 2112,
    S2_lsl_r_r_or	= 2113,
    S2_lsl_r_vh	= 2114,
    S2_lsl_r_vw	= 2115,
    S2_lsr_i_p	= 2116,
    S2_lsr_i_p_acc	= 2117,
    S2_lsr_i_p_and	= 2118,
    S2_lsr_i_p_nac	= 2119,
    S2_lsr_i_p_or	= 2120,
    S2_lsr_i_p_xacc	= 2121,
    S2_lsr_i_r	= 2122,
    S2_lsr_i_r_acc	= 2123,
    S2_lsr_i_r_and	= 2124,
    S2_lsr_i_r_nac	= 2125,
    S2_lsr_i_r_or	= 2126,
    S2_lsr_i_r_xacc	= 2127,
    S2_lsr_i_vh	= 2128,
    S2_lsr_i_vw	= 2129,
    S2_lsr_r_p	= 2130,
    S2_lsr_r_p_acc	= 2131,
    S2_lsr_r_p_and	= 2132,
    S2_lsr_r_p_nac	= 2133,
    S2_lsr_r_p_or	= 2134,
    S2_lsr_r_p_xor	= 2135,
    S2_lsr_r_r	= 2136,
    S2_lsr_r_r_acc	= 2137,
    S2_lsr_r_r_and	= 2138,
    S2_lsr_r_r_nac	= 2139,
    S2_lsr_r_r_or	= 2140,
    S2_lsr_r_vh	= 2141,
    S2_lsr_r_vw	= 2142,
    S2_mask	= 2143,
    S2_packhl	= 2144,
    S2_parityp	= 2145,
    S2_pstorerbf_io	= 2146,
    S2_pstorerbf_pi	= 2147,
    S2_pstorerbfnew_pi	= 2148,
    S2_pstorerbnewf_io	= 2149,
    S2_pstorerbnewf_pi	= 2150,
    S2_pstorerbnewfnew_pi	= 2151,
    S2_pstorerbnewt_io	= 2152,
    S2_pstorerbnewt_pi	= 2153,
    S2_pstorerbnewtnew_pi	= 2154,
    S2_pstorerbt_io	= 2155,
    S2_pstorerbt_pi	= 2156,
    S2_pstorerbtnew_pi	= 2157,
    S2_pstorerdf_io	= 2158,
    S2_pstorerdf_pi	= 2159,
    S2_pstorerdfnew_pi	= 2160,
    S2_pstorerdt_io	= 2161,
    S2_pstorerdt_pi	= 2162,
    S2_pstorerdtnew_pi	= 2163,
    S2_pstorerff_io	= 2164,
    S2_pstorerff_pi	= 2165,
    S2_pstorerffnew_pi	= 2166,
    S2_pstorerft_io	= 2167,
    S2_pstorerft_pi	= 2168,
    S2_pstorerftnew_pi	= 2169,
    S2_pstorerhf_io	= 2170,
    S2_pstorerhf_pi	= 2171,
    S2_pstorerhfnew_pi	= 2172,
    S2_pstorerhnewf_io	= 2173,
    S2_pstorerhnewf_pi	= 2174,
    S2_pstorerhnewfnew_pi	= 2175,
    S2_pstorerhnewt_io	= 2176,
    S2_pstorerhnewt_pi	= 2177,
    S2_pstorerhnewtnew_pi	= 2178,
    S2_pstorerht_io	= 2179,
    S2_pstorerht_pi	= 2180,
    S2_pstorerhtnew_pi	= 2181,
    S2_pstorerif_io	= 2182,
    S2_pstorerif_pi	= 2183,
    S2_pstorerifnew_pi	= 2184,
    S2_pstorerinewf_io	= 2185,
    S2_pstorerinewf_pi	= 2186,
    S2_pstorerinewfnew_pi	= 2187,
    S2_pstorerinewt_io	= 2188,
    S2_pstorerinewt_pi	= 2189,
    S2_pstorerinewtnew_pi	= 2190,
    S2_pstorerit_io	= 2191,
    S2_pstorerit_pi	= 2192,
    S2_pstoreritnew_pi	= 2193,
    S2_setbit_i	= 2194,
    S2_setbit_r	= 2195,
    S2_shuffeb	= 2196,
    S2_shuffeh	= 2197,
    S2_shuffob	= 2198,
    S2_shuffoh	= 2199,
    S2_storerb_io	= 2200,
    S2_storerb_pbr	= 2201,
    S2_storerb_pci	= 2202,
    S2_storerb_pcr	= 2203,
    S2_storerb_pi	= 2204,
    S2_storerb_pr	= 2205,
    S2_storerbgp	= 2206,
    S2_storerbnew_io	= 2207,
    S2_storerbnew_pbr	= 2208,
    S2_storerbnew_pci	= 2209,
    S2_storerbnew_pcr	= 2210,
    S2_storerbnew_pi	= 2211,
    S2_storerbnew_pr	= 2212,
    S2_storerbnewgp	= 2213,
    S2_storerd_io	= 2214,
    S2_storerd_pbr	= 2215,
    S2_storerd_pci	= 2216,
    S2_storerd_pcr	= 2217,
    S2_storerd_pi	= 2218,
    S2_storerd_pr	= 2219,
    S2_storerdgp	= 2220,
    S2_storerf_io	= 2221,
    S2_storerf_pbr	= 2222,
    S2_storerf_pci	= 2223,
    S2_storerf_pcr	= 2224,
    S2_storerf_pi	= 2225,
    S2_storerf_pr	= 2226,
    S2_storerfgp	= 2227,
    S2_storerh_io	= 2228,
    S2_storerh_pbr	= 2229,
    S2_storerh_pci	= 2230,
    S2_storerh_pcr	= 2231,
    S2_storerh_pi	= 2232,
    S2_storerh_pr	= 2233,
    S2_storerhgp	= 2234,
    S2_storerhnew_io	= 2235,
    S2_storerhnew_pbr	= 2236,
    S2_storerhnew_pci	= 2237,
    S2_storerhnew_pcr	= 2238,
    S2_storerhnew_pi	= 2239,
    S2_storerhnew_pr	= 2240,
    S2_storerhnewgp	= 2241,
    S2_storeri_io	= 2242,
    S2_storeri_pbr	= 2243,
    S2_storeri_pci	= 2244,
    S2_storeri_pcr	= 2245,
    S2_storeri_pi	= 2246,
    S2_storeri_pr	= 2247,
    S2_storerigp	= 2248,
    S2_storerinew_io	= 2249,
    S2_storerinew_pbr	= 2250,
    S2_storerinew_pci	= 2251,
    S2_storerinew_pcr	= 2252,
    S2_storerinew_pi	= 2253,
    S2_storerinew_pr	= 2254,
    S2_storerinewgp	= 2255,
    S2_storew_locked	= 2256,
    S2_storew_rl_at_vi	= 2257,
    S2_storew_rl_st_vi	= 2258,
    S2_svsathb	= 2259,
    S2_svsathub	= 2260,
    S2_tableidxb	= 2261,
    S2_tableidxd	= 2262,
    S2_tableidxh	= 2263,
    S2_tableidxw	= 2264,
    S2_togglebit_i	= 2265,
    S2_togglebit_r	= 2266,
    S2_tstbit_i	= 2267,
    S2_tstbit_r	= 2268,
    S2_valignib	= 2269,
    S2_valignrb	= 2270,
    S2_vcnegh	= 2271,
    S2_vcrotate	= 2272,
    S2_vrcnegh	= 2273,
    S2_vrndpackwh	= 2274,
    S2_vrndpackwhs	= 2275,
    S2_vsathb	= 2276,
    S2_vsathb_nopack	= 2277,
    S2_vsathub	= 2278,
    S2_vsathub_nopack	= 2279,
    S2_vsatwh	= 2280,
    S2_vsatwh_nopack	= 2281,
    S2_vsatwuh	= 2282,
    S2_vsatwuh_nopack	= 2283,
    S2_vsplatrb	= 2284,
    S2_vsplatrh	= 2285,
    S2_vspliceib	= 2286,
    S2_vsplicerb	= 2287,
    S2_vsxtbh	= 2288,
    S2_vsxthw	= 2289,
    S2_vtrunehb	= 2290,
    S2_vtrunewh	= 2291,
    S2_vtrunohb	= 2292,
    S2_vtrunowh	= 2293,
    S2_vzxtbh	= 2294,
    S2_vzxthw	= 2295,
    S4_addaddi	= 2296,
    S4_addi_asl_ri	= 2297,
    S4_addi_lsr_ri	= 2298,
    S4_andi_asl_ri	= 2299,
    S4_andi_lsr_ri	= 2300,
    S4_clbaddi	= 2301,
    S4_clbpaddi	= 2302,
    S4_clbpnorm	= 2303,
    S4_extract	= 2304,
    S4_extract_rp	= 2305,
    S4_extractp	= 2306,
    S4_extractp_rp	= 2307,
    S4_lsli	= 2308,
    S4_ntstbit_i	= 2309,
    S4_ntstbit_r	= 2310,
    S4_or_andi	= 2311,
    S4_or_andix	= 2312,
    S4_or_ori	= 2313,
    S4_ori_asl_ri	= 2314,
    S4_ori_lsr_ri	= 2315,
    S4_parity	= 2316,
    S4_pstorerbf_abs	= 2317,
    S4_pstorerbf_rr	= 2318,
    S4_pstorerbfnew_abs	= 2319,
    S4_pstorerbfnew_io	= 2320,
    S4_pstorerbfnew_rr	= 2321,
    S4_pstorerbnewf_abs	= 2322,
    S4_pstorerbnewf_rr	= 2323,
    S4_pstorerbnewfnew_abs	= 2324,
    S4_pstorerbnewfnew_io	= 2325,
    S4_pstorerbnewfnew_rr	= 2326,
    S4_pstorerbnewt_abs	= 2327,
    S4_pstorerbnewt_rr	= 2328,
    S4_pstorerbnewtnew_abs	= 2329,
    S4_pstorerbnewtnew_io	= 2330,
    S4_pstorerbnewtnew_rr	= 2331,
    S4_pstorerbt_abs	= 2332,
    S4_pstorerbt_rr	= 2333,
    S4_pstorerbtnew_abs	= 2334,
    S4_pstorerbtnew_io	= 2335,
    S4_pstorerbtnew_rr	= 2336,
    S4_pstorerdf_abs	= 2337,
    S4_pstorerdf_rr	= 2338,
    S4_pstorerdfnew_abs	= 2339,
    S4_pstorerdfnew_io	= 2340,
    S4_pstorerdfnew_rr	= 2341,
    S4_pstorerdt_abs	= 2342,
    S4_pstorerdt_rr	= 2343,
    S4_pstorerdtnew_abs	= 2344,
    S4_pstorerdtnew_io	= 2345,
    S4_pstorerdtnew_rr	= 2346,
    S4_pstorerff_abs	= 2347,
    S4_pstorerff_rr	= 2348,
    S4_pstorerffnew_abs	= 2349,
    S4_pstorerffnew_io	= 2350,
    S4_pstorerffnew_rr	= 2351,
    S4_pstorerft_abs	= 2352,
    S4_pstorerft_rr	= 2353,
    S4_pstorerftnew_abs	= 2354,
    S4_pstorerftnew_io	= 2355,
    S4_pstorerftnew_rr	= 2356,
    S4_pstorerhf_abs	= 2357,
    S4_pstorerhf_rr	= 2358,
    S4_pstorerhfnew_abs	= 2359,
    S4_pstorerhfnew_io	= 2360,
    S4_pstorerhfnew_rr	= 2361,
    S4_pstorerhnewf_abs	= 2362,
    S4_pstorerhnewf_rr	= 2363,
    S4_pstorerhnewfnew_abs	= 2364,
    S4_pstorerhnewfnew_io	= 2365,
    S4_pstorerhnewfnew_rr	= 2366,
    S4_pstorerhnewt_abs	= 2367,
    S4_pstorerhnewt_rr	= 2368,
    S4_pstorerhnewtnew_abs	= 2369,
    S4_pstorerhnewtnew_io	= 2370,
    S4_pstorerhnewtnew_rr	= 2371,
    S4_pstorerht_abs	= 2372,
    S4_pstorerht_rr	= 2373,
    S4_pstorerhtnew_abs	= 2374,
    S4_pstorerhtnew_io	= 2375,
    S4_pstorerhtnew_rr	= 2376,
    S4_pstorerif_abs	= 2377,
    S4_pstorerif_rr	= 2378,
    S4_pstorerifnew_abs	= 2379,
    S4_pstorerifnew_io	= 2380,
    S4_pstorerifnew_rr	= 2381,
    S4_pstorerinewf_abs	= 2382,
    S4_pstorerinewf_rr	= 2383,
    S4_pstorerinewfnew_abs	= 2384,
    S4_pstorerinewfnew_io	= 2385,
    S4_pstorerinewfnew_rr	= 2386,
    S4_pstorerinewt_abs	= 2387,
    S4_pstorerinewt_rr	= 2388,
    S4_pstorerinewtnew_abs	= 2389,
    S4_pstorerinewtnew_io	= 2390,
    S4_pstorerinewtnew_rr	= 2391,
    S4_pstorerit_abs	= 2392,
    S4_pstorerit_rr	= 2393,
    S4_pstoreritnew_abs	= 2394,
    S4_pstoreritnew_io	= 2395,
    S4_pstoreritnew_rr	= 2396,
    S4_stored_locked	= 2397,
    S4_stored_rl_at_vi	= 2398,
    S4_stored_rl_st_vi	= 2399,
    S4_storeirb_io	= 2400,
    S4_storeirbf_io	= 2401,
    S4_storeirbfnew_io	= 2402,
    S4_storeirbt_io	= 2403,
    S4_storeirbtnew_io	= 2404,
    S4_storeirh_io	= 2405,
    S4_storeirhf_io	= 2406,
    S4_storeirhfnew_io	= 2407,
    S4_storeirht_io	= 2408,
    S4_storeirhtnew_io	= 2409,
    S4_storeiri_io	= 2410,
    S4_storeirif_io	= 2411,
    S4_storeirifnew_io	= 2412,
    S4_storeirit_io	= 2413,
    S4_storeiritnew_io	= 2414,
    S4_storerb_ap	= 2415,
    S4_storerb_rr	= 2416,
    S4_storerb_ur	= 2417,
    S4_storerbnew_ap	= 2418,
    S4_storerbnew_rr	= 2419,
    S4_storerbnew_ur	= 2420,
    S4_storerd_ap	= 2421,
    S4_storerd_rr	= 2422,
    S4_storerd_ur	= 2423,
    S4_storerf_ap	= 2424,
    S4_storerf_rr	= 2425,
    S4_storerf_ur	= 2426,
    S4_storerh_ap	= 2427,
    S4_storerh_rr	= 2428,
    S4_storerh_ur	= 2429,
    S4_storerhnew_ap	= 2430,
    S4_storerhnew_rr	= 2431,
    S4_storerhnew_ur	= 2432,
    S4_storeri_ap	= 2433,
    S4_storeri_rr	= 2434,
    S4_storeri_ur	= 2435,
    S4_storerinew_ap	= 2436,
    S4_storerinew_rr	= 2437,
    S4_storerinew_ur	= 2438,
    S4_subaddi	= 2439,
    S4_subi_asl_ri	= 2440,
    S4_subi_lsr_ri	= 2441,
    S4_vrcrotate	= 2442,
    S4_vrcrotate_acc	= 2443,
    S4_vxaddsubh	= 2444,
    S4_vxaddsubhr	= 2445,
    S4_vxaddsubw	= 2446,
    S4_vxsubaddh	= 2447,
    S4_vxsubaddhr	= 2448,
    S4_vxsubaddw	= 2449,
    S5_asrhub_rnd_sat	= 2450,
    S5_asrhub_sat	= 2451,
    S5_popcountp	= 2452,
    S5_vasrhrnd	= 2453,
    S6_rol_i_p	= 2454,
    S6_rol_i_p_acc	= 2455,
    S6_rol_i_p_and	= 2456,
    S6_rol_i_p_nac	= 2457,
    S6_rol_i_p_or	= 2458,
    S6_rol_i_p_xacc	= 2459,
    S6_rol_i_r	= 2460,
    S6_rol_i_r_acc	= 2461,
    S6_rol_i_r_and	= 2462,
    S6_rol_i_r_nac	= 2463,
    S6_rol_i_r_or	= 2464,
    S6_rol_i_r_xacc	= 2465,
    S6_vsplatrbp	= 2466,
    S6_vtrunehb_ppp	= 2467,
    S6_vtrunohb_ppp	= 2468,
    SA1_addi	= 2469,
    SA1_addrx	= 2470,
    SA1_addsp	= 2471,
    SA1_and1	= 2472,
    SA1_clrf	= 2473,
    SA1_clrfnew	= 2474,
    SA1_clrt	= 2475,
    SA1_clrtnew	= 2476,
    SA1_cmpeqi	= 2477,
    SA1_combine0i	= 2478,
    SA1_combine1i	= 2479,
    SA1_combine2i	= 2480,
    SA1_combine3i	= 2481,
    SA1_combinerz	= 2482,
    SA1_combinezr	= 2483,
    SA1_dec	= 2484,
    SA1_inc	= 2485,
    SA1_seti	= 2486,
    SA1_setin1	= 2487,
    SA1_sxtb	= 2488,
    SA1_sxth	= 2489,
    SA1_tfr	= 2490,
    SA1_zxtb	= 2491,
    SA1_zxth	= 2492,
    SAVE_REGISTERS_CALL_V4	= 2493,
    SAVE_REGISTERS_CALL_V4STK	= 2494,
    SAVE_REGISTERS_CALL_V4STK_EXT	= 2495,
    SAVE_REGISTERS_CALL_V4STK_EXT_PIC	= 2496,
    SAVE_REGISTERS_CALL_V4STK_PIC	= 2497,
    SAVE_REGISTERS_CALL_V4_EXT	= 2498,
    SAVE_REGISTERS_CALL_V4_EXT_PIC	= 2499,
    SAVE_REGISTERS_CALL_V4_PIC	= 2500,
    SL1_loadri_io	= 2501,
    SL1_loadrub_io	= 2502,
    SL2_deallocframe	= 2503,
    SL2_jumpr31	= 2504,
    SL2_jumpr31_f	= 2505,
    SL2_jumpr31_fnew	= 2506,
    SL2_jumpr31_t	= 2507,
    SL2_jumpr31_tnew	= 2508,
    SL2_loadrb_io	= 2509,
    SL2_loadrd_sp	= 2510,
    SL2_loadrh_io	= 2511,
    SL2_loadri_sp	= 2512,
    SL2_loadruh_io	= 2513,
    SL2_return	= 2514,
    SL2_return_f	= 2515,
    SL2_return_fnew	= 2516,
    SL2_return_t	= 2517,
    SL2_return_tnew	= 2518,
    SS1_storeb_io	= 2519,
    SS1_storew_io	= 2520,
    SS2_allocframe	= 2521,
    SS2_storebi0	= 2522,
    SS2_storebi1	= 2523,
    SS2_stored_sp	= 2524,
    SS2_storeh_io	= 2525,
    SS2_storew_sp	= 2526,
    SS2_storewi0	= 2527,
    SS2_storewi1	= 2528,
    TFRI64_V2_ext	= 2529,
    TFRI64_V4	= 2530,
    V6_extractw	= 2531,
    V6_lvsplatb	= 2532,
    V6_lvsplath	= 2533,
    V6_lvsplatw	= 2534,
    V6_pred_and	= 2535,
    V6_pred_and_n	= 2536,
    V6_pred_not	= 2537,
    V6_pred_or	= 2538,
    V6_pred_or_n	= 2539,
    V6_pred_scalar2	= 2540,
    V6_pred_scalar2v2	= 2541,
    V6_pred_xor	= 2542,
    V6_shuffeqh	= 2543,
    V6_shuffeqw	= 2544,
    V6_v6mpyhubs10	= 2545,
    V6_v6mpyhubs10_vxx	= 2546,
    V6_v6mpyvubs10	= 2547,
    V6_v6mpyvubs10_vxx	= 2548,
    V6_vL32Ub_ai	= 2549,
    V6_vL32Ub_pi	= 2550,
    V6_vL32Ub_ppu	= 2551,
    V6_vL32b_ai	= 2552,
    V6_vL32b_cur_ai	= 2553,
    V6_vL32b_cur_npred_ai	= 2554,
    V6_vL32b_cur_npred_pi	= 2555,
    V6_vL32b_cur_npred_ppu	= 2556,
    V6_vL32b_cur_pi	= 2557,
    V6_vL32b_cur_ppu	= 2558,
    V6_vL32b_cur_pred_ai	= 2559,
    V6_vL32b_cur_pred_pi	= 2560,
    V6_vL32b_cur_pred_ppu	= 2561,
    V6_vL32b_npred_ai	= 2562,
    V6_vL32b_npred_pi	= 2563,
    V6_vL32b_npred_ppu	= 2564,
    V6_vL32b_nt_ai	= 2565,
    V6_vL32b_nt_cur_ai	= 2566,
    V6_vL32b_nt_cur_npred_ai	= 2567,
    V6_vL32b_nt_cur_npred_pi	= 2568,
    V6_vL32b_nt_cur_npred_ppu	= 2569,
    V6_vL32b_nt_cur_pi	= 2570,
    V6_vL32b_nt_cur_ppu	= 2571,
    V6_vL32b_nt_cur_pred_ai	= 2572,
    V6_vL32b_nt_cur_pred_pi	= 2573,
    V6_vL32b_nt_cur_pred_ppu	= 2574,
    V6_vL32b_nt_npred_ai	= 2575,
    V6_vL32b_nt_npred_pi	= 2576,
    V6_vL32b_nt_npred_ppu	= 2577,
    V6_vL32b_nt_pi	= 2578,
    V6_vL32b_nt_ppu	= 2579,
    V6_vL32b_nt_pred_ai	= 2580,
    V6_vL32b_nt_pred_pi	= 2581,
    V6_vL32b_nt_pred_ppu	= 2582,
    V6_vL32b_nt_tmp_ai	= 2583,
    V6_vL32b_nt_tmp_npred_ai	= 2584,
    V6_vL32b_nt_tmp_npred_pi	= 2585,
    V6_vL32b_nt_tmp_npred_ppu	= 2586,
    V6_vL32b_nt_tmp_pi	= 2587,
    V6_vL32b_nt_tmp_ppu	= 2588,
    V6_vL32b_nt_tmp_pred_ai	= 2589,
    V6_vL32b_nt_tmp_pred_pi	= 2590,
    V6_vL32b_nt_tmp_pred_ppu	= 2591,
    V6_vL32b_pi	= 2592,
    V6_vL32b_ppu	= 2593,
    V6_vL32b_pred_ai	= 2594,
    V6_vL32b_pred_pi	= 2595,
    V6_vL32b_pred_ppu	= 2596,
    V6_vL32b_tmp_ai	= 2597,
    V6_vL32b_tmp_npred_ai	= 2598,
    V6_vL32b_tmp_npred_pi	= 2599,
    V6_vL32b_tmp_npred_ppu	= 2600,
    V6_vL32b_tmp_pi	= 2601,
    V6_vL32b_tmp_ppu	= 2602,
    V6_vL32b_tmp_pred_ai	= 2603,
    V6_vL32b_tmp_pred_pi	= 2604,
    V6_vL32b_tmp_pred_ppu	= 2605,
    V6_vS32Ub_ai	= 2606,
    V6_vS32Ub_npred_ai	= 2607,
    V6_vS32Ub_npred_pi	= 2608,
    V6_vS32Ub_npred_ppu	= 2609,
    V6_vS32Ub_pi	= 2610,
    V6_vS32Ub_ppu	= 2611,
    V6_vS32Ub_pred_ai	= 2612,
    V6_vS32Ub_pred_pi	= 2613,
    V6_vS32Ub_pred_ppu	= 2614,
    V6_vS32b_ai	= 2615,
    V6_vS32b_new_ai	= 2616,
    V6_vS32b_new_npred_ai	= 2617,
    V6_vS32b_new_npred_pi	= 2618,
    V6_vS32b_new_npred_ppu	= 2619,
    V6_vS32b_new_pi	= 2620,
    V6_vS32b_new_ppu	= 2621,
    V6_vS32b_new_pred_ai	= 2622,
    V6_vS32b_new_pred_pi	= 2623,
    V6_vS32b_new_pred_ppu	= 2624,
    V6_vS32b_npred_ai	= 2625,
    V6_vS32b_npred_pi	= 2626,
    V6_vS32b_npred_ppu	= 2627,
    V6_vS32b_nqpred_ai	= 2628,
    V6_vS32b_nqpred_pi	= 2629,
    V6_vS32b_nqpred_ppu	= 2630,
    V6_vS32b_nt_ai	= 2631,
    V6_vS32b_nt_new_ai	= 2632,
    V6_vS32b_nt_new_npred_ai	= 2633,
    V6_vS32b_nt_new_npred_pi	= 2634,
    V6_vS32b_nt_new_npred_ppu	= 2635,
    V6_vS32b_nt_new_pi	= 2636,
    V6_vS32b_nt_new_ppu	= 2637,
    V6_vS32b_nt_new_pred_ai	= 2638,
    V6_vS32b_nt_new_pred_pi	= 2639,
    V6_vS32b_nt_new_pred_ppu	= 2640,
    V6_vS32b_nt_npred_ai	= 2641,
    V6_vS32b_nt_npred_pi	= 2642,
    V6_vS32b_nt_npred_ppu	= 2643,
    V6_vS32b_nt_nqpred_ai	= 2644,
    V6_vS32b_nt_nqpred_pi	= 2645,
    V6_vS32b_nt_nqpred_ppu	= 2646,
    V6_vS32b_nt_pi	= 2647,
    V6_vS32b_nt_ppu	= 2648,
    V6_vS32b_nt_pred_ai	= 2649,
    V6_vS32b_nt_pred_pi	= 2650,
    V6_vS32b_nt_pred_ppu	= 2651,
    V6_vS32b_nt_qpred_ai	= 2652,
    V6_vS32b_nt_qpred_pi	= 2653,
    V6_vS32b_nt_qpred_ppu	= 2654,
    V6_vS32b_pi	= 2655,
    V6_vS32b_ppu	= 2656,
    V6_vS32b_pred_ai	= 2657,
    V6_vS32b_pred_pi	= 2658,
    V6_vS32b_pred_ppu	= 2659,
    V6_vS32b_qpred_ai	= 2660,
    V6_vS32b_qpred_pi	= 2661,
    V6_vS32b_qpred_ppu	= 2662,
    V6_vS32b_srls_ai	= 2663,
    V6_vS32b_srls_pi	= 2664,
    V6_vS32b_srls_ppu	= 2665,
    V6_vabsb	= 2666,
    V6_vabsb_sat	= 2667,
    V6_vabsdiffh	= 2668,
    V6_vabsdiffub	= 2669,
    V6_vabsdiffuh	= 2670,
    V6_vabsdiffw	= 2671,
    V6_vabsh	= 2672,
    V6_vabsh_sat	= 2673,
    V6_vabsw	= 2674,
    V6_vabsw_sat	= 2675,
    V6_vaddb	= 2676,
    V6_vaddb_dv	= 2677,
    V6_vaddbnq	= 2678,
    V6_vaddbq	= 2679,
    V6_vaddbsat	= 2680,
    V6_vaddbsat_dv	= 2681,
    V6_vaddcarry	= 2682,
    V6_vaddcarryo	= 2683,
    V6_vaddcarrysat	= 2684,
    V6_vaddclbh	= 2685,
    V6_vaddclbw	= 2686,
    V6_vaddh	= 2687,
    V6_vaddh_dv	= 2688,
    V6_vaddhnq	= 2689,
    V6_vaddhq	= 2690,
    V6_vaddhsat	= 2691,
    V6_vaddhsat_dv	= 2692,
    V6_vaddhw	= 2693,
    V6_vaddhw_acc	= 2694,
    V6_vaddubh	= 2695,
    V6_vaddubh_acc	= 2696,
    V6_vaddubsat	= 2697,
    V6_vaddubsat_dv	= 2698,
    V6_vaddububb_sat	= 2699,
    V6_vadduhsat	= 2700,
    V6_vadduhsat_dv	= 2701,
    V6_vadduhw	= 2702,
    V6_vadduhw_acc	= 2703,
    V6_vadduwsat	= 2704,
    V6_vadduwsat_dv	= 2705,
    V6_vaddw	= 2706,
    V6_vaddw_dv	= 2707,
    V6_vaddwnq	= 2708,
    V6_vaddwq	= 2709,
    V6_vaddwsat	= 2710,
    V6_vaddwsat_dv	= 2711,
    V6_valignb	= 2712,
    V6_valignbi	= 2713,
    V6_vand	= 2714,
    V6_vandnqrt	= 2715,
    V6_vandnqrt_acc	= 2716,
    V6_vandqrt	= 2717,
    V6_vandqrt_acc	= 2718,
    V6_vandvnqv	= 2719,
    V6_vandvqv	= 2720,
    V6_vandvrt	= 2721,
    V6_vandvrt_acc	= 2722,
    V6_vaslh	= 2723,
    V6_vaslh_acc	= 2724,
    V6_vaslhv	= 2725,
    V6_vaslw	= 2726,
    V6_vaslw_acc	= 2727,
    V6_vaslwv	= 2728,
    V6_vasr_into	= 2729,
    V6_vasrh	= 2730,
    V6_vasrh_acc	= 2731,
    V6_vasrhbrndsat	= 2732,
    V6_vasrhbsat	= 2733,
    V6_vasrhubrndsat	= 2734,
    V6_vasrhubsat	= 2735,
    V6_vasrhv	= 2736,
    V6_vasruhubrndsat	= 2737,
    V6_vasruhubsat	= 2738,
    V6_vasruwuhrndsat	= 2739,
    V6_vasruwuhsat	= 2740,
    V6_vasrw	= 2741,
    V6_vasrw_acc	= 2742,
    V6_vasrwh	= 2743,
    V6_vasrwhrndsat	= 2744,
    V6_vasrwhsat	= 2745,
    V6_vasrwuhrndsat	= 2746,
    V6_vasrwuhsat	= 2747,
    V6_vasrwv	= 2748,
    V6_vassign	= 2749,
    V6_vavgb	= 2750,
    V6_vavgbrnd	= 2751,
    V6_vavgh	= 2752,
    V6_vavghrnd	= 2753,
    V6_vavgub	= 2754,
    V6_vavgubrnd	= 2755,
    V6_vavguh	= 2756,
    V6_vavguhrnd	= 2757,
    V6_vavguw	= 2758,
    V6_vavguwrnd	= 2759,
    V6_vavgw	= 2760,
    V6_vavgwrnd	= 2761,
    V6_vccombine	= 2762,
    V6_vcl0h	= 2763,
    V6_vcl0w	= 2764,
    V6_vcmov	= 2765,
    V6_vcombine	= 2766,
    V6_vdeal	= 2767,
    V6_vdealb	= 2768,
    V6_vdealb4w	= 2769,
    V6_vdealh	= 2770,
    V6_vdealvdd	= 2771,
    V6_vdelta	= 2772,
    V6_vdmpybus	= 2773,
    V6_vdmpybus_acc	= 2774,
    V6_vdmpybus_dv	= 2775,
    V6_vdmpybus_dv_acc	= 2776,
    V6_vdmpyhb	= 2777,
    V6_vdmpyhb_acc	= 2778,
    V6_vdmpyhb_dv	= 2779,
    V6_vdmpyhb_dv_acc	= 2780,
    V6_vdmpyhisat	= 2781,
    V6_vdmpyhisat_acc	= 2782,
    V6_vdmpyhsat	= 2783,
    V6_vdmpyhsat_acc	= 2784,
    V6_vdmpyhsuisat	= 2785,
    V6_vdmpyhsuisat_acc	= 2786,
    V6_vdmpyhsusat	= 2787,
    V6_vdmpyhsusat_acc	= 2788,
    V6_vdmpyhvsat	= 2789,
    V6_vdmpyhvsat_acc	= 2790,
    V6_vdsaduh	= 2791,
    V6_vdsaduh_acc	= 2792,
    V6_veqb	= 2793,
    V6_veqb_and	= 2794,
    V6_veqb_or	= 2795,
    V6_veqb_xor	= 2796,
    V6_veqh	= 2797,
    V6_veqh_and	= 2798,
    V6_veqh_or	= 2799,
    V6_veqh_xor	= 2800,
    V6_veqw	= 2801,
    V6_veqw_and	= 2802,
    V6_veqw_or	= 2803,
    V6_veqw_xor	= 2804,
    V6_vgathermh	= 2805,
    V6_vgathermhq	= 2806,
    V6_vgathermhw	= 2807,
    V6_vgathermhwq	= 2808,
    V6_vgathermw	= 2809,
    V6_vgathermwq	= 2810,
    V6_vgtb	= 2811,
    V6_vgtb_and	= 2812,
    V6_vgtb_or	= 2813,
    V6_vgtb_xor	= 2814,
    V6_vgth	= 2815,
    V6_vgth_and	= 2816,
    V6_vgth_or	= 2817,
    V6_vgth_xor	= 2818,
    V6_vgtub	= 2819,
    V6_vgtub_and	= 2820,
    V6_vgtub_or	= 2821,
    V6_vgtub_xor	= 2822,
    V6_vgtuh	= 2823,
    V6_vgtuh_and	= 2824,
    V6_vgtuh_or	= 2825,
    V6_vgtuh_xor	= 2826,
    V6_vgtuw	= 2827,
    V6_vgtuw_and	= 2828,
    V6_vgtuw_or	= 2829,
    V6_vgtuw_xor	= 2830,
    V6_vgtw	= 2831,
    V6_vgtw_and	= 2832,
    V6_vgtw_or	= 2833,
    V6_vgtw_xor	= 2834,
    V6_vhist	= 2835,
    V6_vhistq	= 2836,
    V6_vinsertwr	= 2837,
    V6_vlalignb	= 2838,
    V6_vlalignbi	= 2839,
    V6_vlsrb	= 2840,
    V6_vlsrh	= 2841,
    V6_vlsrhv	= 2842,
    V6_vlsrw	= 2843,
    V6_vlsrwv	= 2844,
    V6_vlut4	= 2845,
    V6_vlutvvb	= 2846,
    V6_vlutvvb_nm	= 2847,
    V6_vlutvvb_oracc	= 2848,
    V6_vlutvvb_oracci	= 2849,
    V6_vlutvvbi	= 2850,
    V6_vlutvwh	= 2851,
    V6_vlutvwh_nm	= 2852,
    V6_vlutvwh_oracc	= 2853,
    V6_vlutvwh_oracci	= 2854,
    V6_vlutvwhi	= 2855,
    V6_vmaxb	= 2856,
    V6_vmaxh	= 2857,
    V6_vmaxub	= 2858,
    V6_vmaxuh	= 2859,
    V6_vmaxw	= 2860,
    V6_vminb	= 2861,
    V6_vminh	= 2862,
    V6_vminub	= 2863,
    V6_vminuh	= 2864,
    V6_vminw	= 2865,
    V6_vmpabus	= 2866,
    V6_vmpabus_acc	= 2867,
    V6_vmpabusv	= 2868,
    V6_vmpabuu	= 2869,
    V6_vmpabuu_acc	= 2870,
    V6_vmpabuuv	= 2871,
    V6_vmpahb	= 2872,
    V6_vmpahb_acc	= 2873,
    V6_vmpahhsat	= 2874,
    V6_vmpauhb	= 2875,
    V6_vmpauhb_acc	= 2876,
    V6_vmpauhuhsat	= 2877,
    V6_vmpsuhuhsat	= 2878,
    V6_vmpybus	= 2879,
    V6_vmpybus_acc	= 2880,
    V6_vmpybusv	= 2881,
    V6_vmpybusv_acc	= 2882,
    V6_vmpybv	= 2883,
    V6_vmpybv_acc	= 2884,
    V6_vmpyewuh	= 2885,
    V6_vmpyewuh_64	= 2886,
    V6_vmpyh	= 2887,
    V6_vmpyh_acc	= 2888,
    V6_vmpyhsat_acc	= 2889,
    V6_vmpyhsrs	= 2890,
    V6_vmpyhss	= 2891,
    V6_vmpyhus	= 2892,
    V6_vmpyhus_acc	= 2893,
    V6_vmpyhv	= 2894,
    V6_vmpyhv_acc	= 2895,
    V6_vmpyhvsrs	= 2896,
    V6_vmpyieoh	= 2897,
    V6_vmpyiewh_acc	= 2898,
    V6_vmpyiewuh	= 2899,
    V6_vmpyiewuh_acc	= 2900,
    V6_vmpyih	= 2901,
    V6_vmpyih_acc	= 2902,
    V6_vmpyihb	= 2903,
    V6_vmpyihb_acc	= 2904,
    V6_vmpyiowh	= 2905,
    V6_vmpyiwb	= 2906,
    V6_vmpyiwb_acc	= 2907,
    V6_vmpyiwh	= 2908,
    V6_vmpyiwh_acc	= 2909,
    V6_vmpyiwub	= 2910,
    V6_vmpyiwub_acc	= 2911,
    V6_vmpyowh	= 2912,
    V6_vmpyowh_64_acc	= 2913,
    V6_vmpyowh_rnd	= 2914,
    V6_vmpyowh_rnd_sacc	= 2915,
    V6_vmpyowh_sacc	= 2916,
    V6_vmpyub	= 2917,
    V6_vmpyub_acc	= 2918,
    V6_vmpyubv	= 2919,
    V6_vmpyubv_acc	= 2920,
    V6_vmpyuh	= 2921,
    V6_vmpyuh_acc	= 2922,
    V6_vmpyuhe	= 2923,
    V6_vmpyuhe_acc	= 2924,
    V6_vmpyuhv	= 2925,
    V6_vmpyuhv_acc	= 2926,
    V6_vmux	= 2927,
    V6_vnavgb	= 2928,
    V6_vnavgh	= 2929,
    V6_vnavgub	= 2930,
    V6_vnavgw	= 2931,
    V6_vnccombine	= 2932,
    V6_vncmov	= 2933,
    V6_vnormamth	= 2934,
    V6_vnormamtw	= 2935,
    V6_vnot	= 2936,
    V6_vor	= 2937,
    V6_vpackeb	= 2938,
    V6_vpackeh	= 2939,
    V6_vpackhb_sat	= 2940,
    V6_vpackhub_sat	= 2941,
    V6_vpackob	= 2942,
    V6_vpackoh	= 2943,
    V6_vpackwh_sat	= 2944,
    V6_vpackwuh_sat	= 2945,
    V6_vpopcounth	= 2946,
    V6_vprefixqb	= 2947,
    V6_vprefixqh	= 2948,
    V6_vprefixqw	= 2949,
    V6_vrdelta	= 2950,
    V6_vrmpybub_rtt	= 2951,
    V6_vrmpybub_rtt_acc	= 2952,
    V6_vrmpybus	= 2953,
    V6_vrmpybus_acc	= 2954,
    V6_vrmpybusi	= 2955,
    V6_vrmpybusi_acc	= 2956,
    V6_vrmpybusv	= 2957,
    V6_vrmpybusv_acc	= 2958,
    V6_vrmpybv	= 2959,
    V6_vrmpybv_acc	= 2960,
    V6_vrmpyub	= 2961,
    V6_vrmpyub_acc	= 2962,
    V6_vrmpyub_rtt	= 2963,
    V6_vrmpyub_rtt_acc	= 2964,
    V6_vrmpyubi	= 2965,
    V6_vrmpyubi_acc	= 2966,
    V6_vrmpyubv	= 2967,
    V6_vrmpyubv_acc	= 2968,
    V6_vrmpyzbb_rt	= 2969,
    V6_vrmpyzbb_rt_acc	= 2970,
    V6_vrmpyzbb_rx	= 2971,
    V6_vrmpyzbb_rx_acc	= 2972,
    V6_vrmpyzbub_rt	= 2973,
    V6_vrmpyzbub_rt_acc	= 2974,
    V6_vrmpyzbub_rx	= 2975,
    V6_vrmpyzbub_rx_acc	= 2976,
    V6_vrmpyzcb_rt	= 2977,
    V6_vrmpyzcb_rt_acc	= 2978,
    V6_vrmpyzcb_rx	= 2979,
    V6_vrmpyzcb_rx_acc	= 2980,
    V6_vrmpyzcbs_rt	= 2981,
    V6_vrmpyzcbs_rt_acc	= 2982,
    V6_vrmpyzcbs_rx	= 2983,
    V6_vrmpyzcbs_rx_acc	= 2984,
    V6_vrmpyznb_rt	= 2985,
    V6_vrmpyznb_rt_acc	= 2986,
    V6_vrmpyznb_rx	= 2987,
    V6_vrmpyznb_rx_acc	= 2988,
    V6_vror	= 2989,
    V6_vrotr	= 2990,
    V6_vroundhb	= 2991,
    V6_vroundhub	= 2992,
    V6_vrounduhub	= 2993,
    V6_vrounduwuh	= 2994,
    V6_vroundwh	= 2995,
    V6_vroundwuh	= 2996,
    V6_vrsadubi	= 2997,
    V6_vrsadubi_acc	= 2998,
    V6_vsatdw	= 2999,
    V6_vsathub	= 3000,
    V6_vsatuwuh	= 3001,
    V6_vsatwh	= 3002,
    V6_vsb	= 3003,
    V6_vscattermh	= 3004,
    V6_vscattermh_add	= 3005,
    V6_vscattermhq	= 3006,
    V6_vscattermhw	= 3007,
    V6_vscattermhw_add	= 3008,
    V6_vscattermhwq	= 3009,
    V6_vscattermw	= 3010,
    V6_vscattermw_add	= 3011,
    V6_vscattermwq	= 3012,
    V6_vsh	= 3013,
    V6_vshufeh	= 3014,
    V6_vshuff	= 3015,
    V6_vshuffb	= 3016,
    V6_vshuffeb	= 3017,
    V6_vshuffh	= 3018,
    V6_vshuffob	= 3019,
    V6_vshuffvdd	= 3020,
    V6_vshufoeb	= 3021,
    V6_vshufoeh	= 3022,
    V6_vshufoh	= 3023,
    V6_vsubb	= 3024,
    V6_vsubb_dv	= 3025,
    V6_vsubbnq	= 3026,
    V6_vsubbq	= 3027,
    V6_vsubbsat	= 3028,
    V6_vsubbsat_dv	= 3029,
    V6_vsubcarry	= 3030,
    V6_vsubcarryo	= 3031,
    V6_vsubh	= 3032,
    V6_vsubh_dv	= 3033,
    V6_vsubhnq	= 3034,
    V6_vsubhq	= 3035,
    V6_vsubhsat	= 3036,
    V6_vsubhsat_dv	= 3037,
    V6_vsubhw	= 3038,
    V6_vsububh	= 3039,
    V6_vsububsat	= 3040,
    V6_vsububsat_dv	= 3041,
    V6_vsubububb_sat	= 3042,
    V6_vsubuhsat	= 3043,
    V6_vsubuhsat_dv	= 3044,
    V6_vsubuhw	= 3045,
    V6_vsubuwsat	= 3046,
    V6_vsubuwsat_dv	= 3047,
    V6_vsubw	= 3048,
    V6_vsubw_dv	= 3049,
    V6_vsubwnq	= 3050,
    V6_vsubwq	= 3051,
    V6_vsubwsat	= 3052,
    V6_vsubwsat_dv	= 3053,
    V6_vswap	= 3054,
    V6_vtmpyb	= 3055,
    V6_vtmpyb_acc	= 3056,
    V6_vtmpybus	= 3057,
    V6_vtmpybus_acc	= 3058,
    V6_vtmpyhb	= 3059,
    V6_vtmpyhb_acc	= 3060,
    V6_vunpackb	= 3061,
    V6_vunpackh	= 3062,
    V6_vunpackob	= 3063,
    V6_vunpackoh	= 3064,
    V6_vunpackub	= 3065,
    V6_vunpackuh	= 3066,
    V6_vwhist128	= 3067,
    V6_vwhist128m	= 3068,
    V6_vwhist128q	= 3069,
    V6_vwhist128qm	= 3070,
    V6_vwhist256	= 3071,
    V6_vwhist256_sat	= 3072,
    V6_vwhist256q	= 3073,
    V6_vwhist256q_sat	= 3074,
    V6_vxor	= 3075,
    V6_vzb	= 3076,
    V6_vzh	= 3077,
    V6_zLd_ai	= 3078,
    V6_zLd_pi	= 3079,
    V6_zLd_ppu	= 3080,
    V6_zLd_pred_ai	= 3081,
    V6_zLd_pred_pi	= 3082,
    V6_zLd_pred_ppu	= 3083,
    V6_zextract	= 3084,
    Y2_barrier	= 3085,
    Y2_break	= 3086,
    Y2_dccleana	= 3087,
    Y2_dccleaninva	= 3088,
    Y2_dcfetchbo	= 3089,
    Y2_dcinva	= 3090,
    Y2_dczeroa	= 3091,
    Y2_icinva	= 3092,
    Y2_isync	= 3093,
    Y2_syncht	= 3094,
    Y2_wait	= 3095,
    Y4_l2fetch	= 3096,
    Y4_trace	= 3097,
    Y5_l2fetch	= 3098,
    Y6_diag	= 3099,
    Y6_diag0	= 3100,
    Y6_diag1	= 3101,
    Y6_dmlink	= 3102,
    Y6_dmpause	= 3103,
    Y6_dmpoll	= 3104,
    Y6_dmresume	= 3105,
    Y6_dmstart	= 3106,
    Y6_dmwait	= 3107,
    dep_A2_addsat	= 3108,
    dep_A2_subsat	= 3109,
    dep_S2_packhl	= 3110,
    invalid_decode	= 3111,
    INSTRUCTION_LIST_END = 3112
  };

} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace Hexagon {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    tc_01d44cb2	= 1,
    PSEUDO	= 2,
    tc_c57d9f39	= 3,
    tc_1c2c7a4a	= 4,
    tc_442395f3	= 5,
    tc_713b66bf	= 6,
    tc_86173609	= 7,
    tc_5da50c4b	= 8,
    tc_4a55d03c	= 9,
    tc_d33e5eee	= 10,
    tc_651cbe02	= 11,
    DUPLEX	= 12,
    tc_ENDLOOP	= 13,
    tc_23708a21	= 14,
    tc_56a124a7	= 15,
    tc_2f573607	= 16,
    tc_53c851ab	= 17,
    tc_fedb7e19	= 18,
    tc_4222e6bf	= 19,
    tc_075c8dd8	= 20,
    tc_9bcfb2ee	= 21,
    tc_158aa3f7	= 22,
    tc_df5d53f9	= 23,
    tc_14ab4f41	= 24,
    tc_f38f92e1	= 25,
    tc_1981450d	= 26,
    tc_e9170fb7	= 27,
    tc_40d64c94	= 28,
    LD_tc_ld_SLOT01	= 29,
    tc_38382228	= 30,
    tc_c21d7447	= 31,
    tc_7f8ae742	= 32,
    tc_5a4b5e58	= 33,
    tc_197dce51	= 34,
    tc_44fffc58	= 35,
    tc_5ceb2f9e	= 36,
    tc_56c4f9fe	= 37,
    tc_b4dc7630	= 38,
    tc_a2b365d2	= 39,
    tc_60e324ff	= 40,
    tc_db5555f3	= 41,
    tc_c0749f3c	= 42,
    PSEUDOM	= 43,
    tc_3aacf4a8	= 44,
    tc_c5dba46e	= 45,
    tc_af25efd9	= 46,
    tc_0dfac0a7	= 47,
    tc_8035e91f	= 48,
    tc_011e0e9d	= 49,
    tc_ae5babd7	= 50,
    tc_5deb5e47	= 51,
    tc_bb831a7c	= 52,
    tc_92240447	= 53,
    tc_7c31e19a	= 54,
    tc_d03278fd	= 55,
    tc_65cbd974	= 56,
    tc_934753bb	= 57,
    ST_tc_st_SLOT01	= 58,
    CVI_VA	= 59,
    tc_0ec46cf9	= 60,
    tc_718b5c53	= 61,
    CVI_GATHER_PSEUDO	= 62,
    tc_d45ba9cd	= 63,
    tc_388f9897	= 64,
    tc_9124c04f	= 65,
    tc_4ac61d92	= 66,
    tc_aee6250c	= 67,
    tc_eed07714	= 68,
    tc_74a42bda	= 69,
    tc_a9edeffa	= 70,
    tc_838c4d7a	= 71,
    tc_d61dfdc3	= 72,
    tc_8a825db2	= 73,
    tc_f34c1c21	= 74,
    tc_95a33176	= 75,
    tc_9f6cd987	= 76,
    tc_b837298f	= 77,
    tc_8b5bd4f5	= 78,
    tc_84a7500d	= 79,
    tc_7476d766	= 80,
    tc_49fdfd4b	= 81,
    tc_f098b237	= 82,
    tc_20131976	= 83,
    tc_1d41f8b7	= 84,
    tc_a1297125	= 85,
    tc_112d30d6	= 86,
    tc_d68dca5c	= 87,
    tc_788b1d09	= 88,
    tc_38e0bae9	= 89,
    tc_407e96f9	= 90,
    tc_7401744f	= 91,
    tc_9b3c0462	= 92,
    tc_151bf368	= 93,
    tc_9c52f549	= 94,
    tc_55b33fda	= 95,
    tc_6fc5dbea	= 96,
    tc_3edca78f	= 97,
    tc_a7a13fac	= 98,
    tc_9783714b	= 99,
    tc_f0e8e832	= 100,
    tc_65279839	= 101,
    tc_0a195f2c	= 102,
    tc_01e1be3b	= 103,
    tc_556f6577	= 104,
    tc_02fe1c65	= 105,
    tc_9e72dc89	= 106,
    tc_9edb7c77	= 107,
    tc_7f7f45f5	= 108,
    tc_c20701f0	= 109,
    tc_f7569068	= 110,
    tc_fae9dfa5	= 111,
    tc_6ae3426b	= 112,
    tc_69bfb303	= 113,
    tc_362b0be2	= 114,
    tc_dc51281d	= 115,
    tc_decdde8a	= 116,
    tc_eeda4109	= 117,
    tc_711c805f	= 118,
    tc_ed03645c	= 119,
    tc_42ff66ba	= 120,
    tc_57a55b54	= 121,
    tc_1248597c	= 122,
    tc_9406230a	= 123,
    tc_d57d649c	= 124,
    tc_4abdbdc6	= 125,
    tc_6d861a95	= 126,
    tc_45f9d1be	= 127,
    tc_24e109c7	= 128,
    tc_9e27f2f9	= 129,
    tc_f6e2aff9	= 130,
    tc_24f426ab	= 131,
    tc_975a4e54	= 132,
    tc_5502c366	= 133,
    tc_7b9187d3	= 134,
    tc_f999c66e	= 135,
    tc_1c7522a8	= 136,
    tc_76bb5435	= 137,
    tc_8a6d0d94	= 138,
    tc_2471c1c8	= 139,
    tc_64b00d8a	= 140,
    tc_5f2afaf7	= 141,
    tc_ac65613f	= 142,
    tc_a32e03e7	= 143,
    tc_822c3c68	= 144,
    tc_abfd9a6d	= 145,
    tc_bf2ffc0f	= 146,
    tc_7c6d32e4	= 147,
    tc_45791fb8	= 148,
    tc_b7c4062a	= 149,
    tc_5944960d	= 150,
    tc_2c13e7f5	= 151,
    tc_a154b476	= 152,
    tc_a4e22bbd	= 153,
    tc_503ce0f3	= 154,
    tc_0655b949	= 155,
    tc_6e20402a	= 156,
    tc_db96aa6b	= 157,
    tc_a7bdb22c	= 158,
    tc_db596beb	= 159,
    tc_a08b630b	= 160,
    tc_1fcb8495	= 161,
    tc_9edefe01	= 162,
    tc_449acf79	= 163,
    tc_ce59038e	= 164,
    tc_f529831b	= 165,
    tc_addc37a8	= 166,
    tc_6f42bc60	= 167,
    tc_7af3a37e	= 168,
    tc_e3d699e3	= 169,
    tc_ba9255a6	= 170,
    tc_1fe4ab69	= 171,
    tc_bb07f2c5	= 172,
    tc_8e82e8ca	= 173,
    tc_cfa0e29b	= 174,
    tc_0a6c20ae	= 175,
    tc_0fac1eb8	= 176,
    tc_829d8a86	= 177,
    tc_280f7fe1	= 178,
    tc_887d1bb7	= 179,
    tc_96ef76ef	= 180,
    tc_55a9a350	= 181,
    tc_f0cdeccf	= 182,
    tc_a38c45dc	= 183,
    tc_d3632d88	= 184,
    tc_5e4cf0e8	= 185,
    tc_ef921005	= 186,
    tc_5b347363	= 187,
    tc_3d14a17b	= 188,
    tc_3fbf1042	= 189,
    tc_63567288	= 190,
    tc_59a7822c	= 191,
    tc_937dd41c	= 192,
    tc_a4ee89db	= 193,
    tc_c818ff7f	= 194,
    tc_1242dc2a	= 195,
    tc_44d5a428	= 196,
    tc_540c3da3	= 197,
    tc_c4edf264	= 198,
    tc_5bf8afbb	= 199,
    tc_2b4c548e	= 200,
    tc_bb599486	= 201,
    tc_a7e6707d	= 202,
    tc_3c56e5ce	= 203,
    tc_abe8c3b2	= 204,
    tc_453fe68d	= 205,
    tc_1ba8a0cd	= 206,
    tc_52447ecc	= 207,
    tc_3904b926	= 208,
    tc_b9db8205	= 209,
    tc_663c80a7	= 210,
    tc_f21e8abb	= 211,
    tc_131f1c81	= 212,
    tc_c7039829	= 213,
    tc_e2d2e9e5	= 214,
    tc_ab23f776	= 215,
    tc_7177e272	= 216,
    tc_e99d4c2e	= 217,
    tc_6942b6e0	= 218,
    tc_a02a10a8	= 219,
    tc_54a0dc47	= 220,
    tc_447d9895	= 221,
    tc_191381c1	= 222,
    tc_3e2aaafc	= 223,
    tc_3ce09744	= 224,
    tc_20a4bbec	= 225,
    tc_c127de3a	= 226,
    tc_257f6f7c	= 227,
    tc_7e6a3e89	= 228,
    tc_e35c1e93	= 229,
    tc_05ca8cfd	= 230,
    tc_d8287c14	= 231,
    tc_08a4f1b6	= 232,
    tc_56e64202	= 233,
    tc_ac4046bc	= 234,
    tc_2e8f5f6e	= 235,
    tc_7417e785	= 236,
    tc_309dbb4f	= 237,
    tc_df80eeb0	= 238,
    tc_16ff9ef8	= 239,
    tc_51d0ecc3	= 240,
    tc_561aaa58	= 241,
    tc_946013d8	= 242,
    tc_46d6c3e0	= 243,
    tc_87adc037	= 244,
    tc_649072c2	= 245,
    tc_b091f1c6	= 246,
    tc_0b04c6c7	= 247,
    tc_660769f1	= 248,
    tc_a28f32b5	= 249,
    tc_7d68d5c2	= 250,
    tc_7095ecba	= 251,
    tc_a69eeee1	= 252,
    tc_1381a97c	= 253,
    tc_e3f68a46	= 254,
    tc_f1de44ef	= 255,
    tc_9d1dc972	= 256,
    tc_90bcc1db	= 257,
    tc_cd94bfe0	= 258,
    tc_15fdf750	= 259,
    tc_1ad8a370	= 260,
    tc_e675c45a	= 261,
    tc_61bf7c03	= 262,
    tc_933f2b39	= 263,
    tc_26a377fe	= 264,
    tc_2d4051cd	= 265,
    tc_6e7fa133	= 266,
    tc_8772086c	= 267,
    tc_b4416217	= 268,
    tc_9f363d21	= 269,
    tc_8e420e4d	= 270,
    tc_7273323b	= 271,
    tc_58d21193	= 272,
    tc_71646d06	= 273,
    tc_04da405a	= 274,
    tc_2c745bb8	= 275,
    tc_b28e51aa	= 276,
    tc_767c4e9d	= 277,
    tc_e699ae41	= 278,
    tc_a0dbea28	= 279,
    tc_dd5b0695	= 280,
    tc_3ad719fb	= 281,
    tc_77f94a5e	= 282,
    tc_55255f2b	= 283,
    tc_b1ae5f67	= 284,
    tc_2237d952	= 285,
    tc_0ba0d5da	= 286,
    tc_9b34f5e0	= 287,
    tc_2c3e17fc	= 288,
    tc_a3070909	= 289,
    tc_d7718fbe	= 290,
    tc_28e55c6f	= 291,
    tc_4bf903b0	= 292,
    tc_invalid	= 293,
    SCHED_LIST_END = 294
  };
} // end namespace Sched
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { Hexagon::R31, Hexagon::R30, Hexagon::R29, 0 };
static const MCPhysReg ImplicitList2[] = { Hexagon::R29, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList3[] = { Hexagon::R29, 0 };
static const MCPhysReg ImplicitList4[] = { Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList5[] = { Hexagon::SA0, Hexagon::LC0, 0 };
static const MCPhysReg ImplicitList6[] = { Hexagon::PC, Hexagon::LC0, 0 };
static const MCPhysReg ImplicitList7[] = { Hexagon::SA0, Hexagon::SA1, Hexagon::LC0, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList8[] = { Hexagon::PC, Hexagon::LC0, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList9[] = { Hexagon::SA1, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList10[] = { Hexagon::PC, Hexagon::LC1, 0 };
static const MCPhysReg ImplicitList11[] = { Hexagon::LC0, Hexagon::SA0, 0 };
static const MCPhysReg ImplicitList12[] = { Hexagon::LC0, Hexagon::P3, Hexagon::PC, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList13[] = { Hexagon::LC0, Hexagon::LC1, Hexagon::SA0, Hexagon::SA1, 0 };
static const MCPhysReg ImplicitList14[] = { Hexagon::LC0, Hexagon::LC1, Hexagon::P3, Hexagon::PC, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList15[] = { Hexagon::LC1, Hexagon::SA1, 0 };
static const MCPhysReg ImplicitList16[] = { Hexagon::LC1, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList17[] = { Hexagon::R30, 0 };
static const MCPhysReg ImplicitList18[] = { Hexagon::CS, 0 };
static const MCPhysReg ImplicitList19[] = { Hexagon::PC, 0 };
static const MCPhysReg ImplicitList20[] = { Hexagon::FRAMEKEY, 0 };
static const MCPhysReg ImplicitList21[] = { Hexagon::FRAMEKEY, Hexagon::FRAMELIMIT, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList22[] = { Hexagon::USR_OVF, 0 };
static const MCPhysReg ImplicitList23[] = { Hexagon::R16, 0 };
static const MCPhysReg ImplicitList24[] = { Hexagon::R28, 0 };
static const MCPhysReg ImplicitList25[] = { Hexagon::USR, 0 };
static const MCPhysReg ImplicitList26[] = { Hexagon::PC, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList27[] = { Hexagon::LC0, Hexagon::SA0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList28[] = { Hexagon::SA0, Hexagon::LC0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList29[] = { Hexagon::LC0, Hexagon::P3, Hexagon::SA0, Hexagon::USR, 0 };
static const MCPhysReg ImplicitList30[] = { Hexagon::GOSP, 0 };
static const MCPhysReg ImplicitList31[] = { Hexagon::GOSP, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList32[] = { Hexagon::P0, 0 };
static const MCPhysReg ImplicitList33[] = { Hexagon::P0, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList34[] = { Hexagon::P1, 0 };
static const MCPhysReg ImplicitList35[] = { Hexagon::P1, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList36[] = { Hexagon::GP, 0 };
static const MCPhysReg ImplicitList37[] = { Hexagon::PC, Hexagon::R29, 0 };
static const MCPhysReg ImplicitList38[] = { Hexagon::PC, Hexagon::R31, Hexagon::R6, Hexagon::R7, Hexagon::P0, 0 };
static const MCPhysReg ImplicitList39[] = { Hexagon::R29, Hexagon::R30, Hexagon::R31, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList40[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, Hexagon::R29, Hexagon::R30, Hexagon::R31, Hexagon::PC, 0 };
static const MCPhysReg ImplicitList41[] = { Hexagon::R29, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList42[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, Hexagon::P0, 0 };
static const MCPhysReg ImplicitList43[] = { Hexagon::R14, Hexagon::R15, Hexagon::R28, 0 };
static const MCPhysReg ImplicitList44[] = { Hexagon::FRAMEKEY, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList45[] = { Hexagon::R31, 0 };
static const MCPhysReg ImplicitList46[] = { Hexagon::P0, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList47[] = { Hexagon::PC, Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList48[] = { Hexagon::FRAMEKEY, Hexagon::P0, Hexagon::R30, 0 };
static const MCPhysReg ImplicitList49[] = { Hexagon::FRAMEKEY, Hexagon::FRAMELIMIT, Hexagon::R29, Hexagon::R30, Hexagon::R31, 0 };
static const MCPhysReg ImplicitList50[] = { Hexagon::VTMP, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Hexagon::CtrRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo156[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::CtrRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Hexagon::CtrRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GuestRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GuestRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { Hexagon::GuestRegs64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { Hexagon::GuestRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralDoubleLow8RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::GeneralSubRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo268[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo274[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::DoubleRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo292[] = { { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVQRRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsLow8RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo293[] = { { Hexagon::HvxWRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::HvxVRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { Hexagon::HvxQRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo295[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo296[] = { { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::PredRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Hexagon::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Hexagon::ModRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc HexagonInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #14 = DBG_INSTR_REF
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #15 = DBG_LABEL
  { 16,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #16 = REG_SEQUENCE
  { 17,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #17 = COPY
  { 18,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #18 = BUNDLE
  { 19,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #19 = LIFETIME_START
  { 20,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #20 = LIFETIME_END
  { 21,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8 },  // Inst #21 = PSEUDO_PROBE
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #22 = STACKMAP
  { 23,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #23 = FENTRY_CALL
  { 24,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #24 = PATCHPOINT
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo11 },  // Inst #25 = LOAD_STACK_GUARD
  { 26,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #26 = PREALLOCATED_SETUP
  { 27,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo12 },  // Inst #27 = PREALLOCATED_ARG
  { 28,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #28 = STATEPOINT
  { 29,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13 },  // Inst #29 = LOCAL_ESCAPE
  { 30,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #30 = FAULTING_OP
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #31 = PATCHABLE_OP
  { 32,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #32 = PATCHABLE_FUNCTION_ENTER
  { 33,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #33 = PATCHABLE_RET
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #34 = PATCHABLE_FUNCTION_EXIT
  { 35,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #35 = PATCHABLE_TAIL_CALL
  { 36,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14 },  // Inst #36 = PATCHABLE_EVENT_CALL
  { 37,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15 },  // Inst #37 = PATCHABLE_TYPED_EVENT_CALL
  { 38,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #38 = ICALL_BRANCH_FUNNEL
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #39 = G_ASSERT_ZEXT
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #40 = G_ADD
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #41 = G_SUB
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #42 = G_MUL
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #43 = G_SDIV
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #44 = G_UDIV
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #45 = G_SREM
  { 46,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #46 = G_UREM
  { 47,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #47 = G_AND
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #48 = G_OR
  { 49,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #49 = G_XOR
  { 50,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #50 = G_IMPLICIT_DEF
  { 51,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #51 = G_PHI
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #52 = G_FRAME_INDEX
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #53 = G_GLOBAL_VALUE
  { 54,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #54 = G_EXTRACT
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #55 = G_UNMERGE_VALUES
  { 56,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #56 = G_INSERT
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #57 = G_MERGE_VALUES
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #58 = G_BUILD_VECTOR
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #59 = G_BUILD_VECTOR_TRUNC
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #60 = G_CONCAT_VECTORS
  { 61,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #61 = G_PTRTOINT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #62 = G_INTTOPTR
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #63 = G_BITCAST
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #64 = G_FREEZE
  { 65,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #65 = G_INTRINSIC_TRUNC
  { 66,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #66 = G_INTRINSIC_ROUND
  { 67,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #67 = G_INTRINSIC_LRINT
  { 68,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #68 = G_INTRINSIC_ROUNDEVEN
  { 69,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #69 = G_READCYCLECOUNTER
  { 70,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #70 = G_LOAD
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #71 = G_SEXTLOAD
  { 72,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #72 = G_ZEXTLOAD
  { 73,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #73 = G_INDEXED_LOAD
  { 74,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #74 = G_INDEXED_SEXTLOAD
  { 75,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #75 = G_INDEXED_ZEXTLOAD
  { 76,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #76 = G_STORE
  { 77,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #77 = G_INDEXED_STORE
  { 78,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #78 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 79,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #79 = G_ATOMIC_CMPXCHG
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #80 = G_ATOMICRMW_XCHG
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #81 = G_ATOMICRMW_ADD
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #82 = G_ATOMICRMW_SUB
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #83 = G_ATOMICRMW_AND
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #84 = G_ATOMICRMW_NAND
  { 85,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #85 = G_ATOMICRMW_OR
  { 86,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #86 = G_ATOMICRMW_XOR
  { 87,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #87 = G_ATOMICRMW_MAX
  { 88,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #88 = G_ATOMICRMW_MIN
  { 89,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #89 = G_ATOMICRMW_UMAX
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #90 = G_ATOMICRMW_UMIN
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #91 = G_ATOMICRMW_FADD
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #92 = G_ATOMICRMW_FSUB
  { 93,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #93 = G_FENCE
  { 94,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #94 = G_BRCOND
  { 95,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #95 = G_BRINDIRECT
  { 96,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #96 = G_INTRINSIC
  { 97,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #97 = G_INTRINSIC_W_SIDE_EFFECTS
  { 98,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #98 = G_ANYEXT
  { 99,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #99 = G_TRUNC
  { 100,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #100 = G_CONSTANT
  { 101,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #101 = G_FCONSTANT
  { 102,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #102 = G_VASTART
  { 103,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo29 },  // Inst #103 = G_VAARG
  { 104,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #104 = G_SEXT
  { 105,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #105 = G_SEXT_INREG
  { 106,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #106 = G_ZEXT
  { 107,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #107 = G_SHL
  { 108,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #108 = G_LSHR
  { 109,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #109 = G_ASHR
  { 110,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #110 = G_FSHL
  { 111,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #111 = G_FSHR
  { 112,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #112 = G_ICMP
  { 113,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #113 = G_FCMP
  { 114,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #114 = G_SELECT
  { 115,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #115 = G_UADDO
  { 116,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #116 = G_UADDE
  { 117,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #117 = G_USUBO
  { 118,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #118 = G_USUBE
  { 119,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #119 = G_SADDO
  { 120,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #120 = G_SADDE
  { 121,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #121 = G_SSUBO
  { 122,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #122 = G_SSUBE
  { 123,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #123 = G_UMULO
  { 124,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #124 = G_SMULO
  { 125,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #125 = G_UMULH
  { 126,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #126 = G_SMULH
  { 127,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #127 = G_UADDSAT
  { 128,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #128 = G_SADDSAT
  { 129,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #129 = G_USUBSAT
  { 130,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #130 = G_SSUBSAT
  { 131,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #131 = G_USHLSAT
  { 132,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #132 = G_SSHLSAT
  { 133,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #133 = G_SMULFIX
  { 134,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #134 = G_UMULFIX
  { 135,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #135 = G_SMULFIXSAT
  { 136,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #136 = G_UMULFIXSAT
  { 137,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #137 = G_SDIVFIX
  { 138,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #138 = G_UDIVFIX
  { 139,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #139 = G_SDIVFIXSAT
  { 140,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #140 = G_UDIVFIXSAT
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #141 = G_FADD
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #142 = G_FSUB
  { 143,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #143 = G_FMUL
  { 144,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #144 = G_FMA
  { 145,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #145 = G_FMAD
  { 146,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #146 = G_FDIV
  { 147,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #147 = G_FREM
  { 148,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #148 = G_FPOW
  { 149,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #149 = G_FPOWI
  { 150,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #150 = G_FEXP
  { 151,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #151 = G_FEXP2
  { 152,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #152 = G_FLOG
  { 153,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #153 = G_FLOG2
  { 154,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #154 = G_FLOG10
  { 155,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #155 = G_FNEG
  { 156,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #156 = G_FPEXT
  { 157,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #157 = G_FPTRUNC
  { 158,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #158 = G_FPTOSI
  { 159,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #159 = G_FPTOUI
  { 160,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #160 = G_SITOFP
  { 161,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #161 = G_UITOFP
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #162 = G_FABS
  { 163,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #163 = G_FCOPYSIGN
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #164 = G_FCANONICALIZE
  { 165,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #165 = G_FMINNUM
  { 166,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #166 = G_FMAXNUM
  { 167,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #167 = G_FMINNUM_IEEE
  { 168,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #168 = G_FMAXNUM_IEEE
  { 169,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #169 = G_FMINIMUM
  { 170,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #170 = G_FMAXIMUM
  { 171,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #171 = G_PTR_ADD
  { 172,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #172 = G_PTRMASK
  { 173,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #173 = G_SMIN
  { 174,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #174 = G_SMAX
  { 175,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #175 = G_UMIN
  { 176,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #176 = G_UMAX
  { 177,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #177 = G_ABS
  { 178,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #178 = G_BR
  { 179,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #179 = G_BRJT
  { 180,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #180 = G_INSERT_VECTOR_ELT
  { 181,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #181 = G_EXTRACT_VECTOR_ELT
  { 182,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo39 },  // Inst #182 = G_SHUFFLE_VECTOR
  { 183,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #183 = G_CTTZ
  { 184,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #184 = G_CTTZ_ZERO_UNDEF
  { 185,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #185 = G_CTLZ
  { 186,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #186 = G_CTLZ_ZERO_UNDEF
  { 187,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #187 = G_CTPOP
  { 188,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #188 = G_BSWAP
  { 189,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #189 = G_BITREVERSE
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #190 = G_FCEIL
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #191 = G_FCOS
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #192 = G_FSIN
  { 193,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #193 = G_FSQRT
  { 194,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #194 = G_FFLOOR
  { 195,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #195 = G_FRINT
  { 196,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #196 = G_FNEARBYINT
  { 197,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #197 = G_ADDRSPACE_CAST
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #198 = G_BLOCK_ADDR
  { 199,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #199 = G_JUMP_TABLE
  { 200,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #200 = G_DYN_STACKALLOC
  { 201,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #201 = G_STRICT_FADD
  { 202,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #202 = G_STRICT_FSUB
  { 203,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #203 = G_STRICT_FMUL
  { 204,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #204 = G_STRICT_FDIV
  { 205,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #205 = G_STRICT_FREM
  { 206,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #206 = G_STRICT_FMA
  { 207,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #207 = G_STRICT_FSQRT
  { 208,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #208 = G_READ_REGISTER
  { 209,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #209 = G_WRITE_REGISTER
  { 210,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #210 = G_MEMCPY
  { 211,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #211 = G_MEMMOVE
  { 212,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #212 = G_MEMSET
  { 213,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #213 = G_VECREDUCE_SEQ_FADD
  { 214,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #214 = G_VECREDUCE_SEQ_FMUL
  { 215,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #215 = G_VECREDUCE_FADD
  { 216,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #216 = G_VECREDUCE_FMUL
  { 217,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #217 = G_VECREDUCE_FMAX
  { 218,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #218 = G_VECREDUCE_FMIN
  { 219,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #219 = G_VECREDUCE_ADD
  { 220,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #220 = G_VECREDUCE_MUL
  { 221,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #221 = G_VECREDUCE_AND
  { 222,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #222 = G_VECREDUCE_OR
  { 223,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #223 = G_VECREDUCE_XOR
  { 224,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #224 = G_VECREDUCE_SMAX
  { 225,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #225 = G_VECREDUCE_SMIN
  { 226,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #226 = G_VECREDUCE_UMAX
  { 227,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #227 = G_VECREDUCE_UMIN
  { 228,	3,	1,	4,	1,	0|(1ULL<<MCID::Pseudo), 0x3ULL, nullptr, nullptr, OperandInfo43 },  // Inst #228 = A2_addsp
  { 229,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo44 },  // Inst #229 = A2_iconst
  { 230,	2,	1,	4,	3,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #230 = A2_neg
  { 231,	2,	1,	4,	3,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #231 = A2_not
  { 232,	3,	1,	4,	4,	0|(1ULL<<MCID::Pseudo), 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #232 = A2_tfrf
  { 233,	3,	1,	4,	5,	0|(1ULL<<MCID::Pseudo), 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #233 = A2_tfrfnew
  { 234,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Predicable), 0x0ULL, nullptr, nullptr, OperandInfo47 },  // Inst #234 = A2_tfrp
  { 235,	3,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0xc00ULL, nullptr, nullptr, OperandInfo48 },  // Inst #235 = A2_tfrpf
  { 236,	3,	1,	4,	7,	0|(1ULL<<MCID::Pseudo), 0x1c00ULL, nullptr, nullptr, OperandInfo48 },  // Inst #236 = A2_tfrpfnew
  { 237,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x3ULL, nullptr, nullptr, OperandInfo49 },  // Inst #237 = A2_tfrpi
  { 238,	3,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0x400ULL, nullptr, nullptr, OperandInfo48 },  // Inst #238 = A2_tfrpt
  { 239,	3,	1,	4,	7,	0|(1ULL<<MCID::Pseudo), 0x1400ULL, nullptr, nullptr, OperandInfo48 },  // Inst #239 = A2_tfrptnew
  { 240,	3,	1,	4,	4,	0|(1ULL<<MCID::Pseudo), 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #240 = A2_tfrt
  { 241,	3,	1,	4,	5,	0|(1ULL<<MCID::Pseudo), 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #241 = A2_tfrtnew
  { 242,	3,	1,	4,	8,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo50 },  // Inst #242 = A2_vaddb_map
  { 243,	3,	1,	4,	8,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo50 },  // Inst #243 = A2_vsubb_map
  { 244,	2,	1,	4,	6,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #244 = A2_zxtb
  { 245,	3,	1,	4,	9,	0|(1ULL<<MCID::Pseudo), 0x3ULL, nullptr, nullptr, OperandInfo51 },  // Inst #245 = A4_boundscheck
  { 246,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x28ULL, ImplicitList1, ImplicitList2, OperandInfo9 },  // Inst #246 = ADJCALLSTACKDOWN
  { 247,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x28ULL, ImplicitList3, ImplicitList4, OperandInfo9 },  // Inst #247 = ADJCALLSTACKUP
  { 248,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #248 = C2_cmpgei
  { 249,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #249 = C2_cmpgeui
  { 250,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #250 = C2_cmplt
  { 251,	3,	1,	4,	10,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #251 = C2_cmpltu
  { 252,	2,	1,	4,	11,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo54 },  // Inst #252 = C2_pxfer_map
  { 253,	1,	0,	4,	12,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo2 },  // Inst #253 = DUPLEX_Pseudo
  { 254,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x21ULL, ImplicitList5, ImplicitList6, OperandInfo2 },  // Inst #254 = ENDLOOP0
  { 255,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x21ULL, ImplicitList7, ImplicitList8, OperandInfo2 },  // Inst #255 = ENDLOOP01
  { 256,	1,	0,	4,	13,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x21ULL, ImplicitList9, ImplicitList10, OperandInfo2 },  // Inst #256 = ENDLOOP1
  { 257,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x23ULL, ImplicitList11, ImplicitList12, nullptr },  // Inst #257 = J2_endloop0
  { 258,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo), 0x23ULL, ImplicitList13, ImplicitList14, nullptr },  // Inst #258 = J2_endloop01
  { 259,	0,	0,	4,	14,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x23ULL, ImplicitList15, ImplicitList16, nullptr },  // Inst #259 = J2_endloop1
  { 260,	2,	0,	4,	15,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo55 },  // Inst #260 = J2_jumpf_nopred_map
  { 261,	2,	0,	4,	16,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo56 },  // Inst #261 = J2_jumprf_nopred_map
  { 262,	2,	0,	4,	16,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo56 },  // Inst #262 = J2_jumprt_nopred_map
  { 263,	2,	0,	4,	15,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo55 },  // Inst #263 = J2_jumpt_nopred_map
  { 264,	1,	0,	4,	17,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x26ULL, nullptr, nullptr, OperandInfo2 },  // Inst #264 = J2_trap1_noregmap
  { 265,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo57 },  // Inst #265 = L2_loadalignb_zomap
  { 266,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo57 },  // Inst #266 = L2_loadalignh_zomap
  { 267,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #267 = L2_loadbsw2_zomap
  { 268,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo58 },  // Inst #268 = L2_loadbsw4_zomap
  { 269,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #269 = L2_loadbzw2_zomap
  { 270,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo58 },  // Inst #270 = L2_loadbzw4_zomap
  { 271,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #271 = L2_loadrb_zomap
  { 272,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo58 },  // Inst #272 = L2_loadrd_zomap
  { 273,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #273 = L2_loadrh_zomap
  { 274,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #274 = L2_loadri_zomap
  { 275,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #275 = L2_loadrub_zomap
  { 276,	2,	1,	4,	19,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #276 = L2_loadruh_zomap
  { 277,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #277 = L2_ploadrbf_zomap
  { 278,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #278 = L2_ploadrbfnew_zomap
  { 279,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #279 = L2_ploadrbt_zomap
  { 280,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #280 = L2_ploadrbtnew_zomap
  { 281,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo59 },  // Inst #281 = L2_ploadrdf_zomap
  { 282,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo59 },  // Inst #282 = L2_ploadrdfnew_zomap
  { 283,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo59 },  // Inst #283 = L2_ploadrdt_zomap
  { 284,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo59 },  // Inst #284 = L2_ploadrdtnew_zomap
  { 285,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #285 = L2_ploadrhf_zomap
  { 286,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #286 = L2_ploadrhfnew_zomap
  { 287,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #287 = L2_ploadrht_zomap
  { 288,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #288 = L2_ploadrhtnew_zomap
  { 289,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #289 = L2_ploadrif_zomap
  { 290,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #290 = L2_ploadrifnew_zomap
  { 291,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #291 = L2_ploadrit_zomap
  { 292,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #292 = L2_ploadritnew_zomap
  { 293,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #293 = L2_ploadrubf_zomap
  { 294,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #294 = L2_ploadrubfnew_zomap
  { 295,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #295 = L2_ploadrubt_zomap
  { 296,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #296 = L2_ploadrubtnew_zomap
  { 297,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #297 = L2_ploadruhf_zomap
  { 298,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #298 = L2_ploadruhfnew_zomap
  { 299,	3,	1,	4,	18,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #299 = L2_ploadruht_zomap
  { 300,	3,	1,	4,	20,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo46 },  // Inst #300 = L2_ploadruhtnew_zomap
  { 301,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #301 = L4_add_memopb_zomap
  { 302,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #302 = L4_add_memoph_zomap
  { 303,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #303 = L4_add_memopw_zomap
  { 304,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #304 = L4_and_memopb_zomap
  { 305,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #305 = L4_and_memoph_zomap
  { 306,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #306 = L4_and_memopw_zomap
  { 307,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #307 = L4_iadd_memopb_zomap
  { 308,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #308 = L4_iadd_memoph_zomap
  { 309,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #309 = L4_iadd_memopw_zomap
  { 310,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #310 = L4_iand_memopb_zomap
  { 311,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #311 = L4_iand_memoph_zomap
  { 312,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #312 = L4_iand_memopw_zomap
  { 313,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #313 = L4_ior_memopb_zomap
  { 314,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #314 = L4_ior_memoph_zomap
  { 315,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #315 = L4_ior_memopw_zomap
  { 316,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #316 = L4_isub_memopb_zomap
  { 317,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #317 = L4_isub_memoph_zomap
  { 318,	2,	0,	4,	22,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #318 = L4_isub_memopw_zomap
  { 319,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #319 = L4_or_memopb_zomap
  { 320,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #320 = L4_or_memoph_zomap
  { 321,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #321 = L4_or_memopw_zomap
  { 322,	1,	0,	4,	23,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #322 = L4_return_map_to_raw_f
  { 323,	1,	0,	4,	24,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #323 = L4_return_map_to_raw_fnew_pnt
  { 324,	1,	0,	4,	24,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #324 = L4_return_map_to_raw_fnew_pt
  { 325,	1,	0,	4,	25,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #325 = L4_return_map_to_raw_t
  { 326,	1,	0,	4,	26,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #326 = L4_return_map_to_raw_tnew_pnt
  { 327,	1,	0,	4,	26,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo60 },  // Inst #327 = L4_return_map_to_raw_tnew_pt
  { 328,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #328 = L4_sub_memopb_zomap
  { 329,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #329 = L4_sub_memoph_zomap
  { 330,	2,	0,	4,	21,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #330 = L4_sub_memopw_zomap
  { 331,	0,	0,	4,	27,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, nullptr },  // Inst #331 = L6_deallocframe_map_to_raw
  { 332,	0,	0,	4,	28,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, nullptr },  // Inst #332 = L6_return_map_to_raw
  { 333,	3,	1,	4,	29,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x1b4800024ULL, nullptr, nullptr, OperandInfo61 },  // Inst #333 = LDriw_ctr
  { 334,	3,	1,	4,	29,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x1b4800024ULL, nullptr, nullptr, OperandInfo52 },  // Inst #334 = LDriw_pred
  { 335,	3,	1,	4,	30,	0|(1ULL<<MCID::Pseudo), 0x134808025ULL, nullptr, nullptr, OperandInfo62 },  // Inst #335 = M2_mpysmi
  { 336,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x8025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #336 = M2_mpyui
  { 337,	4,	1,	4,	32,	0|(1ULL<<MCID::Pseudo), 0x25ULL, nullptr, nullptr, OperandInfo64 },  // Inst #337 = M2_vrcmpys_acc_s1
  { 338,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x25ULL, nullptr, nullptr, OperandInfo65 },  // Inst #338 = M2_vrcmpys_s1
  { 339,	3,	1,	4,	31,	0|(1ULL<<MCID::Pseudo), 0x8025ULL, nullptr, nullptr, OperandInfo66 },  // Inst #339 = M2_vrcmpys_s1rp
  { 340,	3,	1,	4,	33,	0|(1ULL<<MCID::Pseudo), 0x25ULL, nullptr, nullptr, OperandInfo50 },  // Inst #340 = M7_vdmpy
  { 341,	4,	1,	4,	34,	0|(1ULL<<MCID::Pseudo), 0x25ULL, nullptr, nullptr, OperandInfo67 },  // Inst #341 = M7_vdmpy_acc
  { 342,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x28ULL, ImplicitList17, nullptr, OperandInfo44 },  // Inst #342 = PS_aligna
  { 343,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, ImplicitList3, OperandInfo62 },  // Inst #343 = PS_alloca
  { 344,	1,	0,	4,	35,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800028ULL, nullptr, nullptr, OperandInfo2 },  // Inst #344 = PS_call_nr
  { 345,	0,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0xa8ULL, nullptr, nullptr, nullptr },  // Inst #345 = PS_crash
  { 346,	1,	1,	4,	11,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x5ULL, nullptr, nullptr, OperandInfo60 },  // Inst #346 = PS_false
  { 347,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x214800028ULL, nullptr, nullptr, OperandInfo62 },  // Inst #347 = PS_fi
  { 348,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x216800028ULL, nullptr, nullptr, OperandInfo68 },  // Inst #348 = PS_fia
  { 349,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #349 = PS_loadrb_pci
  { 350,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #350 = PS_loadrb_pcr
  { 351,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x980000000024ULL, ImplicitList18, ImplicitList18, OperandInfo71 },  // Inst #351 = PS_loadrd_pci
  { 352,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x980000000024ULL, ImplicitList18, ImplicitList18, OperandInfo72 },  // Inst #352 = PS_loadrd_pcr
  { 353,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #353 = PS_loadrh_pci
  { 354,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #354 = PS_loadrh_pcr
  { 355,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #355 = PS_loadri_pci
  { 356,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #356 = PS_loadri_pcr
  { 357,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #357 = PS_loadrub_pci
  { 358,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #358 = PS_loadrub_pcr
  { 359,	6,	2,	4,	36,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, ImplicitList18, OperandInfo69 },  // Inst #359 = PS_loadruh_pci
  { 360,	5,	2,	4,	20,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, ImplicitList18, OperandInfo70 },  // Inst #360 = PS_loadruh_pcr
  { 361,	4,	1,	4,	6,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #361 = PS_pselect
  { 362,	1,	1,	4,	37,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x10ULL, nullptr, nullptr, OperandInfo74 },  // Inst #362 = PS_qfalse
  { 363,	1,	1,	4,	37,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x10ULL, nullptr, nullptr, OperandInfo74 },  // Inst #363 = PS_qtrue
  { 364,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x380000000029ULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #364 = PS_storerb_pci
  { 365,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x380000000029ULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #365 = PS_storerb_pcr
  { 366,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x780000000029ULL, ImplicitList18, ImplicitList18, OperandInfo77 },  // Inst #366 = PS_storerd_pci
  { 367,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x780000000029ULL, ImplicitList18, ImplicitList18, OperandInfo78 },  // Inst #367 = PS_storerd_pcr
  { 368,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #368 = PS_storerf_pci
  { 369,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #369 = PS_storerf_pcr
  { 370,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #370 = PS_storerh_pci
  { 371,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #371 = PS_storerh_pcr
  { 372,	6,	1,	4,	38,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x780000000029ULL, ImplicitList18, ImplicitList18, OperandInfo75 },  // Inst #372 = PS_storeri_pci
  { 373,	5,	1,	4,	39,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x780000000029ULL, ImplicitList18, ImplicitList18, OperandInfo76 },  // Inst #373 = PS_storeri_pcr
  { 374,	1,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x28ULL, nullptr, nullptr, OperandInfo2 },  // Inst #374 = PS_tailcall_i
  { 375,	1,	0,	4,	40,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x1000000023ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #375 = PS_tailcall_r
  { 376,	1,	1,	4,	11,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x5ULL, nullptr, nullptr, OperandInfo60 },  // Inst #376 = PS_true
  { 377,	1,	1,	4,	41,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable), 0x11ULL, nullptr, nullptr, OperandInfo80 },  // Inst #377 = PS_vdd0
  { 378,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x28ULL, nullptr, nullptr, OperandInfo81 },  // Inst #378 = PS_vloadrq_ai
  { 379,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #379 = PS_vloadrv_ai
  { 380,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #380 = PS_vloadrv_nt_ai
  { 381,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000012ULL, nullptr, nullptr, OperandInfo83 },  // Inst #381 = PS_vloadrw_ai
  { 382,	3,	1,	4,	42,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0xa00000000012ULL, nullptr, nullptr, OperandInfo83 },  // Inst #382 = PS_vloadrw_nt_ai
  { 383,	3,	1,	4,	43,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo50 },  // Inst #383 = PS_vmulw
  { 384,	4,	1,	4,	43,	0|(1ULL<<MCID::Pseudo), 0x28ULL, nullptr, nullptr, OperandInfo67 },  // Inst #384 = PS_vmulw_acc
  { 385,	4,	1,	4,	44,	0|(1ULL<<MCID::Pseudo), 0x10ULL, nullptr, nullptr, OperandInfo84 },  // Inst #385 = PS_vselect
  { 386,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x28ULL, nullptr, nullptr, OperandInfo85 },  // Inst #386 = PS_vstorerq_ai
  { 387,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000014ULL, nullptr, nullptr, OperandInfo86 },  // Inst #387 = PS_vstorerv_ai
  { 388,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000014ULL, nullptr, nullptr, OperandInfo86 },  // Inst #388 = PS_vstorerv_nt_ai
  { 389,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000014ULL, nullptr, nullptr, OperandInfo87 },  // Inst #389 = PS_vstorerw_ai
  { 390,	3,	0,	4,	45,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0xa00000000014ULL, nullptr, nullptr, OperandInfo87 },  // Inst #390 = PS_vstorerw_nt_ai
  { 391,	4,	1,	4,	46,	0|(1ULL<<MCID::Pseudo), 0x11ULL, nullptr, nullptr, OperandInfo88 },  // Inst #391 = PS_wselect
  { 392,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #392 = S2_asr_i_p_rnd_goodsyntax
  { 393,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #393 = S2_asr_i_r_rnd_goodsyntax
  { 394,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #394 = S2_pstorerbf_zomap
  { 395,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #395 = S2_pstorerbnewf_zomap
  { 396,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #396 = S2_pstorerbnewt_zomap
  { 397,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #397 = S2_pstorerbt_zomap
  { 398,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo51 },  // Inst #398 = S2_pstorerdf_zomap
  { 399,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo51 },  // Inst #399 = S2_pstorerdt_zomap
  { 400,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #400 = S2_pstorerff_zomap
  { 401,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #401 = S2_pstorerft_zomap
  { 402,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #402 = S2_pstorerhf_zomap
  { 403,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #403 = S2_pstorerhnewf_zomap
  { 404,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #404 = S2_pstorerhnewt_zomap
  { 405,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #405 = S2_pstorerht_zomap
  { 406,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #406 = S2_pstorerif_zomap
  { 407,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #407 = S2_pstorerinewf_zomap
  { 408,	3,	0,	4,	49,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #408 = S2_pstorerinewt_zomap
  { 409,	3,	0,	4,	48,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #409 = S2_pstorerit_zomap
  { 410,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #410 = S2_storerb_zomap
  { 411,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #411 = S2_storerbnew_zomap
  { 412,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo90 },  // Inst #412 = S2_storerd_zomap
  { 413,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #413 = S2_storerf_zomap
  { 414,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #414 = S2_storerh_zomap
  { 415,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #415 = S2_storerhnew_zomap
  { 416,	2,	0,	4,	50,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo45 },  // Inst #416 = S2_storeri_zomap
  { 417,	2,	0,	4,	51,	0|(1ULL<<MCID::Pseudo), 0x10026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #417 = S2_storerinew_zomap
  { 418,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #418 = S2_tableidxb_goodsyntax
  { 419,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #419 = S2_tableidxd_goodsyntax
  { 420,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #420 = S2_tableidxh_goodsyntax
  { 421,	5,	1,	4,	52,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #421 = S2_tableidxw_goodsyntax
  { 422,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #422 = S4_pstorerbfnew_zomap
  { 423,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #423 = S4_pstorerbnewfnew_zomap
  { 424,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #424 = S4_pstorerbnewtnew_zomap
  { 425,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #425 = S4_pstorerbtnew_zomap
  { 426,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo51 },  // Inst #426 = S4_pstorerdfnew_zomap
  { 427,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo51 },  // Inst #427 = S4_pstorerdtnew_zomap
  { 428,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #428 = S4_pstorerffnew_zomap
  { 429,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #429 = S4_pstorerftnew_zomap
  { 430,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #430 = S4_pstorerhfnew_zomap
  { 431,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #431 = S4_pstorerhnewfnew_zomap
  { 432,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #432 = S4_pstorerhnewtnew_zomap
  { 433,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #433 = S4_pstorerhtnew_zomap
  { 434,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #434 = S4_pstorerifnew_zomap
  { 435,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #435 = S4_pstorerinewfnew_zomap
  { 436,	3,	0,	4,	53,	0|(1ULL<<MCID::Pseudo), 0x20026ULL, nullptr, nullptr, OperandInfo53 },  // Inst #436 = S4_pstorerinewtnew_zomap
  { 437,	3,	0,	4,	39,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo53 },  // Inst #437 = S4_pstoreritnew_zomap
  { 438,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #438 = S4_storeirb_zomap
  { 439,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #439 = S4_storeirbf_zomap
  { 440,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #440 = S4_storeirbfnew_zomap
  { 441,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #441 = S4_storeirbt_zomap
  { 442,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #442 = S4_storeirbtnew_zomap
  { 443,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #443 = S4_storeirh_zomap
  { 444,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #444 = S4_storeirhf_zomap
  { 445,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #445 = S4_storeirhfnew_zomap
  { 446,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #446 = S4_storeirht_zomap
  { 447,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #447 = S4_storeirhtnew_zomap
  { 448,	2,	0,	4,	54,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo44 },  // Inst #448 = S4_storeiri_zomap
  { 449,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #449 = S4_storeirif_zomap
  { 450,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #450 = S4_storeirifnew_zomap
  { 451,	3,	0,	4,	55,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #451 = S4_storeirit_zomap
  { 452,	3,	0,	4,	56,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo52 },  // Inst #452 = S4_storeiritnew_zomap
  { 453,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x802bULL, nullptr, nullptr, OperandInfo92 },  // Inst #453 = S5_asrhub_rnd_sat_goodsyntax
  { 454,	3,	1,	4,	47,	0|(1ULL<<MCID::Pseudo), 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #454 = S5_vasrhrnd_goodsyntax
  { 455,	1,	0,	4,	57,	0|(1ULL<<MCID::Pseudo), 0x26ULL, nullptr, nullptr, OperandInfo2 },  // Inst #455 = S6_allocframe_to_raw
  { 456,	3,	0,	4,	58,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x1b2800029ULL, nullptr, nullptr, OperandInfo93 },  // Inst #456 = STriw_ctr
  { 457,	3,	0,	4,	58,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x1b2800029ULL, nullptr, nullptr, OperandInfo94 },  // Inst #457 = STriw_pred
  { 458,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo95 },  // Inst #458 = V6_MAP_equb
  { 459,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #459 = V6_MAP_equb_and
  { 460,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #460 = V6_MAP_equb_ior
  { 461,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #461 = V6_MAP_equb_xor
  { 462,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo95 },  // Inst #462 = V6_MAP_equh
  { 463,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #463 = V6_MAP_equh_and
  { 464,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #464 = V6_MAP_equh_ior
  { 465,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #465 = V6_MAP_equh_xor
  { 466,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo95 },  // Inst #466 = V6_MAP_equw
  { 467,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #467 = V6_MAP_equw_and
  { 468,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #468 = V6_MAP_equw_ior
  { 469,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo96 },  // Inst #469 = V6_MAP_equw_xor
  { 470,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo97 },  // Inst #470 = V6_extractw_alt
  { 471,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008010ULL, nullptr, nullptr, OperandInfo98 },  // Inst #471 = V6_hi
  { 472,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo99 },  // Inst #472 = V6_ld0
  { 473,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #473 = V6_ldcnp0
  { 474,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #474 = V6_ldcnpnt0
  { 475,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #475 = V6_ldcp0
  { 476,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #476 = V6_ldcpnt0
  { 477,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #477 = V6_ldnp0
  { 478,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #478 = V6_ldnpnt0
  { 479,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo99 },  // Inst #479 = V6_ldnt0
  { 480,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo99 },  // Inst #480 = V6_ldntnt0
  { 481,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #481 = V6_ldp0
  { 482,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #482 = V6_ldpnt0
  { 483,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #483 = V6_ldtnp0
  { 484,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #484 = V6_ldtnpnt0
  { 485,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #485 = V6_ldtp0
  { 486,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo100 },  // Inst #486 = V6_ldtpnt0
  { 487,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008012ULL, nullptr, nullptr, OperandInfo99 },  // Inst #487 = V6_ldu0
  { 488,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008010ULL, nullptr, nullptr, OperandInfo98 },  // Inst #488 = V6_lo
  { 489,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo101 },  // Inst #489 = V6_st0
  { 490,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000010014ULL, nullptr, nullptr, OperandInfo101 },  // Inst #490 = V6_stn0
  { 491,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000010014ULL, nullptr, nullptr, OperandInfo101 },  // Inst #491 = V6_stnnt0
  { 492,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #492 = V6_stnp0
  { 493,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #493 = V6_stnpnt0
  { 494,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo103 },  // Inst #494 = V6_stnq0
  { 495,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo103 },  // Inst #495 = V6_stnqnt0
  { 496,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo101 },  // Inst #496 = V6_stnt0
  { 497,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #497 = V6_stp0
  { 498,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #498 = V6_stpnt0
  { 499,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo103 },  // Inst #499 = V6_stq0
  { 500,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo103 },  // Inst #500 = V6_stqnt0
  { 501,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo101 },  // Inst #501 = V6_stu0
  { 502,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #502 = V6_stunp0
  { 503,	3,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000014ULL, nullptr, nullptr, OperandInfo102 },  // Inst #503 = V6_stup0
  { 504,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo104 },  // Inst #504 = V6_v6mpyhubs10_alt
  { 505,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo104 },  // Inst #505 = V6_v6mpyvubs10_alt
  { 506,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #506 = V6_vabsb_alt
  { 507,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #507 = V6_vabsb_sat_alt
  { 508,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #508 = V6_vabsdiffh_alt
  { 509,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #509 = V6_vabsdiffub_alt
  { 510,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #510 = V6_vabsdiffuh_alt
  { 511,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #511 = V6_vabsdiffw_alt
  { 512,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #512 = V6_vabsh_alt
  { 513,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #513 = V6_vabsh_sat_alt
  { 514,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #514 = V6_vabsub_alt
  { 515,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #515 = V6_vabsuh_alt
  { 516,	2,	1,	4,	60,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #516 = V6_vabsuw_alt
  { 517,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #517 = V6_vabsw_alt
  { 518,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #518 = V6_vabsw_sat_alt
  { 519,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #519 = V6_vaddb_alt
  { 520,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #520 = V6_vaddb_dv_alt
  { 521,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #521 = V6_vaddbnq_alt
  { 522,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #522 = V6_vaddbq_alt
  { 523,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #523 = V6_vaddbsat_alt
  { 524,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #524 = V6_vaddbsat_dv_alt
  { 525,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #525 = V6_vaddh_alt
  { 526,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #526 = V6_vaddh_dv_alt
  { 527,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #527 = V6_vaddhnq_alt
  { 528,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #528 = V6_vaddhq_alt
  { 529,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #529 = V6_vaddhsat_alt
  { 530,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #530 = V6_vaddhsat_dv_alt
  { 531,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #531 = V6_vaddhw_acc_alt
  { 532,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #532 = V6_vaddhw_alt
  { 533,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #533 = V6_vaddubh_acc_alt
  { 534,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #534 = V6_vaddubh_alt
  { 535,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #535 = V6_vaddubsat_alt
  { 536,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #536 = V6_vaddubsat_dv_alt
  { 537,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #537 = V6_vadduhsat_alt
  { 538,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #538 = V6_vadduhsat_dv_alt
  { 539,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #539 = V6_vadduhw_acc_alt
  { 540,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #540 = V6_vadduhw_alt
  { 541,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #541 = V6_vadduwsat_alt
  { 542,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #542 = V6_vadduwsat_dv_alt
  { 543,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #543 = V6_vaddw_alt
  { 544,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #544 = V6_vaddw_dv_alt
  { 545,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #545 = V6_vaddwnq_alt
  { 546,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #546 = V6_vaddwq_alt
  { 547,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #547 = V6_vaddwsat_alt
  { 548,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #548 = V6_vaddwsat_dv_alt
  { 549,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo111 },  // Inst #549 = V6_vandnqrt_acc_alt
  { 550,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo112 },  // Inst #550 = V6_vandnqrt_alt
  { 551,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo111 },  // Inst #551 = V6_vandqrt_acc_alt
  { 552,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo112 },  // Inst #552 = V6_vandqrt_alt
  { 553,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo113 },  // Inst #553 = V6_vandvrt_acc_alt
  { 554,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo114 },  // Inst #554 = V6_vandvrt_alt
  { 555,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #555 = V6_vaslh_acc_alt
  { 556,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #556 = V6_vaslh_alt
  { 557,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #557 = V6_vaslhv_alt
  { 558,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #558 = V6_vaslw_acc_alt
  { 559,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #559 = V6_vaslw_alt
  { 560,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #560 = V6_vaslwv_alt
  { 561,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #561 = V6_vasr_into_alt
  { 562,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #562 = V6_vasrh_acc_alt
  { 563,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #563 = V6_vasrh_alt
  { 564,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #564 = V6_vasrhv_alt
  { 565,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #565 = V6_vasrw_acc_alt
  { 566,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #566 = V6_vasrw_alt
  { 567,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #567 = V6_vasrwv_alt
  { 568,	2,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008011ULL, nullptr, nullptr, OperandInfo117 },  // Inst #568 = V6_vassignp
  { 569,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #569 = V6_vavgb_alt
  { 570,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #570 = V6_vavgbrnd_alt
  { 571,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #571 = V6_vavgh_alt
  { 572,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #572 = V6_vavghrnd_alt
  { 573,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #573 = V6_vavgub_alt
  { 574,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #574 = V6_vavgubrnd_alt
  { 575,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #575 = V6_vavguh_alt
  { 576,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #576 = V6_vavguhrnd_alt
  { 577,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #577 = V6_vavguw_alt
  { 578,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #578 = V6_vavguwrnd_alt
  { 579,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #579 = V6_vavgw_alt
  { 580,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #580 = V6_vavgwrnd_alt
  { 581,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #581 = V6_vcl0h_alt
  { 582,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #582 = V6_vcl0w_alt
  { 583,	1,	1,	4,	59,	0|(1ULL<<MCID::Pseudo), 0x8000000000008010ULL, nullptr, nullptr, OperandInfo118 },  // Inst #583 = V6_vd0
  { 584,	1,	1,	4,	61,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo80 },  // Inst #584 = V6_vdd0
  { 585,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #585 = V6_vdealb4w_alt
  { 586,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #586 = V6_vdealb_alt
  { 587,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #587 = V6_vdealh_alt
  { 588,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #588 = V6_vdmpybus_acc_alt
  { 589,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #589 = V6_vdmpybus_alt
  { 590,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #590 = V6_vdmpybus_dv_acc_alt
  { 591,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #591 = V6_vdmpybus_dv_alt
  { 592,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #592 = V6_vdmpyhb_acc_alt
  { 593,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #593 = V6_vdmpyhb_alt
  { 594,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #594 = V6_vdmpyhb_dv_acc_alt
  { 595,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #595 = V6_vdmpyhb_dv_alt
  { 596,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo121 },  // Inst #596 = V6_vdmpyhisat_acc_alt
  { 597,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo122 },  // Inst #597 = V6_vdmpyhisat_alt
  { 598,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #598 = V6_vdmpyhsat_acc_alt
  { 599,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #599 = V6_vdmpyhsat_alt
  { 600,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo121 },  // Inst #600 = V6_vdmpyhsuisat_acc_alt
  { 601,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo122 },  // Inst #601 = V6_vdmpyhsuisat_alt
  { 602,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #602 = V6_vdmpyhsusat_acc_alt
  { 603,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #603 = V6_vdmpyhsusat_alt
  { 604,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #604 = V6_vdmpyhvsat_acc_alt
  { 605,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #605 = V6_vdmpyhvsat_alt
  { 606,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #606 = V6_vdsaduh_acc_alt
  { 607,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #607 = V6_vdsaduh_alt
  { 608,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo124 },  // Inst #608 = V6_vgathermh_pseudo
  { 609,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo125 },  // Inst #609 = V6_vgathermhq_pseudo
  { 610,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo126 },  // Inst #610 = V6_vgathermhw_pseudo
  { 611,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo127 },  // Inst #611 = V6_vgathermhwq_pseudo
  { 612,	4,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo124 },  // Inst #612 = V6_vgathermw_pseudo
  { 613,	5,	0,	4,	62,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x7ULL, nullptr, nullptr, OperandInfo125 },  // Inst #613 = V6_vgathermwq_pseudo
  { 614,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #614 = V6_vlsrh_alt
  { 615,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #615 = V6_vlsrhv_alt
  { 616,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #616 = V6_vlsrw_alt
  { 617,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #617 = V6_vlsrwv_alt
  { 618,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #618 = V6_vmaxb_alt
  { 619,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #619 = V6_vmaxh_alt
  { 620,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #620 = V6_vmaxub_alt
  { 621,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #621 = V6_vmaxuh_alt
  { 622,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #622 = V6_vmaxw_alt
  { 623,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #623 = V6_vminb_alt
  { 624,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #624 = V6_vminh_alt
  { 625,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #625 = V6_vminub_alt
  { 626,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #626 = V6_vminuh_alt
  { 627,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #627 = V6_vminw_alt
  { 628,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #628 = V6_vmpabus_acc_alt
  { 629,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #629 = V6_vmpabus_alt
  { 630,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #630 = V6_vmpabusv_alt
  { 631,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #631 = V6_vmpabuu_acc_alt
  { 632,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #632 = V6_vmpabuu_alt
  { 633,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #633 = V6_vmpabuuv_alt
  { 634,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #634 = V6_vmpahb_acc_alt
  { 635,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #635 = V6_vmpahb_alt
  { 636,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #636 = V6_vmpauhb_acc_alt
  { 637,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #637 = V6_vmpauhb_alt
  { 638,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo128 },  // Inst #638 = V6_vmpybus_acc_alt
  { 639,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo129 },  // Inst #639 = V6_vmpybus_alt
  { 640,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #640 = V6_vmpybusv_acc_alt
  { 641,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #641 = V6_vmpybusv_alt
  { 642,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #642 = V6_vmpybv_acc_alt
  { 643,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #643 = V6_vmpybv_alt
  { 644,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #644 = V6_vmpyewuh_alt
  { 645,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo128 },  // Inst #645 = V6_vmpyh_acc_alt
  { 646,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo129 },  // Inst #646 = V6_vmpyh_alt
  { 647,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo128 },  // Inst #647 = V6_vmpyhsat_acc_alt
  { 648,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #648 = V6_vmpyhsrs_alt
  { 649,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #649 = V6_vmpyhss_alt
  { 650,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #650 = V6_vmpyhus_acc_alt
  { 651,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #651 = V6_vmpyhus_alt
  { 652,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #652 = V6_vmpyhv_acc_alt
  { 653,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #653 = V6_vmpyhv_alt
  { 654,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #654 = V6_vmpyhvsrs_alt
  { 655,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #655 = V6_vmpyiewh_acc_alt
  { 656,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #656 = V6_vmpyiewuh_acc_alt
  { 657,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #657 = V6_vmpyiewuh_alt
  { 658,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #658 = V6_vmpyih_acc_alt
  { 659,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #659 = V6_vmpyih_alt
  { 660,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #660 = V6_vmpyihb_acc_alt
  { 661,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #661 = V6_vmpyihb_alt
  { 662,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #662 = V6_vmpyiowh_alt
  { 663,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #663 = V6_vmpyiwb_acc_alt
  { 664,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #664 = V6_vmpyiwb_alt
  { 665,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #665 = V6_vmpyiwh_acc_alt
  { 666,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #666 = V6_vmpyiwh_alt
  { 667,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #667 = V6_vmpyiwub_acc_alt
  { 668,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #668 = V6_vmpyiwub_alt
  { 669,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #669 = V6_vmpyowh_alt
  { 670,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #670 = V6_vmpyowh_rnd_alt
  { 671,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #671 = V6_vmpyowh_rnd_sacc_alt
  { 672,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #672 = V6_vmpyowh_sacc_alt
  { 673,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo128 },  // Inst #673 = V6_vmpyub_acc_alt
  { 674,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo129 },  // Inst #674 = V6_vmpyub_alt
  { 675,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #675 = V6_vmpyubv_acc_alt
  { 676,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #676 = V6_vmpyubv_alt
  { 677,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo128 },  // Inst #677 = V6_vmpyuh_acc_alt
  { 678,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo129 },  // Inst #678 = V6_vmpyuh_alt
  { 679,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo109 },  // Inst #679 = V6_vmpyuhv_acc_alt
  { 680,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #680 = V6_vmpyuhv_alt
  { 681,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #681 = V6_vnavgb_alt
  { 682,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #682 = V6_vnavgh_alt
  { 683,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #683 = V6_vnavgub_alt
  { 684,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #684 = V6_vnavgw_alt
  { 685,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #685 = V6_vnormamth_alt
  { 686,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #686 = V6_vnormamtw_alt
  { 687,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #687 = V6_vpackeb_alt
  { 688,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #688 = V6_vpackeh_alt
  { 689,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #689 = V6_vpackhb_sat_alt
  { 690,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #690 = V6_vpackhub_sat_alt
  { 691,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #691 = V6_vpackob_alt
  { 692,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #692 = V6_vpackoh_alt
  { 693,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #693 = V6_vpackwh_sat_alt
  { 694,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #694 = V6_vpackwuh_sat_alt
  { 695,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #695 = V6_vpopcounth_alt
  { 696,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo130 },  // Inst #696 = V6_vrmpybub_rtt_acc_alt
  { 697,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo131 },  // Inst #697 = V6_vrmpybub_rtt_alt
  { 698,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #698 = V6_vrmpybus_acc_alt
  { 699,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #699 = V6_vrmpybus_alt
  { 700,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo132 },  // Inst #700 = V6_vrmpybusi_acc_alt
  { 701,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo133 },  // Inst #701 = V6_vrmpybusi_alt
  { 702,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #702 = V6_vrmpybusv_acc_alt
  { 703,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #703 = V6_vrmpybusv_alt
  { 704,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #704 = V6_vrmpybv_acc_alt
  { 705,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #705 = V6_vrmpybv_alt
  { 706,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo115 },  // Inst #706 = V6_vrmpyub_acc_alt
  { 707,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo116 },  // Inst #707 = V6_vrmpyub_alt
  { 708,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo130 },  // Inst #708 = V6_vrmpyub_rtt_acc_alt
  { 709,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo131 },  // Inst #709 = V6_vrmpyub_rtt_alt
  { 710,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo132 },  // Inst #710 = V6_vrmpyubi_acc_alt
  { 711,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo133 },  // Inst #711 = V6_vrmpyubi_alt
  { 712,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo123 },  // Inst #712 = V6_vrmpyubv_acc_alt
  { 713,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #713 = V6_vrmpyubv_alt
  { 714,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #714 = V6_vrotr_alt
  { 715,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #715 = V6_vroundhb_alt
  { 716,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #716 = V6_vroundhub_alt
  { 717,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #717 = V6_vrounduhub_alt
  { 718,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #718 = V6_vrounduwuh_alt
  { 719,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #719 = V6_vroundwh_alt
  { 720,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #720 = V6_vroundwuh_alt
  { 721,	5,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo132 },  // Inst #721 = V6_vrsadubi_acc_alt
  { 722,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo133 },  // Inst #722 = V6_vrsadubi_alt
  { 723,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #723 = V6_vsathub_alt
  { 724,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #724 = V6_vsatuwuh_alt
  { 725,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #725 = V6_vsatwh_alt
  { 726,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #726 = V6_vsb_alt
  { 727,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo135 },  // Inst #727 = V6_vscattermh_add_alt
  { 728,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo135 },  // Inst #728 = V6_vscattermh_alt
  { 729,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo136 },  // Inst #729 = V6_vscattermhq_alt
  { 730,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo135 },  // Inst #730 = V6_vscattermw_add_alt
  { 731,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo135 },  // Inst #731 = V6_vscattermw_alt
  { 732,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000000026ULL, nullptr, nullptr, OperandInfo137 },  // Inst #732 = V6_vscattermwh_add_alt
  { 733,	4,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo137 },  // Inst #733 = V6_vscattermwh_alt
  { 734,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo138 },  // Inst #734 = V6_vscattermwhq_alt
  { 735,	5,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo136 },  // Inst #735 = V6_vscattermwq_alt
  { 736,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #736 = V6_vsh_alt
  { 737,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #737 = V6_vshufeh_alt
  { 738,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #738 = V6_vshuffb_alt
  { 739,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #739 = V6_vshuffeb_alt
  { 740,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo105 },  // Inst #740 = V6_vshuffh_alt
  { 741,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #741 = V6_vshuffob_alt
  { 742,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #742 = V6_vshufoeb_alt
  { 743,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #743 = V6_vshufoeh_alt
  { 744,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #744 = V6_vshufoh_alt
  { 745,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #745 = V6_vsubb_alt
  { 746,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #746 = V6_vsubb_dv_alt
  { 747,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #747 = V6_vsubbnq_alt
  { 748,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #748 = V6_vsubbq_alt
  { 749,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #749 = V6_vsubbsat_alt
  { 750,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #750 = V6_vsubbsat_dv_alt
  { 751,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #751 = V6_vsubh_alt
  { 752,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #752 = V6_vsubh_dv_alt
  { 753,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #753 = V6_vsubhnq_alt
  { 754,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #754 = V6_vsubhq_alt
  { 755,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #755 = V6_vsubhsat_alt
  { 756,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #756 = V6_vsubhsat_dv_alt
  { 757,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #757 = V6_vsubhw_alt
  { 758,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #758 = V6_vsububh_alt
  { 759,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #759 = V6_vsububsat_alt
  { 760,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #760 = V6_vsububsat_dv_alt
  { 761,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #761 = V6_vsubuhsat_alt
  { 762,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #762 = V6_vsubuhsat_dv_alt
  { 763,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo110 },  // Inst #763 = V6_vsubuhw_alt
  { 764,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #764 = V6_vsubuwsat_alt
  { 765,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #765 = V6_vsubuwsat_dv_alt
  { 766,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #766 = V6_vsubw_alt
  { 767,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #767 = V6_vsubw_dv_alt
  { 768,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #768 = V6_vsubwnq_alt
  { 769,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo108 },  // Inst #769 = V6_vsubwq_alt
  { 770,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo106 },  // Inst #770 = V6_vsubwsat_alt
  { 771,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo107 },  // Inst #771 = V6_vsubwsat_dv_alt
  { 772,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #772 = V6_vtmpyb_acc_alt
  { 773,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #773 = V6_vtmpyb_alt
  { 774,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #774 = V6_vtmpybus_acc_alt
  { 775,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #775 = V6_vtmpybus_alt
  { 776,	4,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo119 },  // Inst #776 = V6_vtmpyhb_acc_alt
  { 777,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo120 },  // Inst #777 = V6_vtmpyhb_alt
  { 778,	5,	2,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8030000000008026ULL, nullptr, nullptr, OperandInfo139 },  // Inst #778 = V6_vtran2x2_map
  { 779,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #779 = V6_vunpackb_alt
  { 780,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #780 = V6_vunpackh_alt
  { 781,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo140 },  // Inst #781 = V6_vunpackob_alt
  { 782,	3,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8100000000008026ULL, nullptr, nullptr, OperandInfo140 },  // Inst #782 = V6_vunpackoh_alt
  { 783,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #783 = V6_vunpackub_alt
  { 784,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #784 = V6_vunpackuh_alt
  { 785,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #785 = V6_vzb_alt
  { 786,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000008026ULL, nullptr, nullptr, OperandInfo134 },  // Inst #786 = V6_vzh_alt
  { 787,	1,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo79 },  // Inst #787 = V6_zld0
  { 788,	2,	0,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8000000000000026ULL, nullptr, nullptr, OperandInfo56 },  // Inst #788 = V6_zldp0
  { 789,	1,	0,	4,	63,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x26ULL, nullptr, nullptr, OperandInfo79 },  // Inst #789 = Y2_dcfetch
  { 790,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #790 = dup_A2_add
  { 791,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x214808002ULL, nullptr, nullptr, OperandInfo62 },  // Inst #791 = dup_A2_addi
  { 792,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #792 = dup_A2_andir
  { 793,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x112800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #793 = dup_A2_combineii
  { 794,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #794 = dup_A2_sxtb
  { 795,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #795 = dup_A2_sxth
  { 796,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #796 = dup_A2_tfr
  { 797,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x212808000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #797 = dup_A2_tfrsi
  { 798,	2,	1,	4,	2,	0|(1ULL<<MCID::Pseudo), 0x8026ULL, nullptr, nullptr, OperandInfo45 },  // Inst #798 = dup_A2_zxtb
  { 799,	2,	1,	4,	65,	0|(1ULL<<MCID::Pseudo), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #799 = dup_A2_zxth
  { 800,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0xc4800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #800 = dup_A4_combineii
  { 801,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x112800000ULL, nullptr, nullptr, OperandInfo142 },  // Inst #801 = dup_A4_combineir
  { 802,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x114800000ULL, nullptr, nullptr, OperandInfo143 },  // Inst #802 = dup_A4_combineri
  { 803,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x194808c00ULL, nullptr, nullptr, OperandInfo144 },  // Inst #803 = dup_C2_cmoveif
  { 804,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x194808400ULL, nullptr, nullptr, OperandInfo144 },  // Inst #804 = dup_C2_cmoveit
  { 805,	3,	1,	4,	66,	0|(1ULL<<MCID::Pseudo), 0x194809c00ULL, nullptr, nullptr, OperandInfo144 },  // Inst #805 = dup_C2_cmovenewif
  { 806,	3,	1,	4,	66,	0|(1ULL<<MCID::Pseudo), 0x194809400ULL, nullptr, nullptr, OperandInfo144 },  // Inst #806 = dup_C2_cmovenewit
  { 807,	3,	1,	4,	64,	0|(1ULL<<MCID::Pseudo), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #807 = dup_C2_cmpeqi
  { 808,	2,	1,	4,	67,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x800000000024ULL, ImplicitList20, ImplicitList3, OperandInfo58 },  // Inst #808 = dup_L2_deallocframe
  { 809,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x2c0174808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #809 = dup_L2_loadrb_io
  { 810,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x8c0dd4800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #810 = dup_L2_loadrd_io
  { 811,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #811 = dup_L2_loadrh_io
  { 812,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x6c09b4808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #812 = dup_L2_loadri_io
  { 813,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x2c0174808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #813 = dup_L2_loadrub_io
  { 814,	3,	1,	4,	68,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #814 = dup_L2_loadruh_io
  { 815,	3,	1,	4,	69,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x8c0000008029ULL, ImplicitList21, ImplicitList17, OperandInfo145 },  // Inst #815 = dup_S2_allocframe
  { 816,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x2c0172800029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #816 = dup_S2_storerb_io
  { 817,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x8c0dd2800029ULL, nullptr, nullptr, OperandInfo147 },  // Inst #817 = dup_S2_storerd_io
  { 818,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x4c0592800029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #818 = dup_S2_storerh_io
  { 819,	3,	0,	4,	70,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x6c09b2800029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #819 = dup_S2_storeri_io
  { 820,	3,	0,	4,	71,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x2c0114800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #820 = dup_S4_storeirb_io
  { 821,	3,	0,	4,	71,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x6c0114800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #821 = dup_S4_storeiri_io
  { 822,	2,	1,	4,	72,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #822 = A2_abs
  { 823,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #823 = A2_absp
  { 824,	2,	1,	4,	72,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #824 = A2_abssat
  { 825,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #825 = A2_add
  { 826,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #826 = A2_addh_h16_hh
  { 827,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #827 = A2_addh_h16_hl
  { 828,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #828 = A2_addh_h16_lh
  { 829,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #829 = A2_addh_h16_ll
  { 830,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #830 = A2_addh_h16_sat_hh
  { 831,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #831 = A2_addh_h16_sat_hl
  { 832,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #832 = A2_addh_h16_sat_lh
  { 833,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #833 = A2_addh_h16_sat_ll
  { 834,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #834 = A2_addh_l16_hl
  { 835,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #835 = A2_addh_l16_ll
  { 836,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #836 = A2_addh_l16_sat_hl
  { 837,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #837 = A2_addh_l16_sat_ll
  { 838,	3,	1,	4,	6,	0|(1ULL<<MCID::Add)|(1ULL<<MCID::Predicable), 0x214808002ULL, nullptr, nullptr, OperandInfo62 },  // Inst #838 = A2_addi
  { 839,	3,	1,	4,	8,	0|(1ULL<<MCID::Add)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #839 = A2_addp
  { 840,	3,	1,	4,	73,	0|(1ULL<<MCID::Commutable), 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #840 = A2_addpsat
  { 841,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #841 = A2_addsat
  { 842,	3,	1,	4,	1,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #842 = A2_addsph
  { 843,	3,	1,	4,	1,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #843 = A2_addspl
  { 844,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #844 = A2_and
  { 845,	3,	1,	4,	6,	0, 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #845 = A2_andir
  { 846,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #846 = A2_andp
  { 847,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #847 = A2_aslh
  { 848,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #848 = A2_asrh
  { 849,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #849 = A2_combine_hh
  { 850,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #850 = A2_combine_hl
  { 851,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #851 = A2_combine_lh
  { 852,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #852 = A2_combine_ll
  { 853,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x112800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #853 = A2_combineii
  { 854,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable), 0x1ULL, nullptr, nullptr, OperandInfo149 },  // Inst #854 = A2_combinew
  { 855,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #855 = A2_max
  { 856,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #856 = A2_maxp
  { 857,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #857 = A2_maxu
  { 858,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #858 = A2_maxup
  { 859,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #859 = A2_min
  { 860,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #860 = A2_minp
  { 861,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #861 = A2_minu
  { 862,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #862 = A2_minup
  { 863,	2,	1,	4,	76,	0, 0x2bULL, nullptr, nullptr, OperandInfo47 },  // Inst #863 = A2_negp
  { 864,	2,	1,	4,	72,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #864 = A2_negsat
  { 865,	0,	0,	4,	77,	0, 0x0ULL, nullptr, nullptr, nullptr },  // Inst #865 = A2_nop
  { 866,	2,	1,	4,	76,	0, 0x2bULL, nullptr, nullptr, OperandInfo47 },  // Inst #866 = A2_notp
  { 867,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #867 = A2_or
  { 868,	3,	1,	4,	6,	0, 0x154808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #868 = A2_orir
  { 869,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #869 = A2_orp
  { 870,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #870 = A2_paddf
  { 871,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #871 = A2_paddfnew
  { 872,	4,	1,	4,	4,	0, 0x116808c00ULL, nullptr, nullptr, OperandInfo151 },  // Inst #872 = A2_paddif
  { 873,	4,	1,	4,	5,	0, 0x116809c00ULL, nullptr, nullptr, OperandInfo151 },  // Inst #873 = A2_paddifnew
  { 874,	4,	1,	4,	4,	0, 0x116808400ULL, nullptr, nullptr, OperandInfo151 },  // Inst #874 = A2_paddit
  { 875,	4,	1,	4,	5,	0, 0x116809400ULL, nullptr, nullptr, OperandInfo151 },  // Inst #875 = A2_padditnew
  { 876,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #876 = A2_paddt
  { 877,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #877 = A2_paddtnew
  { 878,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #878 = A2_pandf
  { 879,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #879 = A2_pandfnew
  { 880,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #880 = A2_pandt
  { 881,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #881 = A2_pandtnew
  { 882,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #882 = A2_porf
  { 883,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #883 = A2_porfnew
  { 884,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #884 = A2_port
  { 885,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #885 = A2_portnew
  { 886,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #886 = A2_psubf
  { 887,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #887 = A2_psubfnew
  { 888,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #888 = A2_psubt
  { 889,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #889 = A2_psubtnew
  { 890,	4,	1,	4,	4,	0, 0x8c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #890 = A2_pxorf
  { 891,	4,	1,	4,	5,	0, 0x9c01ULL, nullptr, nullptr, OperandInfo150 },  // Inst #891 = A2_pxorfnew
  { 892,	4,	1,	4,	4,	0, 0x8401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #892 = A2_pxort
  { 893,	4,	1,	4,	5,	0, 0x9401ULL, nullptr, nullptr, OperandInfo150 },  // Inst #893 = A2_pxortnew
  { 894,	2,	1,	4,	72,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #894 = A2_roundsat
  { 895,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #895 = A2_sat
  { 896,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #896 = A2_satb
  { 897,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #897 = A2_sath
  { 898,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #898 = A2_satub
  { 899,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #899 = A2_satuh
  { 900,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #900 = A2_sub
  { 901,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #901 = A2_subh_h16_hh
  { 902,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #902 = A2_subh_h16_hl
  { 903,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #903 = A2_subh_h16_lh
  { 904,	3,	1,	4,	1,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #904 = A2_subh_h16_ll
  { 905,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #905 = A2_subh_h16_sat_hh
  { 906,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #906 = A2_subh_h16_sat_hl
  { 907,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #907 = A2_subh_h16_sat_lh
  { 908,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #908 = A2_subh_h16_sat_ll
  { 909,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #909 = A2_subh_l16_hl
  { 910,	3,	1,	4,	74,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #910 = A2_subh_l16_ll
  { 911,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #911 = A2_subh_l16_sat_hl
  { 912,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #912 = A2_subh_l16_sat_ll
  { 913,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #913 = A2_subp
  { 914,	3,	1,	4,	6,	0, 0x152808000ULL, nullptr, nullptr, OperandInfo146 },  // Inst #914 = A2_subri
  { 915,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #915 = A2_subsat
  { 916,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #916 = A2_svaddh
  { 917,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #917 = A2_svaddhs
  { 918,	3,	1,	4,	75,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #918 = A2_svadduhs
  { 919,	3,	1,	4,	78,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #919 = A2_svavgh
  { 920,	3,	1,	4,	79,	0|(1ULL<<MCID::Commutable), 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #920 = A2_svavghs
  { 921,	3,	1,	4,	78,	0, 0x200000000008001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #921 = A2_svnavgh
  { 922,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #922 = A2_svsubh
  { 923,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #923 = A2_svsubhs
  { 924,	3,	1,	4,	75,	0, 0x200000000008001ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #924 = A2_svsubuhs
  { 925,	2,	1,	4,	76,	0, 0x802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #925 = A2_swiz
  { 926,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #926 = A2_sxtb
  { 927,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #927 = A2_sxth
  { 928,	2,	1,	4,	76,	0, 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #928 = A2_sxtw
  { 929,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #929 = A2_tfr
  { 930,	2,	1,	4,	80,	0, 0x8005ULL, nullptr, nullptr, OperandInfo152 },  // Inst #930 = A2_tfrcrr
  { 931,	3,	1,	4,	6,	0, 0x8000ULL, nullptr, nullptr, OperandInfo145 },  // Inst #931 = A2_tfrih
  { 932,	3,	1,	4,	6,	0, 0x8000ULL, nullptr, nullptr, OperandInfo145 },  // Inst #932 = A2_tfril
  { 933,	2,	1,	4,	81,	0, 0x8005ULL, nullptr, nullptr, OperandInfo153 },  // Inst #933 = A2_tfrrcr
  { 934,	2,	1,	4,	3,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x212808000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #934 = A2_tfrsi
  { 935,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #935 = A2_vabsh
  { 936,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #936 = A2_vabshsat
  { 937,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #937 = A2_vabsw
  { 938,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #938 = A2_vabswsat
  { 939,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #939 = A2_vaddh
  { 940,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #940 = A2_vaddhs
  { 941,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #941 = A2_vaddub
  { 942,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #942 = A2_vaddubs
  { 943,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #943 = A2_vadduhs
  { 944,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #944 = A2_vaddw
  { 945,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #945 = A2_vaddws
  { 946,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #946 = A2_vavgh
  { 947,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #947 = A2_vavghcr
  { 948,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #948 = A2_vavghr
  { 949,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #949 = A2_vavgub
  { 950,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #950 = A2_vavgubr
  { 951,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #951 = A2_vavguh
  { 952,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #952 = A2_vavguhr
  { 953,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #953 = A2_vavguw
  { 954,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #954 = A2_vavguwr
  { 955,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #955 = A2_vavgw
  { 956,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #956 = A2_vavgwcr
  { 957,	3,	1,	4,	83,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #957 = A2_vavgwr
  { 958,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #958 = A2_vcmpbeq
  { 959,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #959 = A2_vcmpbgtu
  { 960,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #960 = A2_vcmpheq
  { 961,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #961 = A2_vcmphgt
  { 962,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #962 = A2_vcmphgtu
  { 963,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #963 = A2_vcmpweq
  { 964,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #964 = A2_vcmpwgt
  { 965,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #965 = A2_vcmpwgtu
  { 966,	2,	1,	4,	72,	0, 0x20000000000002bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #966 = A2_vconj
  { 967,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #967 = A2_vmaxb
  { 968,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #968 = A2_vmaxh
  { 969,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #969 = A2_vmaxub
  { 970,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #970 = A2_vmaxuh
  { 971,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #971 = A2_vmaxuw
  { 972,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #972 = A2_vmaxw
  { 973,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #973 = A2_vminb
  { 974,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #974 = A2_vminh
  { 975,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #975 = A2_vminub
  { 976,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #976 = A2_vminuh
  { 977,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #977 = A2_vminuw
  { 978,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #978 = A2_vminw
  { 979,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #979 = A2_vnavgh
  { 980,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #980 = A2_vnavghcr
  { 981,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #981 = A2_vnavghr
  { 982,	3,	1,	4,	82,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo50 },  // Inst #982 = A2_vnavgw
  { 983,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #983 = A2_vnavgwcr
  { 984,	3,	1,	4,	47,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #984 = A2_vnavgwr
  { 985,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #985 = A2_vraddub
  { 986,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #986 = A2_vraddub_acc
  { 987,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #987 = A2_vrsadub
  { 988,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #988 = A2_vrsadub_acc
  { 989,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #989 = A2_vsubh
  { 990,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #990 = A2_vsubhs
  { 991,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #991 = A2_vsubub
  { 992,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #992 = A2_vsububs
  { 993,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #993 = A2_vsubuhs
  { 994,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #994 = A2_vsubw
  { 995,	3,	1,	4,	73,	0, 0x200000000000003ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #995 = A2_vsubws
  { 996,	3,	1,	4,	6,	0|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #996 = A2_xor
  { 997,	3,	1,	4,	8,	0|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #997 = A2_xorp
  { 998,	2,	1,	4,	3,	0|(1ULL<<MCID::Predicable), 0x8000ULL, nullptr, nullptr, OperandInfo45 },  // Inst #998 = A2_zxth
  { 999,	5,	2,	4,	84,	0, 0x202cULL, nullptr, nullptr, OperandInfo155 },  // Inst #999 = A4_addp_c
  { 1000,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1000 = A4_andn
  { 1001,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1001 = A4_andnp
  { 1002,	3,	1,	4,	74,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1002 = A4_bitsplit
  { 1003,	3,	1,	4,	74,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo143 },  // Inst #1003 = A4_bitspliti
  { 1004,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1004 = A4_boundscheck_hi
  { 1005,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1005 = A4_boundscheck_lo
  { 1006,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1006 = A4_cmpbeq
  { 1007,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1007 = A4_cmpbeqi
  { 1008,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1008 = A4_cmpbgt
  { 1009,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1009 = A4_cmpbgti
  { 1010,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1010 = A4_cmpbgtu
  { 1011,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0xe4800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1011 = A4_cmpbgtui
  { 1012,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1012 = A4_cmpheq
  { 1013,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x114800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1013 = A4_cmpheqi
  { 1014,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1014 = A4_cmphgt
  { 1015,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0x114800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1015 = A4_cmphgti
  { 1016,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1016 = A4_cmphgtu
  { 1017,	3,	1,	4,	85,	0|(1ULL<<MCID::Compare), 0xe4800003ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1017 = A4_cmphgtui
  { 1018,	3,	1,	4,	6,	0, 0xc4800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #1018 = A4_combineii
  { 1019,	3,	1,	4,	6,	0, 0x112800000ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1019 = A4_combineir
  { 1020,	3,	1,	4,	6,	0, 0x114800000ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1020 = A4_combineri
  { 1021,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #1021 = A4_cround_ri
  { 1022,	3,	1,	4,	47,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #1022 = A4_cround_rr
  { 1023,	1,	0,	4,	86,	0, 0x22ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1023 = A4_ext
  { 1024,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1024 = A4_modwrapu
  { 1025,	3,	1,	4,	6,	0, 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1025 = A4_orn
  { 1026,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1026 = A4_ornp
  { 1027,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1027 = A4_paslhf
  { 1028,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1028 = A4_paslhfnew
  { 1029,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1029 = A4_paslht
  { 1030,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1030 = A4_paslhtnew
  { 1031,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1031 = A4_pasrhf
  { 1032,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1032 = A4_pasrhfnew
  { 1033,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1033 = A4_pasrht
  { 1034,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1034 = A4_pasrhtnew
  { 1035,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1035 = A4_psxtbf
  { 1036,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1036 = A4_psxtbfnew
  { 1037,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1037 = A4_psxtbt
  { 1038,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1038 = A4_psxtbtnew
  { 1039,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1039 = A4_psxthf
  { 1040,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1040 = A4_psxthfnew
  { 1041,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1041 = A4_psxtht
  { 1042,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1042 = A4_psxthtnew
  { 1043,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1043 = A4_pzxtbf
  { 1044,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1044 = A4_pzxtbfnew
  { 1045,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1045 = A4_pzxtbt
  { 1046,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1046 = A4_pzxtbtnew
  { 1047,	3,	1,	4,	6,	0, 0x8c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1047 = A4_pzxthf
  { 1048,	3,	1,	4,	7,	0, 0x9c00ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1048 = A4_pzxthfnew
  { 1049,	3,	1,	4,	6,	0, 0x8400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1049 = A4_pzxtht
  { 1050,	3,	1,	4,	7,	0, 0x9400ULL, nullptr, nullptr, OperandInfo46 },  // Inst #1050 = A4_pzxthtnew
  { 1051,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1051 = A4_rcmpeq
  { 1052,	3,	1,	4,	6,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1052 = A4_rcmpeqi
  { 1053,	3,	1,	4,	6,	0|(1ULL<<MCID::Commutable), 0x8001ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1053 = A4_rcmpneq
  { 1054,	3,	1,	4,	6,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1054 = A4_rcmpneqi
  { 1055,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #1055 = A4_round_ri
  { 1056,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo62 },  // Inst #1056 = A4_round_ri_sat
  { 1057,	3,	1,	4,	47,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #1057 = A4_round_rr
  { 1058,	3,	1,	4,	47,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1058 = A4_round_rr_sat
  { 1059,	5,	2,	4,	84,	0, 0x202cULL, nullptr, nullptr, OperandInfo155 },  // Inst #1059 = A4_subp_c
  { 1060,	2,	1,	4,	80,	0, 0x5ULL, nullptr, nullptr, OperandInfo156 },  // Inst #1060 = A4_tfrcpp
  { 1061,	2,	1,	4,	81,	0, 0x5ULL, nullptr, nullptr, OperandInfo157 },  // Inst #1061 = A4_tfrpcp
  { 1062,	3,	1,	4,	87,	0, 0x2003ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1062 = A4_tlbmatch
  { 1063,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1063 = A4_vcmpbeq_any
  { 1064,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1064 = A4_vcmpbeqi
  { 1065,	3,	1,	4,	9,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1065 = A4_vcmpbgt
  { 1066,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1066 = A4_vcmpbgti
  { 1067,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1067 = A4_vcmpbgtui
  { 1068,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1068 = A4_vcmpheqi
  { 1069,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1069 = A4_vcmphgti
  { 1070,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1070 = A4_vcmphgtui
  { 1071,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1071 = A4_vcmpweqi
  { 1072,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1072 = A4_vcmpwgti
  { 1073,	3,	1,	4,	85,	0, 0x3ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1073 = A4_vcmpwgtui
  { 1074,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1074 = A4_vrmaxh
  { 1075,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1075 = A4_vrmaxuh
  { 1076,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1076 = A4_vrmaxuw
  { 1077,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1077 = A4_vrmaxw
  { 1078,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1078 = A4_vrminh
  { 1079,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1079 = A4_vrminuh
  { 1080,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1080 = A4_vrminuw
  { 1081,	4,	1,	4,	88,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #1081 = A4_vrminw
  { 1082,	5,	2,	4,	89,	0, 0x200000000002025ULL, nullptr, ImplicitList22, OperandInfo160 },  // Inst #1082 = A5_ACS
  { 1083,	3,	1,	4,	47,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1083 = A5_vaddhubs
  { 1084,	3,	1,	4,	90,	0, 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1084 = A6_vcmpbeq_notany
  { 1085,	4,	2,	4,	91,	0, 0x200000000002025ULL, nullptr, nullptr, OperandInfo73 },  // Inst #1085 = A6_vminub_RdP
  { 1086,	3,	1,	4,	90,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #1086 = A7_clip
  { 1087,	3,	1,	4,	92,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo89 },  // Inst #1087 = A7_croundd_ri
  { 1088,	3,	1,	4,	92,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo65 },  // Inst #1088 = A7_croundd_rr
  { 1089,	3,	1,	4,	90,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #1089 = A7_vclip
  { 1090,	2,	1,	4,	93,	0, 0x5ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1090 = C2_all8
  { 1091,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1091 = C2_and
  { 1092,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1092 = C2_andn
  { 1093,	2,	1,	4,	93,	0, 0x5ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1093 = C2_any8
  { 1094,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1094 = C2_bitsclr
  { 1095,	3,	1,	4,	85,	0, 0x2bULL, nullptr, nullptr, OperandInfo52 },  // Inst #1095 = C2_bitsclri
  { 1096,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1096 = C2_bitsset
  { 1097,	4,	1,	4,	4,	0, 0xc01ULL, nullptr, nullptr, OperandInfo163 },  // Inst #1097 = C2_ccombinewf
  { 1098,	4,	1,	4,	5,	0, 0x1c01ULL, nullptr, nullptr, OperandInfo163 },  // Inst #1098 = C2_ccombinewnewf
  { 1099,	4,	1,	4,	5,	0, 0x1401ULL, nullptr, nullptr, OperandInfo163 },  // Inst #1099 = C2_ccombinewnewt
  { 1100,	4,	1,	4,	4,	0, 0x401ULL, nullptr, nullptr, OperandInfo163 },  // Inst #1100 = C2_ccombinewt
  { 1101,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm), 0x194808c00ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1101 = C2_cmoveif
  { 1102,	3,	1,	4,	6,	0|(1ULL<<MCID::MoveImm), 0x194808400ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1102 = C2_cmoveit
  { 1103,	3,	1,	4,	7,	0|(1ULL<<MCID::MoveImm), 0x194809c00ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1103 = C2_cmovenewif
  { 1104,	3,	1,	4,	7,	0|(1ULL<<MCID::MoveImm), 0x194809400ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1104 = C2_cmovenewit
  { 1105,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1105 = C2_cmpeq
  { 1106,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1106 = C2_cmpeqi
  { 1107,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1107 = C2_cmpeqp
  { 1108,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1108 = C2_cmpgt
  { 1109,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1109 = C2_cmpgti
  { 1110,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1110 = C2_cmpgtp
  { 1111,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1111 = C2_cmpgtu
  { 1112,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x124800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1112 = C2_cmpgtui
  { 1113,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x3ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1113 = C2_cmpgtup
  { 1114,	2,	1,	4,	76,	0, 0x2bULL, nullptr, nullptr, OperandInfo164 },  // Inst #1114 = C2_mask
  { 1115,	4,	1,	4,	4,	0, 0x8001ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1115 = C2_mux
  { 1116,	4,	1,	4,	4,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1116 = C2_muxii
  { 1117,	4,	1,	4,	4,	0, 0x116808000ULL, nullptr, nullptr, OperandInfo151 },  // Inst #1117 = C2_muxir
  { 1118,	4,	1,	4,	4,	0, 0x114808000ULL, nullptr, nullptr, OperandInfo166 },  // Inst #1118 = C2_muxri
  { 1119,	2,	1,	4,	93,	0, 0x5ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1119 = C2_not
  { 1120,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1120 = C2_or
  { 1121,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1121 = C2_orn
  { 1122,	2,	1,	4,	76,	0, 0x802bULL, nullptr, nullptr, OperandInfo167 },  // Inst #1122 = C2_tfrpr
  { 1123,	2,	1,	4,	95,	0, 0x2bULL, nullptr, nullptr, OperandInfo56 },  // Inst #1123 = C2_tfrrp
  { 1124,	3,	1,	4,	74,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo168 },  // Inst #1124 = C2_vitpack
  { 1125,	4,	1,	4,	96,	0, 0x3ULL, nullptr, nullptr, OperandInfo73 },  // Inst #1125 = C2_vmux
  { 1126,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1126 = C2_xor
  { 1127,	2,	1,	4,	97,	0, 0xc2808005ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1127 = C4_addipc
  { 1128,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1128 = C4_and_and
  { 1129,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1129 = C4_and_andn
  { 1130,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1130 = C4_and_or
  { 1131,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1131 = C4_and_orn
  { 1132,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1132 = C4_cmplte
  { 1133,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1133 = C4_cmpltei
  { 1134,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1134 = C4_cmplteu
  { 1135,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x124800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1135 = C4_cmplteui
  { 1136,	3,	1,	4,	94,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1136 = C4_cmpneq
  { 1137,	3,	1,	4,	10,	0|(1ULL<<MCID::Compare), 0x154800000ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1137 = C4_cmpneqi
  { 1138,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1138 = C4_fastcorner9
  { 1139,	3,	1,	4,	11,	0, 0x5ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1139 = C4_fastcorner9_not
  { 1140,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1140 = C4_nbitsclr
  { 1141,	3,	1,	4,	85,	0, 0x2bULL, nullptr, nullptr, OperandInfo52 },  // Inst #1141 = C4_nbitsclri
  { 1142,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #1142 = C4_nbitsset
  { 1143,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1143 = C4_or_and
  { 1144,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1144 = C4_or_andn
  { 1145,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1145 = C4_or_or
  { 1146,	4,	1,	4,	98,	0, 0x5ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1146 = C4_or_orn
  { 1147,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, nullptr, ImplicitList23, OperandInfo2 },  // Inst #1147 = CALLProfile
  { 1148,	2,	1,	4,	29,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x24ULL, nullptr, nullptr, OperandInfo170 },  // Inst #1148 = CONST32
  { 1149,	2,	1,	4,	29,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x24ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1149 = CONST64
  { 1150,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1150 = DuplexIClass0
  { 1151,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1151 = DuplexIClass1
  { 1152,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1152 = DuplexIClass2
  { 1153,	0,	0,	4,	12,	0, 0x20020ULL, nullptr, nullptr, nullptr },  // Inst #1153 = DuplexIClass3
  { 1154,	0,	0,	4,	12,	0, 0x20020ULL, nullptr, nullptr, nullptr },  // Inst #1154 = DuplexIClass4
  { 1155,	0,	0,	4,	12,	0, 0x20020ULL, nullptr, nullptr, nullptr },  // Inst #1155 = DuplexIClass5
  { 1156,	0,	0,	4,	12,	0, 0x20020ULL, nullptr, nullptr, nullptr },  // Inst #1156 = DuplexIClass6
  { 1157,	0,	0,	4,	12,	0, 0x20020ULL, nullptr, nullptr, nullptr },  // Inst #1157 = DuplexIClass7
  { 1158,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1158 = DuplexIClass8
  { 1159,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1159 = DuplexIClass9
  { 1160,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1160 = DuplexIClassA
  { 1161,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1161 = DuplexIClassB
  { 1162,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1162 = DuplexIClassC
  { 1163,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1163 = DuplexIClassD
  { 1164,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1164 = DuplexIClassE
  { 1165,	0,	0,	4,	12,	0, 0x20ULL, nullptr, nullptr, nullptr },  // Inst #1165 = DuplexIClassF
  { 1166,	1,	0,	4,	40,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000023ULL, ImplicitList24, ImplicitList19, OperandInfo79 },  // Inst #1166 = EH_RETURN_JMPR
  { 1167,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1167 = F2_conv_d2df
  { 1168,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1168 = F2_conv_d2sf
  { 1169,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1169 = F2_conv_df2d
  { 1170,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1170 = F2_conv_df2d_chop
  { 1171,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1171 = F2_conv_df2sf
  { 1172,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1172 = F2_conv_df2ud
  { 1173,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1173 = F2_conv_df2ud_chop
  { 1174,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1174 = F2_conv_df2uw
  { 1175,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1175 = F2_conv_df2uw_chop
  { 1176,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1176 = F2_conv_df2w
  { 1177,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1177 = F2_conv_df2w_chop
  { 1178,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1178 = F2_conv_sf2d
  { 1179,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1179 = F2_conv_sf2d_chop
  { 1180,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1180 = F2_conv_sf2df
  { 1181,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1181 = F2_conv_sf2ud
  { 1182,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1182 = F2_conv_sf2ud_chop
  { 1183,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1183 = F2_conv_sf2uw
  { 1184,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1184 = F2_conv_sf2uw_chop
  { 1185,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1185 = F2_conv_sf2w
  { 1186,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1186 = F2_conv_sf2w_chop
  { 1187,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo47 },  // Inst #1187 = F2_conv_ud2df
  { 1188,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo90 },  // Inst #1188 = F2_conv_ud2sf
  { 1189,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1189 = F2_conv_uw2df
  { 1190,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1190 = F2_conv_uw2sf
  { 1191,	2,	1,	4,	99,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo58 },  // Inst #1191 = F2_conv_w2df
  { 1192,	2,	1,	4,	99,	0, 0x400000000802bULL, ImplicitList25, nullptr, OperandInfo45 },  // Inst #1192 = F2_conv_w2sf
  { 1193,	3,	1,	4,	100,	0, 0x4000000000025ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1193 = F2_dfadd
  { 1194,	3,	1,	4,	85,	0, 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo159 },  // Inst #1194 = F2_dfclass
  { 1195,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo154 },  // Inst #1195 = F2_dfcmpeq
  { 1196,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo154 },  // Inst #1196 = F2_dfcmpge
  { 1197,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo154 },  // Inst #1197 = F2_dfcmpgt
  { 1198,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x4000000000003ULL, ImplicitList25, nullptr, OperandInfo154 },  // Inst #1198 = F2_dfcmpuo
  { 1199,	2,	1,	4,	101,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo49 },  // Inst #1199 = F2_dfimm_n
  { 1200,	2,	1,	4,	101,	0, 0x200000000000003ULL, nullptr, nullptr, OperandInfo49 },  // Inst #1200 = F2_dfimm_p
  { 1201,	3,	1,	4,	92,	0, 0x204000000000025ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1201 = F2_dfmax
  { 1202,	3,	1,	4,	92,	0, 0x204000000000025ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1202 = F2_dfmin
  { 1203,	3,	1,	4,	100,	0, 0x4000000000025ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1203 = F2_dfmpyfix
  { 1204,	4,	1,	4,	102,	0, 0x4000000000025ULL, ImplicitList25, nullptr, OperandInfo67 },  // Inst #1204 = F2_dfmpyhh
  { 1205,	4,	1,	4,	103,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1205 = F2_dfmpylh
  { 1206,	3,	1,	4,	104,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1206 = F2_dfmpyll
  { 1207,	3,	1,	4,	100,	0, 0x4000000000025ULL, ImplicitList25, nullptr, OperandInfo50 },  // Inst #1207 = F2_dfsub
  { 1208,	3,	1,	4,	105,	0|(1ULL<<MCID::Commutable), 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1208 = F2_sfadd
  { 1209,	3,	1,	4,	85,	0, 0x400000000002bULL, ImplicitList25, nullptr, OperandInfo52 },  // Inst #1209 = F2_sfclass
  { 1210,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002cULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1210 = F2_sfcmpeq
  { 1211,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002cULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1211 = F2_sfcmpge
  { 1212,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002cULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1212 = F2_sfcmpgt
  { 1213,	3,	1,	4,	9,	0|(1ULL<<MCID::Compare), 0x400000000002cULL, ImplicitList25, nullptr, OperandInfo53 },  // Inst #1213 = F2_sfcmpuo
  { 1214,	3,	1,	4,	105,	0, 0x4000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1214 = F2_sffixupd
  { 1215,	3,	1,	4,	105,	0, 0x4000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1215 = F2_sffixupn
  { 1216,	2,	1,	4,	99,	0, 0x400000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #1216 = F2_sffixupr
  { 1217,	4,	1,	4,	106,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo172 },  // Inst #1217 = F2_sffma
  { 1218,	4,	1,	4,	106,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo172 },  // Inst #1218 = F2_sffma_lib
  { 1219,	5,	1,	4,	107,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo173 },  // Inst #1219 = F2_sffma_sc
  { 1220,	4,	1,	4,	106,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo172 },  // Inst #1220 = F2_sffms
  { 1221,	4,	1,	4,	106,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo172 },  // Inst #1221 = F2_sffms_lib
  { 1222,	2,	1,	4,	101,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1222 = F2_sfimm_n
  { 1223,	2,	1,	4,	101,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1223 = F2_sfimm_p
  { 1224,	3,	2,	4,	108,	0, 0x400000000a02bULL, nullptr, nullptr, OperandInfo46 },  // Inst #1224 = F2_sfinvsqrta
  { 1225,	3,	1,	4,	109,	0, 0x204000000008025ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1225 = F2_sfmax
  { 1226,	3,	1,	4,	109,	0, 0x204000000008025ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1226 = F2_sfmin
  { 1227,	3,	1,	4,	105,	0|(1ULL<<MCID::Commutable), 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1227 = F2_sfmpy
  { 1228,	4,	2,	4,	110,	0, 0x400000000a025ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1228 = F2_sfrecipa
  { 1229,	3,	1,	4,	105,	0, 0x4000000008025ULL, ImplicitList25, nullptr, OperandInfo63 },  // Inst #1229 = F2_sfsub
  { 1230,	2,	1,	4,	111,	0, 0x5ULL, nullptr, nullptr, OperandInfo174 },  // Inst #1230 = G4_tfrgcpp
  { 1231,	2,	1,	4,	111,	0, 0x8005ULL, nullptr, nullptr, OperandInfo175 },  // Inst #1231 = G4_tfrgcrr
  { 1232,	2,	1,	4,	112,	0, 0x8005ULL, nullptr, nullptr, OperandInfo176 },  // Inst #1232 = G4_tfrgpcp
  { 1233,	2,	1,	4,	112,	0, 0x8005ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1233 = G4_tfrgrcr
  { 1234,	2,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x8000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1234 = HI
  { 1235,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x200005b10800023ULL, ImplicitList3, ImplicitList26, OperandInfo2 },  // Inst #1235 = J2_call
  { 1236,	2,	0,	4,	113,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200007a32800c23ULL, ImplicitList3, ImplicitList26, OperandInfo55 },  // Inst #1236 = J2_callf
  { 1237,	1,	0,	4,	114,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000023ULL, ImplicitList3, ImplicitList26, OperandInfo79 },  // Inst #1237 = J2_callr
  { 1238,	2,	0,	4,	115,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000c23ULL, ImplicitList3, ImplicitList26, OperandInfo56 },  // Inst #1238 = J2_callrf
  { 1239,	2,	0,	4,	115,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200001000000423ULL, ImplicitList3, ImplicitList26, OperandInfo56 },  // Inst #1239 = J2_callrt
  { 1240,	2,	0,	4,	113,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x200007a32800423ULL, ImplicitList3, ImplicitList26, OperandInfo55 },  // Inst #1240 = J2_callt
  { 1241,	1,	0,	4,	116,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x5b10800023ULL, nullptr, ImplicitList19, OperandInfo2 },  // Inst #1241 = J2_jump
  { 1242,	2,	0,	4,	15,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32800c23ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1242 = J2_jumpf
  { 1243,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32801c23ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1243 = J2_jumpfnew
  { 1244,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32801c23ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1244 = J2_jumpfnewpt
  { 1245,	2,	0,	4,	118,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32800c23ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1245 = J2_jumpfpt
  { 1246,	1,	0,	4,	40,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x1000000023ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #1246 = J2_jumpr
  { 1247,	2,	0,	4,	16,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1247 = J2_jumprf
  { 1248,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1248 = J2_jumprfnew
  { 1249,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000001c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1249 = J2_jumprfnewpt
  { 1250,	2,	0,	4,	120,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000000c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1250 = J2_jumprfpt
  { 1251,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1251 = J2_jumprgtez
  { 1252,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1252 = J2_jumprgtezpt
  { 1253,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1253 = J2_jumprltez
  { 1254,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1254 = J2_jumprltezpt
  { 1255,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1255 = J2_jumprnz
  { 1256,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1256 = J2_jumprnzpt
  { 1257,	2,	0,	4,	16,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1257 = J2_jumprt
  { 1258,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1258 = J2_jumprtnew
  { 1259,	2,	0,	4,	119,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000001423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1259 = J2_jumprtnewpt
  { 1260,	2,	0,	4,	120,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x2001000000423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1260 = J2_jumprtpt
  { 1261,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1261 = J2_jumprz
  { 1262,	2,	0,	4,	121,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007000001405ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1262 = J2_jumprzpt
  { 1263,	2,	0,	4,	15,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32800423ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1263 = J2_jumpt
  { 1264,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7a32801423ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1264 = J2_jumptnew
  { 1265,	2,	0,	4,	117,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32801423ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1265 = J2_jumptnewpt
  { 1266,	2,	0,	4,	118,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007a32800423ULL, nullptr, ImplicitList19, OperandInfo55 },  // Inst #1266 = J2_jumptpt
  { 1267,	2,	0,	4,	122,	0, 0x6930800005ULL, nullptr, ImplicitList27, OperandInfo7 },  // Inst #1267 = J2_loop0i
  { 1268,	2,	0,	4,	122,	0, 0x931800005ULL, nullptr, ImplicitList28, OperandInfo7 },  // Inst #1268 = J2_loop0iext
  { 1269,	2,	0,	4,	123,	0, 0x6930800005ULL, nullptr, ImplicitList27, OperandInfo178 },  // Inst #1269 = J2_loop0r
  { 1270,	2,	0,	4,	123,	0, 0x931800005ULL, nullptr, ImplicitList9, OperandInfo178 },  // Inst #1270 = J2_loop0rext
  { 1271,	2,	0,	4,	122,	0, 0x6930800005ULL, nullptr, ImplicitList15, OperandInfo7 },  // Inst #1271 = J2_loop1i
  { 1272,	2,	0,	4,	122,	0, 0x931800005ULL, nullptr, ImplicitList28, OperandInfo7 },  // Inst #1272 = J2_loop1iext
  { 1273,	2,	0,	4,	123,	0, 0x6930800005ULL, nullptr, ImplicitList15, OperandInfo178 },  // Inst #1273 = J2_loop1r
  { 1274,	2,	0,	4,	123,	0, 0x931800005ULL, nullptr, ImplicitList9, OperandInfo178 },  // Inst #1274 = J2_loop1rext
  { 1275,	1,	0,	4,	124,	0, 0xa3ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1275 = J2_pause
  { 1276,	2,	0,	4,	125,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1276 = J2_ploop1si
  { 1277,	2,	0,	4,	126,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo178 },  // Inst #1277 = J2_ploop1sr
  { 1278,	2,	0,	4,	125,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1278 = J2_ploop2si
  { 1279,	2,	0,	4,	126,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo178 },  // Inst #1279 = J2_ploop2sr
  { 1280,	2,	0,	4,	125,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo7 },  // Inst #1280 = J2_ploop3si
  { 1281,	2,	0,	4,	126,	0, 0x6930802005ULL, nullptr, ImplicitList29, OperandInfo178 },  // Inst #1281 = J2_ploop3sr
  { 1282,	1,	0,	4,	127,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xa3ULL, nullptr, nullptr, OperandInfo2 },  // Inst #1282 = J2_trap0
  { 1283,	3,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80a3ULL, ImplicitList30, ImplicitList31, OperandInfo145 },  // Inst #1283 = J2_trap1
  { 1284,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1284 = J4_cmpeq_f_jumpnv_nt
  { 1285,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1285 = J4_cmpeq_f_jumpnv_t
  { 1286,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1286 = J4_cmpeq_fp0_jump_nt
  { 1287,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1287 = J4_cmpeq_fp0_jump_t
  { 1288,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1288 = J4_cmpeq_fp1_jump_nt
  { 1289,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1289 = J4_cmpeq_fp1_jump_t
  { 1290,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1290 = J4_cmpeq_t_jumpnv_nt
  { 1291,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1291 = J4_cmpeq_t_jumpnv_t
  { 1292,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1292 = J4_cmpeq_tp0_jump_nt
  { 1293,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1293 = J4_cmpeq_tp0_jump_t
  { 1294,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1294 = J4_cmpeq_tp1_jump_nt
  { 1295,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1295 = J4_cmpeq_tp1_jump_t
  { 1296,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1296 = J4_cmpeqi_f_jumpnv_nt
  { 1297,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1297 = J4_cmpeqi_f_jumpnv_t
  { 1298,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1298 = J4_cmpeqi_fp0_jump_nt
  { 1299,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1299 = J4_cmpeqi_fp0_jump_t
  { 1300,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1300 = J4_cmpeqi_fp1_jump_nt
  { 1301,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1301 = J4_cmpeqi_fp1_jump_t
  { 1302,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1302 = J4_cmpeqi_t_jumpnv_nt
  { 1303,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1303 = J4_cmpeqi_t_jumpnv_t
  { 1304,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1304 = J4_cmpeqi_tp0_jump_nt
  { 1305,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1305 = J4_cmpeqi_tp0_jump_t
  { 1306,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1306 = J4_cmpeqi_tp1_jump_nt
  { 1307,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1307 = J4_cmpeqi_tp1_jump_t
  { 1308,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1308 = J4_cmpeqn1_f_jumpnv_nt
  { 1309,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1309 = J4_cmpeqn1_f_jumpnv_t
  { 1310,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1310 = J4_cmpeqn1_fp0_jump_nt
  { 1311,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1311 = J4_cmpeqn1_fp0_jump_t
  { 1312,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1312 = J4_cmpeqn1_fp1_jump_nt
  { 1313,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1313 = J4_cmpeqn1_fp1_jump_t
  { 1314,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1314 = J4_cmpeqn1_t_jumpnv_nt
  { 1315,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1315 = J4_cmpeqn1_t_jumpnv_t
  { 1316,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1316 = J4_cmpeqn1_tp0_jump_nt
  { 1317,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1317 = J4_cmpeqn1_tp0_jump_t
  { 1318,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1318 = J4_cmpeqn1_tp1_jump_nt
  { 1319,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1319 = J4_cmpeqn1_tp1_jump_t
  { 1320,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1320 = J4_cmpgt_f_jumpnv_nt
  { 1321,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1321 = J4_cmpgt_f_jumpnv_t
  { 1322,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1322 = J4_cmpgt_fp0_jump_nt
  { 1323,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1323 = J4_cmpgt_fp0_jump_t
  { 1324,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1324 = J4_cmpgt_fp1_jump_nt
  { 1325,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1325 = J4_cmpgt_fp1_jump_t
  { 1326,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1326 = J4_cmpgt_t_jumpnv_nt
  { 1327,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1327 = J4_cmpgt_t_jumpnv_t
  { 1328,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1328 = J4_cmpgt_tp0_jump_nt
  { 1329,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1329 = J4_cmpgt_tp0_jump_t
  { 1330,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1330 = J4_cmpgt_tp1_jump_nt
  { 1331,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1331 = J4_cmpgt_tp1_jump_t
  { 1332,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1332 = J4_cmpgti_f_jumpnv_nt
  { 1333,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1333 = J4_cmpgti_f_jumpnv_t
  { 1334,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1334 = J4_cmpgti_fp0_jump_nt
  { 1335,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1335 = J4_cmpgti_fp0_jump_t
  { 1336,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1336 = J4_cmpgti_fp1_jump_nt
  { 1337,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1337 = J4_cmpgti_fp1_jump_t
  { 1338,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1338 = J4_cmpgti_t_jumpnv_nt
  { 1339,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1339 = J4_cmpgti_t_jumpnv_t
  { 1340,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1340 = J4_cmpgti_tp0_jump_nt
  { 1341,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1341 = J4_cmpgti_tp0_jump_t
  { 1342,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1342 = J4_cmpgti_tp1_jump_nt
  { 1343,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1343 = J4_cmpgti_tp1_jump_t
  { 1344,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1344 = J4_cmpgtn1_f_jumpnv_nt
  { 1345,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1345 = J4_cmpgtn1_f_jumpnv_t
  { 1346,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1346 = J4_cmpgtn1_fp0_jump_nt
  { 1347,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1347 = J4_cmpgtn1_fp0_jump_t
  { 1348,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1348 = J4_cmpgtn1_fp1_jump_nt
  { 1349,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1349 = J4_cmpgtn1_fp1_jump_t
  { 1350,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1350 = J4_cmpgtn1_t_jumpnv_nt
  { 1351,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1351 = J4_cmpgtn1_t_jumpnv_t
  { 1352,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1352 = J4_cmpgtn1_tp0_jump_nt
  { 1353,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1353 = J4_cmpgtn1_tp0_jump_t
  { 1354,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1354 = J4_cmpgtn1_tp1_jump_nt
  { 1355,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1355 = J4_cmpgtn1_tp1_jump_t
  { 1356,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1356 = J4_cmpgtu_f_jumpnv_nt
  { 1357,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1357 = J4_cmpgtu_f_jumpnv_t
  { 1358,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1358 = J4_cmpgtu_fp0_jump_nt
  { 1359,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1359 = J4_cmpgtu_fp0_jump_t
  { 1360,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1360 = J4_cmpgtu_fp1_jump_nt
  { 1361,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1361 = J4_cmpgtu_fp1_jump_t
  { 1362,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1362 = J4_cmpgtu_t_jumpnv_nt
  { 1363,	3,	0,	4,	128,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1363 = J4_cmpgtu_t_jumpnv_t
  { 1364,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1364 = J4_cmpgtu_tp0_jump_nt
  { 1365,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo179 },  // Inst #1365 = J4_cmpgtu_tp0_jump_t
  { 1366,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1366 = J4_cmpgtu_tp1_jump_nt
  { 1367,	3,	0,	4,	129,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo179 },  // Inst #1367 = J4_cmpgtu_tp1_jump_t
  { 1368,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1368 = J4_cmpgtui_f_jumpnv_nt
  { 1369,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804c27ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1369 = J4_cmpgtui_f_jumpnv_t
  { 1370,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1370 = J4_cmpgtui_fp0_jump_nt
  { 1371,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1371 = J4_cmpgtui_fp0_jump_t
  { 1372,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1372 = J4_cmpgtui_fp1_jump_nt
  { 1373,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801c04ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1373 = J4_cmpgtui_fp1_jump_t
  { 1374,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1374 = J4_cmpgtui_t_jumpnv_nt
  { 1375,	3,	0,	4,	130,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974804427ULL, nullptr, ImplicitList19, OperandInfo148 },  // Inst #1375 = J4_cmpgtui_t_jumpnv_t
  { 1376,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1376 = J4_cmpgtui_tp0_jump_nt
  { 1377,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList32, ImplicitList33, OperandInfo180 },  // Inst #1377 = J4_cmpgtui_tp0_jump_t
  { 1378,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1378 = J4_cmpgtui_tp1_jump_nt
  { 1379,	3,	0,	4,	131,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007974801404ULL, ImplicitList34, ImplicitList35, OperandInfo180 },  // Inst #1379 = J4_cmpgtui_tp1_jump_t
  { 1380,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1380 = J4_cmplt_f_jumpnv_nt
  { 1381,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1381 = J4_cmplt_f_jumpnv_t
  { 1382,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1382 = J4_cmplt_t_jumpnv_nt
  { 1383,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1383 = J4_cmplt_t_jumpnv_t
  { 1384,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1384 = J4_cmpltu_f_jumpnv_nt
  { 1385,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814c27ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1385 = J4_cmpltu_f_jumpnv_t
  { 1386,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9974814427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1386 = J4_cmpltu_t_jumpnv_nt
  { 1387,	3,	0,	4,	132,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009974814427ULL, nullptr, ImplicitList19, OperandInfo62 },  // Inst #1387 = J4_cmpltu_t_jumpnv_t
  { 1388,	1,	0,	4,	40,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000023ULL, nullptr, nullptr, OperandInfo79 },  // Inst #1388 = J4_hintjumpr
  { 1389,	3,	1,	4,	133,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x5974808004ULL, nullptr, ImplicitList19, OperandInfo180 },  // Inst #1389 = J4_jumpseti
  { 1390,	3,	1,	4,	133,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x5974808004ULL, nullptr, ImplicitList19, OperandInfo179 },  // Inst #1390 = J4_jumpsetr
  { 1391,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9972804c27ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1391 = J4_tstbit0_f_jumpnv_nt
  { 1392,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009972804c27ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1392 = J4_tstbit0_f_jumpnv_t
  { 1393,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801c04ULL, ImplicitList32, ImplicitList33, OperandInfo181 },  // Inst #1393 = J4_tstbit0_fp0_jump_nt
  { 1394,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801c04ULL, ImplicitList32, ImplicitList33, OperandInfo181 },  // Inst #1394 = J4_tstbit0_fp0_jump_t
  { 1395,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801c04ULL, ImplicitList34, ImplicitList35, OperandInfo181 },  // Inst #1395 = J4_tstbit0_fp1_jump_nt
  { 1396,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801c04ULL, ImplicitList34, ImplicitList35, OperandInfo181 },  // Inst #1396 = J4_tstbit0_fp1_jump_t
  { 1397,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x9972804427ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1397 = J4_tstbit0_t_jumpnv_nt
  { 1398,	2,	0,	4,	134,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2009972804427ULL, nullptr, ImplicitList19, OperandInfo44 },  // Inst #1398 = J4_tstbit0_t_jumpnv_t
  { 1399,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801404ULL, ImplicitList32, ImplicitList33, OperandInfo181 },  // Inst #1399 = J4_tstbit0_tp0_jump_nt
  { 1400,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801404ULL, ImplicitList32, ImplicitList33, OperandInfo181 },  // Inst #1400 = J4_tstbit0_tp0_jump_t
  { 1401,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x7972801404ULL, ImplicitList34, ImplicitList35, OperandInfo181 },  // Inst #1401 = J4_tstbit0_tp1_jump_nt
  { 1402,	2,	0,	4,	135,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x2007972801404ULL, ImplicitList34, ImplicitList35, OperandInfo181 },  // Inst #1402 = J4_tstbit0_tp1_jump_t
  { 1403,	2,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x800000000024ULL, ImplicitList20, ImplicitList3, OperandInfo58 },  // Inst #1403 = L2_deallocframe
  { 1404,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c0176800024ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1404 = L2_loadalignb_io
  { 1405,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000024ULL, nullptr, nullptr, OperandInfo183 },  // Inst #1405 = L2_loadalignb_pbr
  { 1406,	6,	2,	4,	137,	0|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, nullptr, OperandInfo184 },  // Inst #1406 = L2_loadalignb_pci
  { 1407,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000024ULL, ImplicitList18, nullptr, OperandInfo183 },  // Inst #1407 = L2_loadalignb_pcr
  { 1408,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000024ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1408 = L2_loadalignb_pi
  { 1409,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000000024ULL, nullptr, nullptr, OperandInfo183 },  // Inst #1409 = L2_loadalignb_pr
  { 1410,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c0596800024ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1410 = L2_loadalignh_io
  { 1411,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000024ULL, nullptr, nullptr, OperandInfo183 },  // Inst #1411 = L2_loadalignh_pbr
  { 1412,	6,	2,	4,	137,	0|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, nullptr, OperandInfo184 },  // Inst #1412 = L2_loadalignh_pci
  { 1413,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000024ULL, ImplicitList18, nullptr, OperandInfo183 },  // Inst #1413 = L2_loadalignh_pcr
  { 1414,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000024ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1414 = L2_loadalignh_pi
  { 1415,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000000024ULL, nullptr, nullptr, OperandInfo183 },  // Inst #1415 = L2_loadalignh_pr
  { 1416,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1416 = L2_loadbsw2_io
  { 1417,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1417 = L2_loadbsw2_pbr
  { 1418,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1418 = L2_loadbsw2_pci
  { 1419,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1419 = L2_loadbsw2_pcr
  { 1420,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1420 = L2_loadbsw2_pi
  { 1421,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1421 = L2_loadbsw2_pr
  { 1422,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c09b4800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1422 = L2_loadbsw4_io
  { 1423,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1423 = L2_loadbsw4_pbr
  { 1424,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, nullptr, OperandInfo190 },  // Inst #1424 = L2_loadbsw4_pci
  { 1425,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1425 = L2_loadbsw4_pcr
  { 1426,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1426 = L2_loadbsw4_pi
  { 1427,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1427 = L2_loadbsw4_pr
  { 1428,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1428 = L2_loadbzw2_io
  { 1429,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1429 = L2_loadbzw2_pbr
  { 1430,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1430 = L2_loadbzw2_pci
  { 1431,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1431 = L2_loadbzw2_pcr
  { 1432,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1432 = L2_loadbzw2_pi
  { 1433,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1433 = L2_loadbzw2_pr
  { 1434,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c09b4800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1434 = L2_loadbzw4_io
  { 1435,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1435 = L2_loadbzw4_pbr
  { 1436,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, nullptr, OperandInfo190 },  // Inst #1436 = L2_loadbzw4_pci
  { 1437,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1437 = L2_loadbzw4_pcr
  { 1438,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1438 = L2_loadbzw4_pi
  { 1439,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1439 = L2_loadbzw4_pr
  { 1440,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x2c0174808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1440 = L2_loadrb_io
  { 1441,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1441 = L2_loadrb_pbr
  { 1442,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1442 = L2_loadrb_pci
  { 1443,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1443 = L2_loadrb_pcr
  { 1444,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x380000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1444 = L2_loadrb_pi
  { 1445,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1445 = L2_loadrb_pr
  { 1446,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x20020200802fULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1446 = L2_loadrbgp
  { 1447,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8c0dd4800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1447 = L2_loadrd_io
  { 1448,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1448 = L2_loadrd_pbr
  { 1449,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x980000000024ULL, ImplicitList18, nullptr, OperandInfo190 },  // Inst #1449 = L2_loadrd_pci
  { 1450,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000024ULL, ImplicitList18, nullptr, OperandInfo189 },  // Inst #1450 = L2_loadrd_pcr
  { 1451,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x980000000024ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1451 = L2_loadrd_pi
  { 1452,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x980000000024ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1452 = L2_loadrd_pr
  { 1453,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x800e6200002fULL, ImplicitList36, nullptr, OperandInfo49 },  // Inst #1453 = L2_loadrdgp
  { 1454,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1454 = L2_loadrh_io
  { 1455,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1455 = L2_loadrh_pbr
  { 1456,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1456 = L2_loadrh_pci
  { 1457,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1457 = L2_loadrh_pcr
  { 1458,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x580000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1458 = L2_loadrh_pi
  { 1459,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1459 = L2_loadrh_pr
  { 1460,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x40062200802fULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1460 = L2_loadrhgp
  { 1461,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x6c09b4808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1461 = L2_loadri_io
  { 1462,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1462 = L2_loadri_pbr
  { 1463,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x780000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1463 = L2_loadri_pci
  { 1464,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1464 = L2_loadri_pcr
  { 1465,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x780000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1465 = L2_loadri_pi
  { 1466,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x780000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1466 = L2_loadri_pr
  { 1467,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x600a4200802fULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1467 = L2_loadrigp
  { 1468,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x2c0174808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1468 = L2_loadrub_io
  { 1469,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1469 = L2_loadrub_pbr
  { 1470,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1470 = L2_loadrub_pci
  { 1471,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1471 = L2_loadrub_pcr
  { 1472,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x380000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1472 = L2_loadrub_pi
  { 1473,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x380000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1473 = L2_loadrub_pr
  { 1474,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x20020200802fULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1474 = L2_loadrubgp
  { 1475,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x4c0594808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1475 = L2_loadruh_io
  { 1476,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1476 = L2_loadruh_pbr
  { 1477,	5,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo187 },  // Inst #1477 = L2_loadruh_pci
  { 1478,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, ImplicitList18, nullptr, OperandInfo186 },  // Inst #1478 = L2_loadruh_pcr
  { 1479,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x580000008024ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1479 = L2_loadruh_pi
  { 1480,	4,	2,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x580000008024ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1480 = L2_loadruh_pr
  { 1481,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x40062200802fULL, ImplicitList36, nullptr, OperandInfo44 },  // Inst #1481 = L2_loadruhgp
  { 1482,	2,	1,	4,	139,	0|(1ULL<<MCID::MayLoad), 0x600000008024ULL, nullptr, nullptr, OperandInfo45 },  // Inst #1482 = L2_loadw_aq
  { 1483,	2,	1,	4,	140,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x600000008124ULL, nullptr, nullptr, OperandInfo45 },  // Inst #1483 = L2_loadw_locked
  { 1484,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1484 = L2_ploadrbf_io
  { 1485,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1485 = L2_ploadrbf_pi
  { 1486,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1486 = L2_ploadrbfnew_io
  { 1487,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x380000009c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1487 = L2_ploadrbfnew_pi
  { 1488,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c680842fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1488 = L2_ploadrbt_io
  { 1489,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1489 = L2_ploadrbt_pi
  { 1490,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c680942fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1490 = L2_ploadrbtnew_io
  { 1491,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x380000009424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1491 = L2_ploadrbtnew_pi
  { 1492,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x8c0d26800c2fULL, nullptr, nullptr, OperandInfo193 },  // Inst #1492 = L2_ploadrdf_io
  { 1493,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x980000000c24ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1493 = L2_ploadrdf_pi
  { 1494,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x8c0d26801c2fULL, nullptr, nullptr, OperandInfo193 },  // Inst #1494 = L2_ploadrdfnew_io
  { 1495,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x980000001c24ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1495 = L2_ploadrdfnew_pi
  { 1496,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x8c0d2680042fULL, nullptr, nullptr, OperandInfo193 },  // Inst #1496 = L2_ploadrdt_io
  { 1497,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x980000000424ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1497 = L2_ploadrdt_pi
  { 1498,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x8c0d2680142fULL, nullptr, nullptr, OperandInfo193 },  // Inst #1498 = L2_ploadrdtnew_io
  { 1499,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x980000001424ULL, nullptr, nullptr, OperandInfo194 },  // Inst #1499 = L2_ploadrdtnew_pi
  { 1500,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1500 = L2_ploadrhf_io
  { 1501,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1501 = L2_ploadrhf_pi
  { 1502,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1502 = L2_ploadrhfnew_io
  { 1503,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x580000009c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1503 = L2_ploadrhfnew_pi
  { 1504,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e680842fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1504 = L2_ploadrht_io
  { 1505,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1505 = L2_ploadrht_pi
  { 1506,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e680942fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1506 = L2_ploadrhtnew_io
  { 1507,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x580000009424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1507 = L2_ploadrhtnew_pi
  { 1508,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x6c0906808c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1508 = L2_ploadrif_io
  { 1509,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x780000008c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1509 = L2_ploadrif_pi
  { 1510,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x6c0906809c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1510 = L2_ploadrifnew_io
  { 1511,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x780000009c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1511 = L2_ploadrifnew_pi
  { 1512,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x6c090680842fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1512 = L2_ploadrit_io
  { 1513,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x780000008424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1513 = L2_ploadrit_pi
  { 1514,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x6c090680942fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1514 = L2_ploadritnew_io
  { 1515,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x780000009424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1515 = L2_ploadritnew_pi
  { 1516,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c6808c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1516 = L2_ploadrubf_io
  { 1517,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1517 = L2_ploadrubf_pi
  { 1518,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c6809c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1518 = L2_ploadrubfnew_io
  { 1519,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x380000009c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1519 = L2_ploadrubfnew_pi
  { 1520,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x2c00c680842fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1520 = L2_ploadrubt_io
  { 1521,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x380000008424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1521 = L2_ploadrubt_pi
  { 1522,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x2c00c680942fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1522 = L2_ploadrubtnew_io
  { 1523,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x380000009424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1523 = L2_ploadrubtnew_pi
  { 1524,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e6808c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1524 = L2_ploadruhf_io
  { 1525,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1525 = L2_ploadruhf_pi
  { 1526,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e6809c2fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1526 = L2_ploadruhfnew_io
  { 1527,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x580000009c24ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1527 = L2_ploadruhfnew_pi
  { 1528,	4,	1,	4,	18,	0|(1ULL<<MCID::MayLoad), 0x4c04e680842fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1528 = L2_ploadruht_io
  { 1529,	5,	2,	4,	136,	0|(1ULL<<MCID::MayLoad), 0x580000008424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1529 = L2_ploadruht_pi
  { 1530,	4,	1,	4,	20,	0|(1ULL<<MCID::MayLoad), 0x4c04e680942fULL, nullptr, nullptr, OperandInfo151 },  // Inst #1530 = L2_ploadruhtnew_io
  { 1531,	5,	2,	4,	141,	0|(1ULL<<MCID::MayLoad), 0x580000009424ULL, nullptr, nullptr, OperandInfo192 },  // Inst #1531 = L2_ploadruhtnew_pi
  { 1532,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1532 = L4_add_memopb_io
  { 1533,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1533 = L4_add_memoph_io
  { 1534,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1534 = L4_add_memopw_io
  { 1535,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1535 = L4_and_memopb_io
  { 1536,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1536 = L4_and_memoph_io
  { 1537,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1537 = L4_and_memopw_io
  { 1538,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1538 = L4_iadd_memopb_io
  { 1539,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1539 = L4_iadd_memoph_io
  { 1540,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1540 = L4_iadd_memopw_io
  { 1541,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1541 = L4_iand_memopb_io
  { 1542,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1542 = L4_iand_memoph_io
  { 1543,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1543 = L4_iand_memopw_io
  { 1544,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1544 = L4_ior_memopb_io
  { 1545,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1545 = L4_ior_memoph_io
  { 1546,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1546 = L4_ior_memopw_io
  { 1547,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1547 = L4_isub_memopb_io
  { 1548,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1548 = L4_isub_memoph_io
  { 1549,	3,	0,	4,	22,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1549 = L4_isub_memopw_io
  { 1550,	4,	2,	4,	142,	0|(1ULL<<MCID::MayLoad), 0x2800c7800024ULL, nullptr, nullptr, OperandInfo195 },  // Inst #1550 = L4_loadalignb_ap
  { 1551,	5,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x3000c9800024ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1551 = L4_loadalignb_ur
  { 1552,	4,	2,	4,	142,	0|(1ULL<<MCID::MayLoad), 0x4800c7800024ULL, nullptr, nullptr, OperandInfo195 },  // Inst #1552 = L4_loadalignh_ap
  { 1553,	5,	1,	4,	143,	0|(1ULL<<MCID::MayLoad), 0x5000c9800024ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1553 = L4_loadalignh_ur
  { 1554,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1554 = L4_loadbsw2_ap
  { 1555,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x5000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1555 = L4_loadbsw2_ur
  { 1556,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x6800c5800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1556 = L4_loadbsw4_ap
  { 1557,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x7000c7800024ULL, nullptr, nullptr, OperandInfo198 },  // Inst #1557 = L4_loadbsw4_ur
  { 1558,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1558 = L4_loadbzw2_ap
  { 1559,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x5000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1559 = L4_loadbzw2_ur
  { 1560,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x6800c5800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1560 = L4_loadbzw4_ap
  { 1561,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x7000c7800024ULL, nullptr, nullptr, OperandInfo198 },  // Inst #1561 = L4_loadbzw4_ur
  { 1562,	2,	1,	4,	139,	0|(1ULL<<MCID::MayLoad), 0x800000000024ULL, nullptr, nullptr, OperandInfo58 },  // Inst #1562 = L4_loadd_aq
  { 1563,	2,	1,	4,	140,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x800000000124ULL, nullptr, nullptr, OperandInfo58 },  // Inst #1563 = L4_loadd_locked
  { 1564,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1564 = L4_loadrb_ap
  { 1565,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x340000008024ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1565 = L4_loadrb_rr
  { 1566,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x3000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1566 = L4_loadrb_ur
  { 1567,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x8800c5800024ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1567 = L4_loadrd_ap
  { 1568,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x940000000024ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1568 = L4_loadrd_rr
  { 1569,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x9000c7800024ULL, nullptr, nullptr, OperandInfo198 },  // Inst #1569 = L4_loadrd_ur
  { 1570,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1570 = L4_loadrh_ap
  { 1571,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x540000008024ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1571 = L4_loadrh_rr
  { 1572,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x5000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1572 = L4_loadrh_ur
  { 1573,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x6800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1573 = L4_loadri_ap
  { 1574,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x740000008024ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1574 = L4_loadri_rr
  { 1575,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x7000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1575 = L4_loadri_ur
  { 1576,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1576 = L4_loadrub_ap
  { 1577,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x340000008024ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1577 = L4_loadrub_rr
  { 1578,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x3000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1578 = L4_loadrub_ur
  { 1579,	3,	2,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4800c5808024ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1579 = L4_loadruh_ap
  { 1580,	4,	1,	4,	146,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x540000008024ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1580 = L4_loadruh_rr
  { 1581,	4,	1,	4,	145,	0|(1ULL<<MCID::MayLoad), 0x5000c7808024ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1581 = L4_loadruh_ur
  { 1582,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1582 = L4_or_memopb_io
  { 1583,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1583 = L4_or_memoph_io
  { 1584,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1584 = L4_or_memopw_io
  { 1585,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x2400c5808c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1585 = L4_ploadrbf_abs
  { 1586,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000008c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1586 = L4_ploadrbf_rr
  { 1587,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2400c5809c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1587 = L4_ploadrbfnew_abs
  { 1588,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x340000009c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1588 = L4_ploadrbfnew_rr
  { 1589,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x2400c5808424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1589 = L4_ploadrbt_abs
  { 1590,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000008424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1590 = L4_ploadrbt_rr
  { 1591,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2400c5809424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1591 = L4_ploadrbtnew_abs
  { 1592,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x340000009424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1592 = L4_ploadrbtnew_rr
  { 1593,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x8400c5800c24ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1593 = L4_ploadrdf_abs
  { 1594,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x940000000c24ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1594 = L4_ploadrdf_rr
  { 1595,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x8400c5801c24ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1595 = L4_ploadrdfnew_abs
  { 1596,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x940000001c24ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1596 = L4_ploadrdfnew_rr
  { 1597,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x8400c5800424ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1597 = L4_ploadrdt_abs
  { 1598,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x940000000424ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1598 = L4_ploadrdt_rr
  { 1599,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x8400c5801424ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1599 = L4_ploadrdtnew_abs
  { 1600,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x940000001424ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1600 = L4_ploadrdtnew_rr
  { 1601,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x4400c5808c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1601 = L4_ploadrhf_abs
  { 1602,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000008c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1602 = L4_ploadrhf_rr
  { 1603,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4400c5809c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1603 = L4_ploadrhfnew_abs
  { 1604,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x540000009c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1604 = L4_ploadrhfnew_rr
  { 1605,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x4400c5808424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1605 = L4_ploadrht_abs
  { 1606,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000008424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1606 = L4_ploadrht_rr
  { 1607,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4400c5809424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1607 = L4_ploadrhtnew_abs
  { 1608,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x540000009424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1608 = L4_ploadrhtnew_rr
  { 1609,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x6400c5808c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1609 = L4_ploadrif_abs
  { 1610,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x740000008c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1610 = L4_ploadrif_rr
  { 1611,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x6400c5809c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1611 = L4_ploadrifnew_abs
  { 1612,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x740000009c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1612 = L4_ploadrifnew_rr
  { 1613,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x6400c5808424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1613 = L4_ploadrit_abs
  { 1614,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x740000008424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1614 = L4_ploadrit_rr
  { 1615,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x6400c5809424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1615 = L4_ploadritnew_abs
  { 1616,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x740000009424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1616 = L4_ploadritnew_rr
  { 1617,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x2400c5808c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1617 = L4_ploadrubf_abs
  { 1618,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000008c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1618 = L4_ploadrubf_rr
  { 1619,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2400c5809c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1619 = L4_ploadrubfnew_abs
  { 1620,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x340000009c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1620 = L4_ploadrubfnew_rr
  { 1621,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x2400c5808424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1621 = L4_ploadrubt_abs
  { 1622,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x340000008424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1622 = L4_ploadrubt_rr
  { 1623,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x2400c5809424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1623 = L4_ploadrubtnew_abs
  { 1624,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x340000009424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1624 = L4_ploadrubtnew_rr
  { 1625,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x4400c5808c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1625 = L4_ploadruhf_abs
  { 1626,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000008c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1626 = L4_ploadruhf_rr
  { 1627,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4400c5809c24ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1627 = L4_ploadruhfnew_abs
  { 1628,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x540000009c24ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1628 = L4_ploadruhfnew_rr
  { 1629,	3,	1,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x4400c5808424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1629 = L4_ploadruht_abs
  { 1630,	5,	1,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x540000008424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1630 = L4_ploadruht_rr
  { 1631,	3,	1,	4,	144,	0|(1ULL<<MCID::MayLoad), 0x4400c5809424ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1631 = L4_ploadruhtnew_abs
  { 1632,	5,	1,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x540000009424ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1632 = L4_ploadruhtnew_rr
  { 1633,	2,	1,	4,	28,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x2809000000024ULL, ImplicitList20, ImplicitList37, OperandInfo58 },  // Inst #1633 = L4_return
  { 1634,	3,	1,	4,	23,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000000c24ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1634 = L4_return_f
  { 1635,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001c24ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1635 = L4_return_fnew_pnt
  { 1636,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000001c24ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1636 = L4_return_fnew_pt
  { 1637,	3,	1,	4,	23,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000000424ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1637 = L4_return_t
  { 1638,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001424ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1638 = L4_return_tnew_pnt
  { 1639,	3,	1,	4,	24,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x2809000001424ULL, ImplicitList20, ImplicitList37, OperandInfo59 },  // Inst #1639 = L4_return_tnew_pt
  { 1640,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2c80c2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1640 = L4_sub_memopb_io
  { 1641,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x4c84e2800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1641 = L4_sub_memoph_io
  { 1642,	3,	0,	4,	21,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x6c8902800030ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1642 = L4_sub_memopw_io
  { 1643,	3,	0,	4,	150,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0xa4ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1643 = L6_memcpy
  { 1644,	2,	1,	4,	6,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable), 0x8000ULL, nullptr, nullptr, OperandInfo44 },  // Inst #1644 = LO
  { 1645,	4,	1,	4,	151,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1645 = M2_acci
  { 1646,	4,	1,	4,	151,	0, 0x200000116808025ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1646 = M2_accii
  { 1647,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1647 = M2_cmaci_s0
  { 1648,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1648 = M2_cmacr_s0
  { 1649,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1649 = M2_cmacs_s0
  { 1650,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1650 = M2_cmacs_s1
  { 1651,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1651 = M2_cmacsc_s0
  { 1652,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1652 = M2_cmacsc_s1
  { 1653,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1653 = M2_cmpyi_s0
  { 1654,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1654 = M2_cmpyr_s0
  { 1655,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1655 = M2_cmpyrs_s0
  { 1656,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1656 = M2_cmpyrs_s1
  { 1657,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1657 = M2_cmpyrsc_s0
  { 1658,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1658 = M2_cmpyrsc_s1
  { 1659,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1659 = M2_cmpys_s0
  { 1660,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1660 = M2_cmpys_s1
  { 1661,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1661 = M2_cmpysc_s0
  { 1662,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1662 = M2_cmpysc_s1
  { 1663,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1663 = M2_cnacs_s0
  { 1664,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1664 = M2_cnacs_s1
  { 1665,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1665 = M2_cnacsc_s0
  { 1666,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1666 = M2_cnacsc_s1
  { 1667,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1667 = M2_dpmpyss_acc_s0
  { 1668,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1668 = M2_dpmpyss_nac_s0
  { 1669,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1669 = M2_dpmpyss_rnd_s0
  { 1670,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1670 = M2_dpmpyss_s0
  { 1671,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1671 = M2_dpmpyuu_acc_s0
  { 1672,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1672 = M2_dpmpyuu_nac_s0
  { 1673,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1673 = M2_dpmpyuu_s0
  { 1674,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1674 = M2_hmmpyh_rs1
  { 1675,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1675 = M2_hmmpyh_s1
  { 1676,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1676 = M2_hmmpyl_rs1
  { 1677,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1677 = M2_hmmpyl_s1
  { 1678,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1678 = M2_maci
  { 1679,	4,	1,	4,	152,	0, 0x200000106808025ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1679 = M2_macsin
  { 1680,	4,	1,	4,	152,	0, 0x200000106808025ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1680 = M2_macsip
  { 1681,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1681 = M2_mmachs_rs0
  { 1682,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1682 = M2_mmachs_rs1
  { 1683,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1683 = M2_mmachs_s0
  { 1684,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1684 = M2_mmachs_s1
  { 1685,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1685 = M2_mmacls_rs0
  { 1686,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1686 = M2_mmacls_rs1
  { 1687,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1687 = M2_mmacls_s0
  { 1688,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1688 = M2_mmacls_s1
  { 1689,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1689 = M2_mmacuhs_rs0
  { 1690,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1690 = M2_mmacuhs_rs1
  { 1691,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1691 = M2_mmacuhs_s0
  { 1692,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1692 = M2_mmacuhs_s1
  { 1693,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1693 = M2_mmaculs_rs0
  { 1694,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1694 = M2_mmaculs_rs1
  { 1695,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1695 = M2_mmaculs_s0
  { 1696,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1696 = M2_mmaculs_s1
  { 1697,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1697 = M2_mmpyh_rs0
  { 1698,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1698 = M2_mmpyh_rs1
  { 1699,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1699 = M2_mmpyh_s0
  { 1700,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1700 = M2_mmpyh_s1
  { 1701,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1701 = M2_mmpyl_rs0
  { 1702,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1702 = M2_mmpyl_rs1
  { 1703,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1703 = M2_mmpyl_s0
  { 1704,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1704 = M2_mmpyl_s1
  { 1705,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1705 = M2_mmpyuh_rs0
  { 1706,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1706 = M2_mmpyuh_rs1
  { 1707,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1707 = M2_mmpyuh_s0
  { 1708,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1708 = M2_mmpyuh_s1
  { 1709,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1709 = M2_mmpyul_rs0
  { 1710,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1710 = M2_mmpyul_rs1
  { 1711,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1711 = M2_mmpyul_s0
  { 1712,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1712 = M2_mmpyul_s1
  { 1713,	4,	1,	4,	103,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1713 = M2_mnaci
  { 1714,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1714 = M2_mpy_acc_hh_s0
  { 1715,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1715 = M2_mpy_acc_hh_s1
  { 1716,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1716 = M2_mpy_acc_hl_s0
  { 1717,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1717 = M2_mpy_acc_hl_s1
  { 1718,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1718 = M2_mpy_acc_lh_s0
  { 1719,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1719 = M2_mpy_acc_lh_s1
  { 1720,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1720 = M2_mpy_acc_ll_s0
  { 1721,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1721 = M2_mpy_acc_ll_s1
  { 1722,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1722 = M2_mpy_acc_sat_hh_s0
  { 1723,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1723 = M2_mpy_acc_sat_hh_s1
  { 1724,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1724 = M2_mpy_acc_sat_hl_s0
  { 1725,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1725 = M2_mpy_acc_sat_hl_s1
  { 1726,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1726 = M2_mpy_acc_sat_lh_s0
  { 1727,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1727 = M2_mpy_acc_sat_lh_s1
  { 1728,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1728 = M2_mpy_acc_sat_ll_s0
  { 1729,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1729 = M2_mpy_acc_sat_ll_s1
  { 1730,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1730 = M2_mpy_hh_s0
  { 1731,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1731 = M2_mpy_hh_s1
  { 1732,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1732 = M2_mpy_hl_s0
  { 1733,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1733 = M2_mpy_hl_s1
  { 1734,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1734 = M2_mpy_lh_s0
  { 1735,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1735 = M2_mpy_lh_s1
  { 1736,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1736 = M2_mpy_ll_s0
  { 1737,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1737 = M2_mpy_ll_s1
  { 1738,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1738 = M2_mpy_nac_hh_s0
  { 1739,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1739 = M2_mpy_nac_hh_s1
  { 1740,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1740 = M2_mpy_nac_hl_s0
  { 1741,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1741 = M2_mpy_nac_hl_s1
  { 1742,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1742 = M2_mpy_nac_lh_s0
  { 1743,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1743 = M2_mpy_nac_lh_s1
  { 1744,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1744 = M2_mpy_nac_ll_s0
  { 1745,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1745 = M2_mpy_nac_ll_s1
  { 1746,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1746 = M2_mpy_nac_sat_hh_s0
  { 1747,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1747 = M2_mpy_nac_sat_hh_s1
  { 1748,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1748 = M2_mpy_nac_sat_hl_s0
  { 1749,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1749 = M2_mpy_nac_sat_hl_s1
  { 1750,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1750 = M2_mpy_nac_sat_lh_s0
  { 1751,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1751 = M2_mpy_nac_sat_lh_s1
  { 1752,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1752 = M2_mpy_nac_sat_ll_s0
  { 1753,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1753 = M2_mpy_nac_sat_ll_s1
  { 1754,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1754 = M2_mpy_rnd_hh_s0
  { 1755,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1755 = M2_mpy_rnd_hh_s1
  { 1756,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1756 = M2_mpy_rnd_hl_s0
  { 1757,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1757 = M2_mpy_rnd_hl_s1
  { 1758,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1758 = M2_mpy_rnd_lh_s0
  { 1759,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1759 = M2_mpy_rnd_lh_s1
  { 1760,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1760 = M2_mpy_rnd_ll_s0
  { 1761,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1761 = M2_mpy_rnd_ll_s1
  { 1762,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1762 = M2_mpy_sat_hh_s0
  { 1763,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1763 = M2_mpy_sat_hh_s1
  { 1764,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1764 = M2_mpy_sat_hl_s0
  { 1765,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1765 = M2_mpy_sat_hl_s1
  { 1766,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1766 = M2_mpy_sat_lh_s0
  { 1767,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1767 = M2_mpy_sat_lh_s1
  { 1768,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1768 = M2_mpy_sat_ll_s0
  { 1769,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1769 = M2_mpy_sat_ll_s1
  { 1770,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1770 = M2_mpy_sat_rnd_hh_s0
  { 1771,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1771 = M2_mpy_sat_rnd_hh_s1
  { 1772,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1772 = M2_mpy_sat_rnd_hl_s0
  { 1773,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1773 = M2_mpy_sat_rnd_hl_s1
  { 1774,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1774 = M2_mpy_sat_rnd_lh_s0
  { 1775,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1775 = M2_mpy_sat_rnd_lh_s1
  { 1776,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1776 = M2_mpy_sat_rnd_ll_s0
  { 1777,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1777 = M2_mpy_sat_rnd_ll_s1
  { 1778,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1778 = M2_mpy_up
  { 1779,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1779 = M2_mpy_up_s1
  { 1780,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1780 = M2_mpy_up_s1_sat
  { 1781,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1781 = M2_mpyd_acc_hh_s0
  { 1782,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1782 = M2_mpyd_acc_hh_s1
  { 1783,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1783 = M2_mpyd_acc_hl_s0
  { 1784,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1784 = M2_mpyd_acc_hl_s1
  { 1785,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1785 = M2_mpyd_acc_lh_s0
  { 1786,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1786 = M2_mpyd_acc_lh_s1
  { 1787,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1787 = M2_mpyd_acc_ll_s0
  { 1788,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1788 = M2_mpyd_acc_ll_s1
  { 1789,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1789 = M2_mpyd_hh_s0
  { 1790,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1790 = M2_mpyd_hh_s1
  { 1791,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1791 = M2_mpyd_hl_s0
  { 1792,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1792 = M2_mpyd_hl_s1
  { 1793,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1793 = M2_mpyd_lh_s0
  { 1794,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1794 = M2_mpyd_lh_s1
  { 1795,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1795 = M2_mpyd_ll_s0
  { 1796,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1796 = M2_mpyd_ll_s1
  { 1797,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1797 = M2_mpyd_nac_hh_s0
  { 1798,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1798 = M2_mpyd_nac_hh_s1
  { 1799,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1799 = M2_mpyd_nac_hl_s0
  { 1800,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1800 = M2_mpyd_nac_hl_s1
  { 1801,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1801 = M2_mpyd_nac_lh_s0
  { 1802,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1802 = M2_mpyd_nac_lh_s1
  { 1803,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1803 = M2_mpyd_nac_ll_s0
  { 1804,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1804 = M2_mpyd_nac_ll_s1
  { 1805,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1805 = M2_mpyd_rnd_hh_s0
  { 1806,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1806 = M2_mpyd_rnd_hh_s1
  { 1807,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1807 = M2_mpyd_rnd_hl_s0
  { 1808,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1808 = M2_mpyd_rnd_hl_s1
  { 1809,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1809 = M2_mpyd_rnd_lh_s0
  { 1810,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1810 = M2_mpyd_rnd_lh_s1
  { 1811,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1811 = M2_mpyd_rnd_ll_s0
  { 1812,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1812 = M2_mpyd_rnd_ll_s1
  { 1813,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1813 = M2_mpyi
  { 1814,	3,	1,	4,	30,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1814 = M2_mpysin
  { 1815,	3,	1,	4,	30,	0, 0x200000104808025ULL, nullptr, nullptr, OperandInfo62 },  // Inst #1815 = M2_mpysip
  { 1816,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1816 = M2_mpysu_up
  { 1817,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1817 = M2_mpyu_acc_hh_s0
  { 1818,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1818 = M2_mpyu_acc_hh_s1
  { 1819,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1819 = M2_mpyu_acc_hl_s0
  { 1820,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1820 = M2_mpyu_acc_hl_s1
  { 1821,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1821 = M2_mpyu_acc_lh_s0
  { 1822,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1822 = M2_mpyu_acc_lh_s1
  { 1823,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1823 = M2_mpyu_acc_ll_s0
  { 1824,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1824 = M2_mpyu_acc_ll_s1
  { 1825,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1825 = M2_mpyu_hh_s0
  { 1826,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1826 = M2_mpyu_hh_s1
  { 1827,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1827 = M2_mpyu_hl_s0
  { 1828,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1828 = M2_mpyu_hl_s1
  { 1829,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1829 = M2_mpyu_lh_s0
  { 1830,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1830 = M2_mpyu_lh_s1
  { 1831,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1831 = M2_mpyu_ll_s0
  { 1832,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1832 = M2_mpyu_ll_s1
  { 1833,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1833 = M2_mpyu_nac_hh_s0
  { 1834,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1834 = M2_mpyu_nac_hh_s1
  { 1835,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1835 = M2_mpyu_nac_hl_s0
  { 1836,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1836 = M2_mpyu_nac_hl_s1
  { 1837,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1837 = M2_mpyu_nac_lh_s0
  { 1838,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1838 = M2_mpyu_nac_lh_s1
  { 1839,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1839 = M2_mpyu_nac_ll_s0
  { 1840,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1840 = M2_mpyu_nac_ll_s1
  { 1841,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo63 },  // Inst #1841 = M2_mpyu_up
  { 1842,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1842 = M2_mpyud_acc_hh_s0
  { 1843,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1843 = M2_mpyud_acc_hh_s1
  { 1844,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1844 = M2_mpyud_acc_hl_s0
  { 1845,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1845 = M2_mpyud_acc_hl_s1
  { 1846,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1846 = M2_mpyud_acc_lh_s0
  { 1847,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1847 = M2_mpyud_acc_lh_s1
  { 1848,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1848 = M2_mpyud_acc_ll_s0
  { 1849,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1849 = M2_mpyud_acc_ll_s1
  { 1850,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1850 = M2_mpyud_hh_s0
  { 1851,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1851 = M2_mpyud_hh_s1
  { 1852,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1852 = M2_mpyud_hl_s0
  { 1853,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1853 = M2_mpyud_hl_s1
  { 1854,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1854 = M2_mpyud_lh_s0
  { 1855,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1855 = M2_mpyud_lh_s1
  { 1856,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1856 = M2_mpyud_ll_s0
  { 1857,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1857 = M2_mpyud_ll_s1
  { 1858,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1858 = M2_mpyud_nac_hh_s0
  { 1859,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1859 = M2_mpyud_nac_hh_s1
  { 1860,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1860 = M2_mpyud_nac_hl_s0
  { 1861,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1861 = M2_mpyud_nac_hl_s1
  { 1862,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1862 = M2_mpyud_nac_lh_s0
  { 1863,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1863 = M2_mpyud_nac_lh_s1
  { 1864,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1864 = M2_mpyud_nac_ll_s0
  { 1865,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1865 = M2_mpyud_nac_ll_s1
  { 1866,	4,	1,	4,	151,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1866 = M2_nacci
  { 1867,	4,	1,	4,	151,	0, 0x200000116808025ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1867 = M2_naccii
  { 1868,	4,	1,	4,	151,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1868 = M2_subacc
  { 1869,	3,	1,	4,	47,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1869 = M2_vabsdiffh
  { 1870,	3,	1,	4,	47,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1870 = M2_vabsdiffw
  { 1871,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1871 = M2_vcmac_s0_sat_i
  { 1872,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1872 = M2_vcmac_s0_sat_r
  { 1873,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1873 = M2_vcmpy_s0_sat_i
  { 1874,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1874 = M2_vcmpy_s0_sat_r
  { 1875,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1875 = M2_vcmpy_s1_sat_i
  { 1876,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1876 = M2_vcmpy_s1_sat_r
  { 1877,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1877 = M2_vdmacs_s0
  { 1878,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1878 = M2_vdmacs_s1
  { 1879,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1879 = M2_vdmpyrs_s0
  { 1880,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1880 = M2_vdmpyrs_s1
  { 1881,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1881 = M2_vdmpys_s0
  { 1882,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1882 = M2_vdmpys_s1
  { 1883,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1883 = M2_vmac2
  { 1884,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1884 = M2_vmac2es
  { 1885,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1885 = M2_vmac2es_s0
  { 1886,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1886 = M2_vmac2es_s1
  { 1887,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1887 = M2_vmac2s_s0
  { 1888,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1888 = M2_vmac2s_s1
  { 1889,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1889 = M2_vmac2su_s0
  { 1890,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo205 },  // Inst #1890 = M2_vmac2su_s1
  { 1891,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1891 = M2_vmpy2es_s0
  { 1892,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1892 = M2_vmpy2es_s1
  { 1893,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1893 = M2_vmpy2s_s0
  { 1894,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1894 = M2_vmpy2s_s0pack
  { 1895,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1895 = M2_vmpy2s_s1
  { 1896,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #1896 = M2_vmpy2s_s1pack
  { 1897,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1897 = M2_vmpy2su_s0
  { 1898,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo149 },  // Inst #1898 = M2_vmpy2su_s1
  { 1899,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1899 = M2_vraddh
  { 1900,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1900 = M2_vradduh
  { 1901,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1901 = M2_vrcmaci_s0
  { 1902,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1902 = M2_vrcmaci_s0c
  { 1903,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1903 = M2_vrcmacr_s0
  { 1904,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1904 = M2_vrcmacr_s0c
  { 1905,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1905 = M2_vrcmpyi_s0
  { 1906,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1906 = M2_vrcmpyi_s0c
  { 1907,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1907 = M2_vrcmpyr_s0
  { 1908,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1908 = M2_vrcmpyr_s0c
  { 1909,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1909 = M2_vrcmpys_acc_s1_h
  { 1910,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1910 = M2_vrcmpys_acc_s1_l
  { 1911,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1911 = M2_vrcmpys_s1_h
  { 1912,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1912 = M2_vrcmpys_s1_l
  { 1913,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1913 = M2_vrcmpys_s1rp_h
  { 1914,	3,	1,	4,	31,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1914 = M2_vrcmpys_s1rp_l
  { 1915,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1915 = M2_vrmac_s0
  { 1916,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1916 = M2_vrmpy_s0
  { 1917,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1917 = M2_xor_xacc
  { 1918,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1918 = M4_and_and
  { 1919,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1919 = M4_and_andn
  { 1920,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1920 = M4_and_or
  { 1921,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1921 = M4_and_xor
  { 1922,	3,	1,	4,	31,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1922 = M4_cmpyi_wh
  { 1923,	3,	1,	4,	31,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1923 = M4_cmpyi_whc
  { 1924,	3,	1,	4,	31,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1924 = M4_cmpyr_wh
  { 1925,	3,	1,	4,	31,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo66 },  // Inst #1925 = M4_cmpyr_whc
  { 1926,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1926 = M4_mac_up_s1_sat
  { 1927,	4,	1,	4,	152,	0, 0x2000000c2808003ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1927 = M4_mpyri_addi
  { 1928,	4,	1,	4,	152,	0, 0x2000000c6808003ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1928 = M4_mpyri_addr
  { 1929,	4,	1,	4,	154,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1929 = M4_mpyri_addr_u2
  { 1930,	4,	1,	4,	32,	0, 0x2000000c2808003ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1930 = M4_mpyrr_addi
  { 1931,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1931 = M4_mpyrr_addr
  { 1932,	4,	1,	4,	32,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo172 },  // Inst #1932 = M4_nac_up_s1_sat
  { 1933,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1933 = M4_or_and
  { 1934,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1934 = M4_or_andn
  { 1935,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1935 = M4_or_or
  { 1936,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1936 = M4_or_xor
  { 1937,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1937 = M4_pmpyw
  { 1938,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1938 = M4_pmpyw_acc
  { 1939,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1939 = M4_vpmpyh
  { 1940,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1940 = M4_vpmpyh_acc
  { 1941,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1941 = M4_vrmpyeh_acc_s0
  { 1942,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1942 = M4_vrmpyeh_acc_s1
  { 1943,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1943 = M4_vrmpyeh_s0
  { 1944,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1944 = M4_vrmpyeh_s1
  { 1945,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1945 = M4_vrmpyoh_acc_s0
  { 1946,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1946 = M4_vrmpyoh_acc_s1
  { 1947,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1947 = M4_vrmpyoh_s0
  { 1948,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1948 = M4_vrmpyoh_s1
  { 1949,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1949 = M4_xor_and
  { 1950,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1950 = M4_xor_andn
  { 1951,	4,	1,	4,	153,	0, 0x200000000008025ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1951 = M4_xor_or
  { 1952,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo67 },  // Inst #1952 = M4_xor_xacc
  { 1953,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo67 },  // Inst #1953 = M5_vdmacbsu
  { 1954,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #1954 = M5_vdmpybsu
  { 1955,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1955 = M5_vmacbsu
  { 1956,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1956 = M5_vmacbuu
  { 1957,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1957 = M5_vmpybsu
  { 1958,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1958 = M5_vmpybuu
  { 1959,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1959 = M5_vrmacbsu
  { 1960,	4,	1,	4,	32,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1960 = M5_vrmacbuu
  { 1961,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1961 = M5_vrmpybsu
  { 1962,	3,	1,	4,	31,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1962 = M5_vrmpybuu
  { 1963,	3,	1,	4,	92,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1963 = M6_vabsdiffb
  { 1964,	3,	1,	4,	92,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1964 = M6_vabsdiffub
  { 1965,	3,	1,	4,	33,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1965 = M7_dcmpyiw
  { 1966,	4,	1,	4,	34,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1966 = M7_dcmpyiw_acc
  { 1967,	3,	1,	4,	33,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1967 = M7_dcmpyiwc
  { 1968,	4,	1,	4,	34,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1968 = M7_dcmpyiwc_acc
  { 1969,	3,	1,	4,	33,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1969 = M7_dcmpyrw
  { 1970,	4,	1,	4,	34,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1970 = M7_dcmpyrw_acc
  { 1971,	3,	1,	4,	33,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1971 = M7_dcmpyrwc
  { 1972,	4,	1,	4,	34,	0, 0x200000000000025ULL, nullptr, nullptr, OperandInfo67 },  // Inst #1972 = M7_dcmpyrwc_acc
  { 1973,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1973 = M7_wcmpyiw
  { 1974,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1974 = M7_wcmpyiw_rnd
  { 1975,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1975 = M7_wcmpyiwc
  { 1976,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1976 = M7_wcmpyiwc_rnd
  { 1977,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1977 = M7_wcmpyrw
  { 1978,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1978 = M7_wcmpyrw_rnd
  { 1979,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1979 = M7_wcmpyrwc
  { 1980,	3,	1,	4,	33,	0, 0x200000000008025ULL, nullptr, ImplicitList22, OperandInfo161 },  // Inst #1980 = M7_wcmpyrwc_rnd
  { 1981,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, nullptr, ImplicitList38, OperandInfo2 },  // Inst #1981 = PS_call_stk
  { 1982,	1,	0,	4,	114,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x1000000823ULL, nullptr, nullptr, OperandInfo79 },  // Inst #1982 = PS_callr_nr
  { 1983,	1,	0,	4,	40,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x1000000023ULL, nullptr, ImplicitList19, OperandInfo79 },  // Inst #1983 = PS_jmpret
  { 1984,	2,	0,	4,	16,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1984 = PS_jmpretf
  { 1985,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000001c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1985 = PS_jmpretfnew
  { 1986,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x2001000001c23ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1986 = PS_jmpretfnewpt
  { 1987,	2,	0,	4,	16,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000000423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1987 = PS_jmprett
  { 1988,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x1000001423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1988 = PS_jmprettnew
  { 1989,	2,	0,	4,	119,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x2001000001423ULL, nullptr, ImplicitList19, OperandInfo56 },  // Inst #1989 = PS_jmprettnewpt
  { 1990,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x24020300802fULL, nullptr, nullptr, OperandInfo44 },  // Inst #1990 = PS_loadrbabs
  { 1991,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x840e6300002fULL, nullptr, nullptr, OperandInfo49 },  // Inst #1991 = PS_loadrdabs
  { 1992,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x44062300802fULL, nullptr, nullptr, OperandInfo44 },  // Inst #1992 = PS_loadrhabs
  { 1993,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x640a4300802fULL, nullptr, nullptr, OperandInfo44 },  // Inst #1993 = PS_loadriabs
  { 1994,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x24020300802fULL, nullptr, nullptr, OperandInfo44 },  // Inst #1994 = PS_loadrubabs
  { 1995,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x44062300802fULL, nullptr, nullptr, OperandInfo44 },  // Inst #1995 = PS_loadruhabs
  { 1996,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x24020108002fULL, nullptr, nullptr, OperandInfo178 },  // Inst #1996 = PS_storerbabs
  { 1997,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x24820111402fULL, nullptr, nullptr, OperandInfo178 },  // Inst #1997 = PS_storerbnewabs
  { 1998,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x840e6100002fULL, nullptr, nullptr, OperandInfo210 },  // Inst #1998 = PS_storerdabs
  { 1999,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x44062100002fULL, nullptr, nullptr, OperandInfo178 },  // Inst #1999 = PS_storerfabs
  { 2000,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x44062108002fULL, nullptr, nullptr, OperandInfo178 },  // Inst #2000 = PS_storerhabs
  { 2001,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x44862111402fULL, nullptr, nullptr, OperandInfo178 },  // Inst #2001 = PS_storerhnewabs
  { 2002,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x640a4108002fULL, nullptr, nullptr, OperandInfo178 },  // Inst #2002 = PS_storeriabs
  { 2003,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x648a4111402fULL, nullptr, nullptr, OperandInfo178 },  // Inst #2003 = PS_storerinewabs
  { 2004,	1,	0,	4,	17,	0, 0x23ULL, nullptr, nullptr, OperandInfo2 },  // Inst #2004 = PS_trap1
  { 2005,	1,	0,	4,	157,	0|(1ULL<<MCID::MayStore), 0xa9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #2005 = R6_release_at_vi
  { 2006,	1,	0,	4,	157,	0|(1ULL<<MCID::MayStore), 0xa9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #2006 = R6_release_st_vi
  { 2007,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2007 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4
  { 2008,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2008 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT
  { 2009,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2009 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC
  { 2010,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2010 = RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC
  { 2011,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb10800023ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2011 = RESTORE_DEALLOC_RET_JMP_V4
  { 2012,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb11800023ULL, nullptr, ImplicitList39, OperandInfo2 },  // Inst #2012 = RESTORE_DEALLOC_RET_JMP_V4_EXT
  { 2013,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb11800023ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2013 = RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC
  { 2014,	1,	0,	4,	116,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0xb10800023ULL, nullptr, ImplicitList40, OperandInfo2 },  // Inst #2014 = RESTORE_DEALLOC_RET_JMP_V4_PIC
  { 2015,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo68 },  // Inst #2015 = S2_addasl_rrri
  { 2016,	3,	1,	4,	57,	0|(1ULL<<MCID::MayStore), 0x8c0000008029ULL, ImplicitList21, ImplicitList17, OperandInfo145 },  // Inst #2016 = S2_allocframe
  { 2017,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2017 = S2_asl_i_p
  { 2018,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2018 = S2_asl_i_p_acc
  { 2019,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2019 = S2_asl_i_p_and
  { 2020,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2020 = S2_asl_i_p_nac
  { 2021,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2021 = S2_asl_i_p_or
  { 2022,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2022 = S2_asl_i_p_xacc
  { 2023,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2023 = S2_asl_i_r
  { 2024,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2024 = S2_asl_i_r_acc
  { 2025,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2025 = S2_asl_i_r_and
  { 2026,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2026 = S2_asl_i_r_nac
  { 2027,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2027 = S2_asl_i_r_or
  { 2028,	3,	1,	4,	73,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo62 },  // Inst #2028 = S2_asl_i_r_sat
  { 2029,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2029 = S2_asl_i_r_xacc
  { 2030,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2030 = S2_asl_i_vh
  { 2031,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2031 = S2_asl_i_vw
  { 2032,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2032 = S2_asl_r_p
  { 2033,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2033 = S2_asl_r_p_acc
  { 2034,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2034 = S2_asl_r_p_and
  { 2035,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2035 = S2_asl_r_p_nac
  { 2036,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2036 = S2_asl_r_p_or
  { 2037,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2037 = S2_asl_r_p_xor
  { 2038,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2038 = S2_asl_r_r
  { 2039,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2039 = S2_asl_r_r_acc
  { 2040,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2040 = S2_asl_r_r_and
  { 2041,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2041 = S2_asl_r_r_nac
  { 2042,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2042 = S2_asl_r_r_or
  { 2043,	3,	1,	4,	73,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #2043 = S2_asl_r_r_sat
  { 2044,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2044 = S2_asl_r_vh
  { 2045,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2045 = S2_asl_r_vw
  { 2046,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2046 = S2_asr_i_p
  { 2047,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2047 = S2_asr_i_p_acc
  { 2048,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2048 = S2_asr_i_p_and
  { 2049,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2049 = S2_asr_i_p_nac
  { 2050,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2050 = S2_asr_i_p_or
  { 2051,	3,	1,	4,	47,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2051 = S2_asr_i_p_rnd
  { 2052,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2052 = S2_asr_i_r
  { 2053,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2053 = S2_asr_i_r_acc
  { 2054,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2054 = S2_asr_i_r_and
  { 2055,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2055 = S2_asr_i_r_nac
  { 2056,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2056 = S2_asr_i_r_or
  { 2057,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2057 = S2_asr_i_r_rnd
  { 2058,	3,	1,	4,	74,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo92 },  // Inst #2058 = S2_asr_i_svw_trun
  { 2059,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2059 = S2_asr_i_vh
  { 2060,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2060 = S2_asr_i_vw
  { 2061,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2061 = S2_asr_r_p
  { 2062,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2062 = S2_asr_r_p_acc
  { 2063,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2063 = S2_asr_r_p_and
  { 2064,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2064 = S2_asr_r_p_nac
  { 2065,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2065 = S2_asr_r_p_or
  { 2066,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2066 = S2_asr_r_p_xor
  { 2067,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2067 = S2_asr_r_r
  { 2068,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2068 = S2_asr_r_r_acc
  { 2069,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2069 = S2_asr_r_r_and
  { 2070,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2070 = S2_asr_r_r_nac
  { 2071,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2071 = S2_asr_r_r_or
  { 2072,	3,	1,	4,	73,	0, 0x20000000000802cULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #2072 = S2_asr_r_r_sat
  { 2073,	3,	1,	4,	74,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo66 },  // Inst #2073 = S2_asr_r_svw_trun
  { 2074,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2074 = S2_asr_r_vh
  { 2075,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2075 = S2_asr_r_vw
  { 2076,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2076 = S2_brev
  { 2077,	2,	1,	4,	158,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #2077 = S2_brevp
  { 2078,	3,	1,	4,	159,	0, 0x20000000000202cULL, nullptr, ImplicitList32, OperandInfo50 },  // Inst #2078 = S2_cabacdecbin
  { 2079,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2079 = S2_cl0
  { 2080,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2080 = S2_cl0p
  { 2081,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2081 = S2_cl1
  { 2082,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2082 = S2_cl1p
  { 2083,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2083 = S2_clb
  { 2084,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2084 = S2_clbnorm
  { 2085,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2085 = S2_clbp
  { 2086,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2086 = S2_clrbit_i
  { 2087,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2087 = S2_clrbit_r
  { 2088,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2088 = S2_ct0
  { 2089,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2089 = S2_ct0p
  { 2090,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2090 = S2_ct1
  { 2091,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2091 = S2_ct1p
  { 2092,	2,	1,	4,	158,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #2092 = S2_deinterleave
  { 2093,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo197 },  // Inst #2093 = S2_extractu
  { 2094,	3,	1,	4,	160,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo212 },  // Inst #2094 = S2_extractu_rp
  { 2095,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo213 },  // Inst #2095 = S2_extractup
  { 2096,	3,	1,	4,	160,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2096 = S2_extractup_rp
  { 2097,	5,	1,	4,	52,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #2097 = S2_insert
  { 2098,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo214 },  // Inst #2098 = S2_insert_rp
  { 2099,	5,	1,	4,	52,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo215 },  // Inst #2099 = S2_insertp
  { 2100,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo67 },  // Inst #2100 = S2_insertp_rp
  { 2101,	2,	1,	4,	158,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo47 },  // Inst #2101 = S2_interleave
  { 2102,	3,	1,	4,	160,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2102 = S2_lfsp
  { 2103,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2103 = S2_lsl_r_p
  { 2104,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2104 = S2_lsl_r_p_acc
  { 2105,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2105 = S2_lsl_r_p_and
  { 2106,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2106 = S2_lsl_r_p_nac
  { 2107,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2107 = S2_lsl_r_p_or
  { 2108,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2108 = S2_lsl_r_p_xor
  { 2109,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2109 = S2_lsl_r_r
  { 2110,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2110 = S2_lsl_r_r_acc
  { 2111,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2111 = S2_lsl_r_r_and
  { 2112,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2112 = S2_lsl_r_r_nac
  { 2113,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2113 = S2_lsl_r_r_or
  { 2114,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2114 = S2_lsl_r_vh
  { 2115,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2115 = S2_lsl_r_vw
  { 2116,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2116 = S2_lsr_i_p
  { 2117,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2117 = S2_lsr_i_p_acc
  { 2118,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2118 = S2_lsr_i_p_and
  { 2119,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2119 = S2_lsr_i_p_nac
  { 2120,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2120 = S2_lsr_i_p_or
  { 2121,	4,	1,	4,	153,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2121 = S2_lsr_i_p_xacc
  { 2122,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2122 = S2_lsr_i_r
  { 2123,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2123 = S2_lsr_i_r_acc
  { 2124,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2124 = S2_lsr_i_r_and
  { 2125,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2125 = S2_lsr_i_r_nac
  { 2126,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2126 = S2_lsr_i_r_or
  { 2127,	4,	1,	4,	153,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2127 = S2_lsr_i_r_xacc
  { 2128,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2128 = S2_lsr_i_vh
  { 2129,	3,	1,	4,	8,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2129 = S2_lsr_i_vw
  { 2130,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2130 = S2_lsr_r_p
  { 2131,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2131 = S2_lsr_r_p_acc
  { 2132,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2132 = S2_lsr_r_p_and
  { 2133,	4,	1,	4,	151,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2133 = S2_lsr_r_p_nac
  { 2134,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2134 = S2_lsr_r_p_or
  { 2135,	4,	1,	4,	153,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2135 = S2_lsr_r_p_xor
  { 2136,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2136 = S2_lsr_r_r
  { 2137,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2137 = S2_lsr_r_r_acc
  { 2138,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2138 = S2_lsr_r_r_and
  { 2139,	4,	1,	4,	151,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2139 = S2_lsr_r_r_nac
  { 2140,	4,	1,	4,	153,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo172 },  // Inst #2140 = S2_lsr_r_r_or
  { 2141,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2141 = S2_lsr_r_vh
  { 2142,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo65 },  // Inst #2142 = S2_lsr_r_vw
  { 2143,	3,	1,	4,	161,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo148 },  // Inst #2143 = S2_mask
  { 2144,	3,	1,	4,	6,	0, 0x1ULL, nullptr, nullptr, OperandInfo149 },  // Inst #2144 = S2_packhl
  { 2145,	3,	1,	4,	160,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo161 },  // Inst #2145 = S2_parityp
  { 2146,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x2c00c4880c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2146 = S2_pstorerbf_io
  { 2147,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x380000080c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2147 = S2_pstorerbf_pi
  { 2148,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x380000081c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2148 = S2_pstorerbfnew_pi
  { 2149,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x2c80c4934c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2149 = S2_pstorerbnewf_io
  { 2150,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x388000144c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2150 = S2_pstorerbnewf_pi
  { 2151,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x388000145c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2151 = S2_pstorerbnewfnew_pi
  { 2152,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x2c80c493442fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2152 = S2_pstorerbnewt_io
  { 2153,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x388000144429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2153 = S2_pstorerbnewt_pi
  { 2154,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x388000145429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2154 = S2_pstorerbnewtnew_pi
  { 2155,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x2c00c488042fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2155 = S2_pstorerbt_io
  { 2156,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x380000080429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2156 = S2_pstorerbt_pi
  { 2157,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x380000081429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2157 = S2_pstorerbtnew_pi
  { 2158,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x8c0d24800c2fULL, nullptr, nullptr, OperandInfo218 },  // Inst #2158 = S2_pstorerdf_io
  { 2159,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x980000000c29ULL, nullptr, nullptr, OperandInfo219 },  // Inst #2159 = S2_pstorerdf_pi
  { 2160,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x980000001c29ULL, nullptr, nullptr, OperandInfo219 },  // Inst #2160 = S2_pstorerdfnew_pi
  { 2161,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x8c0d2480042fULL, nullptr, nullptr, OperandInfo218 },  // Inst #2161 = S2_pstorerdt_io
  { 2162,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x980000000429ULL, nullptr, nullptr, OperandInfo219 },  // Inst #2162 = S2_pstorerdt_pi
  { 2163,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x980000001429ULL, nullptr, nullptr, OperandInfo219 },  // Inst #2163 = S2_pstorerdtnew_pi
  { 2164,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4800c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2164 = S2_pstorerff_io
  { 2165,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x580000000c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2165 = S2_pstorerff_pi
  { 2166,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x580000001c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2166 = S2_pstorerffnew_pi
  { 2167,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e480042fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2167 = S2_pstorerft_io
  { 2168,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x580000000429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2168 = S2_pstorerft_pi
  { 2169,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x580000001429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2169 = S2_pstorerftnew_pi
  { 2170,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e4880c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2170 = S2_pstorerhf_io
  { 2171,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x580000080c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2171 = S2_pstorerhf_pi
  { 2172,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x580000081c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2172 = S2_pstorerhfnew_pi
  { 2173,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x4c84e4934c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2173 = S2_pstorerhnewf_io
  { 2174,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x588000144c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2174 = S2_pstorerhnewf_pi
  { 2175,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x588000145c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2175 = S2_pstorerhnewfnew_pi
  { 2176,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x4c84e493442fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2176 = S2_pstorerhnewt_io
  { 2177,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x588000144429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2177 = S2_pstorerhnewt_pi
  { 2178,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x588000145429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2178 = S2_pstorerhnewtnew_pi
  { 2179,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x4c04e488042fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2179 = S2_pstorerht_io
  { 2180,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x580000080429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2180 = S2_pstorerht_pi
  { 2181,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x580000081429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2181 = S2_pstorerhtnew_pi
  { 2182,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x6c0904880c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2182 = S2_pstorerif_io
  { 2183,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x780000080c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2183 = S2_pstorerif_pi
  { 2184,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x780000081c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2184 = S2_pstorerifnew_pi
  { 2185,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x6c8904934c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2185 = S2_pstorerinewf_io
  { 2186,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x788000144c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2186 = S2_pstorerinewf_pi
  { 2187,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x788000145c29ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2187 = S2_pstorerinewfnew_pi
  { 2188,	4,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x6c890493442fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2188 = S2_pstorerinewt_io
  { 2189,	5,	1,	4,	164,	0|(1ULL<<MCID::MayStore), 0x788000144429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2189 = S2_pstorerinewt_pi
  { 2190,	5,	1,	4,	165,	0|(1ULL<<MCID::MayStore), 0x788000145429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2190 = S2_pstorerinewtnew_pi
  { 2191,	4,	0,	4,	48,	0|(1ULL<<MCID::MayStore), 0x6c090488042fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2191 = S2_pstorerit_io
  { 2192,	5,	1,	4,	162,	0|(1ULL<<MCID::MayStore), 0x780000080429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2192 = S2_pstorerit_pi
  { 2193,	5,	1,	4,	163,	0|(1ULL<<MCID::MayStore), 0x780000081429ULL, nullptr, nullptr, OperandInfo217 },  // Inst #2193 = S2_pstoreritnew_pi
  { 2194,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2194 = S2_setbit_i
  { 2195,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2195 = S2_setbit_r
  { 2196,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2196 = S2_shuffeb
  { 2197,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2197 = S2_shuffeh
  { 2198,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2198 = S2_shuffob
  { 2199,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2199 = S2_shuffoh
  { 2200,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c0172880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2200 = S2_storerb_io
  { 2201,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x380000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2201 = S2_storerb_pbr
  { 2202,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x380000080029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2202 = S2_storerb_pci
  { 2203,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x380000080029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2203 = S2_storerb_pcr
  { 2204,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x380000080029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2204 = S2_storerb_pi
  { 2205,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x380000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2205 = S2_storerb_pr
  { 2206,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x20020008002fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2206 = S2_storerbgp
  { 2207,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c8172924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2207 = S2_storerbnew_io
  { 2208,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x388000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2208 = S2_storerbnew_pbr
  { 2209,	5,	1,	4,	166,	0|(1ULL<<MCID::MayStore), 0x388000144029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2209 = S2_storerbnew_pci
  { 2210,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x388000134029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2210 = S2_storerbnew_pcr
  { 2211,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x3880001b4029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2211 = S2_storerbnew_pi
  { 2212,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x388000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2212 = S2_storerbnew_pr
  { 2213,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x20820011402fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2213 = S2_storerbnewgp
  { 2214,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8c0dd2800029ULL, nullptr, nullptr, OperandInfo147 },  // Inst #2214 = S2_storerd_io
  { 2215,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x980000000029ULL, nullptr, nullptr, OperandInfo223 },  // Inst #2215 = S2_storerd_pbr
  { 2216,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x980000000029ULL, ImplicitList18, nullptr, OperandInfo224 },  // Inst #2216 = S2_storerd_pci
  { 2217,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x980000000029ULL, ImplicitList18, nullptr, OperandInfo223 },  // Inst #2217 = S2_storerd_pcr
  { 2218,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x980000000029ULL, nullptr, nullptr, OperandInfo225 },  // Inst #2218 = S2_storerd_pi
  { 2219,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x980000000029ULL, nullptr, nullptr, OperandInfo223 },  // Inst #2219 = S2_storerd_pr
  { 2220,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x800e6000002fULL, ImplicitList36, nullptr, OperandInfo210 },  // Inst #2220 = S2_storerdgp
  { 2221,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c0592800029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2221 = S2_storerf_io
  { 2222,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000000029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2222 = S2_storerf_pbr
  { 2223,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2223 = S2_storerf_pci
  { 2224,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000000029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2224 = S2_storerf_pcr
  { 2225,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x580000000029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2225 = S2_storerf_pi
  { 2226,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000000029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2226 = S2_storerf_pr
  { 2227,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x40062000002fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2227 = S2_storerfgp
  { 2228,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c0592880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2228 = S2_storerh_io
  { 2229,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2229 = S2_storerh_pbr
  { 2230,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x580000080029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2230 = S2_storerh_pci
  { 2231,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000080029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2231 = S2_storerh_pcr
  { 2232,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x580000080029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2232 = S2_storerh_pi
  { 2233,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x580000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2233 = S2_storerh_pr
  { 2234,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x40062008002fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2234 = S2_storerhgp
  { 2235,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c8592924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2235 = S2_storerhnew_io
  { 2236,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x588000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2236 = S2_storerhnew_pbr
  { 2237,	5,	1,	4,	166,	0|(1ULL<<MCID::MayStore), 0x588000144029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2237 = S2_storerhnew_pci
  { 2238,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x588000134029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2238 = S2_storerhnew_pcr
  { 2239,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x5880001b4029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2239 = S2_storerhnew_pi
  { 2240,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x588000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2240 = S2_storerhnew_pr
  { 2241,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x40862011402fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2241 = S2_storerhnewgp
  { 2242,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c09b2880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2242 = S2_storeri_io
  { 2243,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x780000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2243 = S2_storeri_pbr
  { 2244,	5,	1,	4,	38,	0|(1ULL<<MCID::MayStore), 0x780000080029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2244 = S2_storeri_pci
  { 2245,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x780000080029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2245 = S2_storeri_pcr
  { 2246,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x780000080029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2246 = S2_storeri_pi
  { 2247,	4,	1,	4,	39,	0|(1ULL<<MCID::MayStore), 0x780000080029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2247 = S2_storeri_pr
  { 2248,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x600a4008002fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2248 = S2_storerigp
  { 2249,	3,	0,	4,	51,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c89b2924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2249 = S2_storerinew_io
  { 2250,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x788000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2250 = S2_storerinew_pbr
  { 2251,	5,	1,	4,	166,	0|(1ULL<<MCID::MayStore), 0x788000144029ULL, ImplicitList18, nullptr, OperandInfo221 },  // Inst #2251 = S2_storerinew_pci
  { 2252,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x788000134029ULL, ImplicitList18, nullptr, OperandInfo220 },  // Inst #2252 = S2_storerinew_pcr
  { 2253,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x788000134029ULL, nullptr, nullptr, OperandInfo222 },  // Inst #2253 = S2_storerinew_pi
  { 2254,	4,	1,	4,	53,	0|(1ULL<<MCID::MayStore), 0x788000134029ULL, nullptr, nullptr, OperandInfo220 },  // Inst #2254 = S2_storerinew_pr
  { 2255,	2,	0,	4,	156,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x608a4011402fULL, ImplicitList36, nullptr, OperandInfo178 },  // Inst #2255 = S2_storerinewgp
  { 2256,	3,	1,	4,	167,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x600000002129ULL, nullptr, nullptr, OperandInfo53 },  // Inst #2256 = S2_storew_locked
  { 2257,	2,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x6000000000a9ULL, nullptr, nullptr, OperandInfo45 },  // Inst #2257 = S2_storew_rl_at_vi
  { 2258,	2,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x6000000000a9ULL, nullptr, nullptr, OperandInfo45 },  // Inst #2258 = S2_storew_rl_st_vi
  { 2259,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #2259 = S2_svsathb
  { 2260,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo45 },  // Inst #2260 = S2_svsathub
  { 2261,	5,	1,	4,	52,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #2261 = S2_tableidxb
  { 2262,	5,	1,	4,	52,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #2262 = S2_tableidxd
  { 2263,	5,	1,	4,	52,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #2263 = S2_tableidxh
  { 2264,	5,	1,	4,	52,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo91 },  // Inst #2264 = S2_tableidxw
  { 2265,	3,	1,	4,	8,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2265 = S2_togglebit_i
  { 2266,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo63 },  // Inst #2266 = S2_togglebit_r
  { 2267,	3,	1,	4,	85,	0, 0x2bULL, nullptr, nullptr, OperandInfo52 },  // Inst #2267 = S2_tstbit_i
  { 2268,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #2268 = S2_tstbit_r
  { 2269,	4,	1,	4,	96,	0, 0x2cULL, nullptr, nullptr, OperandInfo226 },  // Inst #2269 = S2_valignib
  { 2270,	4,	1,	4,	96,	0, 0x2cULL, nullptr, nullptr, OperandInfo227 },  // Inst #2270 = S2_valignrb
  { 2271,	3,	1,	4,	73,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo65 },  // Inst #2271 = S2_vcnegh
  { 2272,	3,	1,	4,	47,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo65 },  // Inst #2272 = S2_vcrotate
  { 2273,	4,	1,	4,	32,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo64 },  // Inst #2273 = S2_vrcnegh
  { 2274,	2,	1,	4,	169,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2274 = S2_vrndpackwh
  { 2275,	2,	1,	4,	72,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2275 = S2_vrndpackwhs
  { 2276,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2276 = S2_vsathb
  { 2277,	2,	1,	4,	76,	0, 0x2bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2277 = S2_vsathb_nopack
  { 2278,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2278 = S2_vsathub
  { 2279,	2,	1,	4,	76,	0, 0x2bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2279 = S2_vsathub_nopack
  { 2280,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2280 = S2_vsatwh
  { 2281,	2,	1,	4,	76,	0, 0x2bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2281 = S2_vsatwh_nopack
  { 2282,	2,	1,	4,	76,	0, 0x802bULL, nullptr, ImplicitList22, OperandInfo90 },  // Inst #2282 = S2_vsatwuh
  { 2283,	2,	1,	4,	76,	0, 0x2bULL, nullptr, ImplicitList22, OperandInfo47 },  // Inst #2283 = S2_vsatwuh_nopack
  { 2284,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x802bULL, nullptr, nullptr, OperandInfo45 },  // Inst #2284 = S2_vsplatrb
  { 2285,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2285 = S2_vsplatrh
  { 2286,	4,	1,	4,	96,	0, 0x2cULL, nullptr, nullptr, OperandInfo226 },  // Inst #2286 = S2_vspliceib
  { 2287,	4,	1,	4,	96,	0, 0x2cULL, nullptr, nullptr, OperandInfo227 },  // Inst #2287 = S2_vsplicerb
  { 2288,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2288 = S2_vsxtbh
  { 2289,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2289 = S2_vsxthw
  { 2290,	2,	1,	4,	76,	0, 0x802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2290 = S2_vtrunehb
  { 2291,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2291 = S2_vtrunewh
  { 2292,	2,	1,	4,	76,	0, 0x802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2292 = S2_vtrunohb
  { 2293,	3,	1,	4,	8,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2293 = S2_vtrunowh
  { 2294,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2294 = S2_vzxtbh
  { 2295,	2,	1,	4,	76,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2295 = S2_vzxthw
  { 2296,	4,	1,	4,	151,	0, 0x2000000d6808003ULL, nullptr, nullptr, OperandInfo68 },  // Inst #2296 = S4_addaddi
  { 2297,	4,	1,	4,	151,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2297 = S4_addi_asl_ri
  { 2298,	4,	1,	4,	151,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2298 = S4_addi_lsr_ri
  { 2299,	4,	1,	4,	153,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2299 = S4_andi_asl_ri
  { 2300,	4,	1,	4,	153,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2300 = S4_andi_lsr_ri
  { 2301,	3,	1,	4,	160,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2301 = S4_clbaddi
  { 2302,	3,	1,	4,	160,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo92 },  // Inst #2302 = S4_clbpaddi
  { 2303,	2,	1,	4,	158,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2303 = S4_clbpnorm
  { 2304,	4,	1,	4,	151,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo197 },  // Inst #2304 = S4_extract
  { 2305,	3,	1,	4,	160,	0, 0x20000000000802cULL, nullptr, nullptr, OperandInfo212 },  // Inst #2305 = S4_extract_rp
  { 2306,	4,	1,	4,	151,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo213 },  // Inst #2306 = S4_extractp
  { 2307,	3,	1,	4,	160,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2307 = S4_extractp_rp
  { 2308,	3,	1,	4,	8,	0, 0x802cULL, nullptr, nullptr, OperandInfo146 },  // Inst #2308 = S4_lsli
  { 2309,	3,	1,	4,	85,	0, 0x2bULL, nullptr, nullptr, OperandInfo52 },  // Inst #2309 = S4_ntstbit_i
  { 2310,	3,	1,	4,	9,	0, 0x2cULL, nullptr, nullptr, OperandInfo53 },  // Inst #2310 = S4_ntstbit_r
  { 2311,	4,	1,	4,	153,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo204 },  // Inst #2311 = S4_or_andi
  { 2312,	4,	1,	4,	153,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo229 },  // Inst #2312 = S4_or_andix
  { 2313,	4,	1,	4,	153,	0, 0x200000156808003ULL, nullptr, nullptr, OperandInfo204 },  // Inst #2313 = S4_or_ori
  { 2314,	4,	1,	4,	153,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2314 = S4_ori_asl_ri
  { 2315,	4,	1,	4,	153,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2315 = S4_ori_lsr_ri
  { 2316,	3,	1,	4,	160,	0, 0x200000000008003ULL, nullptr, nullptr, OperandInfo63 },  // Inst #2316 = S4_parity
  { 2317,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x2400c3880c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2317 = S4_pstorerbf_abs
  { 2318,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x340000080c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2318 = S4_pstorerbf_rr
  { 2319,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x2400c3881c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2319 = S4_pstorerbfnew_abs
  { 2320,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x2c00c4881c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2320 = S4_pstorerbfnew_io
  { 2321,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x340000081c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2321 = S4_pstorerbfnew_rr
  { 2322,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x2480c3924c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2322 = S4_pstorerbnewf_abs
  { 2323,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x348000144c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2323 = S4_pstorerbnewf_rr
  { 2324,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x2480c3925c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2324 = S4_pstorerbnewfnew_abs
  { 2325,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x2c80c4935c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2325 = S4_pstorerbnewfnew_io
  { 2326,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x348000145c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2326 = S4_pstorerbnewfnew_rr
  { 2327,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x2480c3924429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2327 = S4_pstorerbnewt_abs
  { 2328,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x348000144429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2328 = S4_pstorerbnewt_rr
  { 2329,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x2480c3925429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2329 = S4_pstorerbnewtnew_abs
  { 2330,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x2c80c493542fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2330 = S4_pstorerbnewtnew_io
  { 2331,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x348000145429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2331 = S4_pstorerbnewtnew_rr
  { 2332,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x2400c3880429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2332 = S4_pstorerbt_abs
  { 2333,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x340000080429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2333 = S4_pstorerbt_rr
  { 2334,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x2400c3881429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2334 = S4_pstorerbtnew_abs
  { 2335,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x2c00c488142fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2335 = S4_pstorerbtnew_io
  { 2336,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x340000081429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2336 = S4_pstorerbtnew_rr
  { 2337,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x8400c3800c29ULL, nullptr, nullptr, OperandInfo232 },  // Inst #2337 = S4_pstorerdf_abs
  { 2338,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x940000000c29ULL, nullptr, nullptr, OperandInfo233 },  // Inst #2338 = S4_pstorerdf_rr
  { 2339,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x8400c3801c29ULL, nullptr, nullptr, OperandInfo232 },  // Inst #2339 = S4_pstorerdfnew_abs
  { 2340,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x8c0d24801c2fULL, nullptr, nullptr, OperandInfo218 },  // Inst #2340 = S4_pstorerdfnew_io
  { 2341,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x940000001c29ULL, nullptr, nullptr, OperandInfo233 },  // Inst #2341 = S4_pstorerdfnew_rr
  { 2342,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x8400c3800429ULL, nullptr, nullptr, OperandInfo232 },  // Inst #2342 = S4_pstorerdt_abs
  { 2343,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x940000000429ULL, nullptr, nullptr, OperandInfo233 },  // Inst #2343 = S4_pstorerdt_rr
  { 2344,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x8400c3801429ULL, nullptr, nullptr, OperandInfo232 },  // Inst #2344 = S4_pstorerdtnew_abs
  { 2345,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x8c0d2480142fULL, nullptr, nullptr, OperandInfo218 },  // Inst #2345 = S4_pstorerdtnew_io
  { 2346,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x940000001429ULL, nullptr, nullptr, OperandInfo233 },  // Inst #2346 = S4_pstorerdtnew_rr
  { 2347,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x4400c3800c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2347 = S4_pstorerff_abs
  { 2348,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x540000000c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2348 = S4_pstorerff_rr
  { 2349,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4400c3801c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2349 = S4_pstorerffnew_abs
  { 2350,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4801c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2350 = S4_pstorerffnew_io
  { 2351,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x540000001c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2351 = S4_pstorerffnew_rr
  { 2352,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x4400c3800429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2352 = S4_pstorerft_abs
  { 2353,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x540000000429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2353 = S4_pstorerft_rr
  { 2354,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4400c3801429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2354 = S4_pstorerftnew_abs
  { 2355,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e480142fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2355 = S4_pstorerftnew_io
  { 2356,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x540000001429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2356 = S4_pstorerftnew_rr
  { 2357,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x4400c3880c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2357 = S4_pstorerhf_abs
  { 2358,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x540000080c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2358 = S4_pstorerhf_rr
  { 2359,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4400c3881c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2359 = S4_pstorerhfnew_abs
  { 2360,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e4881c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2360 = S4_pstorerhfnew_io
  { 2361,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x540000081c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2361 = S4_pstorerhfnew_rr
  { 2362,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x4480c3924c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2362 = S4_pstorerhnewf_abs
  { 2363,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x548000144c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2363 = S4_pstorerhnewf_rr
  { 2364,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x4480c3925c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2364 = S4_pstorerhnewfnew_abs
  { 2365,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x4c84e4935c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2365 = S4_pstorerhnewfnew_io
  { 2366,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x548000145c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2366 = S4_pstorerhnewfnew_rr
  { 2367,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x4480c3924429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2367 = S4_pstorerhnewt_abs
  { 2368,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x548000144429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2368 = S4_pstorerhnewt_rr
  { 2369,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x4480c3925429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2369 = S4_pstorerhnewtnew_abs
  { 2370,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x4c84e493542fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2370 = S4_pstorerhnewtnew_io
  { 2371,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x548000145429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2371 = S4_pstorerhnewtnew_rr
  { 2372,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x4400c3880429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2372 = S4_pstorerht_abs
  { 2373,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x540000080429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2373 = S4_pstorerht_rr
  { 2374,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4400c3881429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2374 = S4_pstorerhtnew_abs
  { 2375,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x4c04e488142fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2375 = S4_pstorerhtnew_io
  { 2376,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x540000081429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2376 = S4_pstorerhtnew_rr
  { 2377,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x6400c3880c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2377 = S4_pstorerif_abs
  { 2378,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x740000080c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2378 = S4_pstorerif_rr
  { 2379,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x6400c3881c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2379 = S4_pstorerifnew_abs
  { 2380,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x6c0904881c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2380 = S4_pstorerifnew_io
  { 2381,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x740000081c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2381 = S4_pstorerifnew_rr
  { 2382,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x6480c3924c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2382 = S4_pstorerinewf_abs
  { 2383,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x748000144c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2383 = S4_pstorerinewf_rr
  { 2384,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x6480c3925c29ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2384 = S4_pstorerinewfnew_abs
  { 2385,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x6c8904935c2fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2385 = S4_pstorerinewfnew_io
  { 2386,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x748000145c29ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2386 = S4_pstorerinewfnew_rr
  { 2387,	3,	0,	4,	174,	0|(1ULL<<MCID::MayStore), 0x6480c3924429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2387 = S4_pstorerinewt_abs
  { 2388,	5,	0,	4,	175,	0|(1ULL<<MCID::MayStore), 0x748000144429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2388 = S4_pstorerinewt_rr
  { 2389,	3,	0,	4,	176,	0|(1ULL<<MCID::MayStore), 0x6480c3925429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2389 = S4_pstorerinewtnew_abs
  { 2390,	4,	0,	4,	53,	0|(1ULL<<MCID::MayStore), 0x6c890493542fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2390 = S4_pstorerinewtnew_io
  { 2391,	5,	0,	4,	177,	0|(1ULL<<MCID::MayStore), 0x748000145429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2391 = S4_pstorerinewtnew_rr
  { 2392,	3,	0,	4,	170,	0|(1ULL<<MCID::MayStore), 0x6400c3880429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2392 = S4_pstorerit_abs
  { 2393,	5,	0,	4,	171,	0|(1ULL<<MCID::MayStore), 0x740000080429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2393 = S4_pstorerit_rr
  { 2394,	3,	0,	4,	172,	0|(1ULL<<MCID::MayStore), 0x6400c3881429ULL, nullptr, nullptr, OperandInfo230 },  // Inst #2394 = S4_pstoreritnew_abs
  { 2395,	4,	0,	4,	39,	0|(1ULL<<MCID::MayStore), 0x6c090488142fULL, nullptr, nullptr, OperandInfo216 },  // Inst #2395 = S4_pstoreritnew_io
  { 2396,	5,	0,	4,	173,	0|(1ULL<<MCID::MayStore), 0x740000081429ULL, nullptr, nullptr, OperandInfo231 },  // Inst #2396 = S4_pstoreritnew_rr
  { 2397,	3,	1,	4,	167,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x800000002129ULL, nullptr, nullptr, OperandInfo51 },  // Inst #2397 = S4_stored_locked
  { 2398,	2,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x8000000000a9ULL, nullptr, nullptr, OperandInfo90 },  // Inst #2398 = S4_stored_rl_at_vi
  { 2399,	2,	0,	4,	168,	0|(1ULL<<MCID::MayStore), 0x8000000000a9ULL, nullptr, nullptr, OperandInfo90 },  // Inst #2399 = S4_stored_rl_st_vi
  { 2400,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x2c0114800029ULL, nullptr, nullptr, OperandInfo148 },  // Inst #2400 = S4_storeirb_io
  { 2401,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x2c00d6800c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2401 = S4_storeirbf_io
  { 2402,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x2c00d6801c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2402 = S4_storeirbfnew_io
  { 2403,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x2c00d6800429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2403 = S4_storeirbt_io
  { 2404,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x2c00d6801429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2404 = S4_storeirbtnew_io
  { 2405,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x4c0114800029ULL, nullptr, nullptr, OperandInfo148 },  // Inst #2405 = S4_storeirh_io
  { 2406,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x4c00d6800c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2406 = S4_storeirhf_io
  { 2407,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x4c00d6801c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2407 = S4_storeirhfnew_io
  { 2408,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x4c00d6800429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2408 = S4_storeirht_io
  { 2409,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x4c00d6801429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2409 = S4_storeirhtnew_io
  { 2410,	3,	0,	4,	54,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x6c0114800029ULL, nullptr, nullptr, OperandInfo148 },  // Inst #2410 = S4_storeiri_io
  { 2411,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x6c00d6800c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2411 = S4_storeirif_io
  { 2412,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x6c00d6801c29ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2412 = S4_storeirifnew_io
  { 2413,	4,	0,	4,	55,	0|(1ULL<<MCID::MayStore), 0x6c00d6800429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2413 = S4_storeirit_io
  { 2414,	4,	0,	4,	56,	0|(1ULL<<MCID::MayStore), 0x6c00d6801429ULL, nullptr, nullptr, OperandInfo234 },  // Inst #2414 = S4_storeiritnew_io
  { 2415,	3,	1,	4,	172,	0|(1ULL<<MCID::MayStore), 0x2800c3880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2415 = S4_storerb_ap
  { 2416,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x340000080029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2416 = S4_storerb_rr
  { 2417,	4,	0,	4,	179,	0|(1ULL<<MCID::MayStore), 0x3000c5880029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2417 = S4_storerb_ur
  { 2418,	3,	1,	4,	176,	0|(1ULL<<MCID::MayStore), 0x2880c3924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2418 = S4_storerbnew_ap
  { 2419,	4,	0,	4,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x348000134029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2419 = S4_storerbnew_rr
  { 2420,	4,	0,	4,	181,	0|(1ULL<<MCID::MayStore), 0x3080c5934029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2420 = S4_storerbnew_ur
  { 2421,	3,	1,	4,	172,	0|(1ULL<<MCID::MayStore), 0x8800c3800029ULL, nullptr, nullptr, OperandInfo147 },  // Inst #2421 = S4_storerd_ap
  { 2422,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x940000000029ULL, nullptr, nullptr, OperandInfo236 },  // Inst #2422 = S4_storerd_rr
  { 2423,	4,	0,	4,	179,	0|(1ULL<<MCID::MayStore), 0x9000c5800029ULL, nullptr, nullptr, OperandInfo237 },  // Inst #2423 = S4_storerd_ur
  { 2424,	3,	1,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4800c3800029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2424 = S4_storerf_ap
  { 2425,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x540000000029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2425 = S4_storerf_rr
  { 2426,	4,	0,	4,	179,	0|(1ULL<<MCID::MayStore), 0x5000c5800029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2426 = S4_storerf_ur
  { 2427,	3,	1,	4,	172,	0|(1ULL<<MCID::MayStore), 0x4800c3880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2427 = S4_storerh_ap
  { 2428,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x540000080029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2428 = S4_storerh_rr
  { 2429,	4,	0,	4,	179,	0|(1ULL<<MCID::MayStore), 0x5000c5880029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2429 = S4_storerh_ur
  { 2430,	3,	1,	4,	176,	0|(1ULL<<MCID::MayStore), 0x4880c3924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2430 = S4_storerhnew_ap
  { 2431,	4,	0,	4,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x548000134029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2431 = S4_storerhnew_rr
  { 2432,	4,	0,	4,	181,	0|(1ULL<<MCID::MayStore), 0x5080c5934029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2432 = S4_storerhnew_ur
  { 2433,	3,	1,	4,	172,	0|(1ULL<<MCID::MayStore), 0x6800c3880029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2433 = S4_storeri_ap
  { 2434,	4,	0,	4,	178,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x740000080029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2434 = S4_storeri_rr
  { 2435,	4,	0,	4,	179,	0|(1ULL<<MCID::MayStore), 0x7000c5880029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2435 = S4_storeri_ur
  { 2436,	3,	1,	4,	176,	0|(1ULL<<MCID::MayStore), 0x6880c3924029ULL, nullptr, nullptr, OperandInfo146 },  // Inst #2436 = S4_storerinew_ap
  { 2437,	4,	0,	4,	180,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x748000134029ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2437 = S4_storerinew_rr
  { 2438,	4,	0,	4,	181,	0|(1ULL<<MCID::MayStore), 0x7080c5934029ULL, nullptr, nullptr, OperandInfo235 },  // Inst #2438 = S4_storerinew_ur
  { 2439,	4,	1,	4,	151,	0, 0x2000000d4808003ULL, nullptr, nullptr, OperandInfo207 },  // Inst #2439 = S4_subaddi
  { 2440,	4,	1,	4,	151,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2440 = S4_subi_asl_ri
  { 2441,	4,	1,	4,	151,	0, 0x200000102808003ULL, nullptr, nullptr, OperandInfo228 },  // Inst #2441 = S4_subi_lsr_ri
  { 2442,	4,	1,	4,	182,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo238 },  // Inst #2442 = S4_vrcrotate
  { 2443,	5,	1,	4,	183,	0, 0x20000000000002cULL, nullptr, nullptr, OperandInfo239 },  // Inst #2443 = S4_vrcrotate_acc
  { 2444,	3,	1,	4,	73,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2444 = S4_vxaddsubh
  { 2445,	3,	1,	4,	47,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2445 = S4_vxaddsubhr
  { 2446,	3,	1,	4,	73,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2446 = S4_vxaddsubw
  { 2447,	3,	1,	4,	73,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2447 = S4_vxsubaddh
  { 2448,	3,	1,	4,	47,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2448 = S4_vxsubaddhr
  { 2449,	3,	1,	4,	73,	0, 0x20000000000002cULL, nullptr, ImplicitList22, OperandInfo50 },  // Inst #2449 = S4_vxsubaddw
  { 2450,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo92 },  // Inst #2450 = S5_asrhub_rnd_sat
  { 2451,	3,	1,	4,	47,	0, 0x20000000000802bULL, nullptr, ImplicitList22, OperandInfo92 },  // Inst #2451 = S5_asrhub_sat
  { 2452,	2,	1,	4,	184,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo90 },  // Inst #2452 = S5_popcountp
  { 2453,	3,	1,	4,	47,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2453 = S5_vasrhrnd
  { 2454,	3,	1,	4,	90,	0, 0x2bULL, nullptr, nullptr, OperandInfo89 },  // Inst #2454 = S6_rol_i_p
  { 2455,	4,	1,	4,	185,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2455 = S6_rol_i_p_acc
  { 2456,	4,	1,	4,	185,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2456 = S6_rol_i_p_and
  { 2457,	4,	1,	4,	185,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2457 = S6_rol_i_p_nac
  { 2458,	4,	1,	4,	185,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2458 = S6_rol_i_p_or
  { 2459,	4,	1,	4,	185,	0, 0x20000000000002bULL, nullptr, nullptr, OperandInfo211 },  // Inst #2459 = S6_rol_i_p_xacc
  { 2460,	3,	1,	4,	90,	0, 0x802bULL, nullptr, nullptr, OperandInfo62 },  // Inst #2460 = S6_rol_i_r
  { 2461,	4,	1,	4,	185,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2461 = S6_rol_i_r_acc
  { 2462,	4,	1,	4,	185,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2462 = S6_rol_i_r_and
  { 2463,	4,	1,	4,	185,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2463 = S6_rol_i_r_nac
  { 2464,	4,	1,	4,	185,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2464 = S6_rol_i_r_or
  { 2465,	4,	1,	4,	185,	0, 0x20000000000802bULL, nullptr, nullptr, OperandInfo204 },  // Inst #2465 = S6_rol_i_r_xacc
  { 2466,	2,	1,	4,	186,	0, 0x2bULL, nullptr, nullptr, OperandInfo58 },  // Inst #2466 = S6_vsplatrbp
  { 2467,	3,	1,	4,	90,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2467 = S6_vtrunehb_ppp
  { 2468,	3,	1,	4,	90,	0, 0x2cULL, nullptr, nullptr, OperandInfo50 },  // Inst #2468 = S6_vtrunohb_ppp
  { 2469,	3,	1,	4,	187,	0, 0xf480802aULL, nullptr, nullptr, OperandInfo240 },  // Inst #2469 = SA1_addi
  { 2470,	3,	1,	4,	187,	0, 0x802aULL, nullptr, nullptr, OperandInfo241 },  // Inst #2470 = SA1_addrx
  { 2471,	2,	1,	4,	188,	0, 0x802aULL, ImplicitList3, nullptr, OperandInfo181 },  // Inst #2471 = SA1_addsp
  { 2472,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2472 = SA1_and1
  { 2473,	1,	1,	4,	189,	0, 0x8c2aULL, ImplicitList32, nullptr, OperandInfo243 },  // Inst #2473 = SA1_clrf
  { 2474,	1,	1,	4,	190,	0, 0x9c2aULL, ImplicitList32, nullptr, OperandInfo243 },  // Inst #2474 = SA1_clrfnew
  { 2475,	1,	1,	4,	189,	0, 0x842aULL, ImplicitList32, nullptr, OperandInfo243 },  // Inst #2475 = SA1_clrt
  { 2476,	1,	1,	4,	190,	0, 0x942aULL, ImplicitList32, nullptr, OperandInfo243 },  // Inst #2476 = SA1_clrtnew
  { 2477,	2,	0,	4,	191,	0, 0x2aULL, nullptr, ImplicitList32, OperandInfo181 },  // Inst #2477 = SA1_cmpeqi
  { 2478,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo244 },  // Inst #2478 = SA1_combine0i
  { 2479,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo244 },  // Inst #2479 = SA1_combine1i
  { 2480,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo244 },  // Inst #2480 = SA1_combine2i
  { 2481,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo244 },  // Inst #2481 = SA1_combine3i
  { 2482,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo245 },  // Inst #2482 = SA1_combinerz
  { 2483,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo245 },  // Inst #2483 = SA1_combinezr
  { 2484,	3,	1,	4,	187,	0, 0x802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2484 = SA1_dec
  { 2485,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2485 = SA1_inc
  { 2486,	2,	1,	4,	188,	0, 0xc280802aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2486 = SA1_seti
  { 2487,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2487 = SA1_setin1
  { 2488,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2488 = SA1_sxtb
  { 2489,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2489 = SA1_sxth
  { 2490,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2490 = SA1_tfr
  { 2491,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2491 = SA1_zxtb
  { 2492,	2,	1,	4,	188,	0, 0x802aULL, nullptr, nullptr, OperandInfo242 },  // Inst #2492 = SA1_zxth
  { 2493,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, ImplicitList41, nullptr, OperandInfo2 },  // Inst #2493 = SAVE_REGISTERS_CALL_V4
  { 2494,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, ImplicitList41, ImplicitList32, OperandInfo2 },  // Inst #2494 = SAVE_REGISTERS_CALL_V4STK
  { 2495,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, ImplicitList41, ImplicitList32, OperandInfo2 },  // Inst #2495 = SAVE_REGISTERS_CALL_V4STK_EXT
  { 2496,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, ImplicitList41, ImplicitList42, OperandInfo2 },  // Inst #2496 = SAVE_REGISTERS_CALL_V4STK_EXT_PIC
  { 2497,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, ImplicitList41, ImplicitList42, OperandInfo2 },  // Inst #2497 = SAVE_REGISTERS_CALL_V4STK_PIC
  { 2498,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, ImplicitList41, nullptr, OperandInfo2 },  // Inst #2498 = SAVE_REGISTERS_CALL_V4_EXT
  { 2499,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb11800023ULL, ImplicitList41, ImplicitList43, OperandInfo2 },  // Inst #2499 = SAVE_REGISTERS_CALL_V4_EXT_PIC
  { 2500,	1,	0,	4,	35,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0xb10800023ULL, ImplicitList41, ImplicitList43, OperandInfo2 },  // Inst #2500 = SAVE_REGISTERS_CALL_V4_PIC
  { 2501,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x6c000000802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2501 = SL1_loadri_io
  { 2502,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x2c000000802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2502 = SL1_loadrub_io
  { 2503,	0,	0,	4,	192,	0|(1ULL<<MCID::MayLoad), 0x80000000002aULL, ImplicitList44, ImplicitList4, nullptr },  // Inst #2503 = SL2_deallocframe
  { 2504,	0,	0,	4,	193,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000002aULL, ImplicitList45, ImplicitList19, nullptr },  // Inst #2504 = SL2_jumpr31
  { 2505,	0,	0,	4,	193,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000000c2aULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2505 = SL2_jumpr31_f
  { 2506,	0,	0,	4,	193,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x1000001c2aULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2506 = SL2_jumpr31_fnew
  { 2507,	0,	0,	4,	193,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000042aULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2507 = SL2_jumpr31_t
  { 2508,	0,	0,	4,	193,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Terminator), 0x100000142aULL, ImplicitList46, ImplicitList19, nullptr },  // Inst #2508 = SL2_jumpr31_tnew
  { 2509,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x2c000000802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2509 = SL2_loadrb_io
  { 2510,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad), 0x8c000000802aULL, ImplicitList3, nullptr, OperandInfo244 },  // Inst #2510 = SL2_loadrd_sp
  { 2511,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c000000802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2511 = SL2_loadrh_io
  { 2512,	2,	1,	4,	138,	0|(1ULL<<MCID::MayLoad), 0x6c000000802aULL, ImplicitList3, nullptr, OperandInfo181 },  // Inst #2512 = SL2_loadri_sp
  { 2513,	3,	1,	4,	19,	0|(1ULL<<MCID::MayLoad), 0x4c000000802aULL, nullptr, nullptr, OperandInfo179 },  // Inst #2513 = SL2_loadruh_io
  { 2514,	0,	0,	4,	194,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000002aULL, ImplicitList44, ImplicitList47, nullptr },  // Inst #2514 = SL2_return
  { 2515,	0,	0,	4,	194,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000000c2aULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2515 = SL2_return_f
  { 2516,	0,	0,	4,	194,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x809000001c2aULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2516 = SL2_return_fnew
  { 2517,	0,	0,	4,	194,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000042aULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2517 = SL2_return_t
  { 2518,	0,	0,	4,	194,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator), 0x80900000142aULL, ImplicitList48, ImplicitList47, nullptr },  // Inst #2518 = SL2_return_tnew
  { 2519,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x2c000000002aULL, nullptr, nullptr, OperandInfo246 },  // Inst #2519 = SS1_storeb_io
  { 2520,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x6c000000002aULL, nullptr, nullptr, OperandInfo246 },  // Inst #2520 = SS1_storew_io
  { 2521,	1,	0,	4,	195,	0|(1ULL<<MCID::MayStore), 0x8c000000002aULL, ImplicitList49, ImplicitList2, OperandInfo2 },  // Inst #2521 = SS2_allocframe
  { 2522,	2,	0,	4,	196,	0|(1ULL<<MCID::MayStore), 0x2c000000002aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2522 = SS2_storebi0
  { 2523,	2,	0,	4,	196,	0|(1ULL<<MCID::MayStore), 0x2c000000002aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2523 = SS2_storebi1
  { 2524,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore), 0x8c000000002aULL, ImplicitList3, nullptr, OperandInfo247 },  // Inst #2524 = SS2_stored_sp
  { 2525,	3,	0,	4,	50,	0|(1ULL<<MCID::MayStore), 0x4c000000002aULL, nullptr, nullptr, OperandInfo246 },  // Inst #2525 = SS2_storeh_io
  { 2526,	2,	0,	4,	155,	0|(1ULL<<MCID::MayStore), 0x6c000000002aULL, ImplicitList3, nullptr, OperandInfo248 },  // Inst #2526 = SS2_storew_sp
  { 2527,	2,	0,	4,	196,	0|(1ULL<<MCID::MayStore), 0x6c000000002aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2527 = SS2_storewi0
  { 2528,	2,	0,	4,	196,	0|(1ULL<<MCID::MayStore), 0x6c000000002aULL, nullptr, nullptr, OperandInfo181 },  // Inst #2528 = SS2_storewi1
  { 2529,	3,	1,	4,	6,	0, 0xc2800000ULL, nullptr, nullptr, OperandInfo141 },  // Inst #2529 = TFRI64_V2_ext
  { 2530,	2,	1,	4,	6,	0, 0xc2800000ULL, nullptr, nullptr, OperandInfo49 },  // Inst #2530 = TFRI64_V4
  { 2531,	3,	1,	4,	197,	0|(1ULL<<MCID::MayLoad), 0x80000000000080a4ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2531 = V6_extractw
  { 2532,	2,	1,	4,	198,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo99 },  // Inst #2532 = V6_lvsplatb
  { 2533,	2,	1,	4,	198,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo99 },  // Inst #2533 = V6_lvsplath
  { 2534,	2,	1,	4,	198,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo99 },  // Inst #2534 = V6_lvsplatw
  { 2535,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2535 = V6_pred_and
  { 2536,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2536 = V6_pred_and_n
  { 2537,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo250 },  // Inst #2537 = V6_pred_not
  { 2538,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2538 = V6_pred_or
  { 2539,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2539 = V6_pred_or_n
  { 2540,	2,	1,	4,	199,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2540 = V6_pred_scalar2
  { 2541,	2,	1,	4,	199,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo251 },  // Inst #2541 = V6_pred_scalar2v2
  { 2542,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2542 = V6_pred_xor
  { 2543,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2543 = V6_shuffeqh
  { 2544,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo249 },  // Inst #2544 = V6_shuffeqw
  { 2545,	4,	1,	4,	200,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo104 },  // Inst #2545 = V6_v6mpyhubs10
  { 2546,	5,	1,	4,	201,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo252 },  // Inst #2546 = V6_v6mpyhubs10_vxx
  { 2547,	4,	1,	4,	200,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo104 },  // Inst #2547 = V6_v6mpyvubs10
  { 2548,	5,	1,	4,	201,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo252 },  // Inst #2548 = V6_v6mpyvubs10_vxx
  { 2549,	3,	1,	4,	202,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408017ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2549 = V6_vL32Ub_ai
  { 2550,	4,	2,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408017ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2550 = V6_vL32Ub_pi
  { 2551,	4,	2,	4,	203,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408017ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2551 = V6_vL32Ub_ppu
  { 2552,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000608012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2552 = V6_vL32b_ai
  { 2553,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000ac8000408012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2553 = V6_vL32b_cur_ai
  { 2554,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408c12ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2554 = V6_vL32b_cur_npred_ai
  { 2555,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c12ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2555 = V6_vL32b_cur_npred_pi
  { 2556,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c12ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2556 = V6_vL32b_cur_npred_ppu
  { 2557,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408012ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2557 = V6_vL32b_cur_pi
  { 2558,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408012ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2558 = V6_vL32b_cur_ppu
  { 2559,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408412ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2559 = V6_vL32b_cur_pred_ai
  { 2560,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408412ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2560 = V6_vL32b_cur_pred_pi
  { 2561,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408412ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2561 = V6_vL32b_cur_pred_ppu
  { 2562,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c12ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2562 = V6_vL32b_npred_ai
  { 2563,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c12ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2563 = V6_vL32b_npred_pi
  { 2564,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c12ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2564 = V6_vL32b_npred_ppu
  { 2565,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000ac8000608012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2565 = V6_vL32b_nt_ai
  { 2566,	3,	1,	4,	42,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000ac8000408012ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2566 = V6_vL32b_nt_cur_ai
  { 2567,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408c12ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2567 = V6_vL32b_nt_cur_npred_ai
  { 2568,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c12ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2568 = V6_vL32b_nt_cur_npred_pi
  { 2569,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408c12ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2569 = V6_vL32b_nt_cur_npred_ppu
  { 2570,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408012ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2570 = V6_vL32b_nt_cur_pi
  { 2571,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0xc000b88000408012ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2571 = V6_vL32b_nt_cur_ppu
  { 2572,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0xc000ac8000408412ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2572 = V6_vL32b_nt_cur_pred_ai
  { 2573,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408412ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2573 = V6_vL32b_nt_cur_pred_pi
  { 2574,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0xc000b88000408412ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2574 = V6_vL32b_nt_cur_pred_ppu
  { 2575,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408c12ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2575 = V6_vL32b_nt_npred_ai
  { 2576,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c12ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2576 = V6_vL32b_nt_npred_pi
  { 2577,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408c12ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2577 = V6_vL32b_nt_npred_ppu
  { 2578,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608012ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2578 = V6_vL32b_nt_pi
  { 2579,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608012ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2579 = V6_vL32b_nt_ppu
  { 2580,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408412ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2580 = V6_vL32b_nt_pred_ai
  { 2581,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408412ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2581 = V6_vL32b_nt_pred_pi
  { 2582,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408412ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2582 = V6_vL32b_nt_pred_ppu
  { 2583,	3,	1,	4,	207,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000ac8000408016ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2583 = V6_vL32b_nt_tmp_ai
  { 2584,	4,	1,	4,	208,	0|(1ULL<<MCID::MayLoad), 0x9000ac8000408c16ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2584 = V6_vL32b_nt_tmp_npred_ai
  { 2585,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408c16ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2585 = V6_vL32b_nt_tmp_npred_pi
  { 2586,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408c16ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2586 = V6_vL32b_nt_tmp_npred_ppu
  { 2587,	4,	2,	4,	210,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000b88000408016ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2587 = V6_vL32b_nt_tmp_pi
  { 2588,	4,	2,	4,	210,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000b88000408016ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2588 = V6_vL32b_nt_tmp_ppu
  { 2589,	4,	1,	4,	208,	0|(1ULL<<MCID::MayLoad), 0x9000ac8000408416ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2589 = V6_vL32b_nt_tmp_pred_ai
  { 2590,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408416ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2590 = V6_vL32b_nt_tmp_pred_pi
  { 2591,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408416ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2591 = V6_vL32b_nt_tmp_pred_ppu
  { 2592,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608012ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2592 = V6_vL32b_pi
  { 2593,	4,	2,	4,	206,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x8000b88000608012ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2593 = V6_vL32b_ppu
  { 2594,	4,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x8000ac8000408412ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2594 = V6_vL32b_pred_ai
  { 2595,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408412ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2595 = V6_vL32b_pred_pi
  { 2596,	5,	2,	4,	205,	0|(1ULL<<MCID::MayLoad), 0x8000b88000408412ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2596 = V6_vL32b_pred_ppu
  { 2597,	3,	1,	4,	207,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000ac8000408016ULL, nullptr, nullptr, OperandInfo82 },  // Inst #2597 = V6_vL32b_tmp_ai
  { 2598,	4,	1,	4,	208,	0|(1ULL<<MCID::MayLoad), 0x9000ac8000408c16ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2598 = V6_vL32b_tmp_npred_ai
  { 2599,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408c16ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2599 = V6_vL32b_tmp_npred_pi
  { 2600,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408c16ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2600 = V6_vL32b_tmp_npred_ppu
  { 2601,	4,	2,	4,	210,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000b88000408016ULL, nullptr, nullptr, OperandInfo253 },  // Inst #2601 = V6_vL32b_tmp_pi
  { 2602,	4,	2,	4,	210,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Predicable), 0x9000b88000408016ULL, nullptr, nullptr, OperandInfo254 },  // Inst #2602 = V6_vL32b_tmp_ppu
  { 2603,	4,	1,	4,	208,	0|(1ULL<<MCID::MayLoad), 0x9000ac8000408416ULL, nullptr, nullptr, OperandInfo255 },  // Inst #2603 = V6_vL32b_tmp_pred_ai
  { 2604,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408416ULL, nullptr, nullptr, OperandInfo256 },  // Inst #2604 = V6_vL32b_tmp_pred_pi
  { 2605,	5,	2,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x9000b88000408416ULL, nullptr, nullptr, OperandInfo257 },  // Inst #2605 = V6_vL32b_tmp_pred_ppu
  { 2606,	3,	0,	4,	211,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000000015ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2606 = V6_vS32Ub_ai
  { 2607,	4,	0,	4,	212,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000c15ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2607 = V6_vS32Ub_npred_ai
  { 2608,	5,	1,	4,	213,	0|(1ULL<<MCID::MayStore), 0x8000b80000000c15ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2608 = V6_vS32Ub_npred_pi
  { 2609,	5,	1,	4,	213,	0|(1ULL<<MCID::MayStore), 0x8000b80000000c15ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2609 = V6_vS32Ub_npred_ppu
  { 2610,	4,	1,	4,	214,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000000015ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2610 = V6_vS32Ub_pi
  { 2611,	4,	1,	4,	214,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000000015ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2611 = V6_vS32Ub_ppu
  { 2612,	4,	0,	4,	212,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000415ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2612 = V6_vS32Ub_pred_ai
  { 2613,	5,	1,	4,	213,	0|(1ULL<<MCID::MayStore), 0x8000b80000000415ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2613 = V6_vS32Ub_pred_pi
  { 2614,	5,	1,	4,	213,	0|(1ULL<<MCID::MayStore), 0x8000b80000000415ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2614 = V6_vS32Ub_pred_ppu
  { 2615,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000080014ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2615 = V6_vS32b_ai
  { 2616,	3,	0,	4,	215,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000ac0000124013ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2616 = V6_vS32b_new_ai
  { 2617,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134c13ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2617 = V6_vS32b_new_npred_ai
  { 2618,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c13ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2618 = V6_vS32b_new_npred_pi
  { 2619,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c13ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2619 = V6_vS32b_new_npred_ppu
  { 2620,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134013ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2620 = V6_vS32b_new_pi
  { 2621,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134013ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2621 = V6_vS32b_new_ppu
  { 2622,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134413ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2622 = V6_vS32b_new_pred_ai
  { 2623,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144413ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2623 = V6_vS32b_new_pred_pi
  { 2624,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144413ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2624 = V6_vS32b_new_pred_ppu
  { 2625,	4,	0,	4,	219,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080c14ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2625 = V6_vS32b_npred_ai
  { 2626,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c14ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2626 = V6_vS32b_npred_pi
  { 2627,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c14ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2627 = V6_vS32b_npred_ppu
  { 2628,	4,	0,	4,	221,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000014ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2628 = V6_vS32b_nqpred_ai
  { 2629,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo264 },  // Inst #2629 = V6_vS32b_nqpred_pi
  { 2630,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo265 },  // Inst #2630 = V6_vS32b_nqpred_ppu
  { 2631,	3,	0,	4,	45,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000ac0000080014ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2631 = V6_vS32b_nt_ai
  { 2632,	3,	0,	4,	215,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000ac0000124013ULL, nullptr, nullptr, OperandInfo86 },  // Inst #2632 = V6_vS32b_nt_new_ai
  { 2633,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134c13ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2633 = V6_vS32b_nt_new_npred_ai
  { 2634,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c13ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2634 = V6_vS32b_nt_new_npred_pi
  { 2635,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144c13ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2635 = V6_vS32b_nt_new_npred_ppu
  { 2636,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134013ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2636 = V6_vS32b_nt_new_pi
  { 2637,	4,	1,	4,	218,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0xc000b80000134013ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2637 = V6_vS32b_nt_new_ppu
  { 2638,	4,	0,	4,	216,	0|(1ULL<<MCID::MayStore), 0xc000ac0000134413ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2638 = V6_vS32b_nt_new_pred_ai
  { 2639,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144413ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2639 = V6_vS32b_nt_new_pred_pi
  { 2640,	5,	1,	4,	217,	0|(1ULL<<MCID::MayStore), 0xc000b80000144413ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2640 = V6_vS32b_nt_new_pred_ppu
  { 2641,	4,	0,	4,	219,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080c14ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2641 = V6_vS32b_nt_npred_ai
  { 2642,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c14ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2642 = V6_vS32b_nt_npred_pi
  { 2643,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080c14ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2643 = V6_vS32b_nt_npred_ppu
  { 2644,	4,	0,	4,	221,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000014ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2644 = V6_vS32b_nt_nqpred_ai
  { 2645,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo264 },  // Inst #2645 = V6_vS32b_nt_nqpred_pi
  { 2646,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo265 },  // Inst #2646 = V6_vS32b_nt_nqpred_ppu
  { 2647,	4,	1,	4,	223,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080014ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2647 = V6_vS32b_nt_pi
  { 2648,	4,	1,	4,	223,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080014ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2648 = V6_vS32b_nt_ppu
  { 2649,	4,	0,	4,	219,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080414ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2649 = V6_vS32b_nt_pred_ai
  { 2650,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080414ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2650 = V6_vS32b_nt_pred_pi
  { 2651,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080414ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2651 = V6_vS32b_nt_pred_ppu
  { 2652,	4,	0,	4,	221,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000014ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2652 = V6_vS32b_nt_qpred_ai
  { 2653,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo264 },  // Inst #2653 = V6_vS32b_nt_qpred_pi
  { 2654,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo265 },  // Inst #2654 = V6_vS32b_nt_qpred_ppu
  { 2655,	4,	1,	4,	223,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080014ULL, nullptr, nullptr, OperandInfo261 },  // Inst #2655 = V6_vS32b_pi
  { 2656,	4,	1,	4,	223,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Predicable), 0x8000b80000080014ULL, nullptr, nullptr, OperandInfo262 },  // Inst #2656 = V6_vS32b_ppu
  { 2657,	4,	0,	4,	219,	0|(1ULL<<MCID::MayStore), 0x8000ac0000080414ULL, nullptr, nullptr, OperandInfo258 },  // Inst #2657 = V6_vS32b_pred_ai
  { 2658,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080414ULL, nullptr, nullptr, OperandInfo259 },  // Inst #2658 = V6_vS32b_pred_pi
  { 2659,	5,	1,	4,	220,	0|(1ULL<<MCID::MayStore), 0x8000b80000080414ULL, nullptr, nullptr, OperandInfo260 },  // Inst #2659 = V6_vS32b_pred_ppu
  { 2660,	4,	0,	4,	221,	0|(1ULL<<MCID::MayStore), 0x8000ac0000000014ULL, nullptr, nullptr, OperandInfo263 },  // Inst #2660 = V6_vS32b_qpred_ai
  { 2661,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo264 },  // Inst #2661 = V6_vS32b_qpred_pi
  { 2662,	5,	1,	4,	222,	0|(1ULL<<MCID::MayStore), 0x8000b80000000014ULL, nullptr, nullptr, OperandInfo265 },  // Inst #2662 = V6_vS32b_qpred_ppu
  { 2663,	2,	0,	4,	224,	0|(1ULL<<MCID::MayStore), 0xc000ac000000000dULL, nullptr, nullptr, OperandInfo44 },  // Inst #2663 = V6_vS32b_srls_ai
  { 2664,	3,	1,	4,	225,	0|(1ULL<<MCID::MayStore), 0xc000b8000000000dULL, nullptr, nullptr, OperandInfo145 },  // Inst #2664 = V6_vS32b_srls_pi
  { 2665,	3,	1,	4,	225,	0|(1ULL<<MCID::MayStore), 0xc000b8000000000dULL, nullptr, nullptr, OperandInfo266 },  // Inst #2665 = V6_vS32b_srls_ppu
  { 2666,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2666 = V6_vabsb
  { 2667,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2667 = V6_vabsb_sat
  { 2668,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2668 = V6_vabsdiffh
  { 2669,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2669 = V6_vabsdiffub
  { 2670,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2670 = V6_vabsdiffuh
  { 2671,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2671 = V6_vabsdiffw
  { 2672,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2672 = V6_vabsh
  { 2673,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2673 = V6_vabsh_sat
  { 2674,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2674 = V6_vabsw
  { 2675,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2675 = V6_vabsw_sat
  { 2676,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2676 = V6_vaddb
  { 2677,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2677 = V6_vaddb_dv
  { 2678,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2678 = V6_vaddbnq
  { 2679,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2679 = V6_vaddbq
  { 2680,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2680 = V6_vaddbsat
  { 2681,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2681 = V6_vaddbsat_dv
  { 2682,	5,	2,	4,	228,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo267 },  // Inst #2682 = V6_vaddcarry
  { 2683,	4,	2,	4,	229,	0, 0x8030000000008010ULL, nullptr, nullptr, OperandInfo268 },  // Inst #2683 = V6_vaddcarryo
  { 2684,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo269 },  // Inst #2684 = V6_vaddcarrysat
  { 2685,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2685 = V6_vaddclbh
  { 2686,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2686 = V6_vaddclbw
  { 2687,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2687 = V6_vaddh
  { 2688,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2688 = V6_vaddh_dv
  { 2689,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2689 = V6_vaddhnq
  { 2690,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2690 = V6_vaddhq
  { 2691,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2691 = V6_vaddhsat
  { 2692,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2692 = V6_vaddhsat_dv
  { 2693,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2693 = V6_vaddhw
  { 2694,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2694 = V6_vaddhw_acc
  { 2695,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2695 = V6_vaddubh
  { 2696,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2696 = V6_vaddubh_acc
  { 2697,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2697 = V6_vaddubsat
  { 2698,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2698 = V6_vaddubsat_dv
  { 2699,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2699 = V6_vaddububb_sat
  { 2700,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2700 = V6_vadduhsat
  { 2701,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2701 = V6_vadduhsat_dv
  { 2702,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2702 = V6_vadduhw
  { 2703,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2703 = V6_vadduhw_acc
  { 2704,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2704 = V6_vadduwsat
  { 2705,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2705 = V6_vadduwsat_dv
  { 2706,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2706 = V6_vaddw
  { 2707,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2707 = V6_vaddw_dv
  { 2708,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2708 = V6_vaddwnq
  { 2709,	4,	1,	4,	227,	0, 0x8100000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #2709 = V6_vaddwq
  { 2710,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2710 = V6_vaddwsat
  { 2711,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #2711 = V6_vaddwsat_dv
  { 2712,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2712 = V6_valignb
  { 2713,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo271 },  // Inst #2713 = V6_valignbi
  { 2714,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2714 = V6_vand
  { 2715,	3,	1,	4,	234,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo112 },  // Inst #2715 = V6_vandnqrt
  { 2716,	4,	1,	4,	235,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo111 },  // Inst #2716 = V6_vandnqrt_acc
  { 2717,	3,	1,	4,	234,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo112 },  // Inst #2717 = V6_vandqrt
  { 2718,	4,	1,	4,	235,	0, 0x810000000000801eULL, nullptr, nullptr, OperandInfo111 },  // Inst #2718 = V6_vandqrt_acc
  { 2719,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo272 },  // Inst #2719 = V6_vandvnqv
  { 2720,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo272 },  // Inst #2720 = V6_vandvqv
  { 2721,	3,	1,	4,	234,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo114 },  // Inst #2721 = V6_vandvrt
  { 2722,	4,	1,	4,	235,	0, 0x810000000000001eULL, nullptr, nullptr, OperandInfo113 },  // Inst #2722 = V6_vandvrt_acc
  { 2723,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2723 = V6_vaslh
  { 2724,	4,	1,	4,	237,	0, 0x810000000000801aULL, nullptr, nullptr, OperandInfo115 },  // Inst #2724 = V6_vaslh_acc
  { 2725,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2725 = V6_vaslhv
  { 2726,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2726 = V6_vaslw
  { 2727,	4,	1,	4,	237,	0, 0x810000000000801aULL, nullptr, nullptr, OperandInfo115 },  // Inst #2727 = V6_vaslw_acc
  { 2728,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2728 = V6_vaslwv
  { 2729,	4,	1,	4,	238,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo109 },  // Inst #2729 = V6_vasr_into
  { 2730,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2730 = V6_vasrh
  { 2731,	4,	1,	4,	237,	0, 0x810000000000801aULL, nullptr, nullptr, OperandInfo115 },  // Inst #2731 = V6_vasrh_acc
  { 2732,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2732 = V6_vasrhbrndsat
  { 2733,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2733 = V6_vasrhbsat
  { 2734,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2734 = V6_vasrhubrndsat
  { 2735,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2735 = V6_vasrhubsat
  { 2736,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2736 = V6_vasrhv
  { 2737,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2737 = V6_vasruhubrndsat
  { 2738,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2738 = V6_vasruhubsat
  { 2739,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2739 = V6_vasruwuhrndsat
  { 2740,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2740 = V6_vasruwuhsat
  { 2741,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2741 = V6_vasrw
  { 2742,	4,	1,	4,	237,	0, 0x810000000000801aULL, nullptr, nullptr, OperandInfo115 },  // Inst #2742 = V6_vasrw_acc
  { 2743,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2743 = V6_vasrwh
  { 2744,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2744 = V6_vasrwhrndsat
  { 2745,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2745 = V6_vasrwhsat
  { 2746,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2746 = V6_vasrwuhrndsat
  { 2747,	4,	1,	4,	239,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo270 },  // Inst #2747 = V6_vasrwuhsat
  { 2748,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2748 = V6_vasrwv
  { 2749,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2749 = V6_vassign
  { 2750,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2750 = V6_vavgb
  { 2751,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2751 = V6_vavgbrnd
  { 2752,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2752 = V6_vavgh
  { 2753,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2753 = V6_vavghrnd
  { 2754,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2754 = V6_vavgub
  { 2755,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2755 = V6_vavgubrnd
  { 2756,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2756 = V6_vavguh
  { 2757,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2757 = V6_vavguhrnd
  { 2758,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2758 = V6_vavguw
  { 2759,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2759 = V6_vavguwrnd
  { 2760,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2760 = V6_vavgw
  { 2761,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2761 = V6_vavgwrnd
  { 2762,	4,	1,	4,	46,	0, 0x8000000000008411ULL, nullptr, nullptr, OperandInfo273 },  // Inst #2762 = V6_vccombine
  { 2763,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2763 = V6_vcl0h
  { 2764,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2764 = V6_vcl0w
  { 2765,	3,	1,	4,	44,	0, 0x8000000000008410ULL, nullptr, nullptr, OperandInfo274 },  // Inst #2765 = V6_vcmov
  { 2766,	3,	1,	4,	41,	0|(1ULL<<MCID::RegSequence), 0x8000000000008011ULL, nullptr, nullptr, OperandInfo110 },  // Inst #2766 = V6_vcombine
  { 2767,	5,	2,	4,	241,	0, 0x8030000000008019ULL, nullptr, nullptr, OperandInfo139 },  // Inst #2767 = V6_vdeal
  { 2768,	2,	1,	4,	242,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2768 = V6_vdealb
  { 2769,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2769 = V6_vdealb4w
  { 2770,	2,	1,	4,	242,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2770 = V6_vdealh
  { 2771,	4,	1,	4,	244,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo275 },  // Inst #2771 = V6_vdealvdd
  { 2772,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2772 = V6_vdelta
  { 2773,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2773 = V6_vdmpybus
  { 2774,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2774 = V6_vdmpybus_acc
  { 2775,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2775 = V6_vdmpybus_dv
  { 2776,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2776 = V6_vdmpybus_dv_acc
  { 2777,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2777 = V6_vdmpyhb
  { 2778,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2778 = V6_vdmpyhb_acc
  { 2779,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2779 = V6_vdmpyhb_dv
  { 2780,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2780 = V6_vdmpyhb_dv_acc
  { 2781,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo122 },  // Inst #2781 = V6_vdmpyhisat
  { 2782,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo121 },  // Inst #2782 = V6_vdmpyhisat_acc
  { 2783,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo116 },  // Inst #2783 = V6_vdmpyhsat
  { 2784,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo115 },  // Inst #2784 = V6_vdmpyhsat_acc
  { 2785,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo122 },  // Inst #2785 = V6_vdmpyhsuisat
  { 2786,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo121 },  // Inst #2786 = V6_vdmpyhsuisat_acc
  { 2787,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo116 },  // Inst #2787 = V6_vdmpyhsusat
  { 2788,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo115 },  // Inst #2788 = V6_vdmpyhsusat_acc
  { 2789,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2789 = V6_vdmpyhvsat
  { 2790,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2790 = V6_vdmpyhvsat_acc
  { 2791,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2791 = V6_vdsaduh
  { 2792,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2792 = V6_vdsaduh_acc
  { 2793,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2793 = V6_veqb
  { 2794,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2794 = V6_veqb_and
  { 2795,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2795 = V6_veqb_or
  { 2796,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2796 = V6_veqb_xor
  { 2797,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2797 = V6_veqh
  { 2798,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2798 = V6_veqh_and
  { 2799,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2799 = V6_veqh_or
  { 2800,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2800 = V6_veqh_xor
  { 2801,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2801 = V6_veqw
  { 2802,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2802 = V6_veqw_and
  { 2803,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2803 = V6_veqw_or
  { 2804,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2804 = V6_veqw_xor
  { 2805,	3,	0,	4,	249,	0|(1ULL<<MCID::MayLoad), 0x9000400000408007ULL, nullptr, ImplicitList50, OperandInfo276 },  // Inst #2805 = V6_vgathermh
  { 2806,	4,	0,	4,	250,	0|(1ULL<<MCID::MayLoad), 0x9000400000408007ULL, nullptr, ImplicitList50, OperandInfo277 },  // Inst #2806 = V6_vgathermhq
  { 2807,	3,	0,	4,	251,	0|(1ULL<<MCID::MayLoad), 0x9000400000408008ULL, nullptr, ImplicitList50, OperandInfo278 },  // Inst #2807 = V6_vgathermhw
  { 2808,	4,	0,	4,	252,	0|(1ULL<<MCID::MayLoad), 0x9000400000408008ULL, nullptr, ImplicitList50, OperandInfo279 },  // Inst #2808 = V6_vgathermhwq
  { 2809,	3,	0,	4,	249,	0|(1ULL<<MCID::MayLoad), 0x9000600000408007ULL, nullptr, ImplicitList50, OperandInfo276 },  // Inst #2809 = V6_vgathermw
  { 2810,	4,	0,	4,	250,	0|(1ULL<<MCID::MayLoad), 0x9000600000408007ULL, nullptr, ImplicitList50, OperandInfo277 },  // Inst #2810 = V6_vgathermwq
  { 2811,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2811 = V6_vgtb
  { 2812,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2812 = V6_vgtb_and
  { 2813,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2813 = V6_vgtb_or
  { 2814,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2814 = V6_vgtb_xor
  { 2815,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2815 = V6_vgth
  { 2816,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2816 = V6_vgth_and
  { 2817,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2817 = V6_vgth_or
  { 2818,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2818 = V6_vgth_xor
  { 2819,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2819 = V6_vgtub
  { 2820,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2820 = V6_vgtub_and
  { 2821,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2821 = V6_vgtub_or
  { 2822,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2822 = V6_vgtub_xor
  { 2823,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2823 = V6_vgtuh
  { 2824,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2824 = V6_vgtuh_and
  { 2825,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2825 = V6_vgtuh_or
  { 2826,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2826 = V6_vgtuh_xor
  { 2827,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2827 = V6_vgtuw
  { 2828,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2828 = V6_vgtuw_and
  { 2829,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2829 = V6_vgtuw_or
  { 2830,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2830 = V6_vgtuw_xor
  { 2831,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo95 },  // Inst #2831 = V6_vgtw
  { 2832,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2832 = V6_vgtw_and
  { 2833,	4,	1,	4,	227,	0, 0x8100000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2833 = V6_vgtw_or
  { 2834,	4,	1,	4,	227,	0, 0x8000000000000010ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2834 = V6_vgtw_xor
  { 2835,	0,	0,	4,	253,	0, 0x800000000000000aULL, nullptr, nullptr, nullptr },  // Inst #2835 = V6_vhist
  { 2836,	1,	0,	4,	254,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo74 },  // Inst #2836 = V6_vhistq
  { 2837,	3,	1,	4,	234,	0, 0x800000000000801eULL, nullptr, nullptr, OperandInfo280 },  // Inst #2837 = V6_vinsertwr
  { 2838,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2838 = V6_vlalignb
  { 2839,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo271 },  // Inst #2839 = V6_vlalignbi
  { 2840,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2840 = V6_vlsrb
  { 2841,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2841 = V6_vlsrh
  { 2842,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2842 = V6_vlsrhv
  { 2843,	3,	1,	4,	236,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo116 },  // Inst #2843 = V6_vlsrw
  { 2844,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2844 = V6_vlsrwv
  { 2845,	3,	1,	4,	255,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo281 },  // Inst #2845 = V6_vlut4
  { 2846,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2846 = V6_vlutvvb
  { 2847,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo270 },  // Inst #2847 = V6_vlutvvb_nm
  { 2848,	5,	1,	4,	256,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2848 = V6_vlutvvb_oracc
  { 2849,	5,	1,	4,	256,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo283 },  // Inst #2849 = V6_vlutvvb_oracci
  { 2850,	4,	1,	4,	233,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo271 },  // Inst #2850 = V6_vlutvvbi
  { 2851,	4,	1,	4,	244,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo275 },  // Inst #2851 = V6_vlutvwh
  { 2852,	4,	1,	4,	244,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo275 },  // Inst #2852 = V6_vlutvwh_nm
  { 2853,	5,	1,	4,	256,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo284 },  // Inst #2853 = V6_vlutvwh_oracc
  { 2854,	5,	1,	4,	256,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo285 },  // Inst #2854 = V6_vlutvwh_oracci
  { 2855,	4,	1,	4,	244,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo286 },  // Inst #2855 = V6_vlutvwhi
  { 2856,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2856 = V6_vmaxb
  { 2857,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2857 = V6_vmaxh
  { 2858,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2858 = V6_vmaxub
  { 2859,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2859 = V6_vmaxuh
  { 2860,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2860 = V6_vmaxw
  { 2861,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2861 = V6_vminb
  { 2862,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2862 = V6_vminh
  { 2863,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2863 = V6_vminub
  { 2864,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2864 = V6_vminuh
  { 2865,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2865 = V6_vminw
  { 2866,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2866 = V6_vmpabus
  { 2867,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2867 = V6_vmpabus_acc
  { 2868,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo107 },  // Inst #2868 = V6_vmpabusv
  { 2869,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2869 = V6_vmpabuu
  { 2870,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2870 = V6_vmpabuu_acc
  { 2871,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo107 },  // Inst #2871 = V6_vmpabuuv
  { 2872,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2872 = V6_vmpahb
  { 2873,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2873 = V6_vmpahb_acc
  { 2874,	4,	1,	4,	257,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo287 },  // Inst #2874 = V6_vmpahhsat
  { 2875,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #2875 = V6_vmpauhb
  { 2876,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #2876 = V6_vmpauhb_acc
  { 2877,	4,	1,	4,	257,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo287 },  // Inst #2877 = V6_vmpauhuhsat
  { 2878,	4,	1,	4,	257,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo287 },  // Inst #2878 = V6_vmpsuhuhsat
  { 2879,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2879 = V6_vmpybus
  { 2880,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo128 },  // Inst #2880 = V6_vmpybus_acc
  { 2881,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2881 = V6_vmpybusv
  { 2882,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2882 = V6_vmpybusv_acc
  { 2883,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2883 = V6_vmpybv
  { 2884,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2884 = V6_vmpybv_acc
  { 2885,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2885 = V6_vmpyewuh
  { 2886,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2886 = V6_vmpyewuh_64
  { 2887,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2887 = V6_vmpyh
  { 2888,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo128 },  // Inst #2888 = V6_vmpyh_acc
  { 2889,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo128 },  // Inst #2889 = V6_vmpyhsat_acc
  { 2890,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo116 },  // Inst #2890 = V6_vmpyhsrs
  { 2891,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo116 },  // Inst #2891 = V6_vmpyhss
  { 2892,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2892 = V6_vmpyhus
  { 2893,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2893 = V6_vmpyhus_acc
  { 2894,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2894 = V6_vmpyhv
  { 2895,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2895 = V6_vmpyhv_acc
  { 2896,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2896 = V6_vmpyhvsrs
  { 2897,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2897 = V6_vmpyieoh
  { 2898,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2898 = V6_vmpyiewh_acc
  { 2899,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2899 = V6_vmpyiewuh
  { 2900,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2900 = V6_vmpyiewuh_acc
  { 2901,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2901 = V6_vmpyih
  { 2902,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2902 = V6_vmpyih_acc
  { 2903,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2903 = V6_vmpyihb
  { 2904,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2904 = V6_vmpyihb_acc
  { 2905,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2905 = V6_vmpyiowh
  { 2906,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2906 = V6_vmpyiwb
  { 2907,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2907 = V6_vmpyiwb_acc
  { 2908,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo116 },  // Inst #2908 = V6_vmpyiwh
  { 2909,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo115 },  // Inst #2909 = V6_vmpyiwh_acc
  { 2910,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2910 = V6_vmpyiwub
  { 2911,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2911 = V6_vmpyiwub_acc
  { 2912,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2912 = V6_vmpyowh
  { 2913,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2913 = V6_vmpyowh_64_acc
  { 2914,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo106 },  // Inst #2914 = V6_vmpyowh_rnd
  { 2915,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2915 = V6_vmpyowh_rnd_sacc
  { 2916,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2916 = V6_vmpyowh_sacc
  { 2917,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2917 = V6_vmpyub
  { 2918,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo128 },  // Inst #2918 = V6_vmpyub_acc
  { 2919,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2919 = V6_vmpyubv
  { 2920,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2920 = V6_vmpyubv_acc
  { 2921,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo129 },  // Inst #2921 = V6_vmpyuh
  { 2922,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo128 },  // Inst #2922 = V6_vmpyuh_acc
  { 2923,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2923 = V6_vmpyuhe
  { 2924,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2924 = V6_vmpyuhe_acc
  { 2925,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #2925 = V6_vmpyuhv
  { 2926,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo109 },  // Inst #2926 = V6_vmpyuhv_acc
  { 2927,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo268 },  // Inst #2927 = V6_vmux
  { 2928,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2928 = V6_vnavgb
  { 2929,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2929 = V6_vnavgh
  { 2930,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2930 = V6_vnavgub
  { 2931,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2931 = V6_vnavgw
  { 2932,	4,	1,	4,	46,	0, 0x8000000000008c11ULL, nullptr, nullptr, OperandInfo273 },  // Inst #2932 = V6_vnccombine
  { 2933,	3,	1,	4,	44,	0, 0x8000000000008c10ULL, nullptr, nullptr, OperandInfo274 },  // Inst #2933 = V6_vncmov
  { 2934,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2934 = V6_vnormamth
  { 2935,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2935 = V6_vnormamtw
  { 2936,	2,	1,	4,	60,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo105 },  // Inst #2936 = V6_vnot
  { 2937,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2937 = V6_vor
  { 2938,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2938 = V6_vpackeb
  { 2939,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2939 = V6_vpackeh
  { 2940,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2940 = V6_vpackhb_sat
  { 2941,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2941 = V6_vpackhub_sat
  { 2942,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2942 = V6_vpackob
  { 2943,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2943 = V6_vpackoh
  { 2944,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2944 = V6_vpackwh_sat
  { 2945,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2945 = V6_vpackwuh_sat
  { 2946,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo105 },  // Inst #2946 = V6_vpopcounth
  { 2947,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo288 },  // Inst #2947 = V6_vprefixqb
  { 2948,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo288 },  // Inst #2948 = V6_vprefixqh
  { 2949,	2,	1,	4,	240,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo288 },  // Inst #2949 = V6_vprefixqw
  { 2950,	3,	1,	4,	243,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2950 = V6_vrdelta
  { 2951,	3,	1,	4,	258,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo131 },  // Inst #2951 = V6_vrmpybub_rtt
  { 2952,	4,	1,	4,	259,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo130 },  // Inst #2952 = V6_vrmpybub_rtt_acc
  { 2953,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2953 = V6_vrmpybus
  { 2954,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2954 = V6_vrmpybus_acc
  { 2955,	4,	1,	4,	260,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo133 },  // Inst #2955 = V6_vrmpybusi
  { 2956,	5,	1,	4,	261,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo132 },  // Inst #2956 = V6_vrmpybusi_acc
  { 2957,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2957 = V6_vrmpybusv
  { 2958,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2958 = V6_vrmpybusv_acc
  { 2959,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2959 = V6_vrmpybv
  { 2960,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2960 = V6_vrmpybv_acc
  { 2961,	3,	1,	4,	245,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo116 },  // Inst #2961 = V6_vrmpyub
  { 2962,	4,	1,	4,	246,	0, 0x810000000000801cULL, nullptr, nullptr, OperandInfo115 },  // Inst #2962 = V6_vrmpyub_acc
  { 2963,	3,	1,	4,	258,	0, 0x800000000000801bULL, nullptr, nullptr, OperandInfo131 },  // Inst #2963 = V6_vrmpyub_rtt
  { 2964,	4,	1,	4,	259,	0, 0x810000000000801bULL, nullptr, nullptr, OperandInfo130 },  // Inst #2964 = V6_vrmpyub_rtt_acc
  { 2965,	4,	1,	4,	260,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo133 },  // Inst #2965 = V6_vrmpyubi
  { 2966,	5,	1,	4,	261,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo132 },  // Inst #2966 = V6_vrmpyubi_acc
  { 2967,	3,	1,	4,	226,	0, 0x800000000000801cULL, nullptr, nullptr, OperandInfo106 },  // Inst #2967 = V6_vrmpyubv
  { 2968,	4,	1,	4,	232,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo123 },  // Inst #2968 = V6_vrmpyubv_acc
  { 2969,	3,	1,	4,	262,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2969 = V6_vrmpyzbb_rt
  { 2970,	4,	1,	4,	263,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2970 = V6_vrmpyzbb_rt_acc
  { 2971,	4,	2,	4,	264,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2971 = V6_vrmpyzbb_rx
  { 2972,	5,	2,	4,	265,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2972 = V6_vrmpyzbb_rx_acc
  { 2973,	3,	1,	4,	262,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2973 = V6_vrmpyzbub_rt
  { 2974,	4,	1,	4,	263,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2974 = V6_vrmpyzbub_rt_acc
  { 2975,	4,	2,	4,	264,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2975 = V6_vrmpyzbub_rx
  { 2976,	5,	2,	4,	265,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2976 = V6_vrmpyzbub_rx_acc
  { 2977,	3,	1,	4,	262,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2977 = V6_vrmpyzcb_rt
  { 2978,	4,	1,	4,	263,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2978 = V6_vrmpyzcb_rt_acc
  { 2979,	4,	2,	4,	264,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2979 = V6_vrmpyzcb_rx
  { 2980,	5,	2,	4,	265,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2980 = V6_vrmpyzcb_rx_acc
  { 2981,	3,	1,	4,	262,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2981 = V6_vrmpyzcbs_rt
  { 2982,	4,	1,	4,	263,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2982 = V6_vrmpyzcbs_rt_acc
  { 2983,	4,	2,	4,	264,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2983 = V6_vrmpyzcbs_rx
  { 2984,	5,	2,	4,	265,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2984 = V6_vrmpyzcbs_rx_acc
  { 2985,	3,	1,	4,	262,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo289 },  // Inst #2985 = V6_vrmpyznb_rt
  { 2986,	4,	1,	4,	263,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo290 },  // Inst #2986 = V6_vrmpyznb_rt_acc
  { 2987,	4,	2,	4,	264,	0, 0x8000000000008006ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2987 = V6_vrmpyznb_rx
  { 2988,	5,	2,	4,	265,	0, 0x8100000000008006ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2988 = V6_vrmpyznb_rx_acc
  { 2989,	3,	1,	4,	266,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo116 },  // Inst #2989 = V6_vror
  { 2990,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2990 = V6_vrotr
  { 2991,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2991 = V6_vroundhb
  { 2992,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2992 = V6_vroundhub
  { 2993,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2993 = V6_vrounduhub
  { 2994,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2994 = V6_vrounduwuh
  { 2995,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2995 = V6_vroundwh
  { 2996,	3,	1,	4,	230,	0, 0x800000000000801aULL, nullptr, nullptr, OperandInfo106 },  // Inst #2996 = V6_vroundwuh
  { 2997,	4,	1,	4,	260,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo133 },  // Inst #2997 = V6_vrsadubi
  { 2998,	5,	1,	4,	261,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo132 },  // Inst #2998 = V6_vrsadubi_acc
  { 2999,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #2999 = V6_vsatdw
  { 3000,	3,	1,	4,	267,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3000 = V6_vsathub
  { 3001,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3001 = V6_vsatuwuh
  { 3002,	3,	1,	4,	267,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3002 = V6_vsatwh
  { 3003,	2,	1,	4,	268,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3003 = V6_vsb
  { 3004,	4,	0,	4,	269,	0|(1ULL<<MCID::MayStore), 0x800040000000000bULL, nullptr, nullptr, OperandInfo135 },  // Inst #3004 = V6_vscattermh
  { 3005,	4,	0,	4,	269,	0|(1ULL<<MCID::MayStore), 0x810040000000000bULL, nullptr, nullptr, OperandInfo135 },  // Inst #3005 = V6_vscattermh_add
  { 3006,	5,	0,	4,	270,	0|(1ULL<<MCID::MayStore), 0x800040000000000bULL, nullptr, nullptr, OperandInfo136 },  // Inst #3006 = V6_vscattermhq
  { 3007,	4,	0,	4,	271,	0|(1ULL<<MCID::MayStore), 0x800040000000000cULL, nullptr, nullptr, OperandInfo137 },  // Inst #3007 = V6_vscattermhw
  { 3008,	4,	0,	4,	271,	0|(1ULL<<MCID::MayStore), 0x810040000000000cULL, nullptr, nullptr, OperandInfo137 },  // Inst #3008 = V6_vscattermhw_add
  { 3009,	5,	0,	4,	272,	0|(1ULL<<MCID::MayStore), 0x800040000000000cULL, nullptr, nullptr, OperandInfo138 },  // Inst #3009 = V6_vscattermhwq
  { 3010,	4,	0,	4,	269,	0|(1ULL<<MCID::MayStore), 0x800060000000000bULL, nullptr, nullptr, OperandInfo135 },  // Inst #3010 = V6_vscattermw
  { 3011,	4,	0,	4,	269,	0|(1ULL<<MCID::MayStore), 0x810060000000000bULL, nullptr, nullptr, OperandInfo135 },  // Inst #3011 = V6_vscattermw_add
  { 3012,	5,	0,	4,	270,	0|(1ULL<<MCID::MayStore), 0x800060000000000bULL, nullptr, nullptr, OperandInfo136 },  // Inst #3012 = V6_vscattermwq
  { 3013,	2,	1,	4,	268,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3013 = V6_vsh
  { 3014,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3014 = V6_vshufeh
  { 3015,	5,	2,	4,	241,	0, 0x8030000000008019ULL, nullptr, nullptr, OperandInfo139 },  // Inst #3015 = V6_vshuff
  { 3016,	2,	1,	4,	242,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3016 = V6_vshuffb
  { 3017,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3017 = V6_vshuffeb
  { 3018,	2,	1,	4,	242,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo105 },  // Inst #3018 = V6_vshuffh
  { 3019,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3019 = V6_vshuffob
  { 3020,	4,	1,	4,	244,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo275 },  // Inst #3020 = V6_vshuffvdd
  { 3021,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo110 },  // Inst #3021 = V6_vshufoeb
  { 3022,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo110 },  // Inst #3022 = V6_vshufoeh
  { 3023,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3023 = V6_vshufoh
  { 3024,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3024 = V6_vsubb
  { 3025,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3025 = V6_vsubb_dv
  { 3026,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3026 = V6_vsubbnq
  { 3027,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3027 = V6_vsubbq
  { 3028,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3028 = V6_vsubbsat
  { 3029,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3029 = V6_vsubbsat_dv
  { 3030,	5,	2,	4,	228,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo267 },  // Inst #3030 = V6_vsubcarry
  { 3031,	4,	2,	4,	229,	0, 0x8030000000008010ULL, nullptr, nullptr, OperandInfo268 },  // Inst #3031 = V6_vsubcarryo
  { 3032,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3032 = V6_vsubh
  { 3033,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3033 = V6_vsubh_dv
  { 3034,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3034 = V6_vsubhnq
  { 3035,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3035 = V6_vsubhq
  { 3036,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3036 = V6_vsubhsat
  { 3037,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3037 = V6_vsubhsat_dv
  { 3038,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #3038 = V6_vsubhw
  { 3039,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #3039 = V6_vsububh
  { 3040,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3040 = V6_vsububsat
  { 3041,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3041 = V6_vsububsat_dv
  { 3042,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3042 = V6_vsubububb_sat
  { 3043,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3043 = V6_vsubuhsat
  { 3044,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3044 = V6_vsubuhsat_dv
  { 3045,	3,	1,	4,	231,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo110 },  // Inst #3045 = V6_vsubuhw
  { 3046,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3046 = V6_vsubuwsat
  { 3047,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3047 = V6_vsubuwsat_dv
  { 3048,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3048 = V6_vsubw
  { 3049,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3049 = V6_vsubw_dv
  { 3050,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3050 = V6_vsubwnq
  { 3051,	4,	1,	4,	227,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo108 },  // Inst #3051 = V6_vsubwq
  { 3052,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3052 = V6_vsubwsat
  { 3053,	3,	1,	4,	41,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo107 },  // Inst #3053 = V6_vsubwsat_dv
  { 3054,	4,	1,	4,	273,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo293 },  // Inst #3054 = V6_vswap
  { 3055,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #3055 = V6_vtmpyb
  { 3056,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #3056 = V6_vtmpyb_acc
  { 3057,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #3057 = V6_vtmpybus
  { 3058,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #3058 = V6_vtmpybus_acc
  { 3059,	3,	1,	4,	247,	0, 0x800000000000801dULL, nullptr, nullptr, OperandInfo120 },  // Inst #3059 = V6_vtmpyhb
  { 3060,	4,	1,	4,	248,	0, 0x810000000000801dULL, nullptr, nullptr, OperandInfo119 },  // Inst #3060 = V6_vtmpyhb_acc
  { 3061,	2,	1,	4,	274,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3061 = V6_vunpackb
  { 3062,	2,	1,	4,	274,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3062 = V6_vunpackh
  { 3063,	3,	1,	4,	275,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo140 },  // Inst #3063 = V6_vunpackob
  { 3064,	3,	1,	4,	275,	0, 0x8100000000008019ULL, nullptr, nullptr, OperandInfo140 },  // Inst #3064 = V6_vunpackoh
  { 3065,	2,	1,	4,	274,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3065 = V6_vunpackub
  { 3066,	2,	1,	4,	274,	0, 0x8000000000008019ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3066 = V6_vunpackuh
  { 3067,	0,	0,	4,	253,	0, 0x800000000000000aULL, nullptr, nullptr, nullptr },  // Inst #3067 = V6_vwhist128
  { 3068,	1,	0,	4,	276,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo2 },  // Inst #3068 = V6_vwhist128m
  { 3069,	1,	0,	4,	254,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo74 },  // Inst #3069 = V6_vwhist128q
  { 3070,	2,	0,	4,	277,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo294 },  // Inst #3070 = V6_vwhist128qm
  { 3071,	0,	0,	4,	253,	0, 0x800000000000000aULL, nullptr, nullptr, nullptr },  // Inst #3071 = V6_vwhist256
  { 3072,	0,	0,	4,	253,	0, 0x800000000000000aULL, nullptr, nullptr, nullptr },  // Inst #3072 = V6_vwhist256_sat
  { 3073,	1,	0,	4,	254,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo74 },  // Inst #3073 = V6_vwhist256q
  { 3074,	1,	0,	4,	254,	0, 0x800000000000000aULL, nullptr, nullptr, OperandInfo74 },  // Inst #3074 = V6_vwhist256q_sat
  { 3075,	3,	1,	4,	37,	0, 0x8000000000008010ULL, nullptr, nullptr, OperandInfo106 },  // Inst #3075 = V6_vxor
  { 3076,	2,	1,	4,	268,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3076 = V6_vzb
  { 3077,	2,	1,	4,	268,	0, 0x8000000000008011ULL, nullptr, nullptr, OperandInfo134 },  // Inst #3077 = V6_vzh
  { 3078,	2,	0,	4,	278,	0|(1ULL<<MCID::MayLoad), 0x80000c800000001fULL, nullptr, nullptr, OperandInfo44 },  // Inst #3078 = V6_zLd_ai
  { 3079,	3,	1,	4,	279,	0|(1ULL<<MCID::MayLoad), 0x800018800000001fULL, nullptr, nullptr, OperandInfo145 },  // Inst #3079 = V6_zLd_pi
  { 3080,	3,	1,	4,	279,	0|(1ULL<<MCID::MayLoad), 0x800018800000001fULL, nullptr, nullptr, OperandInfo266 },  // Inst #3080 = V6_zLd_ppu
  { 3081,	3,	0,	4,	280,	0|(1ULL<<MCID::MayLoad), 0x80000c800000041fULL, nullptr, nullptr, OperandInfo52 },  // Inst #3081 = V6_zLd_pred_ai
  { 3082,	4,	1,	4,	281,	0|(1ULL<<MCID::MayLoad), 0x800018800000041fULL, nullptr, nullptr, OperandInfo295 },  // Inst #3082 = V6_zLd_pred_pi
  { 3083,	4,	1,	4,	281,	0|(1ULL<<MCID::MayLoad), 0x800018800000041fULL, nullptr, nullptr, OperandInfo296 },  // Inst #3083 = V6_zLd_pred_ppu
  { 3084,	2,	1,	4,	199,	0, 0x8000000000008018ULL, nullptr, nullptr, OperandInfo99 },  // Inst #3084 = V6_zextract
  { 3085,	0,	0,	4,	282,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x129ULL, nullptr, nullptr, nullptr },  // Inst #3085 = Y2_barrier
  { 3086,	0,	0,	4,	283,	0, 0x85ULL, nullptr, nullptr, nullptr },  // Inst #3086 = Y2_break
  { 3087,	1,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x229ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3087 = Y2_dccleana
  { 3088,	1,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x229ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3088 = Y2_dccleaninva
  { 3089,	2,	0,	4,	285,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xc8000000024ULL, nullptr, nullptr, OperandInfo44 },  // Inst #3089 = Y2_dcfetchbo
  { 3090,	1,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x229ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3090 = Y2_dcinva
  { 3091,	1,	0,	4,	284,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x229ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3091 = Y2_dczeroa
  { 3092,	1,	0,	4,	286,	0, 0xa3ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3092 = Y2_icinva
  { 3093,	0,	0,	4,	287,	0, 0xa3ULL, nullptr, nullptr, nullptr },  // Inst #3093 = Y2_isync
  { 3094,	0,	0,	4,	282,	0, 0xa9ULL, nullptr, nullptr, nullptr },  // Inst #3094 = Y2_syncht
  { 3095,	1,	0,	4,	288,	0, 0x85ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3095 = Y2_wait
  { 3096,	2,	0,	4,	289,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x129ULL, nullptr, nullptr, OperandInfo45 },  // Inst #3096 = Y4_l2fetch
  { 3097,	1,	0,	4,	290,	0, 0x105ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3097 = Y4_trace
  { 3098,	2,	0,	4,	289,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x129ULL, nullptr, nullptr, OperandInfo90 },  // Inst #3098 = Y5_l2fetch
  { 3099,	1,	0,	4,	288,	0, 0x5ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3099 = Y6_diag
  { 3100,	2,	0,	4,	291,	0, 0x5ULL, nullptr, nullptr, OperandInfo47 },  // Inst #3100 = Y6_diag0
  { 3101,	2,	0,	4,	291,	0, 0x5ULL, nullptr, nullptr, OperandInfo47 },  // Inst #3101 = Y6_diag1
  { 3102,	2,	0,	4,	168,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0xa9ULL, nullptr, nullptr, OperandInfo45 },  // Inst #3102 = Y6_dmlink
  { 3103,	1,	1,	4,	292,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80a9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3103 = Y6_dmpause
  { 3104,	1,	1,	4,	292,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80a9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3104 = Y6_dmpoll
  { 3105,	1,	0,	4,	157,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0xa9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3105 = Y6_dmresume
  { 3106,	1,	0,	4,	157,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0xa9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3106 = Y6_dmstart
  { 3107,	1,	1,	4,	292,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80a9ULL, nullptr, nullptr, OperandInfo79 },  // Inst #3107 = Y6_dmwait
  { 3108,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #3108 = dep_A2_addsat
  { 3109,	3,	1,	4,	73,	0, 0x200000000008003ULL, nullptr, ImplicitList22, OperandInfo63 },  // Inst #3109 = dep_A2_subsat
  { 3110,	3,	1,	4,	8,	0, 0x3ULL, nullptr, nullptr, OperandInfo149 },  // Inst #3110 = dep_S2_packhl
  { 3111,	0,	0,	4,	293,	0, 0x0ULL, nullptr, nullptr, nullptr },  // Inst #3111 = invalid_decode
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char HexagonInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "V6_v6mpyhubs10\0"
  /* 24 */ "V6_v6mpyvubs10\0"
  /* 39 */ "ENDLOOP0\0"
  /* 48 */ "V6_vdd0\0"
  /* 56 */ "PS_vdd0\0"
  /* 64 */ "V6_ld0\0"
  /* 71 */ "V6_zld0\0"
  /* 79 */ "V6_vd0\0"
  /* 86 */ "Y6_diag0\0"
  /* 95 */ "SS2_storebi0\0"
  /* 108 */ "SS2_storewi0\0"
  /* 121 */ "S2_cl0\0"
  /* 128 */ "V6_stn0\0"
  /* 136 */ "J2_trap0\0"
  /* 145 */ "V6_ldcp0\0"
  /* 154 */ "V6_ldp0\0"
  /* 162 */ "V6_zldp0\0"
  /* 171 */ "V6_ldcnp0\0"
  /* 181 */ "V6_ldnp0\0"
  /* 190 */ "V6_ldtnp0\0"
  /* 200 */ "V6_stnp0\0"
  /* 209 */ "V6_stunp0\0"
  /* 219 */ "J2_endloop0\0"
  /* 231 */ "V6_ldtp0\0"
  /* 240 */ "V6_stp0\0"
  /* 248 */ "V6_stup0\0"
  /* 257 */ "V6_stnq0\0"
  /* 266 */ "V6_stq0\0"
  /* 274 */ "M2_vrmac_s0\0"
  /* 286 */ "M2_dpmpyss_nac_s0\0"
  /* 304 */ "M2_dpmpyuu_nac_s0\0"
  /* 322 */ "M4_vrmpyeh_acc_s0\0"
  /* 340 */ "M4_vrmpyoh_acc_s0\0"
  /* 358 */ "M2_dpmpyss_acc_s0\0"
  /* 376 */ "M2_dpmpyuu_acc_s0\0"
  /* 394 */ "M2_cmacsc_s0\0"
  /* 407 */ "M2_cnacsc_s0\0"
  /* 420 */ "M2_cmpyrsc_s0\0"
  /* 434 */ "M2_cmpysc_s0\0"
  /* 447 */ "M2_dpmpyss_rnd_s0\0"
  /* 465 */ "M4_vrmpyeh_s0\0"
  /* 479 */ "M2_mpyud_nac_hh_s0\0"
  /* 498 */ "M2_mpyd_nac_hh_s0\0"
  /* 516 */ "M2_mpyu_nac_hh_s0\0"
  /* 534 */ "M2_mpy_nac_hh_s0\0"
  /* 551 */ "M2_mpyud_acc_hh_s0\0"
  /* 570 */ "M2_mpyd_acc_hh_s0\0"
  /* 588 */ "M2_mpyu_acc_hh_s0\0"
  /* 606 */ "M2_mpy_acc_hh_s0\0"
  /* 623 */ "M2_mpyd_rnd_hh_s0\0"
  /* 641 */ "M2_mpy_sat_rnd_hh_s0\0"
  /* 662 */ "M2_mpy_rnd_hh_s0\0"
  /* 679 */ "M2_mpyud_hh_s0\0"
  /* 694 */ "M2_mpyd_hh_s0\0"
  /* 708 */ "M2_mpy_nac_sat_hh_s0\0"
  /* 729 */ "M2_mpy_acc_sat_hh_s0\0"
  /* 750 */ "M2_mpy_sat_hh_s0\0"
  /* 767 */ "M2_mpyu_hh_s0\0"
  /* 781 */ "M2_mpy_hh_s0\0"
  /* 794 */ "M2_mpyud_nac_lh_s0\0"
  /* 813 */ "M2_mpyd_nac_lh_s0\0"
  /* 831 */ "M2_mpyu_nac_lh_s0\0"
  /* 849 */ "M2_mpy_nac_lh_s0\0"
  /* 866 */ "M2_mpyud_acc_lh_s0\0"
  /* 885 */ "M2_mpyd_acc_lh_s0\0"
  /* 903 */ "M2_mpyu_acc_lh_s0\0"
  /* 921 */ "M2_mpy_acc_lh_s0\0"
  /* 938 */ "M2_mpyd_rnd_lh_s0\0"
  /* 956 */ "M2_mpy_sat_rnd_lh_s0\0"
  /* 977 */ "M2_mpy_rnd_lh_s0\0"
  /* 994 */ "M2_mpyud_lh_s0\0"
  /* 1009 */ "M2_mpyd_lh_s0\0"
  /* 1023 */ "M2_mpy_nac_sat_lh_s0\0"
  /* 1044 */ "M2_mpy_acc_sat_lh_s0\0"
  /* 1065 */ "M2_mpy_sat_lh_s0\0"
  /* 1082 */ "M2_mpyu_lh_s0\0"
  /* 1096 */ "M2_mpy_lh_s0\0"
  /* 1109 */ "M4_vrmpyoh_s0\0"
  /* 1123 */ "M2_mmpyuh_s0\0"
  /* 1136 */ "M2_mmpyh_s0\0"
  /* 1148 */ "M2_cmaci_s0\0"
  /* 1160 */ "M2_vrcmaci_s0\0"
  /* 1174 */ "M2_cmpyi_s0\0"
  /* 1186 */ "M2_vrcmpyi_s0\0"
  /* 1200 */ "M2_mpyud_nac_hl_s0\0"
  /* 1219 */ "M2_mpyd_nac_hl_s0\0"
  /* 1237 */ "M2_mpyu_nac_hl_s0\0"
  /* 1255 */ "M2_mpy_nac_hl_s0\0"
  /* 1272 */ "M2_mpyud_acc_hl_s0\0"
  /* 1291 */ "M2_mpyd_acc_hl_s0\0"
  /* 1309 */ "M2_mpyu_acc_hl_s0\0"
  /* 1327 */ "M2_mpy_acc_hl_s0\0"
  /* 1344 */ "M2_mpyd_rnd_hl_s0\0"
  /* 1362 */ "M2_mpy_sat_rnd_hl_s0\0"
  /* 1383 */ "M2_mpy_rnd_hl_s0\0"
  /* 1400 */ "M2_mpyud_hl_s0\0"
  /* 1415 */ "M2_mpyd_hl_s0\0"
  /* 1429 */ "M2_mpy_nac_sat_hl_s0\0"
  /* 1450 */ "M2_mpy_acc_sat_hl_s0\0"
  /* 1471 */ "M2_mpy_sat_hl_s0\0"
  /* 1488 */ "M2_mpyu_hl_s0\0"
  /* 1502 */ "M2_mpy_hl_s0\0"
  /* 1515 */ "M2_mpyud_nac_ll_s0\0"
  /* 1534 */ "M2_mpyd_nac_ll_s0\0"
  /* 1552 */ "M2_mpyu_nac_ll_s0\0"
  /* 1570 */ "M2_mpy_nac_ll_s0\0"
  /* 1587 */ "M2_mpyud_acc_ll_s0\0"
  /* 1606 */ "M2_mpyd_acc_ll_s0\0"
  /* 1624 */ "M2_mpyu_acc_ll_s0\0"
  /* 1642 */ "M2_mpy_acc_ll_s0\0"
  /* 1659 */ "M2_mpyd_rnd_ll_s0\0"
  /* 1677 */ "M2_mpy_sat_rnd_ll_s0\0"
  /* 1698 */ "M2_mpy_rnd_ll_s0\0"
  /* 1715 */ "M2_mpyud_ll_s0\0"
  /* 1730 */ "M2_mpyd_ll_s0\0"
  /* 1744 */ "M2_mpy_nac_sat_ll_s0\0"
  /* 1765 */ "M2_mpy_acc_sat_ll_s0\0"
  /* 1786 */ "M2_mpy_sat_ll_s0\0"
  /* 1803 */ "M2_mpyu_ll_s0\0"
  /* 1817 */ "M2_mpy_ll_s0\0"
  /* 1830 */ "M2_mmpyul_s0\0"
  /* 1843 */ "M2_mmpyl_s0\0"
  /* 1855 */ "M2_cmacr_s0\0"
  /* 1867 */ "M2_vrcmacr_s0\0"
  /* 1881 */ "M2_cmpyr_s0\0"
  /* 1893 */ "M2_vrcmpyr_s0\0"
  /* 1907 */ "M2_vmac2s_s0\0"
  /* 1920 */ "M2_vmpy2s_s0\0"
  /* 1933 */ "M2_cmacs_s0\0"
  /* 1945 */ "M2_vdmacs_s0\0"
  /* 1958 */ "M2_cnacs_s0\0"
  /* 1970 */ "M2_vmac2es_s0\0"
  /* 1984 */ "M2_vmpy2es_s0\0"
  /* 1998 */ "M2_mmachs_s0\0"
  /* 2011 */ "M2_mmacuhs_s0\0"
  /* 2025 */ "M2_mmacls_s0\0"
  /* 2038 */ "M2_mmaculs_s0\0"
  /* 2052 */ "M2_cmpyrs_s0\0"
  /* 2065 */ "M2_vdmpyrs_s0\0"
  /* 2079 */ "M2_dpmpyss_s0\0"
  /* 2093 */ "M2_cmpys_s0\0"
  /* 2105 */ "M2_vdmpys_s0\0"
  /* 2118 */ "M2_vmac2su_s0\0"
  /* 2132 */ "M2_vmpy2su_s0\0"
  /* 2146 */ "M2_dpmpyuu_s0\0"
  /* 2160 */ "M2_vrmpy_s0\0"
  /* 2172 */ "M2_mmpyuh_rs0\0"
  /* 2186 */ "M2_mmpyh_rs0\0"
  /* 2199 */ "M2_mmpyul_rs0\0"
  /* 2213 */ "M2_mmpyl_rs0\0"
  /* 2226 */ "M2_mmachs_rs0\0"
  /* 2240 */ "M2_mmacuhs_rs0\0"
  /* 2255 */ "M2_mmacls_rs0\0"
  /* 2269 */ "M2_mmaculs_rs0\0"
  /* 2284 */ "DuplexIClass0\0"
  /* 2298 */ "S2_ct0\0"
  /* 2305 */ "V6_ldnt0\0"
  /* 2314 */ "V6_stnnt0\0"
  /* 2324 */ "V6_ldcpnt0\0"
  /* 2335 */ "V6_ldpnt0\0"
  /* 2345 */ "V6_ldcnpnt0\0"
  /* 2357 */ "V6_ldnpnt0\0"
  /* 2368 */ "V6_ldtnpnt0\0"
  /* 2380 */ "V6_stnpnt0\0"
  /* 2391 */ "V6_ldtpnt0\0"
  /* 2402 */ "V6_stpnt0\0"
  /* 2412 */ "V6_stnqnt0\0"
  /* 2423 */ "V6_stqnt0\0"
  /* 2433 */ "V6_ldntnt0\0"
  /* 2444 */ "V6_stnt0\0"
  /* 2453 */ "V6_st0\0"
  /* 2460 */ "V6_ldu0\0"
  /* 2468 */ "V6_stu0\0"
  /* 2476 */ "ENDLOOP01\0"
  /* 2486 */ "J2_endloop01\0"
  /* 2499 */ "SL2_jumpr31\0"
  /* 2511 */ "ENDLOOP1\0"
  /* 2520 */ "SA1_and1\0"
  /* 2529 */ "Y6_diag1\0"
  /* 2538 */ "SS2_storebi1\0"
  /* 2551 */ "SS2_storewi1\0"
  /* 2564 */ "S2_cl1\0"
  /* 2571 */ "SA1_setin1\0"
  /* 2582 */ "J2_trap1\0"
  /* 2591 */ "PS_trap1\0"
  /* 2600 */ "J2_endloop1\0"
  /* 2612 */ "M4_vrmpyeh_acc_s1\0"
  /* 2630 */ "M4_vrmpyoh_acc_s1\0"
  /* 2648 */ "M2_vrcmpys_acc_s1\0"
  /* 2666 */ "M2_cmacsc_s1\0"
  /* 2679 */ "M2_cnacsc_s1\0"
  /* 2692 */ "M2_cmpyrsc_s1\0"
  /* 2706 */ "M2_cmpysc_s1\0"
  /* 2719 */ "M4_vrmpyeh_s1\0"
  /* 2733 */ "M2_mpyud_nac_hh_s1\0"
  /* 2752 */ "M2_mpyd_nac_hh_s1\0"
  /* 2770 */ "M2_mpyu_nac_hh_s1\0"
  /* 2788 */ "M2_mpy_nac_hh_s1\0"
  /* 2805 */ "M2_mpyud_acc_hh_s1\0"
  /* 2824 */ "M2_mpyd_acc_hh_s1\0"
  /* 2842 */ "M2_mpyu_acc_hh_s1\0"
  /* 2860 */ "M2_mpy_acc_hh_s1\0"
  /* 2877 */ "M2_mpyd_rnd_hh_s1\0"
  /* 2895 */ "M2_mpy_sat_rnd_hh_s1\0"
  /* 2916 */ "M2_mpy_rnd_hh_s1\0"
  /* 2933 */ "M2_mpyud_hh_s1\0"
  /* 2948 */ "M2_mpyd_hh_s1\0"
  /* 2962 */ "M2_mpy_nac_sat_hh_s1\0"
  /* 2983 */ "M2_mpy_acc_sat_hh_s1\0"
  /* 3004 */ "M2_mpy_sat_hh_s1\0"
  /* 3021 */ "M2_mpyu_hh_s1\0"
  /* 3035 */ "M2_mpy_hh_s1\0"
  /* 3048 */ "M2_mpyud_nac_lh_s1\0"
  /* 3067 */ "M2_mpyd_nac_lh_s1\0"
  /* 3085 */ "M2_mpyu_nac_lh_s1\0"
  /* 3103 */ "M2_mpy_nac_lh_s1\0"
  /* 3120 */ "M2_mpyud_acc_lh_s1\0"
  /* 3139 */ "M2_mpyd_acc_lh_s1\0"
  /* 3157 */ "M2_mpyu_acc_lh_s1\0"
  /* 3175 */ "M2_mpy_acc_lh_s1\0"
  /* 3192 */ "M2_mpyd_rnd_lh_s1\0"
  /* 3210 */ "M2_mpy_sat_rnd_lh_s1\0"
  /* 3231 */ "M2_mpy_rnd_lh_s1\0"
  /* 3248 */ "M2_mpyud_lh_s1\0"
  /* 3263 */ "M2_mpyd_lh_s1\0"
  /* 3277 */ "M2_mpy_nac_sat_lh_s1\0"
  /* 3298 */ "M2_mpy_acc_sat_lh_s1\0"
  /* 3319 */ "M2_mpy_sat_lh_s1\0"
  /* 3336 */ "M2_mpyu_lh_s1\0"
  /* 3350 */ "M2_mpy_lh_s1\0"
  /* 3363 */ "M4_vrmpyoh_s1\0"
  /* 3377 */ "M2_mmpyuh_s1\0"
  /* 3390 */ "M2_mmpyh_s1\0"
  /* 3402 */ "M2_hmmpyh_s1\0"
  /* 3415 */ "M2_mpyud_nac_hl_s1\0"
  /* 3434 */ "M2_mpyd_nac_hl_s1\0"
  /* 3452 */ "M2_mpyu_nac_hl_s1\0"
  /* 3470 */ "M2_mpy_nac_hl_s1\0"
  /* 3487 */ "M2_mpyud_acc_hl_s1\0"
  /* 3506 */ "M2_mpyd_acc_hl_s1\0"
  /* 3524 */ "M2_mpyu_acc_hl_s1\0"
  /* 3542 */ "M2_mpy_acc_hl_s1\0"
  /* 3559 */ "M2_mpyd_rnd_hl_s1\0"
  /* 3577 */ "M2_mpy_sat_rnd_hl_s1\0"
  /* 3598 */ "M2_mpy_rnd_hl_s1\0"
  /* 3615 */ "M2_mpyud_hl_s1\0"
  /* 3630 */ "M2_mpyd_hl_s1\0"
  /* 3644 */ "M2_mpy_nac_sat_hl_s1\0"
  /* 3665 */ "M2_mpy_acc_sat_hl_s1\0"
  /* 3686 */ "M2_mpy_sat_hl_s1\0"
  /* 3703 */ "M2_mpyu_hl_s1\0"
  /* 3717 */ "M2_mpy_hl_s1\0"
  /* 3730 */ "M2_mpyud_nac_ll_s1\0"
  /* 3749 */ "M2_mpyd_nac_ll_s1\0"
  /* 3767 */ "M2_mpyu_nac_ll_s1\0"
  /* 3785 */ "M2_mpy_nac_ll_s1\0"
  /* 3802 */ "M2_mpyud_acc_ll_s1\0"
  /* 3821 */ "M2_mpyd_acc_ll_s1\0"
  /* 3839 */ "M2_mpyu_acc_ll_s1\0"
  /* 3857 */ "M2_mpy_acc_ll_s1\0"
  /* 3874 */ "M2_mpyd_rnd_ll_s1\0"
  /* 3892 */ "M2_mpy_sat_rnd_ll_s1\0"
  /* 3913 */ "M2_mpy_rnd_ll_s1\0"
  /* 3930 */ "M2_mpyud_ll_s1\0"
  /* 3945 */ "M2_mpyd_ll_s1\0"
  /* 3959 */ "M2_mpy_nac_sat_ll_s1\0"
  /* 3980 */ "M2_mpy_acc_sat_ll_s1\0"
  /* 4001 */ "M2_mpy_sat_ll_s1\0"
  /* 4018 */ "M2_mpyu_ll_s1\0"
  /* 4032 */ "M2_mpy_ll_s1\0"
  /* 4045 */ "M2_mmpyul_s1\0"
  /* 4058 */ "M2_mmpyl_s1\0"
  /* 4070 */ "M2_hmmpyl_s1\0"
  /* 4083 */ "M2_mpy_up_s1\0"
  /* 4096 */ "M2_vmac2s_s1\0"
  /* 4109 */ "M2_vmpy2s_s1\0"
  /* 4122 */ "M2_cmacs_s1\0"
  /* 4134 */ "M2_vdmacs_s1\0"
  /* 4147 */ "M2_cnacs_s1\0"
  /* 4159 */ "M2_vmac2es_s1\0"
  /* 4173 */ "M2_vmpy2es_s1\0"
  /* 4187 */ "M2_mmachs_s1\0"
  /* 4200 */ "M2_mmacuhs_s1\0"
  /* 4214 */ "M2_mmacls_s1\0"
  /* 4227 */ "M2_mmaculs_s1\0"
  /* 4241 */ "M2_cmpyrs_s1\0"
  /* 4254 */ "M2_vdmpyrs_s1\0"
  /* 4268 */ "M2_cmpys_s1\0"
  /* 4280 */ "M2_vrcmpys_s1\0"
  /* 4294 */ "M2_vdmpys_s1\0"
  /* 4307 */ "M2_vmac2su_s1\0"
  /* 4321 */ "M2_vmpy2su_s1\0"
  /* 4335 */ "M2_mmpyuh_rs1\0"
  /* 4349 */ "M2_mmpyh_rs1\0"
  /* 4362 */ "M2_hmmpyh_rs1\0"
  /* 4376 */ "M2_mmpyul_rs1\0"
  /* 4390 */ "M2_mmpyl_rs1\0"
  /* 4403 */ "M2_hmmpyl_rs1\0"
  /* 4417 */ "M2_mmachs_rs1\0"
  /* 4431 */ "M2_mmacuhs_rs1\0"
  /* 4446 */ "M2_mmacls_rs1\0"
  /* 4460 */ "M2_mmaculs_rs1\0"
  /* 4475 */ "DuplexIClass1\0"
  /* 4489 */ "S2_ct1\0"
  /* 4496 */ "CONST32\0"
  /* 4504 */ "G_FLOG2\0"
  /* 4512 */ "G_FEXP2\0"
  /* 4520 */ "M2_vmac2\0"
  /* 4529 */ "V6_pred_scalar2\0"
  /* 4545 */ "DuplexIClass2\0"
  /* 4559 */ "M4_mpyri_addr_u2\0"
  /* 4576 */ "V6_pred_scalar2v2\0"
  /* 4594 */ "DuplexIClass3\0"
  /* 4608 */ "CONST64\0"
  /* 4616 */ "V6_vmpyewuh_64\0"
  /* 4631 */ "TFRI64_V4\0"
  /* 4641 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4\0"
  /* 4676 */ "SAVE_REGISTERS_CALL_V4\0"
  /* 4699 */ "RESTORE_DEALLOC_RET_JMP_V4\0"
  /* 4726 */ "DuplexIClass4\0"
  /* 4740 */ "V6_vlut4\0"
  /* 4749 */ "DuplexIClass5\0"
  /* 4763 */ "V6_vwhist256\0"
  /* 4776 */ "DuplexIClass6\0"
  /* 4790 */ "DuplexIClass7\0"
  /* 4804 */ "V6_vwhist128\0"
  /* 4817 */ "C2_all8\0"
  /* 4825 */ "DuplexIClass8\0"
  /* 4839 */ "C2_any8\0"
  /* 4847 */ "C4_fastcorner9\0"
  /* 4862 */ "DuplexIClass9\0"
  /* 4876 */ "G_FMA\0"
  /* 4882 */ "G_STRICT_FMA\0"
  /* 4895 */ "DuplexIClassA\0"
  /* 4909 */ "G_FSUB\0"
  /* 4916 */ "G_STRICT_FSUB\0"
  /* 4930 */ "G_ATOMICRMW_FSUB\0"
  /* 4947 */ "G_SUB\0"
  /* 4953 */ "G_ATOMICRMW_SUB\0"
  /* 4969 */ "DuplexIClassB\0"
  /* 4983 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_PIC\0"
  /* 5022 */ "SAVE_REGISTERS_CALL_V4_PIC\0"
  /* 5049 */ "RESTORE_DEALLOC_RET_JMP_V4_PIC\0"
  /* 5080 */ "SAVE_REGISTERS_CALL_V4STK_PIC\0"
  /* 5110 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT_PIC\0"
  /* 5153 */ "SAVE_REGISTERS_CALL_V4_EXT_PIC\0"
  /* 5184 */ "RESTORE_DEALLOC_RET_JMP_V4_EXT_PIC\0"
  /* 5219 */ "SAVE_REGISTERS_CALL_V4STK_EXT_PIC\0"
  /* 5253 */ "G_INTRINSIC\0"
  /* 5265 */ "G_FPTRUNC\0"
  /* 5275 */ "G_INTRINSIC_TRUNC\0"
  /* 5293 */ "G_TRUNC\0"
  /* 5301 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 5322 */ "G_DYN_STACKALLOC\0"
  /* 5339 */ "DuplexIClassC\0"
  /* 5353 */ "G_FMAD\0"
  /* 5360 */ "G_INDEXED_SEXTLOAD\0"
  /* 5379 */ "G_SEXTLOAD\0"
  /* 5390 */ "G_INDEXED_ZEXTLOAD\0"
  /* 5409 */ "G_ZEXTLOAD\0"
  /* 5420 */ "G_INDEXED_LOAD\0"
  /* 5435 */ "G_LOAD\0"
  /* 5442 */ "G_VECREDUCE_FADD\0"
  /* 5459 */ "G_FADD\0"
  /* 5466 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 5487 */ "G_STRICT_FADD\0"
  /* 5501 */ "G_ATOMICRMW_FADD\0"
  /* 5518 */ "G_VECREDUCE_ADD\0"
  /* 5534 */ "G_ADD\0"
  /* 5540 */ "G_PTR_ADD\0"
  /* 5550 */ "G_ATOMICRMW_ADD\0"
  /* 5566 */ "G_ATOMICRMW_NAND\0"
  /* 5583 */ "G_VECREDUCE_AND\0"
  /* 5599 */ "G_AND\0"
  /* 5605 */ "G_ATOMICRMW_AND\0"
  /* 5621 */ "LIFETIME_END\0"
  /* 5634 */ "G_BRCOND\0"
  /* 5643 */ "G_INTRINSIC_ROUND\0"
  /* 5661 */ "LOAD_STACK_GUARD\0"
  /* 5678 */ "DuplexIClassD\0"
  /* 5692 */ "PSEUDO_PROBE\0"
  /* 5705 */ "G_SSUBE\0"
  /* 5713 */ "G_USUBE\0"
  /* 5721 */ "G_FENCE\0"
  /* 5729 */ "REG_SEQUENCE\0"
  /* 5742 */ "G_SADDE\0"
  /* 5750 */ "G_UADDE\0"
  /* 5758 */ "G_FMINNUM_IEEE\0"
  /* 5773 */ "G_FMAXNUM_IEEE\0"
  /* 5788 */ "G_JUMP_TABLE\0"
  /* 5801 */ "BUNDLE\0"
  /* 5808 */ "LOCAL_ESCAPE\0"
  /* 5821 */ "G_INDEXED_STORE\0"
  /* 5837 */ "G_STORE\0"
  /* 5845 */ "G_BITREVERSE\0"
  /* 5858 */ "DBG_VALUE\0"
  /* 5868 */ "G_GLOBAL_VALUE\0"
  /* 5883 */ "G_MEMMOVE\0"
  /* 5893 */ "G_FREEZE\0"
  /* 5902 */ "G_FCANONICALIZE\0"
  /* 5918 */ "DuplexIClassE\0"
  /* 5932 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 5950 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 5968 */ "G_IMPLICIT_DEF\0"
  /* 5983 */ "DBG_INSTR_REF\0"
  /* 5997 */ "DuplexIClassF\0"
  /* 6011 */ "G_FNEG\0"
  /* 6018 */ "EXTRACT_SUBREG\0"
  /* 6033 */ "INSERT_SUBREG\0"
  /* 6047 */ "G_SEXT_INREG\0"
  /* 6060 */ "SUBREG_TO_REG\0"
  /* 6074 */ "G_ATOMIC_CMPXCHG\0"
  /* 6091 */ "G_ATOMICRMW_XCHG\0"
  /* 6108 */ "G_FLOG\0"
  /* 6115 */ "G_VAARG\0"
  /* 6123 */ "PREALLOCATED_ARG\0"
  /* 6140 */ "G_SMULH\0"
  /* 6148 */ "G_UMULH\0"
  /* 6156 */ "G_PHI\0"
  /* 6162 */ "G_FPTOSI\0"
  /* 6171 */ "G_FPTOUI\0"
  /* 6180 */ "G_FPOWI\0"
  /* 6188 */ "G_PTRMASK\0"
  /* 6198 */ "SAVE_REGISTERS_CALL_V4STK\0"
  /* 6224 */ "GC_LABEL\0"
  /* 6233 */ "DBG_LABEL\0"
  /* 6243 */ "EH_LABEL\0"
  /* 6252 */ "ANNOTATION_LABEL\0"
  /* 6269 */ "ICALL_BRANCH_FUNNEL\0"
  /* 6289 */ "G_FSHL\0"
  /* 6296 */ "G_SHL\0"
  /* 6302 */ "G_FCEIL\0"
  /* 6310 */ "PATCHABLE_TAIL_CALL\0"
  /* 6330 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 6357 */ "PATCHABLE_EVENT_CALL\0"
  /* 6378 */ "FENTRY_CALL\0"
  /* 6390 */ "KILL\0"
  /* 6395 */ "G_VECREDUCE_FMUL\0"
  /* 6412 */ "G_FMUL\0"
  /* 6419 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 6440 */ "G_STRICT_FMUL\0"
  /* 6454 */ "G_VECREDUCE_MUL\0"
  /* 6470 */ "G_MUL\0"
  /* 6476 */ "G_FREM\0"
  /* 6483 */ "G_STRICT_FREM\0"
  /* 6497 */ "G_SREM\0"
  /* 6504 */ "G_UREM\0"
  /* 6511 */ "INLINEASM\0"
  /* 6521 */ "G_FMINIMUM\0"
  /* 6532 */ "G_FMAXIMUM\0"
  /* 6543 */ "G_FMINNUM\0"
  /* 6553 */ "G_FMAXNUM\0"
  /* 6563 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 6585 */ "G_FCOPYSIGN\0"
  /* 6597 */ "G_VECREDUCE_FMIN\0"
  /* 6614 */ "G_VECREDUCE_SMIN\0"
  /* 6631 */ "G_SMIN\0"
  /* 6638 */ "G_VECREDUCE_UMIN\0"
  /* 6655 */ "G_UMIN\0"
  /* 6662 */ "G_ATOMICRMW_UMIN\0"
  /* 6679 */ "G_ATOMICRMW_MIN\0"
  /* 6695 */ "G_FSIN\0"
  /* 6702 */ "CFI_INSTRUCTION\0"
  /* 6718 */ "ADJCALLSTACKDOWN\0"
  /* 6735 */ "G_SSUBO\0"
  /* 6743 */ "G_USUBO\0"
  /* 6751 */ "G_SADDO\0"
  /* 6759 */ "G_UADDO\0"
  /* 6767 */ "G_SMULO\0"
  /* 6775 */ "G_UMULO\0"
  /* 6783 */ "STACKMAP\0"
  /* 6792 */ "G_BSWAP\0"
  /* 6800 */ "G_SITOFP\0"
  /* 6809 */ "G_UITOFP\0"
  /* 6818 */ "G_FCMP\0"
  /* 6825 */ "G_ICMP\0"
  /* 6832 */ "G_CTPOP\0"
  /* 6840 */ "PATCHABLE_OP\0"
  /* 6853 */ "FAULTING_OP\0"
  /* 6865 */ "ADJCALLSTACKUP\0"
  /* 6880 */ "PREALLOCATED_SETUP\0"
  /* 6899 */ "G_FEXP\0"
  /* 6906 */ "A6_vminub_RdP\0"
  /* 6920 */ "G_BR\0"
  /* 6925 */ "INLINEASM_BR\0"
  /* 6938 */ "G_BLOCK_ADDR\0"
  /* 6951 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 6976 */ "G_READCYCLECOUNTER\0"
  /* 6995 */ "G_READ_REGISTER\0"
  /* 7011 */ "G_WRITE_REGISTER\0"
  /* 7028 */ "G_ASHR\0"
  /* 7035 */ "G_FSHR\0"
  /* 7042 */ "G_LSHR\0"
  /* 7049 */ "G_FFLOOR\0"
  /* 7058 */ "G_BUILD_VECTOR\0"
  /* 7073 */ "G_SHUFFLE_VECTOR\0"
  /* 7090 */ "G_VECREDUCE_XOR\0"
  /* 7106 */ "G_XOR\0"
  /* 7112 */ "G_ATOMICRMW_XOR\0"
  /* 7128 */ "G_VECREDUCE_OR\0"
  /* 7143 */ "G_OR\0"
  /* 7148 */ "G_ATOMICRMW_OR\0"
  /* 7163 */ "EH_RETURN_JMPR\0"
  /* 7178 */ "G_INTTOPTR\0"
  /* 7189 */ "G_FABS\0"
  /* 7196 */ "G_ABS\0"
  /* 7202 */ "A5_ACS\0"
  /* 7209 */ "G_UNMERGE_VALUES\0"
  /* 7226 */ "G_MERGE_VALUES\0"
  /* 7241 */ "G_FCOS\0"
  /* 7248 */ "G_CONCAT_VECTORS\0"
  /* 7265 */ "COPY_TO_REGCLASS\0"
  /* 7282 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 7312 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 7339 */ "G_SSUBSAT\0"
  /* 7349 */ "G_USUBSAT\0"
  /* 7359 */ "G_SADDSAT\0"
  /* 7369 */ "G_UADDSAT\0"
  /* 7379 */ "G_SSHLSAT\0"
  /* 7389 */ "G_USHLSAT\0"
  /* 7399 */ "G_SMULFIXSAT\0"
  /* 7412 */ "G_UMULFIXSAT\0"
  /* 7425 */ "G_SDIVFIXSAT\0"
  /* 7438 */ "G_UDIVFIXSAT\0"
  /* 7451 */ "G_EXTRACT\0"
  /* 7461 */ "G_SELECT\0"
  /* 7470 */ "G_BRINDIRECT\0"
  /* 7483 */ "PATCHABLE_RET\0"
  /* 7497 */ "G_MEMSET\0"
  /* 7506 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 7530 */ "G_BRJT\0"
  /* 7537 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 7558 */ "G_INSERT_VECTOR_ELT\0"
  /* 7578 */ "G_FCONSTANT\0"
  /* 7590 */ "G_CONSTANT\0"
  /* 7601 */ "STATEPOINT\0"
  /* 7612 */ "PATCHPOINT\0"
  /* 7623 */ "G_PTRTOINT\0"
  /* 7634 */ "G_FRINT\0"
  /* 7642 */ "G_INTRINSIC_LRINT\0"
  /* 7660 */ "G_FNEARBYINT\0"
  /* 7673 */ "G_VASTART\0"
  /* 7683 */ "LIFETIME_START\0"
  /* 7698 */ "G_INSERT\0"
  /* 7707 */ "G_FSQRT\0"
  /* 7715 */ "G_STRICT_FSQRT\0"
  /* 7730 */ "G_BITCAST\0"
  /* 7740 */ "G_ADDRSPACE_CAST\0"
  /* 7757 */ "G_FPEXT\0"
  /* 7765 */ "G_SEXT\0"
  /* 7772 */ "G_ANYEXT\0"
  /* 7781 */ "G_ZEXT\0"
  /* 7788 */ "G_ASSERT_ZEXT\0"
  /* 7802 */ "RESTORE_DEALLOC_BEFORE_TAILCALL_V4_EXT\0"
  /* 7841 */ "SAVE_REGISTERS_CALL_V4_EXT\0"
  /* 7868 */ "RESTORE_DEALLOC_RET_JMP_V4_EXT\0"
  /* 7899 */ "SAVE_REGISTERS_CALL_V4STK_EXT\0"
  /* 7929 */ "G_FDIV\0"
  /* 7936 */ "G_STRICT_FDIV\0"
  /* 7950 */ "G_SDIV\0"
  /* 7957 */ "G_UDIV\0"
  /* 7964 */ "G_FPOW\0"
  /* 7971 */ "G_VECREDUCE_FMAX\0"
  /* 7988 */ "G_VECREDUCE_SMAX\0"
  /* 8005 */ "G_SMAX\0"
  /* 8012 */ "G_VECREDUCE_UMAX\0"
  /* 8029 */ "G_UMAX\0"
  /* 8036 */ "G_ATOMICRMW_UMAX\0"
  /* 8053 */ "G_ATOMICRMW_MAX\0"
  /* 8069 */ "G_FRAME_INDEX\0"
  /* 8083 */ "G_SMULFIX\0"
  /* 8093 */ "G_UMULFIX\0"
  /* 8103 */ "G_SDIVFIX\0"
  /* 8113 */ "G_UDIVFIX\0"
  /* 8123 */ "G_MEMCPY\0"
  /* 8132 */ "COPY\0"
  /* 8137 */ "G_CTLZ\0"
  /* 8144 */ "G_CTTZ\0"
  /* 8151 */ "PS_alloca\0"
  /* 8161 */ "PS_fia\0"
  /* 8168 */ "F2_sffma\0"
  /* 8177 */ "Y2_dccleana\0"
  /* 8189 */ "PS_aligna\0"
  /* 8199 */ "Y2_dczeroa\0"
  /* 8210 */ "F2_sfrecipa\0"
  /* 8222 */ "V6_vrdelta\0"
  /* 8233 */ "V6_vdelta\0"
  /* 8243 */ "F2_sfinvsqrta\0"
  /* 8257 */ "Y2_dcinva\0"
  /* 8267 */ "Y2_icinva\0"
  /* 8277 */ "Y2_dccleaninva\0"
  /* 8292 */ "V6_vsubb\0"
  /* 8301 */ "V6_vaddb\0"
  /* 8310 */ "S2_shuffeb\0"
  /* 8321 */ "V6_vshuffeb\0"
  /* 8333 */ "V6_vpackeb\0"
  /* 8344 */ "V6_vshufoeb\0"
  /* 8356 */ "M6_vabsdiffb\0"
  /* 8369 */ "V6_vshuffb\0"
  /* 8380 */ "V6_vnavgb\0"
  /* 8390 */ "V6_vavgb\0"
  /* 8399 */ "V6_vmpahb\0"
  /* 8409 */ "V6_vroundhb\0"
  /* 8421 */ "S2_vtrunehb\0"
  /* 8433 */ "V6_vmpyihb\0"
  /* 8444 */ "S2_vtrunohb\0"
  /* 8456 */ "S2_vsathb\0"
  /* 8466 */ "S2_svsathb\0"
  /* 8477 */ "V6_vmpauhb\0"
  /* 8488 */ "V6_vdmpyhb\0"
  /* 8499 */ "V6_vtmpyhb\0"
  /* 8510 */ "S2_vspliceib\0"
  /* 8523 */ "F2_sffma_lib\0"
  /* 8536 */ "F2_sffms_lib\0"
  /* 8549 */ "S2_valignib\0"
  /* 8561 */ "V6_vunpackb\0"
  /* 8573 */ "V6_vdealb\0"
  /* 8583 */ "S2_clb\0"
  /* 8590 */ "V6_vlalignb\0"
  /* 8602 */ "V6_valignb\0"
  /* 8613 */ "A2_vminb\0"
  /* 8622 */ "V6_vminb\0"
  /* 8631 */ "S2_shuffob\0"
  /* 8642 */ "V6_vshuffob\0"
  /* 8654 */ "V6_vunpackob\0"
  /* 8667 */ "V6_vpackob\0"
  /* 8678 */ "V6_veqb\0"
  /* 8686 */ "V6_vprefixqb\0"
  /* 8699 */ "S2_vsplicerb\0"
  /* 8712 */ "S2_valignrb\0"
  /* 8724 */ "V6_vlsrb\0"
  /* 8733 */ "S2_vsplatrb\0"
  /* 8745 */ "V6_vabsb\0"
  /* 8754 */ "V6_vsb\0"
  /* 8761 */ "V6_lvsplatb\0"
  /* 8773 */ "A2_satb\0"
  /* 8781 */ "V6_vgtb\0"
  /* 8789 */ "SA1_sxtb\0"
  /* 8798 */ "dup_A2_sxtb\0"
  /* 8810 */ "SA1_zxtb\0"
  /* 8819 */ "dup_A2_zxtb\0"
  /* 8831 */ "A2_vsubub\0"
  /* 8841 */ "A2_vrsadub\0"
  /* 8852 */ "A2_vraddub\0"
  /* 8863 */ "A2_vaddub\0"
  /* 8873 */ "M6_vabsdiffub\0"
  /* 8887 */ "V6_vabsdiffub\0"
  /* 8901 */ "V6_vnavgub\0"
  /* 8912 */ "A2_vavgub\0"
  /* 8922 */ "V6_vavgub\0"
  /* 8932 */ "V6_vroundhub\0"
  /* 8945 */ "S2_vsathub\0"
  /* 8956 */ "V6_vsathub\0"
  /* 8967 */ "S2_svsathub\0"
  /* 8979 */ "V6_vrounduhub\0"
  /* 8993 */ "V6_vunpackub\0"
  /* 9006 */ "A2_vminub\0"
  /* 9016 */ "V6_vminub\0"
  /* 9026 */ "V6_MAP_equb\0"
  /* 9038 */ "A2_sub\0"
  /* 9045 */ "F2_dfsub\0"
  /* 9054 */ "F2_sfsub\0"
  /* 9063 */ "A2_satub\0"
  /* 9072 */ "V6_vgtub\0"
  /* 9081 */ "V6_vmpyiwub\0"
  /* 9093 */ "A2_vmaxub\0"
  /* 9103 */ "V6_vmaxub\0"
  /* 9113 */ "V6_vrmpyub\0"
  /* 9124 */ "V6_vmpyub\0"
  /* 9134 */ "V6_vlutvvb\0"
  /* 9145 */ "V6_vmpyiwb\0"
  /* 9156 */ "A2_vmaxb\0"
  /* 9165 */ "V6_vmaxb\0"
  /* 9174 */ "S2_tableidxb\0"
  /* 9187 */ "V6_vtmpyb\0"
  /* 9197 */ "V6_vzb\0"
  /* 9204 */ "M2_vrcmaci_s0c\0"
  /* 9219 */ "M2_vrcmpyi_s0c\0"
  /* 9234 */ "M2_vrcmacr_s0c\0"
  /* 9249 */ "M2_vrcmpyr_s0c\0"
  /* 9264 */ "A4_subp_c\0"
  /* 9274 */ "A4_addp_c\0"
  /* 9284 */ "S6_rol_i_p_nac\0"
  /* 9299 */ "S2_asl_i_p_nac\0"
  /* 9314 */ "S2_asr_i_p_nac\0"
  /* 9329 */ "S2_lsr_i_p_nac\0"
  /* 9344 */ "S2_asl_r_p_nac\0"
  /* 9359 */ "S2_lsl_r_p_nac\0"
  /* 9374 */ "S2_asr_r_p_nac\0"
  /* 9389 */ "S2_lsr_r_p_nac\0"
  /* 9404 */ "S6_rol_i_r_nac\0"
  /* 9419 */ "S2_asl_i_r_nac\0"
  /* 9434 */ "S2_asr_i_r_nac\0"
  /* 9449 */ "S2_lsr_i_r_nac\0"
  /* 9464 */ "S2_asl_r_r_nac\0"
  /* 9479 */ "S2_lsl_r_r_nac\0"
  /* 9494 */ "S2_asr_r_r_nac\0"
  /* 9509 */ "S2_lsr_r_r_nac\0"
  /* 9524 */ "V6_vmpyowh_64_acc\0"
  /* 9542 */ "V6_vmpahb_acc\0"
  /* 9556 */ "V6_vmpyihb_acc\0"
  /* 9571 */ "V6_vmpauhb_acc\0"
  /* 9586 */ "V6_vdmpyhb_acc\0"
  /* 9601 */ "V6_vtmpyhb_acc\0"
  /* 9616 */ "A2_vrsadub_acc\0"
  /* 9631 */ "A2_vraddub_acc\0"
  /* 9646 */ "V6_vmpyiwub_acc\0"
  /* 9662 */ "V6_vrmpyub_acc\0"
  /* 9677 */ "V6_vmpyub_acc\0"
  /* 9691 */ "V6_vmpyiwb_acc\0"
  /* 9706 */ "V6_vtmpyb_acc\0"
  /* 9720 */ "M7_dcmpyiwc_acc\0"
  /* 9736 */ "M7_dcmpyrwc_acc\0"
  /* 9752 */ "V6_vmpyuhe_acc\0"
  /* 9767 */ "S4_vrcrotate_acc\0"
  /* 9784 */ "V6_vaddubh_acc\0"
  /* 9799 */ "V6_vmpyih_acc\0"
  /* 9813 */ "V6_vaslh_acc\0"
  /* 9826 */ "V6_vasrh_acc\0"
  /* 9839 */ "V6_vdsaduh_acc\0"
  /* 9854 */ "V6_vmpyiewuh_acc\0"
  /* 9871 */ "V6_vmpyuh_acc\0"
  /* 9885 */ "V6_vmpyiewh_acc\0"
  /* 9901 */ "V6_vmpyiwh_acc\0"
  /* 9916 */ "M4_vpmpyh_acc\0"
  /* 9930 */ "V6_vmpyh_acc\0"
  /* 9943 */ "V6_vrsadubi_acc\0"
  /* 9959 */ "V6_vrmpyubi_acc\0"
  /* 9975 */ "V6_vrmpybusi_acc\0"
  /* 9992 */ "S6_rol_i_p_acc\0"
  /* 10007 */ "S2_asl_i_p_acc\0"
  /* 10022 */ "S2_asr_i_p_acc\0"
  /* 10037 */ "S2_lsr_i_p_acc\0"
  /* 10052 */ "S2_asl_r_p_acc\0"
  /* 10067 */ "S2_lsl_r_p_acc\0"
  /* 10082 */ "S2_asr_r_p_acc\0"
  /* 10097 */ "S2_lsr_r_p_acc\0"
  /* 10112 */ "S6_rol_i_r_acc\0"
  /* 10127 */ "S2_asl_i_r_acc\0"
  /* 10142 */ "S2_asr_i_r_acc\0"
  /* 10157 */ "S2_lsr_i_r_acc\0"
  /* 10172 */ "S2_asl_r_r_acc\0"
  /* 10187 */ "S2_lsl_r_r_acc\0"
  /* 10202 */ "S2_asr_r_r_acc\0"
  /* 10217 */ "S2_lsr_r_r_acc\0"
  /* 10232 */ "V6_vmpabus_acc\0"
  /* 10247 */ "V6_vdmpybus_acc\0"
  /* 10263 */ "V6_vrmpybus_acc\0"
  /* 10279 */ "V6_vtmpybus_acc\0"
  /* 10295 */ "V6_vmpybus_acc\0"
  /* 10310 */ "V6_vmpyhus_acc\0"
  /* 10325 */ "V6_vdmpyhsat_acc\0"
  /* 10342 */ "V6_vmpyhsat_acc\0"
  /* 10358 */ "V6_vdmpyhisat_acc\0"
  /* 10376 */ "V6_vdmpyhsuisat_acc\0"
  /* 10396 */ "V6_vdmpyhsusat_acc\0"
  /* 10415 */ "V6_vdmpyhvsat_acc\0"
  /* 10433 */ "V6_vrmpyzbb_rt_acc\0"
  /* 10452 */ "V6_vrmpyzcb_rt_acc\0"
  /* 10471 */ "V6_vrmpyznb_rt_acc\0"
  /* 10490 */ "V6_vrmpyzbub_rt_acc\0"
  /* 10510 */ "V6_vrmpyzcbs_rt_acc\0"
  /* 10530 */ "V6_vandqrt_acc\0"
  /* 10545 */ "V6_vandnqrt_acc\0"
  /* 10561 */ "V6_vandvrt_acc\0"
  /* 10576 */ "V6_vrmpybub_rtt_acc\0"
  /* 10596 */ "V6_vrmpyub_rtt_acc\0"
  /* 10615 */ "V6_vmpabuu_acc\0"
  /* 10630 */ "V6_vrmpyubv_acc\0"
  /* 10646 */ "V6_vmpyubv_acc\0"
  /* 10661 */ "V6_vrmpybv_acc\0"
  /* 10676 */ "V6_vmpybv_acc\0"
  /* 10690 */ "V6_vdmpyhb_dv_acc\0"
  /* 10708 */ "V6_vdmpybus_dv_acc\0"
  /* 10727 */ "V6_vmpyuhv_acc\0"
  /* 10742 */ "V6_vmpyhv_acc\0"
  /* 10756 */ "V6_vrmpybusv_acc\0"
  /* 10773 */ "V6_vmpybusv_acc\0"
  /* 10789 */ "V6_vaddhw_acc\0"
  /* 10803 */ "V6_vadduhw_acc\0"
  /* 10818 */ "M7_dcmpyiw_acc\0"
  /* 10833 */ "V6_vaslw_acc\0"
  /* 10846 */ "PS_vmulw_acc\0"
  /* 10859 */ "V6_vasrw_acc\0"
  /* 10872 */ "M7_dcmpyrw_acc\0"
  /* 10887 */ "M4_pmpyw_acc\0"
  /* 10900 */ "V6_vrmpyzbb_rx_acc\0"
  /* 10919 */ "V6_vrmpyzcb_rx_acc\0"
  /* 10938 */ "V6_vrmpyznb_rx_acc\0"
  /* 10957 */ "V6_vrmpyzbub_rx_acc\0"
  /* 10977 */ "V6_vrmpyzcbs_rx_acc\0"
  /* 10997 */ "M7_vdmpy_acc\0"
  /* 11010 */ "M2_subacc\0"
  /* 11020 */ "V6_vlutvvb_oracc\0"
  /* 11037 */ "V6_vlutvwh_oracc\0"
  /* 11054 */ "V6_vmpyowh_rnd_sacc\0"
  /* 11074 */ "V6_vmpyowh_sacc\0"
  /* 11090 */ "S6_rol_i_p_xacc\0"
  /* 11106 */ "S2_asl_i_p_xacc\0"
  /* 11122 */ "S2_lsr_i_p_xacc\0"
  /* 11138 */ "S6_rol_i_r_xacc\0"
  /* 11154 */ "S2_asl_i_r_xacc\0"
  /* 11170 */ "S2_lsr_i_r_xacc\0"
  /* 11186 */ "M2_xor_xacc\0"
  /* 11198 */ "M4_xor_xacc\0"
  /* 11210 */ "SA1_dec\0"
  /* 11218 */ "M4_cmpyi_whc\0"
  /* 11231 */ "M4_cmpyr_whc\0"
  /* 11244 */ "SA1_inc\0"
  /* 11252 */ "Y2_isync\0"
  /* 11261 */ "C4_addipc\0"
  /* 11271 */ "F2_sffma_sc\0"
  /* 11283 */ "M7_dcmpyiwc\0"
  /* 11295 */ "M7_wcmpyiwc\0"
  /* 11307 */ "M7_dcmpyrwc\0"
  /* 11319 */ "M7_wcmpyrwc\0"
  /* 11331 */ "F2_conv_df2d\0"
  /* 11344 */ "F2_conv_sf2d\0"
  /* 11357 */ "dup_A2_add\0"
  /* 11368 */ "V6_vscattermh_add\0"
  /* 11386 */ "V6_vscattermhw_add\0"
  /* 11405 */ "V6_vscattermw_add\0"
  /* 11423 */ "F2_dfadd\0"
  /* 11432 */ "F2_sfadd\0"
  /* 11441 */ "V6_vshuffvdd\0"
  /* 11454 */ "V6_vdealvdd\0"
  /* 11466 */ "L4_loadd_locked\0"
  /* 11482 */ "S4_stored_locked\0"
  /* 11499 */ "L2_loadw_locked\0"
  /* 11515 */ "S2_storew_locked\0"
  /* 11532 */ "LDriw_pred\0"
  /* 11543 */ "STriw_pred\0"
  /* 11554 */ "A2_and\0"
  /* 11561 */ "C2_and\0"
  /* 11568 */ "V6_veqb_and\0"
  /* 11580 */ "V6_vgtb_and\0"
  /* 11592 */ "V6_MAP_equb_and\0"
  /* 11608 */ "V6_vgtub_and\0"
  /* 11621 */ "V6_pred_and\0"
  /* 11633 */ "C4_and_and\0"
  /* 11644 */ "M4_and_and\0"
  /* 11655 */ "V6_veqh_and\0"
  /* 11667 */ "V6_vgth_and\0"
  /* 11679 */ "V6_MAP_equh_and\0"
  /* 11695 */ "V6_vgtuh_and\0"
  /* 11708 */ "S6_rol_i_p_and\0"
  /* 11723 */ "S2_asl_i_p_and\0"
  /* 11738 */ "S2_asr_i_p_and\0"
  /* 11753 */ "S2_lsr_i_p_and\0"
  /* 11768 */ "S2_asl_r_p_and\0"
  /* 11783 */ "S2_lsl_r_p_and\0"
  /* 11798 */ "S2_asr_r_p_and\0"
  /* 11813 */ "S2_lsr_r_p_and\0"
  /* 11828 */ "S6_rol_i_r_and\0"
  /* 11843 */ "S2_asl_i_r_and\0"
  /* 11858 */ "S2_asr_i_r_and\0"
  /* 11873 */ "S2_lsr_i_r_and\0"
  /* 11888 */ "S2_asl_r_r_and\0"
  /* 11903 */ "S2_lsl_r_r_and\0"
  /* 11918 */ "S2_asr_r_r_and\0"
  /* 11933 */ "S2_lsr_r_r_and\0"
  /* 11948 */ "C4_or_and\0"
  /* 11958 */ "M4_or_and\0"
  /* 11968 */ "M4_xor_and\0"
  /* 11979 */ "V6_veqw_and\0"
  /* 11991 */ "V6_vgtw_and\0"
  /* 12003 */ "V6_MAP_equw_and\0"
  /* 12019 */ "V6_vgtuw_and\0"
  /* 12032 */ "V6_vand\0"
  /* 12040 */ "M7_wcmpyiwc_rnd\0"
  /* 12056 */ "M7_wcmpyrwc_rnd\0"
  /* 12072 */ "V6_vmpyowh_rnd\0"
  /* 12087 */ "S2_asr_i_p_rnd\0"
  /* 12102 */ "S2_asr_i_r_rnd\0"
  /* 12117 */ "M7_wcmpyiw_rnd\0"
  /* 12132 */ "M7_wcmpyrw_rnd\0"
  /* 12147 */ "V6_vavgbrnd\0"
  /* 12159 */ "V6_vavgubrnd\0"
  /* 12172 */ "V6_vavghrnd\0"
  /* 12184 */ "S5_vasrhrnd\0"
  /* 12196 */ "V6_vavguhrnd\0"
  /* 12209 */ "V6_vavgwrnd\0"
  /* 12221 */ "V6_vavguwrnd\0"
  /* 12234 */ "F2_sffixupd\0"
  /* 12246 */ "F2_conv_df2ud\0"
  /* 12260 */ "F2_conv_sf2ud\0"
  /* 12274 */ "S2_tableidxd\0"
  /* 12287 */ "Y4_trace\0"
  /* 12296 */ "invalid_decode\0"
  /* 12311 */ "F2_dfcmpge\0"
  /* 12322 */ "F2_sfcmpge\0"
  /* 12333 */ "V6_vmpyuhe\0"
  /* 12344 */ "CALLProfile\0"
  /* 12356 */ "SS2_allocframe\0"
  /* 12371 */ "dup_S2_allocframe\0"
  /* 12389 */ "SL2_deallocframe\0"
  /* 12406 */ "dup_L2_deallocframe\0"
  /* 12426 */ "Y6_dmresume\0"
  /* 12438 */ "V6_vnccombine\0"
  /* 12452 */ "V6_vccombine\0"
  /* 12465 */ "V6_vcombine\0"
  /* 12477 */ "PS_false\0"
  /* 12486 */ "PS_qfalse\0"
  /* 12496 */ "J2_pause\0"
  /* 12505 */ "Y6_dmpause\0"
  /* 12516 */ "S4_vrcrotate\0"
  /* 12529 */ "S2_vcrotate\0"
  /* 12541 */ "C4_cmplte\0"
  /* 12551 */ "PS_true\0"
  /* 12559 */ "PS_qtrue\0"
  /* 12568 */ "S2_interleave\0"
  /* 12582 */ "S2_deinterleave\0"
  /* 12598 */ "SL2_jumpr31_f\0"
  /* 12612 */ "SL2_return_f\0"
  /* 12625 */ "L4_return_f\0"
  /* 12637 */ "L4_return_map_to_raw_f\0"
  /* 12660 */ "A4_psxtbf\0"
  /* 12670 */ "A4_pzxtbf\0"
  /* 12680 */ "A2_psubf\0"
  /* 12689 */ "F2_conv_d2df\0"
  /* 12702 */ "F2_conv_ud2df\0"
  /* 12716 */ "F2_conv_sf2df\0"
  /* 12730 */ "F2_conv_w2df\0"
  /* 12743 */ "F2_conv_uw2df\0"
  /* 12757 */ "A2_paddf\0"
  /* 12766 */ "A2_pandf\0"
  /* 12775 */ "V6_vshuff\0"
  /* 12785 */ "A4_paslhf\0"
  /* 12795 */ "A4_pasrhf\0"
  /* 12805 */ "A4_psxthf\0"
  /* 12815 */ "A4_pzxthf\0"
  /* 12825 */ "A2_paddif\0"
  /* 12835 */ "dup_C2_cmoveif\0"
  /* 12850 */ "dup_C2_cmovenewif\0"
  /* 12868 */ "J2_callf\0"
  /* 12877 */ "J2_jumpf\0"
  /* 12886 */ "A2_tfrpf\0"
  /* 12895 */ "A2_tfrf\0"
  /* 12903 */ "SA1_clrf\0"
  /* 12912 */ "J2_callrf\0"
  /* 12922 */ "A2_porf\0"
  /* 12930 */ "A2_pxorf\0"
  /* 12939 */ "J2_jumprf\0"
  /* 12949 */ "F2_conv_d2sf\0"
  /* 12962 */ "F2_conv_ud2sf\0"
  /* 12976 */ "F2_conv_df2sf\0"
  /* 12990 */ "F2_conv_w2sf\0"
  /* 13003 */ "F2_conv_uw2sf\0"
  /* 13017 */ "PS_jmpretf\0"
  /* 13028 */ "C2_ccombinewf\0"
  /* 13042 */ "C2_ccombinewnewf\0"
  /* 13059 */ "Y6_diag\0"
  /* 13067 */ "A2_neg\0"
  /* 13074 */ "V6_vcl0h\0"
  /* 13083 */ "M2_vrcmpys_acc_s1_h\0"
  /* 13103 */ "M2_vrcmpys_s1_h\0"
  /* 13119 */ "M2_vrcmpys_s1rp_h\0"
  /* 13137 */ "V6_vaddclbh\0"
  /* 13149 */ "S2_vsxtbh\0"
  /* 13159 */ "S2_vzxtbh\0"
  /* 13169 */ "V6_vsububh\0"
  /* 13180 */ "V6_vaddubh\0"
  /* 13191 */ "S4_vxaddsubh\0"
  /* 13204 */ "A2_vsubh\0"
  /* 13213 */ "V6_vsubh\0"
  /* 13222 */ "A2_svsubh\0"
  /* 13232 */ "A4_tlbmatch\0"
  /* 13244 */ "Y4_l2fetch\0"
  /* 13255 */ "Y5_l2fetch\0"
  /* 13266 */ "Y2_dcfetch\0"
  /* 13277 */ "S4_vxsubaddh\0"
  /* 13290 */ "M2_vraddh\0"
  /* 13300 */ "A2_vaddh\0"
  /* 13309 */ "V6_vaddh\0"
  /* 13318 */ "A2_svaddh\0"
  /* 13328 */ "S2_shuffeh\0"
  /* 13339 */ "V6_vshufeh\0"
  /* 13350 */ "V6_vpackeh\0"
  /* 13361 */ "V6_vshufoeh\0"
  /* 13373 */ "M2_vabsdiffh\0"
  /* 13386 */ "V6_vabsdiffh\0"
  /* 13399 */ "V6_vshuffh\0"
  /* 13410 */ "S2_vrcnegh\0"
  /* 13421 */ "S2_vcnegh\0"
  /* 13431 */ "A2_vnavgh\0"
  /* 13441 */ "V6_vnavgh\0"
  /* 13451 */ "A2_svnavgh\0"
  /* 13462 */ "A2_vavgh\0"
  /* 13471 */ "V6_vavgh\0"
  /* 13480 */ "A2_svavgh\0"
  /* 13490 */ "A2_subh_h16_hh\0"
  /* 13505 */ "A2_addh_h16_hh\0"
  /* 13520 */ "A2_combine_hh\0"
  /* 13534 */ "A2_subh_h16_sat_hh\0"
  /* 13553 */ "A2_addh_h16_sat_hh\0"
  /* 13572 */ "F2_dfmpyhh\0"
  /* 13583 */ "A2_tfrih\0"
  /* 13592 */ "V6_vmpyih\0"
  /* 13602 */ "V6_vunpackh\0"
  /* 13614 */ "A2_subh_h16_lh\0"
  /* 13629 */ "A2_addh_h16_lh\0"
  /* 13644 */ "A2_combine_lh\0"
  /* 13658 */ "A2_subh_h16_sat_lh\0"
  /* 13677 */ "A2_addh_h16_sat_lh\0"
  /* 13696 */ "V6_vdealh\0"
  /* 13706 */ "A2_aslh\0"
  /* 13714 */ "V6_vaslh\0"
  /* 13723 */ "F2_dfmpylh\0"
  /* 13734 */ "V6_vgathermh\0"
  /* 13747 */ "V6_vscattermh\0"
  /* 13761 */ "A4_vrminh\0"
  /* 13771 */ "A2_vminh\0"
  /* 13780 */ "V6_vminh\0"
  /* 13789 */ "V6_vmpyieoh\0"
  /* 13801 */ "S2_shuffoh\0"
  /* 13812 */ "V6_vshufoh\0"
  /* 13823 */ "V6_vunpackoh\0"
  /* 13836 */ "V6_vpackoh\0"
  /* 13847 */ "A2_addsph\0"
  /* 13857 */ "V6_shuffeqh\0"
  /* 13869 */ "V6_veqh\0"
  /* 13877 */ "V6_vprefixqh\0"
  /* 13890 */ "A2_asrh\0"
  /* 13898 */ "V6_vasrh\0"
  /* 13907 */ "V6_vlsrh\0"
  /* 13916 */ "S2_vsplatrh\0"
  /* 13928 */ "PS_crash\0"
  /* 13937 */ "A2_vabsh\0"
  /* 13946 */ "V6_vabsh\0"
  /* 13955 */ "V6_vsh\0"
  /* 13962 */ "V6_lvsplath\0"
  /* 13974 */ "A2_sath\0"
  /* 13982 */ "V6_vgth\0"
  /* 13990 */ "V6_vnormamth\0"
  /* 14003 */ "V6_vpopcounth\0"
  /* 14017 */ "SA1_sxth\0"
  /* 14026 */ "dup_A2_sxth\0"
  /* 14038 */ "SA1_zxth\0"
  /* 14047 */ "dup_A2_zxth\0"
  /* 14059 */ "V6_vdsaduh\0"
  /* 14070 */ "M2_vradduh\0"
  /* 14081 */ "V6_vabsdiffuh\0"
  /* 14095 */ "A2_vavguh\0"
  /* 14105 */ "V6_vavguh\0"
  /* 14115 */ "V6_vunpackuh\0"
  /* 14128 */ "A4_vrminuh\0"
  /* 14139 */ "A2_vminuh\0"
  /* 14149 */ "V6_vminuh\0"
  /* 14159 */ "V6_MAP_equh\0"
  /* 14171 */ "A2_satuh\0"
  /* 14180 */ "V6_vgtuh\0"
  /* 14189 */ "V6_vroundwuh\0"
  /* 14202 */ "V6_vmpyiewuh\0"
  /* 14215 */ "V6_vmpyewuh\0"
  /* 14227 */ "S2_vsatwuh\0"
  /* 14238 */ "V6_vrounduwuh\0"
  /* 14252 */ "V6_vsatuwuh\0"
  /* 14264 */ "A4_vrmaxuh\0"
  /* 14275 */ "A2_vmaxuh\0"
  /* 14285 */ "V6_vmaxuh\0"
  /* 14295 */ "V6_vmpyuh\0"
  /* 14305 */ "S2_asl_i_vh\0"
  /* 14317 */ "S2_asr_i_vh\0"
  /* 14329 */ "S2_lsr_i_vh\0"
  /* 14341 */ "S2_asl_r_vh\0"
  /* 14353 */ "S2_lsl_r_vh\0"
  /* 14365 */ "S2_asr_r_vh\0"
  /* 14377 */ "S2_lsr_r_vh\0"
  /* 14389 */ "M4_cmpyi_wh\0"
  /* 14401 */ "M4_cmpyr_wh\0"
  /* 14413 */ "V6_vroundwh\0"
  /* 14425 */ "S2_vtrunewh\0"
  /* 14437 */ "V6_vmpyiwh\0"
  /* 14448 */ "S2_vrndpackwh\0"
  /* 14462 */ "V6_vmpyiowh\0"
  /* 14474 */ "S2_vtrunowh\0"
  /* 14486 */ "V6_vmpyowh\0"
  /* 14497 */ "V6_vasrwh\0"
  /* 14507 */ "S2_vsatwh\0"
  /* 14517 */ "V6_vsatwh\0"
  /* 14527 */ "V6_vlutvwh\0"
  /* 14538 */ "A4_vrmaxh\0"
  /* 14548 */ "A2_vmaxh\0"
  /* 14557 */ "V6_vmaxh\0"
  /* 14566 */ "S2_tableidxh\0"
  /* 14579 */ "M4_vpmpyh\0"
  /* 14589 */ "V6_vmpyh\0"
  /* 14598 */ "V6_vzh\0"
  /* 14605 */ "SA1_combine0i\0"
  /* 14619 */ "J2_loop0i\0"
  /* 14629 */ "SA1_combine1i\0"
  /* 14643 */ "J2_loop1i\0"
  /* 14653 */ "SA1_combine2i\0"
  /* 14667 */ "SA1_combine3i\0"
  /* 14681 */ "PS_tailcall_i\0"
  /* 14695 */ "M2_vcmac_s0_sat_i\0"
  /* 14713 */ "M2_vcmpy_s0_sat_i\0"
  /* 14731 */ "M2_vcmpy_s1_sat_i\0"
  /* 14749 */ "S2_togglebit_i\0"
  /* 14764 */ "S2_clrbit_i\0"
  /* 14776 */ "S2_setbit_i\0"
  /* 14788 */ "S2_tstbit_i\0"
  /* 14800 */ "S4_ntstbit_i\0"
  /* 14813 */ "V6_vL32b_ai\0"
  /* 14825 */ "V6_vS32b_ai\0"
  /* 14837 */ "V6_vL32Ub_ai\0"
  /* 14850 */ "V6_vS32Ub_ai\0"
  /* 14863 */ "V6_zLd_ai\0"
  /* 14873 */ "V6_vL32b_pred_ai\0"
  /* 14890 */ "V6_vS32b_pred_ai\0"
  /* 14907 */ "V6_vS32Ub_pred_ai\0"
  /* 14925 */ "V6_zLd_pred_ai\0"
  /* 14940 */ "V6_vL32b_tmp_pred_ai\0"
  /* 14961 */ "V6_vL32b_nt_tmp_pred_ai\0"
  /* 14985 */ "V6_vL32b_cur_pred_ai\0"
  /* 15006 */ "V6_vL32b_nt_cur_pred_ai\0"
  /* 15030 */ "V6_vL32b_nt_pred_ai\0"
  /* 15050 */ "V6_vS32b_nt_pred_ai\0"
  /* 15070 */ "V6_vS32b_new_pred_ai\0"
  /* 15091 */ "V6_vS32b_nt_new_pred_ai\0"
  /* 15115 */ "V6_vL32b_npred_ai\0"
  /* 15133 */ "V6_vS32b_npred_ai\0"
  /* 15151 */ "V6_vS32Ub_npred_ai\0"
  /* 15170 */ "V6_vL32b_tmp_npred_ai\0"
  /* 15192 */ "V6_vL32b_nt_tmp_npred_ai\0"
  /* 15217 */ "V6_vL32b_cur_npred_ai\0"
  /* 15239 */ "V6_vL32b_nt_cur_npred_ai\0"
  /* 15264 */ "V6_vL32b_nt_npred_ai\0"
  /* 15285 */ "V6_vS32b_nt_npred_ai\0"
  /* 15306 */ "V6_vS32b_new_npred_ai\0"
  /* 15328 */ "V6_vS32b_nt_new_npred_ai\0"
  /* 15353 */ "V6_vS32b_qpred_ai\0"
  /* 15371 */ "V6_vS32b_nt_qpred_ai\0"
  /* 15392 */ "V6_vS32b_nqpred_ai\0"
  /* 15411 */ "V6_vS32b_nt_nqpred_ai\0"
  /* 15433 */ "V6_vL32b_tmp_ai\0"
  /* 15449 */ "V6_vL32b_nt_tmp_ai\0"
  /* 15468 */ "PS_vloadrq_ai\0"
  /* 15482 */ "PS_vstorerq_ai\0"
  /* 15497 */ "V6_vL32b_cur_ai\0"
  /* 15513 */ "V6_vL32b_nt_cur_ai\0"
  /* 15532 */ "V6_vS32b_srls_ai\0"
  /* 15549 */ "V6_vL32b_nt_ai\0"
  /* 15564 */ "V6_vS32b_nt_ai\0"
  /* 15579 */ "PS_vloadrv_nt_ai\0"
  /* 15596 */ "PS_vstorerv_nt_ai\0"
  /* 15614 */ "PS_vloadrw_nt_ai\0"
  /* 15631 */ "PS_vstorerw_nt_ai\0"
  /* 15649 */ "PS_vloadrv_ai\0"
  /* 15663 */ "PS_vstorerv_ai\0"
  /* 15678 */ "V6_vS32b_new_ai\0"
  /* 15694 */ "V6_vS32b_nt_new_ai\0"
  /* 15713 */ "PS_vloadrw_ai\0"
  /* 15727 */ "PS_vstorerw_ai\0"
  /* 15742 */ "V6_vlalignbi\0"
  /* 15755 */ "V6_valignbi\0"
  /* 15767 */ "V6_vrsadubi\0"
  /* 15779 */ "V6_vrmpyubi\0"
  /* 15791 */ "V6_vlutvvbi\0"
  /* 15803 */ "M2_maci\0"
  /* 15811 */ "M2_mnaci\0"
  /* 15820 */ "M2_acci\0"
  /* 15828 */ "M2_nacci\0"
  /* 15837 */ "V6_vlutvvb_oracci\0"
  /* 15855 */ "V6_vlutvwh_oracci\0"
  /* 15873 */ "L2_loadbsw2_pci\0"
  /* 15889 */ "L2_loadbzw2_pci\0"
  /* 15905 */ "L2_loadbsw4_pci\0"
  /* 15921 */ "L2_loadbzw4_pci\0"
  /* 15937 */ "L2_loadalignb_pci\0"
  /* 15955 */ "L2_loadrb_pci\0"
  /* 15969 */ "PS_loadrb_pci\0"
  /* 15983 */ "S2_storerb_pci\0"
  /* 15998 */ "PS_storerb_pci\0"
  /* 16013 */ "L2_loadrub_pci\0"
  /* 16028 */ "PS_loadrub_pci\0"
  /* 16043 */ "L2_loadrd_pci\0"
  /* 16057 */ "PS_loadrd_pci\0"
  /* 16071 */ "S2_storerd_pci\0"
  /* 16086 */ "PS_storerd_pci\0"
  /* 16101 */ "S2_storerf_pci\0"
  /* 16116 */ "PS_storerf_pci\0"
  /* 16131 */ "L2_loadalignh_pci\0"
  /* 16149 */ "L2_loadrh_pci\0"
  /* 16163 */ "PS_loadrh_pci\0"
  /* 16177 */ "S2_storerh_pci\0"
  /* 16192 */ "PS_storerh_pci\0"
  /* 16207 */ "L2_loadruh_pci\0"
  /* 16222 */ "PS_loadruh_pci\0"
  /* 16237 */ "L2_loadri_pci\0"
  /* 16251 */ "PS_loadri_pci\0"
  /* 16265 */ "S2_storeri_pci\0"
  /* 16280 */ "PS_storeri_pci\0"
  /* 16295 */ "S2_storerbnew_pci\0"
  /* 16313 */ "S2_storerhnew_pci\0"
  /* 16331 */ "S2_storerinew_pci\0"
  /* 16349 */ "SA1_addi\0"
  /* 16358 */ "dup_A2_addi\0"
  /* 16370 */ "M4_mpyri_addi\0"
  /* 16384 */ "M4_mpyrr_addi\0"
  /* 16398 */ "S4_clbaddi\0"
  /* 16409 */ "S4_subaddi\0"
  /* 16420 */ "S4_addaddi\0"
  /* 16431 */ "S4_clbpaddi\0"
  /* 16443 */ "S4_or_andi\0"
  /* 16454 */ "C2_cmpgei\0"
  /* 16464 */ "C4_cmpltei\0"
  /* 16475 */ "PS_fi\0"
  /* 16481 */ "V6_hi\0"
  /* 16487 */ "A4_boundscheck_hi\0"
  /* 16505 */ "V6_vlutvwhi\0"
  /* 16517 */ "M2_accii\0"
  /* 16526 */ "M2_naccii\0"
  /* 16536 */ "dup_A2_combineii\0"
  /* 16553 */ "dup_A4_combineii\0"
  /* 16570 */ "C2_muxii\0"
  /* 16579 */ "S4_lsli\0"
  /* 16587 */ "M2_mpysmi\0"
  /* 16597 */ "L2_loadbsw2_pi\0"
  /* 16612 */ "L2_loadbzw2_pi\0"
  /* 16627 */ "L2_loadbsw4_pi\0"
  /* 16642 */ "L2_loadbzw4_pi\0"
  /* 16657 */ "V6_vL32b_pi\0"
  /* 16669 */ "V6_vS32b_pi\0"
  /* 16681 */ "V6_vL32Ub_pi\0"
  /* 16694 */ "V6_vS32Ub_pi\0"
  /* 16707 */ "L2_loadalignb_pi\0"
  /* 16724 */ "L2_loadrb_pi\0"
  /* 16737 */ "S2_storerb_pi\0"
  /* 16751 */ "L2_loadrub_pi\0"
  /* 16765 */ "V6_zLd_pi\0"
  /* 16775 */ "V6_vL32b_pred_pi\0"
  /* 16792 */ "V6_vS32b_pred_pi\0"
  /* 16809 */ "V6_vS32Ub_pred_pi\0"
  /* 16827 */ "V6_zLd_pred_pi\0"
  /* 16842 */ "V6_vL32b_tmp_pred_pi\0"
  /* 16863 */ "V6_vL32b_nt_tmp_pred_pi\0"
  /* 16887 */ "V6_vL32b_cur_pred_pi\0"
  /* 16908 */ "V6_vL32b_nt_cur_pred_pi\0"
  /* 16932 */ "V6_vL32b_nt_pred_pi\0"
  /* 16952 */ "V6_vS32b_nt_pred_pi\0"
  /* 16972 */ "V6_vS32b_new_pred_pi\0"
  /* 16993 */ "V6_vS32b_nt_new_pred_pi\0"
  /* 17017 */ "V6_vL32b_npred_pi\0"
  /* 17035 */ "V6_vS32b_npred_pi\0"
  /* 17053 */ "V6_vS32Ub_npred_pi\0"
  /* 17072 */ "V6_vL32b_tmp_npred_pi\0"
  /* 17094 */ "V6_vL32b_nt_tmp_npred_pi\0"
  /* 17119 */ "V6_vL32b_cur_npred_pi\0"
  /* 17141 */ "V6_vL32b_nt_cur_npred_pi\0"
  /* 17166 */ "V6_vL32b_nt_npred_pi\0"
  /* 17187 */ "V6_vS32b_nt_npred_pi\0"
  /* 17208 */ "V6_vS32b_new_npred_pi\0"
  /* 17230 */ "V6_vS32b_nt_new_npred_pi\0"
  /* 17255 */ "V6_vS32b_qpred_pi\0"
  /* 17273 */ "V6_vS32b_nt_qpred_pi\0"
  /* 17294 */ "V6_vS32b_nqpred_pi\0"
  /* 17313 */ "V6_vS32b_nt_nqpred_pi\0"
  /* 17335 */ "L2_loadrd_pi\0"
  /* 17348 */ "S2_storerd_pi\0"
  /* 17362 */ "L2_ploadrbf_pi\0"
  /* 17377 */ "S2_pstorerbf_pi\0"
  /* 17393 */ "L2_ploadrubf_pi\0"
  /* 17409 */ "L2_ploadrdf_pi\0"
  /* 17424 */ "S2_pstorerdf_pi\0"
  /* 17440 */ "S2_pstorerff_pi\0"
  /* 17456 */ "L2_ploadrhf_pi\0"
  /* 17471 */ "S2_pstorerhf_pi\0"
  /* 17487 */ "L2_ploadruhf_pi\0"
  /* 17503 */ "L2_ploadrif_pi\0"
  /* 17518 */ "S2_pstorerif_pi\0"
  /* 17534 */ "S2_storerf_pi\0"
  /* 17548 */ "S2_pstorerbnewf_pi\0"
  /* 17567 */ "S2_pstorerhnewf_pi\0"
  /* 17586 */ "S2_pstorerinewf_pi\0"
  /* 17605 */ "L2_loadalignh_pi\0"
  /* 17622 */ "L2_loadrh_pi\0"
  /* 17635 */ "S2_storerh_pi\0"
  /* 17649 */ "L2_loadruh_pi\0"
  /* 17663 */ "L2_loadri_pi\0"
  /* 17676 */ "S2_storeri_pi\0"
  /* 17690 */ "V6_vL32b_tmp_pi\0"
  /* 17706 */ "V6_vL32b_nt_tmp_pi\0"
  /* 17725 */ "V6_vL32b_cur_pi\0"
  /* 17741 */ "V6_vL32b_nt_cur_pi\0"
  /* 17760 */ "V6_vS32b_srls_pi\0"
  /* 17777 */ "L2_ploadrbt_pi\0"
  /* 17792 */ "S2_pstorerbt_pi\0"
  /* 17808 */ "L2_ploadrubt_pi\0"
  /* 17824 */ "L2_ploadrdt_pi\0"
  /* 17839 */ "S2_pstorerdt_pi\0"
  /* 17855 */ "S2_pstorerft_pi\0"
  /* 17871 */ "L2_ploadrht_pi\0"
  /* 17886 */ "S2_pstorerht_pi\0"
  /* 17902 */ "L2_ploadruht_pi\0"
  /* 17918 */ "L2_ploadrit_pi\0"
  /* 17933 */ "S2_pstorerit_pi\0"
  /* 17949 */ "V6_vL32b_nt_pi\0"
  /* 17964 */ "V6_vS32b_nt_pi\0"
  /* 17979 */ "S2_pstorerbnewt_pi\0"
  /* 17998 */ "S2_pstorerhnewt_pi\0"
  /* 18017 */ "S2_pstorerinewt_pi\0"
  /* 18036 */ "V6_vS32b_new_pi\0"
  /* 18052 */ "V6_vS32b_nt_new_pi\0"
  /* 18071 */ "S2_storerbnew_pi\0"
  /* 18088 */ "L2_ploadrbfnew_pi\0"
  /* 18106 */ "S2_pstorerbfnew_pi\0"
  /* 18125 */ "L2_ploadrubfnew_pi\0"
  /* 18144 */ "L2_ploadrdfnew_pi\0"
  /* 18162 */ "S2_pstorerdfnew_pi\0"
  /* 18181 */ "S2_pstorerffnew_pi\0"
  /* 18200 */ "L2_ploadrhfnew_pi\0"
  /* 18218 */ "S2_pstorerhfnew_pi\0"
  /* 18237 */ "L2_ploadruhfnew_pi\0"
  /* 18256 */ "L2_ploadrifnew_pi\0"
  /* 18274 */ "S2_pstorerifnew_pi\0"
  /* 18293 */ "S2_pstorerbnewfnew_pi\0"
  /* 18315 */ "S2_pstorerhnewfnew_pi\0"
  /* 18337 */ "S2_pstorerinewfnew_pi\0"
  /* 18359 */ "S2_storerhnew_pi\0"
  /* 18376 */ "S2_storerinew_pi\0"
  /* 18393 */ "L2_ploadrbtnew_pi\0"
  /* 18411 */ "S2_pstorerbtnew_pi\0"
  /* 18430 */ "L2_ploadrubtnew_pi\0"
  /* 18449 */ "L2_ploadrdtnew_pi\0"
  /* 18467 */ "S2_pstorerdtnew_pi\0"
  /* 18486 */ "S2_pstorerftnew_pi\0"
  /* 18505 */ "L2_ploadrhtnew_pi\0"
  /* 18523 */ "S2_pstorerhtnew_pi\0"
  /* 18542 */ "L2_ploadruhtnew_pi\0"
  /* 18561 */ "L2_ploadritnew_pi\0"
  /* 18579 */ "S2_pstoreritnew_pi\0"
  /* 18598 */ "S2_pstorerbnewtnew_pi\0"
  /* 18620 */ "S2_pstorerhnewtnew_pi\0"
  /* 18642 */ "S2_pstorerinewtnew_pi\0"
  /* 18664 */ "A2_tfrpi\0"
  /* 18673 */ "A4_cmpbeqi\0"
  /* 18684 */ "A4_vcmpbeqi\0"
  /* 18696 */ "A4_cmpheqi\0"
  /* 18707 */ "A4_vcmpheqi\0"
  /* 18719 */ "C4_cmpneqi\0"
  /* 18730 */ "A4_rcmpneqi\0"
  /* 18742 */ "SA1_cmpeqi\0"
  /* 18753 */ "dup_C2_cmpeqi\0"
  /* 18767 */ "A4_rcmpeqi\0"
  /* 18778 */ "A4_vcmpweqi\0"
  /* 18790 */ "A7_croundd_ri\0"
  /* 18804 */ "A4_round_ri\0"
  /* 18816 */ "A4_cround_ri\0"
  /* 18829 */ "S4_subi_asl_ri\0"
  /* 18844 */ "S4_addi_asl_ri\0"
  /* 18859 */ "S4_andi_asl_ri\0"
  /* 18874 */ "S4_ori_asl_ri\0"
  /* 18888 */ "S4_subi_lsr_ri\0"
  /* 18903 */ "S4_addi_lsr_ri\0"
  /* 18918 */ "S4_andi_lsr_ri\0"
  /* 18933 */ "S4_ori_lsr_ri\0"
  /* 18947 */ "A2_subri\0"
  /* 18956 */ "dup_A4_combineri\0"
  /* 18973 */ "C2_bitsclri\0"
  /* 18985 */ "C4_nbitsclri\0"
  /* 18998 */ "S4_or_ori\0"
  /* 19008 */ "S2_addasl_rrri\0"
  /* 19023 */ "C2_muxri\0"
  /* 19032 */ "J2_ploop1si\0"
  /* 19044 */ "J2_ploop2si\0"
  /* 19056 */ "J2_ploop3si\0"
  /* 19068 */ "dup_A2_tfrsi\0"
  /* 19081 */ "V6_vrmpybusi\0"
  /* 19094 */ "SA1_seti\0"
  /* 19103 */ "J4_jumpseti\0"
  /* 19115 */ "A4_cmpbgti\0"
  /* 19126 */ "A4_vcmpbgti\0"
  /* 19138 */ "A4_cmphgti\0"
  /* 19149 */ "A4_vcmphgti\0"
  /* 19161 */ "C2_cmpgti\0"
  /* 19171 */ "A4_vcmpwgti\0"
  /* 19183 */ "A4_bitspliti\0"
  /* 19196 */ "C2_cmpgeui\0"
  /* 19207 */ "C4_cmplteui\0"
  /* 19219 */ "A4_cmpbgtui\0"
  /* 19231 */ "A4_vcmpbgtui\0"
  /* 19244 */ "A4_cmphgtui\0"
  /* 19256 */ "A4_vcmphgtui\0"
  /* 19269 */ "C2_cmpgtui\0"
  /* 19280 */ "A4_vcmpwgtui\0"
  /* 19293 */ "M2_mpyui\0"
  /* 19302 */ "R6_release_at_vi\0"
  /* 19319 */ "S4_stored_rl_at_vi\0"
  /* 19338 */ "S2_storew_rl_at_vi\0"
  /* 19357 */ "R6_release_st_vi\0"
  /* 19374 */ "S4_stored_rl_st_vi\0"
  /* 19393 */ "S2_storew_rl_st_vi\0"
  /* 19412 */ "M2_mpyi\0"
  /* 19420 */ "A2_vconj\0"
  /* 19429 */ "Y2_break\0"
  /* 19438 */ "M2_vmpy2s_s0pack\0"
  /* 19455 */ "M2_vmpy2s_s1pack\0"
  /* 19472 */ "S2_vsathb_nopack\0"
  /* 19489 */ "S2_vsathub_nopack\0"
  /* 19507 */ "S2_vsatwuh_nopack\0"
  /* 19525 */ "S2_vsatwh_nopack\0"
  /* 19542 */ "C2_vitpack\0"
  /* 19553 */ "A4_boundscheck\0"
  /* 19568 */ "Y6_dmlink\0"
  /* 19578 */ "C2_mask\0"
  /* 19586 */ "S2_mask\0"
  /* 19594 */ "PS_call_stk\0"
  /* 19606 */ "M2_vrcmpys_acc_s1_l\0"
  /* 19626 */ "M2_vrcmpys_s1_l\0"
  /* 19642 */ "M2_vrcmpys_s1rp_l\0"
  /* 19660 */ "V6_vdeal\0"
  /* 19669 */ "A2_subh_h16_hl\0"
  /* 19684 */ "A2_addh_h16_hl\0"
  /* 19699 */ "A2_subh_l16_hl\0"
  /* 19714 */ "A2_addh_l16_hl\0"
  /* 19729 */ "A2_combine_hl\0"
  /* 19743 */ "A2_subh_h16_sat_hl\0"
  /* 19762 */ "A2_addh_h16_sat_hl\0"
  /* 19781 */ "A2_subh_l16_sat_hl\0"
  /* 19800 */ "A2_addh_l16_sat_hl\0"
  /* 19819 */ "dep_S2_packhl\0"
  /* 19833 */ "A2_tfril\0"
  /* 19842 */ "A2_subh_h16_ll\0"
  /* 19857 */ "A2_addh_h16_ll\0"
  /* 19872 */ "A2_subh_l16_ll\0"
  /* 19887 */ "A2_addh_l16_ll\0"
  /* 19902 */ "A2_combine_ll\0"
  /* 19916 */ "A2_subh_h16_sat_ll\0"
  /* 19935 */ "A2_addh_h16_sat_ll\0"
  /* 19954 */ "A2_subh_l16_sat_ll\0"
  /* 19973 */ "A2_addh_l16_sat_ll\0"
  /* 19992 */ "J2_call\0"
  /* 20000 */ "Y6_dmpoll\0"
  /* 20010 */ "F2_dfmpyll\0"
  /* 20021 */ "A2_addspl\0"
  /* 20031 */ "V6_vwhist128m\0"
  /* 20045 */ "V6_vlutvvb_nm\0"
  /* 20059 */ "V6_vlutvwh_nm\0"
  /* 20073 */ "V6_vwhist128qm\0"
  /* 20088 */ "S2_clbnorm\0"
  /* 20099 */ "S4_clbpnorm\0"
  /* 20111 */ "V6_pred_and_n\0"
  /* 20125 */ "F2_dfimm_n\0"
  /* 20136 */ "F2_sfimm_n\0"
  /* 20147 */ "V6_pred_or_n\0"
  /* 20160 */ "C2_andn\0"
  /* 20168 */ "A4_andn\0"
  /* 20176 */ "C4_and_andn\0"
  /* 20188 */ "M4_and_andn\0"
  /* 20200 */ "C4_or_andn\0"
  /* 20211 */ "M4_or_andn\0"
  /* 20222 */ "M4_xor_andn\0"
  /* 20234 */ "V6_vassign\0"
  /* 20245 */ "S2_cabacdecbin\0"
  /* 20260 */ "A2_min\0"
  /* 20267 */ "F2_dfmin\0"
  /* 20276 */ "F2_sfmin\0"
  /* 20285 */ "M2_macsin\0"
  /* 20295 */ "M2_mpysin\0"
  /* 20305 */ "F2_sffixupn\0"
  /* 20317 */ "C2_orn\0"
  /* 20324 */ "A4_orn\0"
  /* 20331 */ "C4_and_orn\0"
  /* 20342 */ "C4_or_orn\0"
  /* 20352 */ "SL2_return\0"
  /* 20363 */ "L4_return\0"
  /* 20373 */ "S2_asr_i_svw_trun\0"
  /* 20391 */ "S2_asr_r_svw_trun\0"
  /* 20409 */ "Y2_dcfetchbo\0"
  /* 20422 */ "DUPLEX_Pseudo\0"
  /* 20436 */ "V6_vgathermh_pseudo\0"
  /* 20456 */ "V6_vgathermhq_pseudo\0"
  /* 20477 */ "V6_vgathermhwq_pseudo\0"
  /* 20499 */ "V6_vgathermwq_pseudo\0"
  /* 20520 */ "V6_vgathermhw_pseudo\0"
  /* 20541 */ "V6_vgathermw_pseudo\0"
  /* 20561 */ "L2_loadbsw2_io\0"
  /* 20576 */ "L2_loadbzw2_io\0"
  /* 20591 */ "L2_loadbsw4_io\0"
  /* 20606 */ "L2_loadbzw4_io\0"
  /* 20621 */ "SS1_storeb_io\0"
  /* 20635 */ "L2_loadalignb_io\0"
  /* 20652 */ "L4_sub_memopb_io\0"
  /* 20669 */ "L4_isub_memopb_io\0"
  /* 20687 */ "L4_add_memopb_io\0"
  /* 20704 */ "L4_iadd_memopb_io\0"
  /* 20722 */ "L4_and_memopb_io\0"
  /* 20739 */ "L4_iand_memopb_io\0"
  /* 20757 */ "L4_or_memopb_io\0"
  /* 20773 */ "L4_ior_memopb_io\0"
  /* 20790 */ "SL2_loadrb_io\0"
  /* 20804 */ "dup_L2_loadrb_io\0"
  /* 20821 */ "dup_S2_storerb_io\0"
  /* 20839 */ "dup_S4_storeirb_io\0"
  /* 20858 */ "SL1_loadrub_io\0"
  /* 20873 */ "dup_L2_loadrub_io\0"
  /* 20891 */ "dup_L2_loadrd_io\0"
  /* 20908 */ "dup_S2_storerd_io\0"
  /* 20926 */ "L2_ploadrbf_io\0"
  /* 20941 */ "S2_pstorerbf_io\0"
  /* 20957 */ "S4_storeirbf_io\0"
  /* 20973 */ "L2_ploadrubf_io\0"
  /* 20989 */ "L2_ploadrdf_io\0"
  /* 21004 */ "S2_pstorerdf_io\0"
  /* 21020 */ "S2_pstorerff_io\0"
  /* 21036 */ "L2_ploadrhf_io\0"
  /* 21051 */ "S2_pstorerhf_io\0"
  /* 21067 */ "S4_storeirhf_io\0"
  /* 21083 */ "L2_ploadruhf_io\0"
  /* 21099 */ "L2_ploadrif_io\0"
  /* 21114 */ "S2_pstorerif_io\0"
  /* 21130 */ "S4_storeirif_io\0"
  /* 21146 */ "S2_storerf_io\0"
  /* 21160 */ "S2_pstorerbnewf_io\0"
  /* 21179 */ "S2_pstorerhnewf_io\0"
  /* 21198 */ "S2_pstorerinewf_io\0"
  /* 21217 */ "SS2_storeh_io\0"
  /* 21231 */ "L2_loadalignh_io\0"
  /* 21248 */ "L4_sub_memoph_io\0"
  /* 21265 */ "L4_isub_memoph_io\0"
  /* 21283 */ "L4_add_memoph_io\0"
  /* 21300 */ "L4_iadd_memoph_io\0"
  /* 21318 */ "L4_and_memoph_io\0"
  /* 21335 */ "L4_iand_memoph_io\0"
  /* 21353 */ "L4_or_memoph_io\0"
  /* 21369 */ "L4_ior_memoph_io\0"
  /* 21386 */ "SL2_loadrh_io\0"
  /* 21400 */ "dup_L2_loadrh_io\0"
  /* 21417 */ "dup_S2_storerh_io\0"
  /* 21435 */ "S4_storeirh_io\0"
  /* 21450 */ "SL2_loadruh_io\0"
  /* 21465 */ "dup_L2_loadruh_io\0"
  /* 21483 */ "SL1_loadri_io\0"
  /* 21497 */ "dup_L2_loadri_io\0"
  /* 21514 */ "dup_S2_storeri_io\0"
  /* 21532 */ "dup_S4_storeiri_io\0"
  /* 21551 */ "L2_ploadrbt_io\0"
  /* 21566 */ "S2_pstorerbt_io\0"
  /* 21582 */ "S4_storeirbt_io\0"
  /* 21598 */ "L2_ploadrubt_io\0"
  /* 21614 */ "L2_ploadrdt_io\0"
  /* 21629 */ "S2_pstorerdt_io\0"
  /* 21645 */ "S2_pstorerft_io\0"
  /* 21661 */ "L2_ploadrht_io\0"
  /* 21676 */ "S2_pstorerht_io\0"
  /* 21692 */ "S4_storeirht_io\0"
  /* 21708 */ "L2_ploadruht_io\0"
  /* 21724 */ "L2_ploadrit_io\0"
  /* 21739 */ "S2_pstorerit_io\0"
  /* 21755 */ "S4_storeirit_io\0"
  /* 21771 */ "S2_pstorerbnewt_io\0"
  /* 21790 */ "S2_pstorerhnewt_io\0"
  /* 21809 */ "S2_pstorerinewt_io\0"
  /* 21828 */ "S2_storerbnew_io\0"
  /* 21845 */ "L2_ploadrbfnew_io\0"
  /* 21863 */ "S4_pstorerbfnew_io\0"
  /* 21882 */ "S4_storeirbfnew_io\0"
  /* 21901 */ "L2_ploadrubfnew_io\0"
  /* 21920 */ "L2_ploadrdfnew_io\0"
  /* 21938 */ "S4_pstorerdfnew_io\0"
  /* 21957 */ "S4_pstorerffnew_io\0"
  /* 21976 */ "L2_ploadrhfnew_io\0"
  /* 21994 */ "S4_pstorerhfnew_io\0"
  /* 22013 */ "S4_storeirhfnew_io\0"
  /* 22032 */ "L2_ploadruhfnew_io\0"
  /* 22051 */ "L2_ploadrifnew_io\0"
  /* 22069 */ "S4_pstorerifnew_io\0"
  /* 22088 */ "S4_storeirifnew_io\0"
  /* 22107 */ "S4_pstorerbnewfnew_io\0"
  /* 22129 */ "S4_pstorerhnewfnew_io\0"
  /* 22151 */ "S4_pstorerinewfnew_io\0"
  /* 22173 */ "S2_storerhnew_io\0"
  /* 22190 */ "S2_storerinew_io\0"
  /* 22207 */ "L2_ploadrbtnew_io\0"
  /* 22225 */ "S4_pstorerbtnew_io\0"
  /* 22244 */ "S4_storeirbtnew_io\0"
  /* 22263 */ "L2_ploadrubtnew_io\0"
  /* 22282 */ "L2_ploadrdtnew_io\0"
  /* 22300 */ "S4_pstorerdtnew_io\0"
  /* 22319 */ "S4_pstorerftnew_io\0"
  /* 22338 */ "L2_ploadrhtnew_io\0"
  /* 22356 */ "S4_pstorerhtnew_io\0"
  /* 22375 */ "S4_storeirhtnew_io\0"
  /* 22394 */ "L2_ploadruhtnew_io\0"
  /* 22413 */ "L2_ploadritnew_io\0"
  /* 22431 */ "S4_pstoreritnew_io\0"
  /* 22450 */ "S4_storeiritnew_io\0"
  /* 22469 */ "S4_pstorerbnewtnew_io\0"
  /* 22491 */ "S4_pstorerhnewtnew_io\0"
  /* 22513 */ "S4_pstorerinewtnew_io\0"
  /* 22535 */ "SS1_storew_io\0"
  /* 22549 */ "L4_sub_memopw_io\0"
  /* 22566 */ "L4_isub_memopw_io\0"
  /* 22584 */ "L4_add_memopw_io\0"
  /* 22601 */ "L4_iadd_memopw_io\0"
  /* 22619 */ "L4_and_memopw_io\0"
  /* 22636 */ "L4_iand_memopw_io\0"
  /* 22654 */ "L4_or_memopw_io\0"
  /* 22670 */ "L4_ior_memopw_io\0"
  /* 22687 */ "V6_lo\0"
  /* 22693 */ "A4_boundscheck_lo\0"
  /* 22711 */ "V6_vasr_into\0"
  /* 22724 */ "F2_dfcmpuo\0"
  /* 22735 */ "F2_sfcmpuo\0"
  /* 22746 */ "V6_vsubcarryo\0"
  /* 22760 */ "V6_vaddcarryo\0"
  /* 22774 */ "S2_cl0p\0"
  /* 22782 */ "S2_ct0p\0"
  /* 22790 */ "S2_cl1p\0"
  /* 22798 */ "S2_ct1p\0"
  /* 22806 */ "S6_rol_i_p\0"
  /* 22817 */ "S2_asl_i_p\0"
  /* 22828 */ "S2_asr_i_p\0"
  /* 22839 */ "S2_lsr_i_p\0"
  /* 22850 */ "F2_dfimm_p\0"
  /* 22861 */ "F2_sfimm_p\0"
  /* 22872 */ "S2_asl_r_p\0"
  /* 22883 */ "S2_lsl_r_p\0"
  /* 22894 */ "S2_asr_r_p\0"
  /* 22905 */ "S2_lsr_r_p\0"
  /* 22916 */ "L4_loadbsw2_ap\0"
  /* 22931 */ "L4_loadbzw2_ap\0"
  /* 22946 */ "L4_loadbsw4_ap\0"
  /* 22961 */ "L4_loadbzw4_ap\0"
  /* 22976 */ "L4_loadalignb_ap\0"
  /* 22993 */ "L4_loadrb_ap\0"
  /* 23006 */ "S4_storerb_ap\0"
  /* 23020 */ "L4_loadrub_ap\0"
  /* 23034 */ "L4_loadrd_ap\0"
  /* 23047 */ "S4_storerd_ap\0"
  /* 23061 */ "S4_storerf_ap\0"
  /* 23075 */ "L4_loadalignh_ap\0"
  /* 23092 */ "L4_loadrh_ap\0"
  /* 23105 */ "S4_storerh_ap\0"
  /* 23119 */ "L4_loadruh_ap\0"
  /* 23133 */ "L4_loadri_ap\0"
  /* 23146 */ "S4_storeri_ap\0"
  /* 23160 */ "S4_storerbnew_ap\0"
  /* 23177 */ "S4_storerhnew_ap\0"
  /* 23194 */ "S4_storerinew_ap\0"
  /* 23211 */ "V6_vtran2x2_map\0"
  /* 23227 */ "A2_vsubb_map\0"
  /* 23240 */ "A2_vaddb_map\0"
  /* 23253 */ "J2_jumpf_nopred_map\0"
  /* 23273 */ "J2_jumprf_nopred_map\0"
  /* 23294 */ "J2_jumpt_nopred_map\0"
  /* 23314 */ "J2_jumprt_nopred_map\0"
  /* 23335 */ "C2_pxfer_map\0"
  /* 23348 */ "J2_trap1_noregmap\0"
  /* 23366 */ "L2_loadbsw2_zomap\0"
  /* 23384 */ "L2_loadbzw2_zomap\0"
  /* 23402 */ "L2_loadbsw4_zomap\0"
  /* 23420 */ "L2_loadbzw4_zomap\0"
  /* 23438 */ "L2_loadalignb_zomap\0"
  /* 23458 */ "L4_sub_memopb_zomap\0"
  /* 23478 */ "L4_isub_memopb_zomap\0"
  /* 23499 */ "L4_add_memopb_zomap\0"
  /* 23519 */ "L4_iadd_memopb_zomap\0"
  /* 23540 */ "L4_and_memopb_zomap\0"
  /* 23560 */ "L4_iand_memopb_zomap\0"
  /* 23581 */ "L4_or_memopb_zomap\0"
  /* 23600 */ "L4_ior_memopb_zomap\0"
  /* 23620 */ "L2_loadrb_zomap\0"
  /* 23636 */ "S2_storerb_zomap\0"
  /* 23653 */ "S4_storeirb_zomap\0"
  /* 23671 */ "L2_loadrub_zomap\0"
  /* 23688 */ "L2_loadrd_zomap\0"
  /* 23704 */ "S2_storerd_zomap\0"
  /* 23721 */ "L2_ploadrbf_zomap\0"
  /* 23739 */ "S2_pstorerbf_zomap\0"
  /* 23758 */ "S4_storeirbf_zomap\0"
  /* 23777 */ "L2_ploadrubf_zomap\0"
  /* 23796 */ "L2_ploadrdf_zomap\0"
  /* 23814 */ "S2_pstorerdf_zomap\0"
  /* 23833 */ "S2_pstorerff_zomap\0"
  /* 23852 */ "L2_ploadrhf_zomap\0"
  /* 23870 */ "S2_pstorerhf_zomap\0"
  /* 23889 */ "S4_storeirhf_zomap\0"
  /* 23908 */ "L2_ploadruhf_zomap\0"
  /* 23927 */ "L2_ploadrif_zomap\0"
  /* 23945 */ "S2_pstorerif_zomap\0"
  /* 23964 */ "S4_storeirif_zomap\0"
  /* 23983 */ "S2_storerf_zomap\0"
  /* 24000 */ "S2_pstorerbnewf_zomap\0"
  /* 24022 */ "S2_pstorerhnewf_zomap\0"
  /* 24044 */ "S2_pstorerinewf_zomap\0"
  /* 24066 */ "L2_loadalignh_zomap\0"
  /* 24086 */ "L4_sub_memoph_zomap\0"
  /* 24106 */ "L4_isub_memoph_zomap\0"
  /* 24127 */ "L4_add_memoph_zomap\0"
  /* 24147 */ "L4_iadd_memoph_zomap\0"
  /* 24168 */ "L4_and_memoph_zomap\0"
  /* 24188 */ "L4_iand_memoph_zomap\0"
  /* 24209 */ "L4_or_memoph_zomap\0"
  /* 24228 */ "L4_ior_memoph_zomap\0"
  /* 24248 */ "L2_loadrh_zomap\0"
  /* 24264 */ "S2_storerh_zomap\0"
  /* 24281 */ "S4_storeirh_zomap\0"
  /* 24299 */ "L2_loadruh_zomap\0"
  /* 24316 */ "L2_loadri_zomap\0"
  /* 24332 */ "S2_storeri_zomap\0"
  /* 24349 */ "S4_storeiri_zomap\0"
  /* 24367 */ "L2_ploadrbt_zomap\0"
  /* 24385 */ "S2_pstorerbt_zomap\0"
  /* 24404 */ "S4_storeirbt_zomap\0"
  /* 24423 */ "L2_ploadrubt_zomap\0"
  /* 24442 */ "L2_ploadrdt_zomap\0"
  /* 24460 */ "S2_pstorerdt_zomap\0"
  /* 24479 */ "S2_pstorerft_zomap\0"
  /* 24498 */ "L2_ploadrht_zomap\0"
  /* 24516 */ "S2_pstorerht_zomap\0"
  /* 24535 */ "S4_storeirht_zomap\0"
  /* 24554 */ "L2_ploadruht_zomap\0"
  /* 24573 */ "L2_ploadrit_zomap\0"
  /* 24591 */ "S2_pstorerit_zomap\0"
  /* 24610 */ "S4_storeirit_zomap\0"
  /* 24629 */ "S2_pstorerbnewt_zomap\0"
  /* 24651 */ "S2_pstorerhnewt_zomap\0"
  /* 24673 */ "S2_pstorerinewt_zomap\0"
  /* 24695 */ "S2_storerbnew_zomap\0"
  /* 24715 */ "L2_ploadrbfnew_zomap\0"
  /* 24736 */ "S4_pstorerbfnew_zomap\0"
  /* 24758 */ "S4_storeirbfnew_zomap\0"
  /* 24780 */ "L2_ploadrubfnew_zomap\0"
  /* 24802 */ "L2_ploadrdfnew_zomap\0"
  /* 24823 */ "S4_pstorerdfnew_zomap\0"
  /* 24845 */ "S4_pstorerffnew_zomap\0"
  /* 24867 */ "L2_ploadrhfnew_zomap\0"
  /* 24888 */ "S4_pstorerhfnew_zomap\0"
  /* 24910 */ "S4_storeirhfnew_zomap\0"
  /* 24932 */ "L2_ploadruhfnew_zomap\0"
  /* 24954 */ "L2_ploadrifnew_zomap\0"
  /* 24975 */ "S4_pstorerifnew_zomap\0"
  /* 24997 */ "S4_storeirifnew_zomap\0"
  /* 25019 */ "S4_pstorerbnewfnew_zomap\0"
  /* 25044 */ "S4_pstorerhnewfnew_zomap\0"
  /* 25069 */ "S4_pstorerinewfnew_zomap\0"
  /* 25094 */ "S2_storerhnew_zomap\0"
  /* 25114 */ "S2_storerinew_zomap\0"
  /* 25134 */ "L2_ploadrbtnew_zomap\0"
  /* 25155 */ "S4_pstorerbtnew_zomap\0"
  /* 25177 */ "S4_storeirbtnew_zomap\0"
  /* 25199 */ "L2_ploadrubtnew_zomap\0"
  /* 25221 */ "L2_ploadrdtnew_zomap\0"
  /* 25242 */ "S4_pstorerdtnew_zomap\0"
  /* 25264 */ "S4_pstorerftnew_zomap\0"
  /* 25286 */ "L2_ploadrhtnew_zomap\0"
  /* 25307 */ "S4_pstorerhtnew_zomap\0"
  /* 25329 */ "S4_storeirhtnew_zomap\0"
  /* 25351 */ "L2_ploadruhtnew_zomap\0"
  /* 25373 */ "L2_ploadritnew_zomap\0"
  /* 25394 */ "S4_pstoreritnew_zomap\0"
  /* 25416 */ "S4_storeiritnew_zomap\0"
  /* 25438 */ "S4_pstorerbnewtnew_zomap\0"
  /* 25463 */ "S4_pstorerhnewtnew_zomap\0"
  /* 25488 */ "S4_pstorerinewtnew_zomap\0"
  /* 25513 */ "L4_sub_memopw_zomap\0"
  /* 25533 */ "L4_isub_memopw_zomap\0"
  /* 25554 */ "L4_add_memopw_zomap\0"
  /* 25574 */ "L4_iadd_memopw_zomap\0"
  /* 25595 */ "L4_and_memopw_zomap\0"
  /* 25615 */ "L4_iand_memopw_zomap\0"
  /* 25636 */ "L4_or_memopw_zomap\0"
  /* 25655 */ "L4_ior_memopw_zomap\0"
  /* 25675 */ "V6_vswap\0"
  /* 25684 */ "S2_clbp\0"
  /* 25692 */ "S6_vsplatrbp\0"
  /* 25705 */ "A2_subp\0"
  /* 25713 */ "G4_tfrgpcp\0"
  /* 25724 */ "A4_tfrpcp\0"
  /* 25734 */ "A2_addp\0"
  /* 25742 */ "A2_andp\0"
  /* 25750 */ "L2_loadrbgp\0"
  /* 25762 */ "S2_storerbgp\0"
  /* 25775 */ "L2_loadrubgp\0"
  /* 25788 */ "L2_loadrdgp\0"
  /* 25800 */ "S2_storerdgp\0"
  /* 25813 */ "A2_negp\0"
  /* 25821 */ "S2_storerfgp\0"
  /* 25834 */ "L2_loadrhgp\0"
  /* 25846 */ "S2_storerhgp\0"
  /* 25859 */ "L2_loadruhgp\0"
  /* 25872 */ "L2_loadrigp\0"
  /* 25884 */ "S2_storerigp\0"
  /* 25897 */ "S2_storerbnewgp\0"
  /* 25913 */ "S2_storerhnewgp\0"
  /* 25929 */ "S2_storerinewgp\0"
  /* 25945 */ "A7_clip\0"
  /* 25953 */ "A7_vclip\0"
  /* 25962 */ "M2_macsip\0"
  /* 25972 */ "M2_mpysip\0"
  /* 25982 */ "J2_jump\0"
  /* 25990 */ "A4_andnp\0"
  /* 25999 */ "V6_vassignp\0"
  /* 26011 */ "A2_minp\0"
  /* 26019 */ "A4_ornp\0"
  /* 26027 */ "F2_conv_df2d_chop\0"
  /* 26045 */ "F2_conv_sf2d_chop\0"
  /* 26063 */ "F2_conv_df2ud_chop\0"
  /* 26082 */ "F2_conv_sf2ud_chop\0"
  /* 26101 */ "F2_conv_df2w_chop\0"
  /* 26119 */ "F2_conv_sf2w_chop\0"
  /* 26137 */ "F2_conv_df2uw_chop\0"
  /* 26156 */ "F2_conv_sf2uw_chop\0"
  /* 26175 */ "A2_nop\0"
  /* 26182 */ "G4_tfrgcpp\0"
  /* 26193 */ "A4_tfrcpp\0"
  /* 26203 */ "S6_vtrunehb_ppp\0"
  /* 26219 */ "S6_vtrunohb_ppp\0"
  /* 26235 */ "C2_cmpeqp\0"
  /* 26245 */ "M2_vrcmpys_s1rp\0"
  /* 26261 */ "S4_extractp_rp\0"
  /* 26276 */ "S2_insertp_rp\0"
  /* 26290 */ "S2_extractup_rp\0"
  /* 26306 */ "S4_extract_rp\0"
  /* 26320 */ "S2_insert_rp\0"
  /* 26333 */ "S2_extractu_rp\0"
  /* 26348 */ "A2_tfrp\0"
  /* 26356 */ "A2_orp\0"
  /* 26363 */ "A2_xorp\0"
  /* 26371 */ "C2_tfrrp\0"
  /* 26380 */ "SS2_stored_sp\0"
  /* 26394 */ "SL2_loadrd_sp\0"
  /* 26408 */ "SL2_loadri_sp\0"
  /* 26422 */ "SS2_storew_sp\0"
  /* 26436 */ "A2_absp\0"
  /* 26444 */ "SA1_addsp\0"
  /* 26454 */ "A2_addsp\0"
  /* 26463 */ "S2_lfsp\0"
  /* 26471 */ "S4_extractp\0"
  /* 26483 */ "C2_cmpgtp\0"
  /* 26493 */ "S5_popcountp\0"
  /* 26506 */ "A2_notp\0"
  /* 26514 */ "S2_insertp\0"
  /* 26525 */ "M2_mpysu_up\0"
  /* 26537 */ "M2_mpyu_up\0"
  /* 26548 */ "M2_mpy_up\0"
  /* 26558 */ "A2_minup\0"
  /* 26567 */ "S2_extractup\0"
  /* 26580 */ "C2_cmpgtup\0"
  /* 26591 */ "A2_maxup\0"
  /* 26600 */ "S2_brevp\0"
  /* 26609 */ "A2_maxp\0"
  /* 26617 */ "S2_parityp\0"
  /* 26628 */ "V6_vwhist256q\0"
  /* 26642 */ "V6_vwhist128q\0"
  /* 26656 */ "L4_loadd_aq\0"
  /* 26668 */ "L2_loadw_aq\0"
  /* 26680 */ "V6_vsubbq\0"
  /* 26690 */ "V6_vaddbq\0"
  /* 26700 */ "A4_cmpbeq\0"
  /* 26710 */ "A2_vcmpbeq\0"
  /* 26721 */ "A4_cmpheq\0"
  /* 26731 */ "A2_vcmpheq\0"
  /* 26742 */ "C4_cmpneq\0"
  /* 26752 */ "A4_rcmpneq\0"
  /* 26763 */ "C2_cmpeq\0"
  /* 26772 */ "F2_dfcmpeq\0"
  /* 26783 */ "F2_sfcmpeq\0"
  /* 26794 */ "A4_rcmpeq\0"
  /* 26804 */ "A2_vcmpweq\0"
  /* 26815 */ "V6_vsubhq\0"
  /* 26825 */ "V6_vaddhq\0"
  /* 26835 */ "V6_vgathermhq\0"
  /* 26849 */ "V6_vscattermhq\0"
  /* 26864 */ "V6_vsubbnq\0"
  /* 26875 */ "V6_vaddbnq\0"
  /* 26886 */ "V6_vsubhnq\0"
  /* 26897 */ "V6_vaddhnq\0"
  /* 26908 */ "V6_vsubwnq\0"
  /* 26919 */ "V6_vaddwnq\0"
  /* 26930 */ "V6_vhistq\0"
  /* 26940 */ "V6_vsubwq\0"
  /* 26950 */ "V6_vaddwq\0"
  /* 26960 */ "V6_vgathermhwq\0"
  /* 26975 */ "V6_vscattermhwq\0"
  /* 26991 */ "V6_vgathermwq\0"
  /* 27005 */ "V6_vscattermwq\0"
  /* 27020 */ "J2_loop0r\0"
  /* 27030 */ "J2_loop1r\0"
  /* 27040 */ "S6_rol_i_r\0"
  /* 27051 */ "S2_asl_i_r\0"
  /* 27062 */ "S2_asr_i_r\0"
  /* 27073 */ "S2_lsr_i_r\0"
  /* 27084 */ "PS_tailcall_r\0"
  /* 27098 */ "S2_asl_r_r\0"
  /* 27109 */ "S2_lsl_r_r\0"
  /* 27120 */ "S2_asr_r_r\0"
  /* 27131 */ "S2_lsr_r_r\0"
  /* 27142 */ "M2_vcmac_s0_sat_r\0"
  /* 27160 */ "M2_vcmpy_s0_sat_r\0"
  /* 27178 */ "M2_vcmpy_s1_sat_r\0"
  /* 27196 */ "S2_togglebit_r\0"
  /* 27211 */ "S2_clrbit_r\0"
  /* 27223 */ "S2_setbit_r\0"
  /* 27235 */ "S2_tstbit_r\0"
  /* 27247 */ "S4_ntstbit_r\0"
  /* 27260 */ "L2_loadbsw2_pbr\0"
  /* 27276 */ "L2_loadbzw2_pbr\0"
  /* 27292 */ "L2_loadbsw4_pbr\0"
  /* 27308 */ "L2_loadbzw4_pbr\0"
  /* 27324 */ "L2_loadalignb_pbr\0"
  /* 27342 */ "L2_loadrb_pbr\0"
  /* 27356 */ "S2_storerb_pbr\0"
  /* 27371 */ "L2_loadrub_pbr\0"
  /* 27386 */ "L2_loadrd_pbr\0"
  /* 27400 */ "S2_storerd_pbr\0"
  /* 27415 */ "S2_storerf_pbr\0"
  /* 27430 */ "L2_loadalignh_pbr\0"
  /* 27448 */ "L2_loadrh_pbr\0"
  /* 27462 */ "S2_storerh_pbr\0"
  /* 27477 */ "L2_loadruh_pbr\0"
  /* 27492 */ "L2_loadri_pbr\0"
  /* 27506 */ "S2_storeri_pbr\0"
  /* 27521 */ "S2_storerbnew_pbr\0"
  /* 27539 */ "S2_storerhnew_pbr\0"
  /* 27557 */ "S2_storerinew_pbr\0"
  /* 27575 */ "A2_vavgubr\0"
  /* 27586 */ "A2_vnavghcr\0"
  /* 27598 */ "A2_vavghcr\0"
  /* 27609 */ "L2_loadbsw2_pcr\0"
  /* 27625 */ "L2_loadbzw2_pcr\0"
  /* 27641 */ "L2_loadbsw4_pcr\0"
  /* 27657 */ "L2_loadbzw4_pcr\0"
  /* 27673 */ "L2_loadalignb_pcr\0"
  /* 27691 */ "L2_loadrb_pcr\0"
  /* 27705 */ "PS_loadrb_pcr\0"
  /* 27719 */ "S2_storerb_pcr\0"
  /* 27734 */ "PS_storerb_pcr\0"
  /* 27749 */ "L2_loadrub_pcr\0"
  /* 27764 */ "PS_loadrub_pcr\0"
  /* 27779 */ "L2_loadrd_pcr\0"
  /* 27793 */ "PS_loadrd_pcr\0"
  /* 27807 */ "S2_storerd_pcr\0"
  /* 27822 */ "PS_storerd_pcr\0"
  /* 27837 */ "S2_storerf_pcr\0"
  /* 27852 */ "PS_storerf_pcr\0"
  /* 27867 */ "L2_loadalignh_pcr\0"
  /* 27885 */ "L2_loadrh_pcr\0"
  /* 27899 */ "PS_loadrh_pcr\0"
  /* 27913 */ "S2_storerh_pcr\0"
  /* 27928 */ "PS_storerh_pcr\0"
  /* 27943 */ "L2_loadruh_pcr\0"
  /* 27958 */ "PS_loadruh_pcr\0"
  /* 27973 */ "L2_loadri_pcr\0"
  /* 27987 */ "PS_loadri_pcr\0"
  /* 28001 */ "S2_storeri_pcr\0"
  /* 28016 */ "PS_storeri_pcr\0"
  /* 28031 */ "S2_storerbnew_pcr\0"
  /* 28049 */ "S2_storerhnew_pcr\0"
  /* 28067 */ "S2_storerinew_pcr\0"
  /* 28085 */ "G4_tfrgrcr\0"
  /* 28096 */ "A2_tfrrcr\0"
  /* 28106 */ "A2_vnavgwcr\0"
  /* 28118 */ "A2_vavgwcr\0"
  /* 28129 */ "M4_mpyri_addr\0"
  /* 28143 */ "M4_mpyrr_addr\0"
  /* 28157 */ "Y2_barrier\0"
  /* 28168 */ "SA1_tfr\0"
  /* 28176 */ "dup_A2_tfr\0"
  /* 28187 */ "S4_vxaddsubhr\0"
  /* 28201 */ "S4_vxsubaddhr\0"
  /* 28215 */ "A2_vnavghr\0"
  /* 28226 */ "A2_vavghr\0"
  /* 28236 */ "A2_vavguhr\0"
  /* 28247 */ "dup_A2_andir\0"
  /* 28260 */ "dup_A4_combineir\0"
  /* 28277 */ "A2_orir\0"
  /* 28285 */ "C2_muxir\0"
  /* 28294 */ "C2_bitsclr\0"
  /* 28305 */ "C4_nbitsclr\0"
  /* 28317 */ "J2_callr\0"
  /* 28326 */ "PS_call_nr\0"
  /* 28337 */ "PS_callr_nr\0"
  /* 28349 */ "A2_or\0"
  /* 28355 */ "C2_or\0"
  /* 28361 */ "V6_veqb_or\0"
  /* 28372 */ "V6_vgtb_or\0"
  /* 28383 */ "V6_vgtub_or\0"
  /* 28395 */ "V6_pred_or\0"
  /* 28406 */ "C4_and_or\0"
  /* 28416 */ "M4_and_or\0"
  /* 28426 */ "V6_veqh_or\0"
  /* 28437 */ "V6_vgth_or\0"
  /* 28448 */ "V6_vgtuh_or\0"
  /* 28460 */ "S6_rol_i_p_or\0"
  /* 28474 */ "S2_asl_i_p_or\0"
  /* 28488 */ "S2_asr_i_p_or\0"
  /* 28502 */ "S2_lsr_i_p_or\0"
  /* 28516 */ "S2_asl_r_p_or\0"
  /* 28530 */ "S2_lsl_r_p_or\0"
  /* 28544 */ "S2_asr_r_p_or\0"
  /* 28558 */ "S2_lsr_r_p_or\0"
  /* 28572 */ "S6_rol_i_r_or\0"
  /* 28586 */ "S2_asl_i_r_or\0"
  /* 28600 */ "S2_asr_i_r_or\0"
  /* 28614 */ "S2_lsr_i_r_or\0"
  /* 28628 */ "S2_asl_r_r_or\0"
  /* 28642 */ "S2_lsl_r_r_or\0"
  /* 28656 */ "S2_asr_r_r_or\0"
  /* 28670 */ "S2_lsr_r_r_or\0"
  /* 28684 */ "C4_or_or\0"
  /* 28693 */ "M4_or_or\0"
  /* 28702 */ "M4_xor_or\0"
  /* 28712 */ "V6_veqw_or\0"
  /* 28723 */ "V6_vgtw_or\0"
  /* 28734 */ "V6_vgtuw_or\0"
  /* 28746 */ "V6_MAP_equb_ior\0"
  /* 28762 */ "V6_MAP_equh_ior\0"
  /* 28778 */ "V6_MAP_equw_ior\0"
  /* 28794 */ "V6_vror\0"
  /* 28802 */ "V6_vor\0"
  /* 28809 */ "A2_xor\0"
  /* 28816 */ "C2_xor\0"
  /* 28823 */ "V6_veqb_xor\0"
  /* 28835 */ "V6_vgtb_xor\0"
  /* 28847 */ "V6_MAP_equb_xor\0"
  /* 28863 */ "V6_vgtub_xor\0"
  /* 28876 */ "V6_pred_xor\0"
  /* 28888 */ "M4_and_xor\0"
  /* 28899 */ "V6_veqh_xor\0"
  /* 28911 */ "V6_vgth_xor\0"
  /* 28923 */ "V6_MAP_equh_xor\0"
  /* 28939 */ "V6_vgtuh_xor\0"
  /* 28952 */ "S2_asl_r_p_xor\0"
  /* 28967 */ "S2_lsl_r_p_xor\0"
  /* 28982 */ "S2_asr_r_p_xor\0"
  /* 28997 */ "S2_lsr_r_p_xor\0"
  /* 29012 */ "M4_or_xor\0"
  /* 29022 */ "V6_veqw_xor\0"
  /* 29034 */ "V6_vgtw_xor\0"
  /* 29046 */ "V6_MAP_equw_xor\0"
  /* 29062 */ "V6_vgtuw_xor\0"
  /* 29075 */ "V6_vxor\0"
  /* 29083 */ "L2_loadbsw2_pr\0"
  /* 29098 */ "L2_loadbzw2_pr\0"
  /* 29113 */ "L2_loadbsw4_pr\0"
  /* 29128 */ "L2_loadbzw4_pr\0"
  /* 29143 */ "L2_loadalignb_pr\0"
  /* 29160 */ "L2_loadrb_pr\0"
  /* 29173 */ "S2_storerb_pr\0"
  /* 29187 */ "L2_loadrub_pr\0"
  /* 29201 */ "L2_loadrd_pr\0"
  /* 29214 */ "S2_storerd_pr\0"
  /* 29228 */ "S2_storerf_pr\0"
  /* 29242 */ "L2_loadalignh_pr\0"
  /* 29259 */ "L2_loadrh_pr\0"
  /* 29272 */ "S2_storerh_pr\0"
  /* 29286 */ "L2_loadruh_pr\0"
  /* 29300 */ "L2_loadri_pr\0"
  /* 29313 */ "S2_storeri_pr\0"
  /* 29327 */ "S2_storerbnew_pr\0"
  /* 29344 */ "S2_storerhnew_pr\0"
  /* 29361 */ "S2_storerinew_pr\0"
  /* 29378 */ "J2_jumpr\0"
  /* 29387 */ "J4_hintjumpr\0"
  /* 29400 */ "C2_tfrpr\0"
  /* 29409 */ "F2_sffixupr\0"
  /* 29421 */ "L4_loadrb_rr\0"
  /* 29434 */ "S4_storerb_rr\0"
  /* 29448 */ "L4_loadrub_rr\0"
  /* 29462 */ "A7_croundd_rr\0"
  /* 29476 */ "A4_round_rr\0"
  /* 29488 */ "A4_cround_rr\0"
  /* 29501 */ "L4_loadrd_rr\0"
  /* 29514 */ "S4_storerd_rr\0"
  /* 29528 */ "L4_ploadrbf_rr\0"
  /* 29543 */ "S4_pstorerbf_rr\0"
  /* 29559 */ "L4_ploadrubf_rr\0"
  /* 29575 */ "L4_ploadrdf_rr\0"
  /* 29590 */ "S4_pstorerdf_rr\0"
  /* 29606 */ "S4_pstorerff_rr\0"
  /* 29622 */ "L4_ploadrhf_rr\0"
  /* 29637 */ "S4_pstorerhf_rr\0"
  /* 29653 */ "L4_ploadruhf_rr\0"
  /* 29669 */ "L4_ploadrif_rr\0"
  /* 29684 */ "S4_pstorerif_rr\0"
  /* 29700 */ "S4_storerf_rr\0"
  /* 29714 */ "S4_pstorerbnewf_rr\0"
  /* 29733 */ "S4_pstorerhnewf_rr\0"
  /* 29752 */ "S4_pstorerinewf_rr\0"
  /* 29771 */ "L4_loadrh_rr\0"
  /* 29784 */ "S4_storerh_rr\0"
  /* 29798 */ "L4_loadruh_rr\0"
  /* 29812 */ "L4_loadri_rr\0"
  /* 29825 */ "S4_storeri_rr\0"
  /* 29839 */ "L4_ploadrbt_rr\0"
  /* 29854 */ "S4_pstorerbt_rr\0"
  /* 29870 */ "L4_ploadrubt_rr\0"
  /* 29886 */ "L4_ploadrdt_rr\0"
  /* 29901 */ "S4_pstorerdt_rr\0"
  /* 29917 */ "S4_pstorerft_rr\0"
  /* 29933 */ "L4_ploadrht_rr\0"
  /* 29948 */ "S4_pstorerht_rr\0"
  /* 29964 */ "L4_ploadruht_rr\0"
  /* 29980 */ "L4_ploadrit_rr\0"
  /* 29995 */ "S4_pstorerit_rr\0"
  /* 30011 */ "S4_pstorerbnewt_rr\0"
  /* 30030 */ "S4_pstorerhnewt_rr\0"
  /* 30049 */ "S4_pstorerinewt_rr\0"
  /* 30068 */ "S4_storerbnew_rr\0"
  /* 30085 */ "L4_ploadrbfnew_rr\0"
  /* 30103 */ "S4_pstorerbfnew_rr\0"
  /* 30122 */ "L4_ploadrubfnew_rr\0"
  /* 30141 */ "L4_ploadrdfnew_rr\0"
  /* 30159 */ "S4_pstorerdfnew_rr\0"
  /* 30178 */ "S4_pstorerffnew_rr\0"
  /* 30197 */ "L4_ploadrhfnew_rr\0"
  /* 30215 */ "S4_pstorerhfnew_rr\0"
  /* 30234 */ "L4_ploadruhfnew_rr\0"
  /* 30253 */ "L4_ploadrifnew_rr\0"
  /* 30271 */ "S4_pstorerifnew_rr\0"
  /* 30290 */ "S4_pstorerbnewfnew_rr\0"
  /* 30312 */ "S4_pstorerhnewfnew_rr\0"
  /* 30334 */ "S4_pstorerinewfnew_rr\0"
  /* 30356 */ "S4_storerhnew_rr\0"
  /* 30373 */ "S4_storerinew_rr\0"
  /* 30390 */ "L4_ploadrbtnew_rr\0"
  /* 30408 */ "S4_pstorerbtnew_rr\0"
  /* 30427 */ "L4_ploadrubtnew_rr\0"
  /* 30446 */ "L4_ploadrdtnew_rr\0"
  /* 30464 */ "S4_pstorerdtnew_rr\0"
  /* 30483 */ "S4_pstorerftnew_rr\0"
  /* 30502 */ "L4_ploadrhtnew_rr\0"
  /* 30520 */ "S4_pstorerhtnew_rr\0"
  /* 30539 */ "L4_ploadruhtnew_rr\0"
  /* 30558 */ "L4_ploadritnew_rr\0"
  /* 30576 */ "S4_pstoreritnew_rr\0"
  /* 30595 */ "S4_pstorerbnewtnew_rr\0"
  /* 30617 */ "S4_pstorerhnewtnew_rr\0"
  /* 30639 */ "S4_pstorerinewtnew_rr\0"
  /* 30661 */ "G4_tfrgcrr\0"
  /* 30672 */ "A2_tfrcrr\0"
  /* 30682 */ "J2_ploop1sr\0"
  /* 30694 */ "J2_ploop2sr\0"
  /* 30706 */ "J2_ploop3sr\0"
  /* 30718 */ "LDriw_ctr\0"
  /* 30728 */ "STriw_ctr\0"
  /* 30738 */ "J4_jumpsetr\0"
  /* 30750 */ "V6_vrotr\0"
  /* 30759 */ "L4_loadbsw2_ur\0"
  /* 30774 */ "L4_loadbzw2_ur\0"
  /* 30789 */ "L4_loadbsw4_ur\0"
  /* 30804 */ "L4_loadbzw4_ur\0"
  /* 30819 */ "L4_loadalignb_ur\0"
  /* 30836 */ "L4_loadrb_ur\0"
  /* 30849 */ "S4_storerb_ur\0"
  /* 30863 */ "L4_loadrub_ur\0"
  /* 30877 */ "L4_loadrd_ur\0"
  /* 30890 */ "S4_storerd_ur\0"
  /* 30904 */ "S4_storerf_ur\0"
  /* 30918 */ "L4_loadalignh_ur\0"
  /* 30935 */ "L4_loadrh_ur\0"
  /* 30948 */ "S4_storerh_ur\0"
  /* 30962 */ "L4_loadruh_ur\0"
  /* 30976 */ "L4_loadri_ur\0"
  /* 30989 */ "S4_storeri_ur\0"
  /* 31003 */ "S4_storerbnew_ur\0"
  /* 31020 */ "S4_storerhnew_ur\0"
  /* 31037 */ "S4_storerinew_ur\0"
  /* 31054 */ "A2_vnavgwr\0"
  /* 31065 */ "A2_vavgwr\0"
  /* 31075 */ "V6_vinsertwr\0"
  /* 31088 */ "A2_vavguwr\0"
  /* 31099 */ "SA1_combinezr\0"
  /* 31113 */ "A2_abs\0"
  /* 31120 */ "L4_ploadrbf_abs\0"
  /* 31136 */ "S4_pstorerbf_abs\0"
  /* 31153 */ "L4_ploadrubf_abs\0"
  /* 31170 */ "L4_ploadrdf_abs\0"
  /* 31186 */ "S4_pstorerdf_abs\0"
  /* 31203 */ "S4_pstorerff_abs\0"
  /* 31220 */ "L4_ploadrhf_abs\0"
  /* 31236 */ "S4_pstorerhf_abs\0"
  /* 31253 */ "L4_ploadruhf_abs\0"
  /* 31270 */ "L4_ploadrif_abs\0"
  /* 31286 */ "S4_pstorerif_abs\0"
  /* 31303 */ "S4_pstorerbnewf_abs\0"
  /* 31323 */ "S4_pstorerhnewf_abs\0"
  /* 31343 */ "S4_pstorerinewf_abs\0"
  /* 31363 */ "L4_ploadrbt_abs\0"
  /* 31379 */ "S4_pstorerbt_abs\0"
  /* 31396 */ "L4_ploadrubt_abs\0"
  /* 31413 */ "L4_ploadrdt_abs\0"
  /* 31429 */ "S4_pstorerdt_abs\0"
  /* 31446 */ "S4_pstorerft_abs\0"
  /* 31463 */ "L4_ploadrht_abs\0"
  /* 31479 */ "S4_pstorerht_abs\0"
  /* 31496 */ "L4_ploadruht_abs\0"
  /* 31513 */ "L4_ploadrit_abs\0"
  /* 31529 */ "S4_pstorerit_abs\0"
  /* 31546 */ "S4_pstorerbnewt_abs\0"
  /* 31566 */ "S4_pstorerhnewt_abs\0"
  /* 31586 */ "S4_pstorerinewt_abs\0"
  /* 31606 */ "L4_ploadrbfnew_abs\0"
  /* 31625 */ "S4_pstorerbfnew_abs\0"
  /* 31645 */ "L4_ploadrubfnew_abs\0"
  /* 31665 */ "L4_ploadrdfnew_abs\0"
  /* 31684 */ "S4_pstorerdfnew_abs\0"
  /* 31704 */ "S4_pstorerffnew_abs\0"
  /* 31724 */ "L4_ploadrhfnew_abs\0"
  /* 31743 */ "S4_pstorerhfnew_abs\0"
  /* 31763 */ "L4_ploadruhfnew_abs\0"
  /* 31783 */ "L4_ploadrifnew_abs\0"
  /* 31802 */ "S4_pstorerifnew_abs\0"
  /* 31822 */ "S4_pstorerbnewfnew_abs\0"
  /* 31845 */ "S4_pstorerhnewfnew_abs\0"
  /* 31868 */ "S4_pstorerinewfnew_abs\0"
  /* 31891 */ "L4_ploadrbtnew_abs\0"
  /* 31910 */ "S4_pstorerbtnew_abs\0"
  /* 31930 */ "L4_ploadrubtnew_abs\0"
  /* 31950 */ "L4_ploadrdtnew_abs\0"
  /* 31969 */ "S4_pstorerdtnew_abs\0"
  /* 31989 */ "S4_pstorerftnew_abs\0"
  /* 32009 */ "L4_ploadrhtnew_abs\0"
  /* 32028 */ "S4_pstorerhtnew_abs\0"
  /* 32048 */ "L4_ploadruhtnew_abs\0"
  /* 32068 */ "L4_ploadritnew_abs\0"
  /* 32087 */ "S4_pstoreritnew_abs\0"
  /* 32107 */ "S4_pstorerbnewtnew_abs\0"
  /* 32130 */ "S4_pstorerhnewtnew_abs\0"
  /* 32153 */ "S4_pstorerinewtnew_abs\0"
  /* 32176 */ "PS_loadrbabs\0"
  /* 32189 */ "PS_storerbabs\0"
  /* 32203 */ "PS_loadrubabs\0"
  /* 32217 */ "PS_loadrdabs\0"
  /* 32230 */ "PS_storerdabs\0"
  /* 32244 */ "PS_storerfabs\0"
  /* 32258 */ "PS_loadrhabs\0"
  /* 32271 */ "PS_storerhabs\0"
  /* 32285 */ "PS_loadruhabs\0"
  /* 32299 */ "PS_loadriabs\0"
  /* 32312 */ "PS_storeriabs\0"
  /* 32326 */ "PS_storerbnewabs\0"
  /* 32343 */ "PS_storerhnewabs\0"
  /* 32360 */ "PS_storerinewabs\0"
  /* 32377 */ "A2_vsububs\0"
  /* 32388 */ "A2_vaddubs\0"
  /* 32399 */ "A5_vaddhubs\0"
  /* 32411 */ "M2_vmac2es\0"
  /* 32422 */ "A2_vsubhs\0"
  /* 32432 */ "A2_svsubhs\0"
  /* 32443 */ "A2_vaddhs\0"
  /* 32453 */ "A2_svaddhs\0"
  /* 32464 */ "A2_svavghs\0"
  /* 32475 */ "A2_vsubuhs\0"
  /* 32486 */ "A2_svsubuhs\0"
  /* 32498 */ "A2_vadduhs\0"
  /* 32509 */ "A2_svadduhs\0"
  /* 32521 */ "S2_vrndpackwhs\0"
  /* 32536 */ "F2_sffms\0"
  /* 32545 */ "V6_vmpyhsrs\0"
  /* 32557 */ "V6_vmpyhvsrs\0"
  /* 32570 */ "F2_dfclass\0"
  /* 32581 */ "F2_sfclass\0"
  /* 32592 */ "V6_vmpyhss\0"
  /* 32603 */ "V6_vmpabus\0"
  /* 32614 */ "V6_vdmpybus\0"
  /* 32626 */ "V6_vrmpybus\0"
  /* 32638 */ "V6_vtmpybus\0"
  /* 32650 */ "V6_vmpybus\0"
  /* 32661 */ "V6_vmpyhus\0"
  /* 32672 */ "A2_vsubws\0"
  /* 32682 */ "A2_vaddws\0"
  /* 32692 */ "SL2_jumpr31_t\0"
  /* 32706 */ "SL2_return_t\0"
  /* 32719 */ "L4_return_t\0"
  /* 32731 */ "J4_tstbit0_fp0_jump_t\0"
  /* 32753 */ "J4_cmpeqn1_fp0_jump_t\0"
  /* 32775 */ "J4_cmpgtn1_fp0_jump_t\0"
  /* 32797 */ "J4_cmpeqi_fp0_jump_t\0"
  /* 32818 */ "J4_cmpgti_fp0_jump_t\0"
  /* 32839 */ "J4_cmpgtui_fp0_jump_t\0"
  /* 32861 */ "J4_cmpeq_fp0_jump_t\0"
  /* 32881 */ "J4_cmpgt_fp0_jump_t\0"
  /* 32901 */ "J4_cmpgtu_fp0_jump_t\0"
  /* 32922 */ "J4_tstbit0_tp0_jump_t\0"
  /* 32944 */ "J4_cmpeqn1_tp0_jump_t\0"
  /* 32966 */ "J4_cmpgtn1_tp0_jump_t\0"
  /* 32988 */ "J4_cmpeqi_tp0_jump_t\0"
  /* 33009 */ "J4_cmpgti_tp0_jump_t\0"
  /* 33030 */ "J4_cmpgtui_tp0_jump_t\0"
  /* 33052 */ "J4_cmpeq_tp0_jump_t\0"
  /* 33072 */ "J4_cmpgt_tp0_jump_t\0"
  /* 33092 */ "J4_cmpgtu_tp0_jump_t\0"
  /* 33113 */ "J4_tstbit0_fp1_jump_t\0"
  /* 33135 */ "J4_cmpeqn1_fp1_jump_t\0"
  /* 33157 */ "J4_cmpgtn1_fp1_jump_t\0"
  /* 33179 */ "J4_cmpeqi_fp1_jump_t\0"
  /* 33200 */ "J4_cmpgti_fp1_jump_t\0"
  /* 33221 */ "J4_cmpgtui_fp1_jump_t\0"
  /* 33243 */ "J4_cmpeq_fp1_jump_t\0"
  /* 33263 */ "J4_cmpgt_fp1_jump_t\0"
  /* 33283 */ "J4_cmpgtu_fp1_jump_t\0"
  /* 33304 */ "J4_tstbit0_tp1_jump_t\0"
  /* 33326 */ "J4_cmpeqn1_tp1_jump_t\0"
  /* 33348 */ "J4_cmpgtn1_tp1_jump_t\0"
  /* 33370 */ "J4_cmpeqi_tp1_jump_t\0"
  /* 33391 */ "J4_cmpgti_tp1_jump_t\0"
  /* 33412 */ "J4_cmpgtui_tp1_jump_t\0"
  /* 33434 */ "J4_cmpeq_tp1_jump_t\0"
  /* 33454 */ "J4_cmpgt_tp1_jump_t\0"
  /* 33474 */ "J4_cmpgtu_tp1_jump_t\0"
  /* 33495 */ "J4_tstbit0_f_jumpnv_t\0"
  /* 33517 */ "J4_cmpeqn1_f_jumpnv_t\0"
  /* 33539 */ "J4_cmpgtn1_f_jumpnv_t\0"
  /* 33561 */ "J4_cmpeqi_f_jumpnv_t\0"
  /* 33582 */ "J4_cmpgti_f_jumpnv_t\0"
  /* 33603 */ "J4_cmpgtui_f_jumpnv_t\0"
  /* 33625 */ "J4_cmpeq_f_jumpnv_t\0"
  /* 33645 */ "J4_cmpgt_f_jumpnv_t\0"
  /* 33665 */ "J4_cmplt_f_jumpnv_t\0"
  /* 33685 */ "J4_cmpgtu_f_jumpnv_t\0"
  /* 33706 */ "J4_cmpltu_f_jumpnv_t\0"
  /* 33727 */ "J4_tstbit0_t_jumpnv_t\0"
  /* 33749 */ "J4_cmpeqn1_t_jumpnv_t\0"
  /* 33771 */ "J4_cmpgtn1_t_jumpnv_t\0"
  /* 33793 */ "J4_cmpeqi_t_jumpnv_t\0"
  /* 33814 */ "J4_cmpgti_t_jumpnv_t\0"
  /* 33835 */ "J4_cmpgtui_t_jumpnv_t\0"
  /* 33857 */ "J4_cmpeq_t_jumpnv_t\0"
  /* 33877 */ "J4_cmpgt_t_jumpnv_t\0"
  /* 33897 */ "J4_cmplt_t_jumpnv_t\0"
  /* 33917 */ "J4_cmpgtu_t_jumpnv_t\0"
  /* 33938 */ "J4_cmpltu_t_jumpnv_t\0"
  /* 33959 */ "L4_return_map_to_raw_t\0"
  /* 33982 */ "M4_mac_up_s1_sat\0"
  /* 33999 */ "M4_nac_up_s1_sat\0"
  /* 34016 */ "M2_mpy_up_s1_sat\0"
  /* 34033 */ "A2_sat\0"
  /* 34040 */ "V6_vwhist256_sat\0"
  /* 34057 */ "V6_vsubububb_sat\0"
  /* 34074 */ "V6_vaddububb_sat\0"
  /* 34091 */ "V6_vpackhb_sat\0"
  /* 34106 */ "V6_vabsb_sat\0"
  /* 34119 */ "V6_vpackhub_sat\0"
  /* 34135 */ "S5_asrhub_sat\0"
  /* 34149 */ "S5_asrhub_rnd_sat\0"
  /* 34167 */ "V6_vabsh_sat\0"
  /* 34180 */ "V6_vpackwuh_sat\0"
  /* 34196 */ "V6_vpackwh_sat\0"
  /* 34211 */ "A4_round_ri_sat\0"
  /* 34227 */ "V6_vwhist256q_sat\0"
  /* 34245 */ "S2_asl_i_r_sat\0"
  /* 34260 */ "S2_asl_r_r_sat\0"
  /* 34275 */ "S2_asr_r_r_sat\0"
  /* 34290 */ "A4_round_rr_sat\0"
  /* 34306 */ "V6_vabsw_sat\0"
  /* 34319 */ "V6_vsubbsat\0"
  /* 34331 */ "V6_vaddbsat\0"
  /* 34343 */ "V6_vasrhbsat\0"
  /* 34356 */ "V6_vsububsat\0"
  /* 34369 */ "V6_vaddubsat\0"
  /* 34382 */ "V6_vasrhubsat\0"
  /* 34396 */ "V6_vasruhubsat\0"
  /* 34411 */ "dep_A2_subsat\0"
  /* 34425 */ "dep_A2_addsat\0"
  /* 34439 */ "V6_vasrhbrndsat\0"
  /* 34455 */ "V6_vasrhubrndsat\0"
  /* 34472 */ "V6_vasruhubrndsat\0"
  /* 34490 */ "V6_vasrwuhrndsat\0"
  /* 34507 */ "V6_vasruwuhrndsat\0"
  /* 34525 */ "V6_vasrwhrndsat\0"
  /* 34541 */ "A2_roundsat\0"
  /* 34553 */ "A2_negsat\0"
  /* 34563 */ "V6_vsubhsat\0"
  /* 34575 */ "V6_vaddhsat\0"
  /* 34587 */ "V6_vmpahhsat\0"
  /* 34600 */ "A2_vabshsat\0"
  /* 34612 */ "V6_vsubuhsat\0"
  /* 34625 */ "V6_vadduhsat\0"
  /* 34638 */ "V6_vmpauhuhsat\0"
  /* 34653 */ "V6_vmpsuhuhsat\0"
  /* 34668 */ "V6_vasrwuhsat\0"
  /* 34682 */ "V6_vasruwuhsat\0"
  /* 34697 */ "V6_vasrwhsat\0"
  /* 34710 */ "V6_vdmpyhsat\0"
  /* 34723 */ "V6_vdmpyhisat\0"
  /* 34737 */ "V6_vdmpyhsuisat\0"
  /* 34753 */ "A2_addpsat\0"
  /* 34764 */ "A2_abssat\0"
  /* 34774 */ "V6_vdmpyhsusat\0"
  /* 34789 */ "V6_vdmpyhvsat\0"
  /* 34803 */ "V6_vsubwsat\0"
  /* 34815 */ "V6_vaddwsat\0"
  /* 34827 */ "A2_vabswsat\0"
  /* 34839 */ "V6_vsubuwsat\0"
  /* 34852 */ "V6_vadduwsat\0"
  /* 34865 */ "V6_vaddcarrysat\0"
  /* 34881 */ "A4_psxtbt\0"
  /* 34891 */ "A4_pzxtbt\0"
  /* 34901 */ "A2_psubt\0"
  /* 34910 */ "S4_extract\0"
  /* 34921 */ "V6_zextract\0"
  /* 34933 */ "PS_pselect\0"
  /* 34944 */ "PS_vselect\0"
  /* 34955 */ "PS_wselect\0"
  /* 34966 */ "A2_paddt\0"
  /* 34975 */ "A2_pandt\0"
  /* 34984 */ "PS_jmpret\0"
  /* 34994 */ "C2_bitsset\0"
  /* 35005 */ "C4_nbitsset\0"
  /* 35017 */ "A4_cmpbgt\0"
  /* 35027 */ "A4_vcmpbgt\0"
  /* 35038 */ "A4_cmphgt\0"
  /* 35048 */ "A2_vcmphgt\0"
  /* 35059 */ "C2_cmpgt\0"
  /* 35068 */ "F2_dfcmpgt\0"
  /* 35079 */ "F2_sfcmpgt\0"
  /* 35090 */ "A2_vcmpwgt\0"
  /* 35101 */ "Y2_syncht\0"
  /* 35111 */ "A4_paslht\0"
  /* 35121 */ "A4_pasrht\0"
  /* 35131 */ "A4_psxtht\0"
  /* 35141 */ "A4_pzxtht\0"
  /* 35151 */ "Y2_wait\0"
  /* 35159 */ "Y6_dmwait\0"
  /* 35169 */ "A2_paddit\0"
  /* 35179 */ "dup_C2_cmoveit\0"
  /* 35194 */ "A4_bitsplit\0"
  /* 35206 */ "dup_C2_cmovenewit\0"
  /* 35224 */ "V6_v6mpyhubs10_alt\0"
  /* 35243 */ "V6_v6mpyvubs10_alt\0"
  /* 35262 */ "V6_vsubb_alt\0"
  /* 35275 */ "V6_vaddb_alt\0"
  /* 35288 */ "V6_vshuffeb_alt\0"
  /* 35304 */ "V6_vpackeb_alt\0"
  /* 35319 */ "V6_vshufoeb_alt\0"
  /* 35335 */ "V6_vshuffb_alt\0"
  /* 35350 */ "V6_vnavgb_alt\0"
  /* 35364 */ "V6_vavgb_alt\0"
  /* 35377 */ "V6_vmpahb_alt\0"
  /* 35391 */ "V6_vroundhb_alt\0"
  /* 35407 */ "V6_vmpyihb_alt\0"
  /* 35422 */ "V6_vmpauhb_alt\0"
  /* 35437 */ "V6_vdmpyhb_alt\0"
  /* 35452 */ "V6_vtmpyhb_alt\0"
  /* 35467 */ "V6_vunpackb_alt\0"
  /* 35483 */ "V6_vdealb_alt\0"
  /* 35497 */ "V6_vminb_alt\0"
  /* 35510 */ "V6_vshuffob_alt\0"
  /* 35526 */ "V6_vunpackob_alt\0"
  /* 35543 */ "V6_vpackob_alt\0"
  /* 35558 */ "V6_vabsb_alt\0"
  /* 35571 */ "V6_vsb_alt\0"
  /* 35582 */ "V6_vabsdiffub_alt\0"
  /* 35600 */ "V6_vnavgub_alt\0"
  /* 35615 */ "V6_vavgub_alt\0"
  /* 35629 */ "V6_vroundhub_alt\0"
  /* 35646 */ "V6_vsathub_alt\0"
  /* 35661 */ "V6_vrounduhub_alt\0"
  /* 35679 */ "V6_vunpackub_alt\0"
  /* 35696 */ "V6_vminub_alt\0"
  /* 35710 */ "V6_vabsub_alt\0"
  /* 35724 */ "V6_vmpyiwub_alt\0"
  /* 35740 */ "V6_vmaxub_alt\0"
  /* 35754 */ "V6_vrmpyub_alt\0"
  /* 35769 */ "V6_vmpyub_alt\0"
  /* 35783 */ "V6_vmpyiwb_alt\0"
  /* 35798 */ "V6_vmaxb_alt\0"
  /* 35811 */ "V6_vtmpyb_alt\0"
  /* 35825 */ "V6_vzb_alt\0"
  /* 35836 */ "V6_vmpahb_acc_alt\0"
  /* 35854 */ "V6_vmpyihb_acc_alt\0"
  /* 35873 */ "V6_vmpauhb_acc_alt\0"
  /* 35892 */ "V6_vdmpyhb_acc_alt\0"
  /* 35911 */ "V6_vtmpyhb_acc_alt\0"
  /* 35930 */ "V6_vmpyiwub_acc_alt\0"
  /* 35950 */ "V6_vrmpyub_acc_alt\0"
  /* 35969 */ "V6_vmpyub_acc_alt\0"
  /* 35987 */ "V6_vmpyiwb_acc_alt\0"
  /* 36006 */ "V6_vtmpyb_acc_alt\0"
  /* 36024 */ "V6_vaddubh_acc_alt\0"
  /* 36043 */ "V6_vmpyih_acc_alt\0"
  /* 36061 */ "V6_vaslh_acc_alt\0"
  /* 36078 */ "V6_vasrh_acc_alt\0"
  /* 36095 */ "V6_vdsaduh_acc_alt\0"
  /* 36114 */ "V6_vmpyiewuh_acc_alt\0"
  /* 36135 */ "V6_vmpyuh_acc_alt\0"
  /* 36153 */ "V6_vmpyiewh_acc_alt\0"
  /* 36173 */ "V6_vmpyiwh_acc_alt\0"
  /* 36192 */ "V6_vmpyh_acc_alt\0"
  /* 36209 */ "V6_vrsadubi_acc_alt\0"
  /* 36229 */ "V6_vrmpyubi_acc_alt\0"
  /* 36249 */ "V6_vrmpybusi_acc_alt\0"
  /* 36270 */ "V6_vmpabus_acc_alt\0"
  /* 36289 */ "V6_vdmpybus_acc_alt\0"
  /* 36309 */ "V6_vrmpybus_acc_alt\0"
  /* 36329 */ "V6_vtmpybus_acc_alt\0"
  /* 36349 */ "V6_vmpybus_acc_alt\0"
  /* 36368 */ "V6_vmpyhus_acc_alt\0"
  /* 36387 */ "V6_vdmpyhsat_acc_alt\0"
  /* 36408 */ "V6_vmpyhsat_acc_alt\0"
  /* 36428 */ "V6_vdmpyhisat_acc_alt\0"
  /* 36450 */ "V6_vdmpyhsuisat_acc_alt\0"
  /* 36474 */ "V6_vdmpyhsusat_acc_alt\0"
  /* 36497 */ "V6_vdmpyhvsat_acc_alt\0"
  /* 36519 */ "V6_vandqrt_acc_alt\0"
  /* 36538 */ "V6_vandnqrt_acc_alt\0"
  /* 36558 */ "V6_vandvrt_acc_alt\0"
  /* 36577 */ "V6_vrmpybub_rtt_acc_alt\0"
  /* 36601 */ "V6_vrmpyub_rtt_acc_alt\0"
  /* 36624 */ "V6_vmpabuu_acc_alt\0"
  /* 36643 */ "V6_vrmpyubv_acc_alt\0"
  /* 36663 */ "V6_vmpyubv_acc_alt\0"
  /* 36682 */ "V6_vrmpybv_acc_alt\0"
  /* 36701 */ "V6_vmpybv_acc_alt\0"
  /* 36719 */ "V6_vdmpyhb_dv_acc_alt\0"
  /* 36741 */ "V6_vdmpybus_dv_acc_alt\0"
  /* 36764 */ "V6_vmpyuhv_acc_alt\0"
  /* 36783 */ "V6_vmpyhv_acc_alt\0"
  /* 36801 */ "V6_vrmpybusv_acc_alt\0"
  /* 36822 */ "V6_vmpybusv_acc_alt\0"
  /* 36842 */ "V6_vaddhw_acc_alt\0"
  /* 36860 */ "V6_vadduhw_acc_alt\0"
  /* 36879 */ "V6_vaslw_acc_alt\0"
  /* 36896 */ "V6_vasrw_acc_alt\0"
  /* 36913 */ "V6_vmpyowh_rnd_sacc_alt\0"
  /* 36937 */ "V6_vmpyowh_sacc_alt\0"
  /* 36957 */ "V6_vscattermh_add_alt\0"
  /* 36979 */ "V6_vscattermwh_add_alt\0"
  /* 37002 */ "V6_vscattermw_add_alt\0"
  /* 37024 */ "V6_vmpyowh_rnd_alt\0"
  /* 37043 */ "V6_vavgbrnd_alt\0"
  /* 37059 */ "V6_vavgubrnd_alt\0"
  /* 37076 */ "V6_vavghrnd_alt\0"
  /* 37092 */ "V6_vavguhrnd_alt\0"
  /* 37109 */ "V6_vavgwrnd_alt\0"
  /* 37125 */ "V6_vavguwrnd_alt\0"
  /* 37142 */ "V6_vcl0h_alt\0"
  /* 37155 */ "V6_vsububh_alt\0"
  /* 37170 */ "V6_vaddubh_alt\0"
  /* 37185 */ "V6_vsubh_alt\0"
  /* 37198 */ "V6_vaddh_alt\0"
  /* 37211 */ "V6_vshufeh_alt\0"
  /* 37226 */ "V6_vpackeh_alt\0"
  /* 37241 */ "V6_vshufoeh_alt\0"
  /* 37257 */ "V6_vabsdiffh_alt\0"
  /* 37274 */ "V6_vshuffh_alt\0"
  /* 37289 */ "V6_vnavgh_alt\0"
  /* 37303 */ "V6_vavgh_alt\0"
  /* 37316 */ "V6_vmpyih_alt\0"
  /* 37330 */ "V6_vunpackh_alt\0"
  /* 37346 */ "V6_vdealh_alt\0"
  /* 37360 */ "V6_vaslh_alt\0"
  /* 37373 */ "V6_vscattermh_alt\0"
  /* 37391 */ "V6_vminh_alt\0"
  /* 37404 */ "V6_vshufoh_alt\0"
  /* 37419 */ "V6_vunpackoh_alt\0"
  /* 37436 */ "V6_vpackoh_alt\0"
  /* 37451 */ "V6_vasrh_alt\0"
  /* 37464 */ "V6_vlsrh_alt\0"
  /* 37477 */ "V6_vabsh_alt\0"
  /* 37490 */ "V6_vsh_alt\0"
  /* 37501 */ "V6_vnormamth_alt\0"
  /* 37518 */ "V6_vpopcounth_alt\0"
  /* 37536 */ "V6_vdsaduh_alt\0"
  /* 37551 */ "V6_vabsdiffuh_alt\0"
  /* 37569 */ "V6_vavguh_alt\0"
  /* 37583 */ "V6_vunpackuh_alt\0"
  /* 37600 */ "V6_vminuh_alt\0"
  /* 37614 */ "V6_vabsuh_alt\0"
  /* 37628 */ "V6_vroundwuh_alt\0"
  /* 37645 */ "V6_vmpyiewuh_alt\0"
  /* 37662 */ "V6_vmpyewuh_alt\0"
  /* 37678 */ "V6_vrounduwuh_alt\0"
  /* 37696 */ "V6_vsatuwuh_alt\0"
  /* 37712 */ "V6_vmaxuh_alt\0"
  /* 37726 */ "V6_vmpyuh_alt\0"
  /* 37740 */ "V6_vroundwh_alt\0"
  /* 37756 */ "V6_vmpyiwh_alt\0"
  /* 37771 */ "V6_vscattermwh_alt\0"
  /* 37790 */ "V6_vmpyiowh_alt\0"
  /* 37806 */ "V6_vmpyowh_alt\0"
  /* 37821 */ "V6_vsatwh_alt\0"
  /* 37835 */ "V6_vmaxh_alt\0"
  /* 37848 */ "V6_vmpyh_alt\0"
  /* 37861 */ "V6_vzh_alt\0"
  /* 37872 */ "V6_vrsadubi_alt\0"
  /* 37888 */ "V6_vrmpyubi_alt\0"
  /* 37904 */ "V6_vrmpybusi_alt\0"
  /* 37921 */ "V6_vasr_into_alt\0"
  /* 37938 */ "V6_vsubbq_alt\0"
  /* 37952 */ "V6_vaddbq_alt\0"
  /* 37966 */ "V6_vsubhq_alt\0"
  /* 37980 */ "V6_vaddhq_alt\0"
  /* 37994 */ "V6_vscattermhq_alt\0"
  /* 38013 */ "V6_vscattermwhq_alt\0"
  /* 38033 */ "V6_vsubbnq_alt\0"
  /* 38048 */ "V6_vaddbnq_alt\0"
  /* 38063 */ "V6_vsubhnq_alt\0"
  /* 38078 */ "V6_vaddhnq_alt\0"
  /* 38093 */ "V6_vsubwnq_alt\0"
  /* 38108 */ "V6_vaddwnq_alt\0"
  /* 38123 */ "V6_vsubwq_alt\0"
  /* 38137 */ "V6_vaddwq_alt\0"
  /* 38151 */ "V6_vscattermwq_alt\0"
  /* 38170 */ "V6_vrotr_alt\0"
  /* 38183 */ "V6_vmpyhsrs_alt\0"
  /* 38199 */ "V6_vmpyhvsrs_alt\0"
  /* 38216 */ "V6_vmpyhss_alt\0"
  /* 38231 */ "V6_vmpabus_alt\0"
  /* 38246 */ "V6_vdmpybus_alt\0"
  /* 38262 */ "V6_vrmpybus_alt\0"
  /* 38278 */ "V6_vtmpybus_alt\0"
  /* 38294 */ "V6_vmpybus_alt\0"
  /* 38309 */ "V6_vmpyhus_alt\0"
  /* 38324 */ "V6_vpackhb_sat_alt\0"
  /* 38343 */ "V6_vabsb_sat_alt\0"
  /* 38360 */ "V6_vpackhub_sat_alt\0"
  /* 38380 */ "V6_vabsh_sat_alt\0"
  /* 38397 */ "V6_vpackwuh_sat_alt\0"
  /* 38417 */ "V6_vpackwh_sat_alt\0"
  /* 38436 */ "V6_vabsw_sat_alt\0"
  /* 38453 */ "V6_vsubbsat_alt\0"
  /* 38469 */ "V6_vaddbsat_alt\0"
  /* 38485 */ "V6_vsububsat_alt\0"
  /* 38502 */ "V6_vaddubsat_alt\0"
  /* 38519 */ "V6_vsubhsat_alt\0"
  /* 38535 */ "V6_vaddhsat_alt\0"
  /* 38551 */ "V6_vsubuhsat_alt\0"
  /* 38568 */ "V6_vadduhsat_alt\0"
  /* 38585 */ "V6_vdmpyhsat_alt\0"
  /* 38602 */ "V6_vdmpyhisat_alt\0"
  /* 38620 */ "V6_vdmpyhsuisat_alt\0"
  /* 38640 */ "V6_vdmpyhsusat_alt\0"
  /* 38659 */ "V6_vdmpyhvsat_alt\0"
  /* 38677 */ "V6_vsubwsat_alt\0"
  /* 38693 */ "V6_vaddwsat_alt\0"
  /* 38709 */ "V6_vsubuwsat_alt\0"
  /* 38726 */ "V6_vadduwsat_alt\0"
  /* 38743 */ "V6_vandqrt_alt\0"
  /* 38758 */ "V6_vandnqrt_alt\0"
  /* 38774 */ "V6_vandvrt_alt\0"
  /* 38789 */ "V6_vrmpybub_rtt_alt\0"
  /* 38809 */ "V6_vrmpyub_rtt_alt\0"
  /* 38828 */ "V6_vmpabuu_alt\0"
  /* 38843 */ "V6_vrmpyubv_alt\0"
  /* 38859 */ "V6_vmpyubv_alt\0"
  /* 38874 */ "V6_vrmpybv_alt\0"
  /* 38889 */ "V6_vmpybv_alt\0"
  /* 38903 */ "V6_vsubb_dv_alt\0"
  /* 38919 */ "V6_vaddb_dv_alt\0"
  /* 38935 */ "V6_vdmpyhb_dv_alt\0"
  /* 38953 */ "V6_vsubh_dv_alt\0"
  /* 38969 */ "V6_vaddh_dv_alt\0"
  /* 38985 */ "V6_vdmpybus_dv_alt\0"
  /* 39004 */ "V6_vsubbsat_dv_alt\0"
  /* 39023 */ "V6_vaddbsat_dv_alt\0"
  /* 39042 */ "V6_vsububsat_dv_alt\0"
  /* 39062 */ "V6_vaddubsat_dv_alt\0"
  /* 39082 */ "V6_vsubhsat_dv_alt\0"
  /* 39101 */ "V6_vaddhsat_dv_alt\0"
  /* 39120 */ "V6_vsubuhsat_dv_alt\0"
  /* 39140 */ "V6_vadduhsat_dv_alt\0"
  /* 39160 */ "V6_vsubwsat_dv_alt\0"
  /* 39179 */ "V6_vaddwsat_dv_alt\0"
  /* 39198 */ "V6_vsubuwsat_dv_alt\0"
  /* 39218 */ "V6_vadduwsat_dv_alt\0"
  /* 39238 */ "V6_vsubw_dv_alt\0"
  /* 39254 */ "V6_vaddw_dv_alt\0"
  /* 39270 */ "V6_vaslhv_alt\0"
  /* 39284 */ "V6_vasrhv_alt\0"
  /* 39298 */ "V6_vlsrhv_alt\0"
  /* 39312 */ "V6_vmpyuhv_alt\0"
  /* 39327 */ "V6_vmpyhv_alt\0"
  /* 39341 */ "V6_vmpabusv_alt\0"
  /* 39357 */ "V6_vrmpybusv_alt\0"
  /* 39374 */ "V6_vmpybusv_alt\0"
  /* 39390 */ "V6_vmpabuuv_alt\0"
  /* 39406 */ "V6_vaslwv_alt\0"
  /* 39420 */ "V6_vasrwv_alt\0"
  /* 39434 */ "V6_vlsrwv_alt\0"
  /* 39448 */ "V6_vcl0w_alt\0"
  /* 39461 */ "V6_vdealb4w_alt\0"
  /* 39477 */ "V6_vsubw_alt\0"
  /* 39490 */ "V6_vaddw_alt\0"
  /* 39503 */ "V6_vabsdiffw_alt\0"
  /* 39520 */ "V6_vnavgw_alt\0"
  /* 39534 */ "V6_vavgw_alt\0"
  /* 39547 */ "V6_vsubhw_alt\0"
  /* 39561 */ "V6_vaddhw_alt\0"
  /* 39575 */ "V6_vsubuhw_alt\0"
  /* 39590 */ "V6_vadduhw_alt\0"
  /* 39605 */ "V6_vaslw_alt\0"
  /* 39618 */ "V6_vscattermw_alt\0"
  /* 39636 */ "V6_vminw_alt\0"
  /* 39649 */ "V6_vasrw_alt\0"
  /* 39662 */ "V6_vlsrw_alt\0"
  /* 39675 */ "V6_vabsw_alt\0"
  /* 39688 */ "V6_extractw_alt\0"
  /* 39704 */ "V6_vnormamtw_alt\0"
  /* 39721 */ "V6_vavguw_alt\0"
  /* 39735 */ "V6_vabsuw_alt\0"
  /* 39749 */ "V6_vmaxw_alt\0"
  /* 39762 */ "J2_callt\0"
  /* 39771 */ "C2_cmplt\0"
  /* 39780 */ "J4_tstbit0_fp0_jump_nt\0"
  /* 39803 */ "J4_cmpeqn1_fp0_jump_nt\0"
  /* 39826 */ "J4_cmpgtn1_fp0_jump_nt\0"
  /* 39849 */ "J4_cmpeqi_fp0_jump_nt\0"
  /* 39871 */ "J4_cmpgti_fp0_jump_nt\0"
  /* 39893 */ "J4_cmpgtui_fp0_jump_nt\0"
  /* 39916 */ "J4_cmpeq_fp0_jump_nt\0"
  /* 39937 */ "J4_cmpgt_fp0_jump_nt\0"
  /* 39958 */ "J4_cmpgtu_fp0_jump_nt\0"
  /* 39980 */ "J4_tstbit0_tp0_jump_nt\0"
  /* 40003 */ "J4_cmpeqn1_tp0_jump_nt\0"
  /* 40026 */ "J4_cmpgtn1_tp0_jump_nt\0"
  /* 40049 */ "J4_cmpeqi_tp0_jump_nt\0"
  /* 40071 */ "J4_cmpgti_tp0_jump_nt\0"
  /* 40093 */ "J4_cmpgtui_tp0_jump_nt\0"
  /* 40116 */ "J4_cmpeq_tp0_jump_nt\0"
  /* 40137 */ "J4_cmpgt_tp0_jump_nt\0"
  /* 40158 */ "J4_cmpgtu_tp0_jump_nt\0"
  /* 40180 */ "J4_tstbit0_fp1_jump_nt\0"
  /* 40203 */ "J4_cmpeqn1_fp1_jump_nt\0"
  /* 40226 */ "J4_cmpgtn1_fp1_jump_nt\0"
  /* 40249 */ "J4_cmpeqi_fp1_jump_nt\0"
  /* 40271 */ "J4_cmpgti_fp1_jump_nt\0"
  /* 40293 */ "J4_cmpgtui_fp1_jump_nt\0"
  /* 40316 */ "J4_cmpeq_fp1_jump_nt\0"
  /* 40337 */ "J4_cmpgt_fp1_jump_nt\0"
  /* 40358 */ "J4_cmpgtu_fp1_jump_nt\0"
  /* 40380 */ "J4_tstbit0_tp1_jump_nt\0"
  /* 40403 */ "J4_cmpeqn1_tp1_jump_nt\0"
  /* 40426 */ "J4_cmpgtn1_tp1_jump_nt\0"
  /* 40449 */ "J4_cmpeqi_tp1_jump_nt\0"
  /* 40471 */ "J4_cmpgti_tp1_jump_nt\0"
  /* 40493 */ "J4_cmpgtui_tp1_jump_nt\0"
  /* 40516 */ "J4_cmpeq_tp1_jump_nt\0"
  /* 40537 */ "J4_cmpgt_tp1_jump_nt\0"
  /* 40558 */ "J4_cmpgtu_tp1_jump_nt\0"
  /* 40580 */ "J4_tstbit0_f_jumpnv_nt\0"
  /* 40603 */ "J4_cmpeqn1_f_jumpnv_nt\0"
  /* 40626 */ "J4_cmpgtn1_f_jumpnv_nt\0"
  /* 40649 */ "J4_cmpeqi_f_jumpnv_nt\0"
  /* 40671 */ "J4_cmpgti_f_jumpnv_nt\0"
  /* 40693 */ "J4_cmpgtui_f_jumpnv_nt\0"
  /* 40716 */ "J4_cmpeq_f_jumpnv_nt\0"
  /* 40737 */ "J4_cmpgt_f_jumpnv_nt\0"
  /* 40758 */ "J4_cmplt_f_jumpnv_nt\0"
  /* 40779 */ "J4_cmpgtu_f_jumpnv_nt\0"
  /* 40801 */ "J4_cmpltu_f_jumpnv_nt\0"
  /* 40823 */ "J4_tstbit0_t_jumpnv_nt\0"
  /* 40846 */ "J4_cmpeqn1_t_jumpnv_nt\0"
  /* 40869 */ "J4_cmpgtn1_t_jumpnv_nt\0"
  /* 40892 */ "J4_cmpeqi_t_jumpnv_nt\0"
  /* 40914 */ "J4_cmpgti_t_jumpnv_nt\0"
  /* 40936 */ "J4_cmpgtui_t_jumpnv_nt\0"
  /* 40959 */ "J4_cmpeq_t_jumpnv_nt\0"
  /* 40980 */ "J4_cmpgt_t_jumpnv_nt\0"
  /* 41001 */ "J4_cmplt_t_jumpnv_nt\0"
  /* 41022 */ "J4_cmpgtu_t_jumpnv_nt\0"
  /* 41044 */ "J4_cmpltu_t_jumpnv_nt\0"
  /* 41066 */ "L4_return_fnew_pnt\0"
  /* 41085 */ "L4_return_map_to_raw_fnew_pnt\0"
  /* 41115 */ "L4_return_tnew_pnt\0"
  /* 41134 */ "L4_return_map_to_raw_tnew_pnt\0"
  /* 41164 */ "A2_not\0"
  /* 41171 */ "C2_not\0"
  /* 41178 */ "C4_fastcorner9_not\0"
  /* 41197 */ "V6_pred_not\0"
  /* 41209 */ "V6_vnot\0"
  /* 41217 */ "L4_return_fnew_pt\0"
  /* 41235 */ "L4_return_map_to_raw_fnew_pt\0"
  /* 41264 */ "L4_return_tnew_pt\0"
  /* 41282 */ "L4_return_map_to_raw_tnew_pt\0"
  /* 41311 */ "J2_jumpfpt\0"
  /* 41322 */ "J2_jumprfpt\0"
  /* 41334 */ "J2_jumpt\0"
  /* 41343 */ "A2_tfrpt\0"
  /* 41352 */ "J2_jumptpt\0"
  /* 41363 */ "J2_jumprtpt\0"
  /* 41375 */ "J2_jumpfnewpt\0"
  /* 41389 */ "J2_jumprfnewpt\0"
  /* 41404 */ "PS_jmpretfnewpt\0"
  /* 41420 */ "J2_jumptnewpt\0"
  /* 41434 */ "J2_jumprtnewpt\0"
  /* 41449 */ "PS_jmprettnewpt\0"
  /* 41465 */ "J2_jumprgtezpt\0"
  /* 41480 */ "J2_jumprltezpt\0"
  /* 41495 */ "J2_jumprnzpt\0"
  /* 41508 */ "J2_jumprzpt\0"
  /* 41520 */ "V6_vrmpyzbb_rt\0"
  /* 41535 */ "V6_vrmpyzcb_rt\0"
  /* 41550 */ "V6_vrmpyznb_rt\0"
  /* 41565 */ "V6_vrmpyzbub_rt\0"
  /* 41581 */ "V6_vrmpyzcbs_rt\0"
  /* 41597 */ "Y6_dmstart\0"
  /* 41608 */ "S2_insert\0"
  /* 41618 */ "A2_tfrt\0"
  /* 41626 */ "SA1_clrt\0"
  /* 41635 */ "J2_callrt\0"
  /* 41645 */ "A2_port\0"
  /* 41653 */ "A2_pxort\0"
  /* 41662 */ "J2_jumprt\0"
  /* 41672 */ "V6_vandqrt\0"
  /* 41683 */ "V6_vandnqrt\0"
  /* 41695 */ "V6_vandvrt\0"
  /* 41706 */ "V6_vhist\0"
  /* 41715 */ "A2_iconst\0"
  /* 41725 */ "PS_jmprett\0"
  /* 41736 */ "V6_vrmpybub_rtt\0"
  /* 41752 */ "V6_vrmpyub_rtt\0"
  /* 41767 */ "C2_ccombinewt\0"
  /* 41781 */ "C2_ccombinewnewt\0"
  /* 41798 */ "TFRI64_V2_ext\0"
  /* 41812 */ "A4_ext\0"
  /* 41819 */ "J2_loop0iext\0"
  /* 41832 */ "J2_loop1iext\0"
  /* 41845 */ "J2_loop0rext\0"
  /* 41858 */ "J2_loop1rext\0"
  /* 41871 */ "C4_cmplteu\0"
  /* 41882 */ "A2_minu\0"
  /* 41890 */ "A4_modwrapu\0"
  /* 41902 */ "V6_vL32b_ppu\0"
  /* 41915 */ "V6_vS32b_ppu\0"
  /* 41928 */ "V6_vL32Ub_ppu\0"
  /* 41942 */ "V6_vS32Ub_ppu\0"
  /* 41956 */ "V6_zLd_ppu\0"
  /* 41967 */ "V6_vL32b_pred_ppu\0"
  /* 41985 */ "V6_vS32b_pred_ppu\0"
  /* 42003 */ "V6_vS32Ub_pred_ppu\0"
  /* 42022 */ "V6_zLd_pred_ppu\0"
  /* 42038 */ "V6_vL32b_tmp_pred_ppu\0"
  /* 42060 */ "V6_vL32b_nt_tmp_pred_ppu\0"
  /* 42085 */ "V6_vL32b_cur_pred_ppu\0"
  /* 42107 */ "V6_vL32b_nt_cur_pred_ppu\0"
  /* 42132 */ "V6_vL32b_nt_pred_ppu\0"
  /* 42153 */ "V6_vS32b_nt_pred_ppu\0"
  /* 42174 */ "V6_vS32b_new_pred_ppu\0"
  /* 42196 */ "V6_vS32b_nt_new_pred_ppu\0"
  /* 42221 */ "V6_vL32b_npred_ppu\0"
  /* 42240 */ "V6_vS32b_npred_ppu\0"
  /* 42259 */ "V6_vS32Ub_npred_ppu\0"
  /* 42279 */ "V6_vL32b_tmp_npred_ppu\0"
  /* 42302 */ "V6_vL32b_nt_tmp_npred_ppu\0"
  /* 42328 */ "V6_vL32b_cur_npred_ppu\0"
  /* 42351 */ "V6_vL32b_nt_cur_npred_ppu\0"
  /* 42377 */ "V6_vL32b_nt_npred_ppu\0"
  /* 42399 */ "V6_vS32b_nt_npred_ppu\0"
  /* 42421 */ "V6_vS32b_new_npred_ppu\0"
  /* 42444 */ "V6_vS32b_nt_new_npred_ppu\0"
  /* 42470 */ "V6_vS32b_qpred_ppu\0"
  /* 42489 */ "V6_vS32b_nt_qpred_ppu\0"
  /* 42511 */ "V6_vS32b_nqpred_ppu\0"
  /* 42531 */ "V6_vS32b_nt_nqpred_ppu\0"
  /* 42554 */ "V6_vL32b_tmp_ppu\0"
  /* 42571 */ "V6_vL32b_nt_tmp_ppu\0"
  /* 42591 */ "V6_vL32b_cur_ppu\0"
  /* 42608 */ "V6_vL32b_nt_cur_ppu\0"
  /* 42628 */ "V6_vS32b_srls_ppu\0"
  /* 42646 */ "V6_vL32b_nt_ppu\0"
  /* 42662 */ "V6_vS32b_nt_ppu\0"
  /* 42678 */ "V6_vS32b_new_ppu\0"
  /* 42695 */ "V6_vS32b_nt_new_ppu\0"
  /* 42715 */ "M5_vdmacbsu\0"
  /* 42727 */ "M5_vrmacbsu\0"
  /* 42739 */ "M5_vmacbsu\0"
  /* 42750 */ "M5_vdmpybsu\0"
  /* 42762 */ "M5_vrmpybsu\0"
  /* 42774 */ "M5_vmpybsu\0"
  /* 42785 */ "S2_extractu\0"
  /* 42797 */ "A4_cmpbgtu\0"
  /* 42808 */ "A2_vcmpbgtu\0"
  /* 42820 */ "A4_cmphgtu\0"
  /* 42831 */ "A2_vcmphgtu\0"
  /* 42843 */ "C2_cmpgtu\0"
  /* 42853 */ "A2_vcmpwgtu\0"
  /* 42865 */ "C2_cmpltu\0"
  /* 42875 */ "V6_vmpabuu\0"
  /* 42886 */ "M5_vrmacbuu\0"
  /* 42898 */ "M5_vmacbuu\0"
  /* 42909 */ "M5_vrmpybuu\0"
  /* 42921 */ "M5_vmpybuu\0"
  /* 42932 */ "A2_maxu\0"
  /* 42940 */ "V6_vrmpyubv\0"
  /* 42952 */ "V6_vmpyubv\0"
  /* 42963 */ "V6_vrmpybv\0"
  /* 42974 */ "V6_vmpybv\0"
  /* 42984 */ "V6_vsubb_dv\0"
  /* 42996 */ "V6_vaddb_dv\0"
  /* 43008 */ "V6_vdmpyhb_dv\0"
  /* 43022 */ "V6_vsubh_dv\0"
  /* 43034 */ "V6_vaddh_dv\0"
  /* 43046 */ "V6_vdmpybus_dv\0"
  /* 43061 */ "V6_vsubbsat_dv\0"
  /* 43076 */ "V6_vaddbsat_dv\0"
  /* 43091 */ "V6_vsububsat_dv\0"
  /* 43107 */ "V6_vaddubsat_dv\0"
  /* 43123 */ "V6_vsubhsat_dv\0"
  /* 43138 */ "V6_vaddhsat_dv\0"
  /* 43153 */ "V6_vsubuhsat_dv\0"
  /* 43169 */ "V6_vadduhsat_dv\0"
  /* 43185 */ "V6_vsubwsat_dv\0"
  /* 43200 */ "V6_vaddwsat_dv\0"
  /* 43215 */ "V6_vsubuwsat_dv\0"
  /* 43231 */ "V6_vadduwsat_dv\0"
  /* 43247 */ "V6_vsubw_dv\0"
  /* 43259 */ "V6_vaddw_dv\0"
  /* 43271 */ "S2_brev\0"
  /* 43279 */ "V6_vaslhv\0"
  /* 43289 */ "V6_vasrhv\0"
  /* 43299 */ "V6_vlsrhv\0"
  /* 43309 */ "V6_vmpyuhv\0"
  /* 43320 */ "V6_vmpyhv\0"
  /* 43330 */ "V6_vncmov\0"
  /* 43340 */ "V6_vcmov\0"
  /* 43349 */ "V6_vandvnqv\0"
  /* 43361 */ "V6_vandvqv\0"
  /* 43372 */ "V6_vmpabusv\0"
  /* 43384 */ "V6_vrmpybusv\0"
  /* 43397 */ "V6_vmpybusv\0"
  /* 43409 */ "V6_vmpabuuv\0"
  /* 43421 */ "V6_vaslwv\0"
  /* 43431 */ "V6_vasrwv\0"
  /* 43441 */ "V6_vlsrwv\0"
  /* 43451 */ "V6_vcl0w\0"
  /* 43460 */ "F2_conv_df2w\0"
  /* 43473 */ "F2_conv_sf2w\0"
  /* 43486 */ "V6_vdealb4w\0"
  /* 43498 */ "S6_allocframe_to_raw\0"
  /* 43519 */ "L6_deallocframe_map_to_raw\0"
  /* 43546 */ "L6_return_map_to_raw\0"
  /* 43567 */ "V6_vaddclbw\0"
  /* 43579 */ "S4_vxaddsubw\0"
  /* 43592 */ "A2_vsubw\0"
  /* 43601 */ "V6_vsubw\0"
  /* 43610 */ "S4_vxsubaddw\0"
  /* 43623 */ "A2_vaddw\0"
  /* 43632 */ "V6_vaddw\0"
  /* 43641 */ "V6_vsatdw\0"
  /* 43651 */ "SL2_jumpr31_fnew\0"
  /* 43668 */ "SL2_return_fnew\0"
  /* 43684 */ "A4_psxtbfnew\0"
  /* 43697 */ "A4_pzxtbfnew\0"
  /* 43710 */ "A2_psubfnew\0"
  /* 43722 */ "A2_paddfnew\0"
  /* 43734 */ "A2_pandfnew\0"
  /* 43746 */ "A4_paslhfnew\0"
  /* 43759 */ "A4_pasrhfnew\0"
  /* 43772 */ "A4_psxthfnew\0"
  /* 43785 */ "A4_pzxthfnew\0"
  /* 43798 */ "A2_paddifnew\0"
  /* 43811 */ "J2_jumpfnew\0"
  /* 43823 */ "A2_tfrpfnew\0"
  /* 43835 */ "A2_tfrfnew\0"
  /* 43846 */ "SA1_clrfnew\0"
  /* 43858 */ "A2_porfnew\0"
  /* 43869 */ "A2_pxorfnew\0"
  /* 43881 */ "J2_jumprfnew\0"
  /* 43894 */ "PS_jmpretfnew\0"
  /* 43908 */ "A2_combinew\0"
  /* 43920 */ "SL2_jumpr31_tnew\0"
  /* 43937 */ "SL2_return_tnew\0"
  /* 43953 */ "A4_psxtbtnew\0"
  /* 43966 */ "A4_pzxtbtnew\0"
  /* 43979 */ "A2_psubtnew\0"
  /* 43991 */ "A2_paddtnew\0"
  /* 44003 */ "A2_pandtnew\0"
  /* 44015 */ "A4_paslhtnew\0"
  /* 44028 */ "A4_pasrhtnew\0"
  /* 44041 */ "A4_psxthtnew\0"
  /* 44054 */ "A4_pzxthtnew\0"
  /* 44067 */ "A2_padditnew\0"
  /* 44080 */ "J2_jumptnew\0"
  /* 44092 */ "A2_tfrptnew\0"
  /* 44104 */ "A2_tfrtnew\0"
  /* 44115 */ "SA1_clrtnew\0"
  /* 44127 */ "A2_portnew\0"
  /* 44138 */ "A2_pxortnew\0"
  /* 44150 */ "J2_jumprtnew\0"
  /* 44163 */ "PS_jmprettnew\0"
  /* 44177 */ "M2_vabsdiffw\0"
  /* 44190 */ "V6_vabsdiffw\0"
  /* 44203 */ "A2_vnavgw\0"
  /* 44213 */ "V6_vnavgw\0"
  /* 44223 */ "A2_vavgw\0"
  /* 44232 */ "V6_vavgw\0"
  /* 44241 */ "V6_vsubhw\0"
  /* 44251 */ "V6_vaddhw\0"
  /* 44261 */ "V6_vgathermhw\0"
  /* 44275 */ "V6_vscattermhw\0"
  /* 44290 */ "S2_vsxthw\0"
  /* 44300 */ "S2_vzxthw\0"
  /* 44310 */ "V6_vsubuhw\0"
  /* 44321 */ "V6_vadduhw\0"
  /* 44332 */ "M7_dcmpyiw\0"
  /* 44343 */ "M7_wcmpyiw\0"
  /* 44354 */ "V6_vaslw\0"
  /* 44363 */ "PS_vmulw\0"
  /* 44372 */ "V6_vgathermw\0"
  /* 44385 */ "V6_vscattermw\0"
  /* 44399 */ "A4_vrminw\0"
  /* 44409 */ "A2_vminw\0"
  /* 44418 */ "V6_vminw\0"
  /* 44427 */ "V6_shuffeqw\0"
  /* 44439 */ "V6_veqw\0"
  /* 44447 */ "V6_vprefixqw\0"
  /* 44460 */ "V6_vasrw\0"
  /* 44469 */ "V6_vlsrw\0"
  /* 44478 */ "M7_dcmpyrw\0"
  /* 44489 */ "M7_wcmpyrw\0"
  /* 44500 */ "A2_vabsw\0"
  /* 44509 */ "V6_vabsw\0"
  /* 44518 */ "V6_lvsplatw\0"
  /* 44530 */ "V6_extractw\0"
  /* 44542 */ "V6_vgtw\0"
  /* 44550 */ "V6_vnormamtw\0"
  /* 44563 */ "A2_sxtw\0"
  /* 44571 */ "F2_conv_df2uw\0"
  /* 44585 */ "F2_conv_sf2uw\0"
  /* 44599 */ "A2_vavguw\0"
  /* 44609 */ "V6_vavguw\0"
  /* 44619 */ "A4_vrminuw\0"
  /* 44630 */ "A2_vminuw\0"
  /* 44640 */ "V6_MAP_equw\0"
  /* 44652 */ "V6_vgtuw\0"
  /* 44661 */ "A4_vrmaxuw\0"
  /* 44672 */ "A2_vmaxuw\0"
  /* 44682 */ "S2_asl_i_vw\0"
  /* 44694 */ "S2_asr_i_vw\0"
  /* 44706 */ "S2_lsr_i_vw\0"
  /* 44718 */ "S2_asl_r_vw\0"
  /* 44730 */ "S2_lsl_r_vw\0"
  /* 44742 */ "S2_asr_r_vw\0"
  /* 44754 */ "S2_lsr_r_vw\0"
  /* 44766 */ "A4_vrmaxw\0"
  /* 44776 */ "A2_vmaxw\0"
  /* 44785 */ "V6_vmaxw\0"
  /* 44794 */ "S2_tableidxw\0"
  /* 44807 */ "M4_pmpyw\0"
  /* 44816 */ "A2_max\0"
  /* 44823 */ "F2_dfmax\0"
  /* 44832 */ "F2_sfmax\0"
  /* 44841 */ "S2_tableidxb_goodsyntax\0"
  /* 44865 */ "S2_asr_i_p_rnd_goodsyntax\0"
  /* 44891 */ "S2_asr_i_r_rnd_goodsyntax\0"
  /* 44917 */ "S5_vasrhrnd_goodsyntax\0"
  /* 44940 */ "S2_tableidxd_goodsyntax\0"
  /* 44964 */ "S2_tableidxh_goodsyntax\0"
  /* 44988 */ "S5_asrhub_rnd_sat_goodsyntax\0"
  /* 45017 */ "S2_tableidxw_goodsyntax\0"
  /* 45041 */ "S4_or_andix\0"
  /* 45053 */ "F2_dfmpyfix\0"
  /* 45065 */ "V6_vrmpyzbb_rx\0"
  /* 45080 */ "V6_vrmpyzcb_rx\0"
  /* 45095 */ "V6_vrmpyznb_rx\0"
  /* 45110 */ "V6_vrmpyzbub_rx\0"
  /* 45126 */ "V6_vrmpyzcbs_rx\0"
  /* 45142 */ "SA1_addrx\0"
  /* 45152 */ "C2_mux\0"
  /* 45159 */ "C2_vmux\0"
  /* 45167 */ "V6_vmux\0"
  /* 45175 */ "V6_v6mpyhubs10_vxx\0"
  /* 45194 */ "V6_v6mpyvubs10_vxx\0"
  /* 45213 */ "A4_vcmpbeq_any\0"
  /* 45228 */ "A6_vcmpbeq_notany\0"
  /* 45246 */ "L6_memcpy\0"
  /* 45256 */ "M7_vdmpy\0"
  /* 45265 */ "F2_sfmpy\0"
  /* 45274 */ "V6_vsubcarry\0"
  /* 45287 */ "V6_vaddcarry\0"
  /* 45300 */ "S4_parity\0"
  /* 45310 */ "J2_jumprgtez\0"
  /* 45323 */ "J2_jumprltez\0"
  /* 45336 */ "A2_swiz\0"
  /* 45344 */ "J2_jumprnz\0"
  /* 45355 */ "SA1_combinerz\0"
  /* 45369 */ "J2_jumprz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned HexagonInstrNameIndices[] = {
    6158U, 6511U, 6925U, 6702U, 6243U, 6224U, 6252U, 6390U, 
    6018U, 6033U, 5970U, 6060U, 7265U, 5858U, 5983U, 6233U, 
    5729U, 8132U, 5801U, 7683U, 5621U, 5692U, 6783U, 6378U, 
    7612U, 5661U, 6880U, 6123U, 7601U, 5808U, 6853U, 6840U, 
    6951U, 7483U, 7506U, 6310U, 6357U, 6330U, 6269U, 7788U, 
    5534U, 4947U, 6470U, 7950U, 7957U, 6497U, 6504U, 5599U, 
    7143U, 7106U, 5968U, 6156U, 8069U, 5868U, 7451U, 7209U, 
    7698U, 7226U, 7058U, 5301U, 7248U, 7623U, 7178U, 7730U, 
    5893U, 5275U, 5643U, 7642U, 6563U, 6976U, 5435U, 5379U, 
    5409U, 5420U, 5360U, 5390U, 5837U, 5821U, 7282U, 6074U, 
    6091U, 5550U, 4953U, 5605U, 5566U, 7148U, 7112U, 8053U, 
    6679U, 8036U, 6662U, 5501U, 4930U, 5721U, 5634U, 7470U, 
    5253U, 7312U, 7772U, 5293U, 7590U, 7578U, 7673U, 6115U, 
    7765U, 6047U, 7781U, 6296U, 7042U, 7028U, 6289U, 7035U, 
    6825U, 6818U, 7461U, 6759U, 5750U, 6743U, 5713U, 6751U, 
    5742U, 6735U, 5705U, 6775U, 6767U, 6148U, 6140U, 7369U, 
    7359U, 7349U, 7339U, 7389U, 7379U, 8083U, 8093U, 7399U, 
    7412U, 8103U, 8113U, 7425U, 7438U, 5459U, 4909U, 6412U, 
    4876U, 5353U, 7929U, 6476U, 7964U, 6180U, 6899U, 4512U, 
    6108U, 4504U, 0U, 6011U, 7757U, 5265U, 6162U, 6171U, 
    6800U, 6809U, 7189U, 6585U, 5902U, 6543U, 6553U, 5758U, 
    5773U, 6521U, 6532U, 5540U, 6188U, 6631U, 8005U, 6655U, 
    8029U, 7196U, 6920U, 7530U, 7558U, 7537U, 7073U, 8144U, 
    5950U, 8137U, 5932U, 6832U, 6792U, 5845U, 6302U, 7241U, 
    6695U, 7707U, 7049U, 7634U, 7660U, 7740U, 6938U, 5788U, 
    5322U, 5487U, 4916U, 6440U, 7936U, 6483U, 4882U, 7715U, 
    6995U, 7011U, 8123U, 5883U, 7497U, 5466U, 6419U, 5442U, 
    6395U, 7971U, 6597U, 5518U, 6454U, 5583U, 7128U, 7090U, 
    7988U, 6614U, 8012U, 6638U, 26454U, 41715U, 13067U, 41164U, 
    12895U, 43835U, 26348U, 12886U, 43823U, 18664U, 41343U, 44092U, 
    41618U, 44104U, 23240U, 23227U, 8823U, 19553U, 6718U, 6865U, 
    16454U, 19196U, 39771U, 42865U, 23335U, 20422U, 39U, 2476U, 
    2511U, 219U, 2486U, 2600U, 23253U, 23273U, 23314U, 23294U, 
    23348U, 23438U, 24066U, 23366U, 23402U, 23384U, 23420U, 23620U, 
    23688U, 24248U, 24316U, 23671U, 24299U, 23721U, 24715U, 24367U, 
    25134U, 23796U, 24802U, 24442U, 25221U, 23852U, 24867U, 24498U, 
    25286U, 23927U, 24954U, 24573U, 25373U, 23777U, 24780U, 24423U, 
    25199U, 23908U, 24932U, 24554U, 25351U, 23499U, 24127U, 25554U, 
    23540U, 24168U, 25595U, 23519U, 24147U, 25574U, 23560U, 24188U, 
    25615U, 23600U, 24228U, 25655U, 23478U, 24106U, 25533U, 23581U, 
    24209U, 25636U, 12637U, 41085U, 41235U, 33959U, 41134U, 41282U, 
    23458U, 24086U, 25513U, 43519U, 43546U, 30718U, 11532U, 16587U, 
    19293U, 2648U, 4280U, 26245U, 45256U, 10997U, 8189U, 8151U, 
    28326U, 13928U, 12477U, 16475U, 8161U, 15969U, 27705U, 16057U, 
    27793U, 16163U, 27899U, 16251U, 27987U, 16028U, 27764U, 16222U, 
    27958U, 34933U, 12486U, 12559U, 15998U, 27734U, 16086U, 27822U, 
    16116U, 27852U, 16192U, 27928U, 16280U, 28016U, 14681U, 27084U, 
    12551U, 56U, 15468U, 15649U, 15579U, 15713U, 15614U, 44363U, 
    10846U, 34944U, 15482U, 15663U, 15596U, 15727U, 15631U, 34955U, 
    44865U, 44891U, 23739U, 24000U, 24629U, 24385U, 23814U, 24460U, 
    23833U, 24479U, 23870U, 24022U, 24651U, 24516U, 23945U, 24044U, 
    24673U, 24591U, 23636U, 24695U, 23704U, 23983U, 24264U, 25094U, 
    24332U, 25114U, 44841U, 44940U, 44964U, 45017U, 24736U, 25019U, 
    25438U, 25155U, 24823U, 25242U, 24845U, 25264U, 24888U, 25044U, 
    25463U, 25307U, 24975U, 25069U, 25488U, 25394U, 23653U, 23758U, 
    24758U, 24404U, 25177U, 24281U, 23889U, 24910U, 24535U, 25329U, 
    24349U, 23964U, 24997U, 24610U, 25416U, 44988U, 44917U, 43498U, 
    30728U, 11543U, 9026U, 11592U, 28746U, 28847U, 14159U, 11679U, 
    28762U, 28923U, 44640U, 12003U, 28778U, 29046U, 39688U, 16481U, 
    64U, 171U, 2345U, 145U, 2324U, 181U, 2357U, 2305U, 
    2433U, 154U, 2335U, 190U, 2368U, 231U, 2391U, 2460U, 
    22687U, 2453U, 128U, 2314U, 200U, 2380U, 257U, 2412U, 
    2444U, 240U, 2402U, 266U, 2423U, 2468U, 209U, 248U, 
    35224U, 35243U, 35558U, 38343U, 37257U, 35582U, 37551U, 39503U, 
    37477U, 38380U, 35710U, 37614U, 39735U, 39675U, 38436U, 35275U, 
    38919U, 38048U, 37952U, 38469U, 39023U, 37198U, 38969U, 38078U, 
    37980U, 38535U, 39101U, 36842U, 39561U, 36024U, 37170U, 38502U, 
    39062U, 38568U, 39140U, 36860U, 39590U, 38726U, 39218U, 39490U, 
    39254U, 38108U, 38137U, 38693U, 39179U, 36538U, 38758U, 36519U, 
    38743U, 36558U, 38774U, 36061U, 37360U, 39270U, 36879U, 39605U, 
    39406U, 37921U, 36078U, 37451U, 39284U, 36896U, 39649U, 39420U, 
    25999U, 35364U, 37043U, 37303U, 37076U, 35615U, 37059U, 37569U, 
    37092U, 39721U, 37125U, 39534U, 37109U, 37142U, 39448U, 79U, 
    48U, 39461U, 35483U, 37346U, 36289U, 38246U, 36741U, 38985U, 
    35892U, 35437U, 36719U, 38935U, 36428U, 38602U, 36387U, 38585U, 
    36450U, 38620U, 36474U, 38640U, 36497U, 38659U, 36095U, 37536U, 
    20436U, 20456U, 20520U, 20477U, 20541U, 20499U, 37464U, 39298U, 
    39662U, 39434U, 35798U, 37835U, 35740U, 37712U, 39749U, 35497U, 
    37391U, 35696U, 37600U, 39636U, 36270U, 38231U, 39341U, 36624U, 
    38828U, 39390U, 35836U, 35377U, 35873U, 35422U, 36349U, 38294U, 
    36822U, 39374U, 36701U, 38889U, 37662U, 36192U, 37848U, 36408U, 
    38183U, 38216U, 36368U, 38309U, 36783U, 39327U, 38199U, 36153U, 
    36114U, 37645U, 36043U, 37316U, 35854U, 35407U, 37790U, 35987U, 
    35783U, 36173U, 37756U, 35930U, 35724U, 37806U, 37024U, 36913U, 
    36937U, 35969U, 35769U, 36663U, 38859U, 36135U, 37726U, 36764U, 
    39312U, 35350U, 37289U, 35600U, 39520U, 37501U, 39704U, 35304U, 
    37226U, 38324U, 38360U, 35543U, 37436U, 38417U, 38397U, 37518U, 
    36577U, 38789U, 36309U, 38262U, 36249U, 37904U, 36801U, 39357U, 
    36682U, 38874U, 35950U, 35754U, 36601U, 38809U, 36229U, 37888U, 
    36643U, 38843U, 38170U, 35391U, 35629U, 35661U, 37678U, 37740U, 
    37628U, 36209U, 37872U, 35646U, 37696U, 37821U, 35571U, 36957U, 
    37373U, 37994U, 37002U, 39618U, 36979U, 37771U, 38013U, 38151U, 
    37490U, 37211U, 35335U, 35288U, 37274U, 35510U, 35319U, 37241U, 
    37404U, 35262U, 38903U, 38033U, 37938U, 38453U, 39004U, 37185U, 
    38953U, 38063U, 37966U, 38519U, 39082U, 39547U, 37155U, 38485U, 
    39042U, 38551U, 39120U, 39575U, 38709U, 39198U, 39477U, 39238U, 
    38093U, 38123U, 38677U, 39160U, 36006U, 35811U, 36329U, 38278U, 
    35911U, 35452U, 23211U, 35467U, 37330U, 35526U, 37419U, 35679U, 
    37583U, 35825U, 37861U, 71U, 162U, 13266U, 11357U, 16358U, 
    28247U, 16536U, 8798U, 14026U, 28176U, 19068U, 8819U, 14047U, 
    16553U, 28260U, 18956U, 12835U, 35179U, 12850U, 35206U, 18753U, 
    12406U, 20804U, 20891U, 21400U, 21497U, 20873U, 21465U, 12371U, 
    20821U, 20908U, 21417U, 21514U, 20839U, 21532U, 31113U, 26436U, 
    34764U, 11361U, 13505U, 19684U, 13629U, 19857U, 13553U, 19762U, 
    13677U, 19935U, 19714U, 19887U, 19800U, 19973U, 16362U, 25734U, 
    34753U, 34429U, 13847U, 20021U, 11554U, 28251U, 25742U, 13706U, 
    13890U, 13520U, 19729U, 13644U, 19902U, 16540U, 43908U, 44816U, 
    26609U, 42932U, 26591U, 20260U, 26011U, 41882U, 26558U, 25813U, 
    34553U, 26175U, 26506U, 28349U, 28277U, 26356U, 12757U, 43722U, 
    12825U, 43798U, 35169U, 44067U, 34966U, 43991U, 12766U, 43734U, 
    34975U, 44003U, 12922U, 43858U, 41645U, 44127U, 12680U, 43710U, 
    34901U, 43979U, 12930U, 43869U, 41653U, 44138U, 34541U, 34033U, 
    8773U, 13974U, 9063U, 14171U, 9038U, 13490U, 19669U, 13614U, 
    19842U, 13534U, 19743U, 13658U, 19916U, 19699U, 19872U, 19781U, 
    19954U, 25705U, 18947U, 34415U, 13318U, 32453U, 32509U, 13480U, 
    32464U, 13451U, 13222U, 32432U, 32486U, 45336U, 8802U, 14030U, 
    44563U, 28180U, 30672U, 13583U, 19833U, 28096U, 19072U, 13937U, 
    34600U, 44500U, 34827U, 13300U, 32443U, 8863U, 32388U, 32498U, 
    43623U, 32682U, 13462U, 27598U, 28226U, 8912U, 27575U, 14095U, 
    28236U, 44599U, 31088U, 44223U, 28118U, 31065U, 26710U, 42808U, 
    26731U, 35048U, 42831U, 26804U, 35090U, 42853U, 19420U, 9156U, 
    14548U, 9093U, 14275U, 44672U, 44776U, 8613U, 13771U, 9006U, 
    14139U, 44630U, 44409U, 13431U, 27586U, 28215U, 44203U, 28106U, 
    31054U, 8852U, 9631U, 8841U, 9616U, 13204U, 32422U, 8831U, 
    32377U, 32475U, 43592U, 32672U, 28809U, 26363U, 14051U, 9274U, 
    20168U, 25990U, 35194U, 19183U, 16487U, 22693U, 26700U, 18673U, 
    35017U, 19115U, 42797U, 19219U, 26721U, 18696U, 35038U, 19138U, 
    42820U, 19244U, 16557U, 28264U, 18960U, 18816U, 29488U, 41812U, 
    41890U, 20324U, 26019U, 12785U, 43746U, 35111U, 44015U, 12795U, 
    43759U, 35121U, 44028U, 12660U, 43684U, 34881U, 43953U, 12805U, 
    43772U, 35131U, 44041U, 12670U, 43697U, 34891U, 43966U, 12815U, 
    43785U, 35141U, 44054U, 26794U, 18767U, 26752U, 18730U, 18804U, 
    34211U, 29476U, 34290U, 9264U, 26193U, 25724U, 13232U, 45213U, 
    18684U, 35027U, 19126U, 19231U, 18707U, 19149U, 19256U, 18778U, 
    19171U, 19280U, 14538U, 14264U, 44661U, 44766U, 13761U, 14128U, 
    44619U, 44399U, 7202U, 32399U, 45228U, 6906U, 25945U, 18790U, 
    29462U, 25953U, 4817U, 11561U, 20160U, 4839U, 28294U, 18973U, 
    34994U, 13028U, 13042U, 41781U, 41767U, 12839U, 35183U, 12854U, 
    35210U, 26763U, 18757U, 26235U, 35059U, 19161U, 26483U, 42843U, 
    19269U, 26580U, 19578U, 45152U, 16570U, 28285U, 19023U, 41171U, 
    28355U, 20317U, 29400U, 26371U, 19542U, 45159U, 28816U, 11261U, 
    11633U, 20176U, 28406U, 20331U, 12541U, 16464U, 41871U, 19207U, 
    26742U, 18719U, 4847U, 41178U, 28305U, 18985U, 35005U, 11948U, 
    20200U, 28684U, 20342U, 12344U, 4496U, 4608U, 2284U, 4475U, 
    4545U, 4594U, 4726U, 4749U, 4776U, 4790U, 4825U, 4862U, 
    4895U, 4969U, 5339U, 5678U, 5918U, 5997U, 7163U, 12689U, 
    12949U, 11331U, 26027U, 12976U, 12246U, 26063U, 44571U, 26137U, 
    43460U, 26101U, 11344U, 26045U, 12716U, 12260U, 26082U, 44585U, 
    26156U, 43473U, 26119U, 12702U, 12962U, 12743U, 13003U, 12730U, 
    12990U, 11423U, 32570U, 26772U, 12311U, 35068U, 22724U, 20125U, 
    22850U, 44823U, 20267U, 45053U, 13572U, 13723U, 20010U, 9045U, 
    11432U, 32581U, 26783U, 12322U, 35079U, 22735U, 12234U, 20305U, 
    29409U, 8168U, 8523U, 11271U, 32536U, 8536U, 20136U, 22861U, 
    8243U, 44832U, 20276U, 45265U, 8210U, 9054U, 26182U, 30661U, 
    25713U, 28085U, 6159U, 19992U, 12868U, 28317U, 12912U, 41635U, 
    39762U, 25982U, 12877U, 43811U, 41375U, 41311U, 29378U, 12939U, 
    43881U, 41389U, 41322U, 45310U, 41465U, 45323U, 41480U, 45344U, 
    41495U, 41662U, 44150U, 41434U, 41363U, 45369U, 41508U, 41334U, 
    44080U, 41420U, 41352U, 14619U, 41819U, 27020U, 41845U, 14643U, 
    41832U, 27030U, 41858U, 12496U, 19032U, 30682U, 19044U, 30694U, 
    19056U, 30706U, 136U, 2582U, 40716U, 33625U, 39916U, 32861U, 
    40316U, 33243U, 40959U, 33857U, 40116U, 33052U, 40516U, 33434U, 
    40649U, 33561U, 39849U, 32797U, 40249U, 33179U, 40892U, 33793U, 
    40049U, 32988U, 40449U, 33370U, 40603U, 33517U, 39803U, 32753U, 
    40203U, 33135U, 40846U, 33749U, 40003U, 32944U, 40403U, 33326U, 
    40737U, 33645U, 39937U, 32881U, 40337U, 33263U, 40980U, 33877U, 
    40137U, 33072U, 40537U, 33454U, 40671U, 33582U, 39871U, 32818U, 
    40271U, 33200U, 40914U, 33814U, 40071U, 33009U, 40471U, 33391U, 
    40626U, 33539U, 39826U, 32775U, 40226U, 33157U, 40869U, 33771U, 
    40026U, 32966U, 40426U, 33348U, 40779U, 33685U, 39958U, 32901U, 
    40358U, 33283U, 41022U, 33917U, 40158U, 33092U, 40558U, 33474U, 
    40693U, 33603U, 39893U, 32839U, 40293U, 33221U, 40936U, 33835U, 
    40093U, 33030U, 40493U, 33412U, 40758U, 33665U, 41001U, 33897U, 
    40801U, 33706U, 41044U, 33938U, 29387U, 19103U, 30738U, 40580U, 
    33495U, 39780U, 32731U, 40180U, 33113U, 40823U, 33727U, 39980U, 
    32922U, 40380U, 33304U, 12390U, 20635U, 27324U, 15937U, 27673U, 
    16707U, 29143U, 21231U, 27430U, 16131U, 27867U, 17605U, 29242U, 
    20561U, 27260U, 15873U, 27609U, 16597U, 29083U, 20591U, 27292U, 
    15905U, 27641U, 16627U, 29113U, 20576U, 27276U, 15889U, 27625U, 
    16612U, 29098U, 20606U, 27308U, 15921U, 27657U, 16642U, 29128U, 
    20791U, 27342U, 15955U, 27691U, 16724U, 29160U, 25750U, 20895U, 
    27386U, 16043U, 27779U, 17335U, 29201U, 25788U, 21387U, 27448U, 
    16149U, 27885U, 17622U, 29259U, 25834U, 21501U, 27492U, 16237U, 
    27973U, 17663U, 29300U, 25872U, 20877U, 27371U, 16013U, 27749U, 
    16751U, 29187U, 25775U, 21451U, 27477U, 16207U, 27943U, 17649U, 
    29286U, 25859U, 26668U, 11499U, 20926U, 17362U, 21845U, 18088U, 
    21551U, 17777U, 22207U, 18393U, 20989U, 17409U, 21920U, 18144U, 
    21614U, 17824U, 22282U, 18449U, 21036U, 17456U, 21976U, 18200U, 
    21661U, 17871U, 22338U, 18505U, 21099U, 17503U, 22051U, 18256U, 
    21724U, 17918U, 22413U, 18561U, 20973U, 17393U, 21901U, 18125U, 
    21598U, 17808U, 22263U, 18430U, 21083U, 17487U, 22032U, 18237U, 
    21708U, 17902U, 22394U, 18542U, 20687U, 21283U, 22584U, 20722U, 
    21318U, 22619U, 20704U, 21300U, 22601U, 20739U, 21335U, 22636U, 
    20773U, 21369U, 22670U, 20669U, 21265U, 22566U, 22976U, 30819U, 
    23075U, 30918U, 22916U, 30759U, 22946U, 30789U, 22931U, 30774U, 
    22961U, 30804U, 26656U, 11466U, 22993U, 29421U, 30836U, 23034U, 
    29501U, 30877U, 23092U, 29771U, 30935U, 23133U, 29812U, 30976U, 
    23020U, 29448U, 30863U, 23119U, 29798U, 30962U, 20757U, 21353U, 
    22654U, 31120U, 29528U, 31606U, 30085U, 31363U, 29839U, 31891U, 
    30390U, 31170U, 29575U, 31665U, 30141U, 31413U, 29886U, 31950U, 
    30446U, 31220U, 29622U, 31724U, 30197U, 31463U, 29933U, 32009U, 
    30502U, 31270U, 29669U, 31783U, 30253U, 31513U, 29980U, 32068U, 
    30558U, 31153U, 29559U, 31645U, 30122U, 31396U, 29870U, 31930U, 
    30427U, 31253U, 29653U, 31763U, 30234U, 31496U, 29964U, 32048U, 
    30539U, 20363U, 12625U, 41066U, 41217U, 32719U, 41115U, 41264U, 
    20652U, 21248U, 22549U, 45246U, 6772U, 15820U, 16517U, 1148U, 
    1855U, 1933U, 4122U, 394U, 2666U, 1174U, 1881U, 2052U, 
    4241U, 420U, 2692U, 2093U, 4268U, 434U, 2706U, 1958U, 
    4147U, 407U, 2679U, 358U, 286U, 447U, 2079U, 376U, 
    304U, 2146U, 4362U, 3402U, 4403U, 4070U, 15803U, 20285U, 
    25962U, 2226U, 4417U, 1998U, 4187U, 2255U, 4446U, 2025U, 
    4214U, 2240U, 4431U, 2011U, 4200U, 2269U, 4460U, 2038U, 
    4227U, 2186U, 4349U, 1136U, 3390U, 2213U, 4390U, 1843U, 
    4058U, 2172U, 4335U, 1123U, 3377U, 2199U, 4376U, 1830U, 
    4045U, 15811U, 606U, 2860U, 1327U, 3542U, 921U, 3175U, 
    1642U, 3857U, 729U, 2983U, 1450U, 3665U, 1044U, 3298U, 
    1765U, 3980U, 781U, 3035U, 1502U, 3717U, 1096U, 3350U, 
    1817U, 4032U, 534U, 2788U, 1255U, 3470U, 849U, 3103U, 
    1570U, 3785U, 708U, 2962U, 1429U, 3644U, 1023U, 3277U, 
    1744U, 3959U, 662U, 2916U, 1383U, 3598U, 977U, 3231U, 
    1698U, 3913U, 750U, 3004U, 1471U, 3686U, 1065U, 3319U, 
    1786U, 4001U, 641U, 2895U, 1362U, 3577U, 956U, 3210U, 
    1677U, 3892U, 26548U, 4083U, 34016U, 570U, 2824U, 1291U, 
    3506U, 885U, 3139U, 1606U, 3821U, 694U, 2948U, 1415U, 
    3630U, 1009U, 3263U, 1730U, 3945U, 498U, 2752U, 1219U, 
    3434U, 813U, 3067U, 1534U, 3749U, 623U, 2877U, 1344U, 
    3559U, 938U, 3192U, 1659U, 3874U, 19412U, 20295U, 25972U, 
    26525U, 588U, 2842U, 1309U, 3524U, 903U, 3157U, 1624U, 
    3839U, 767U, 3021U, 1488U, 3703U, 1082U, 3336U, 1803U, 
    4018U, 516U, 2770U, 1237U, 3452U, 831U, 3085U, 1552U, 
    3767U, 26537U, 551U, 2805U, 1272U, 3487U, 866U, 3120U, 
    1587U, 3802U, 679U, 2933U, 1400U, 3615U, 994U, 3248U, 
    1715U, 3930U, 479U, 2733U, 1200U, 3415U, 794U, 3048U, 
    1515U, 3730U, 15828U, 16526U, 11010U, 13373U, 44177U, 14695U, 
    27142U, 14713U, 27160U, 14731U, 27178U, 1945U, 4134U, 2065U, 
    4254U, 2105U, 4294U, 4520U, 32411U, 1970U, 4159U, 1907U, 
    4096U, 2118U, 4307U, 1984U, 4173U, 1920U, 19438U, 4109U, 
    19455U, 2132U, 4321U, 13290U, 14070U, 1160U, 9204U, 1867U, 
    9234U, 1186U, 9219U, 1893U, 9249U, 13083U, 19606U, 13103U, 
    19626U, 13119U, 19642U, 274U, 2160U, 11186U, 11644U, 20188U, 
    28416U, 28888U, 14389U, 11218U, 14401U, 11231U, 33982U, 16370U, 
    28129U, 4559U, 16384U, 28143U, 33999U, 11958U, 20211U, 28693U, 
    29012U, 44807U, 10887U, 14579U, 9916U, 322U, 2612U, 465U, 
    2719U, 340U, 2630U, 1109U, 3363U, 11968U, 20222U, 28702U, 
    11198U, 42715U, 42750U, 42739U, 42898U, 42774U, 42921U, 42727U, 
    42886U, 42762U, 42909U, 8356U, 8873U, 44332U, 10818U, 11283U, 
    9720U, 44478U, 10872U, 11307U, 9736U, 44343U, 12117U, 11295U, 
    12040U, 44489U, 12132U, 11319U, 12056U, 19594U, 28337U, 34984U, 
    13017U, 43894U, 41404U, 41725U, 44163U, 41449U, 32176U, 32217U, 
    32258U, 32299U, 32203U, 32285U, 32189U, 32326U, 32230U, 32244U, 
    32271U, 32343U, 32312U, 32360U, 2591U, 19302U, 19357U, 4641U, 
    7802U, 5110U, 4983U, 4699U, 7868U, 5184U, 5049U, 19008U, 
    12357U, 22817U, 10007U, 11723U, 9299U, 28474U, 11106U, 27051U, 
    10127U, 11843U, 9419U, 28586U, 34245U, 11154U, 14305U, 44682U, 
    22872U, 10052U, 11768U, 9344U, 28516U, 28952U, 27098U, 10172U, 
    11888U, 9464U, 28628U, 34260U, 14341U, 44718U, 22828U, 10022U, 
    11738U, 9314U, 28488U, 12087U, 27062U, 10142U, 11858U, 9434U, 
    28600U, 12102U, 20373U, 14317U, 44694U, 22894U, 10082U, 11798U, 
    9374U, 28544U, 28982U, 27120U, 10202U, 11918U, 9494U, 28656U, 
    34275U, 20391U, 14365U, 44742U, 43271U, 26600U, 20245U, 121U, 
    22774U, 2564U, 22790U, 8583U, 20088U, 25684U, 14764U, 27211U, 
    2298U, 22782U, 4489U, 22798U, 12582U, 42785U, 26333U, 26567U, 
    26290U, 41608U, 26320U, 26514U, 26276U, 12568U, 26463U, 22883U, 
    10067U, 11783U, 9359U, 28530U, 28967U, 27109U, 10187U, 11903U, 
    9479U, 28642U, 14353U, 44730U, 22839U, 10037U, 11753U, 9329U, 
    28502U, 11122U, 27073U, 10157U, 11873U, 9449U, 28614U, 11170U, 
    14329U, 44706U, 22905U, 10097U, 11813U, 9389U, 28558U, 28997U, 
    27131U, 10217U, 11933U, 9509U, 28670U, 14377U, 44754U, 19586U, 
    19823U, 26617U, 20941U, 17377U, 18106U, 21160U, 17548U, 18293U, 
    21771U, 17979U, 18598U, 21566U, 17792U, 18411U, 21004U, 17424U, 
    18162U, 21629U, 17839U, 18467U, 21020U, 17440U, 18181U, 21645U, 
    17855U, 18486U, 21051U, 17471U, 18218U, 21179U, 17567U, 18315U, 
    21790U, 17998U, 18620U, 21676U, 17886U, 18523U, 21114U, 17518U, 
    18274U, 21198U, 17586U, 18337U, 21809U, 18017U, 18642U, 21739U, 
    17933U, 18579U, 14776U, 27223U, 8310U, 13328U, 8631U, 13801U, 
    20825U, 27356U, 15983U, 27719U, 16737U, 29173U, 25762U, 21828U, 
    27521U, 16295U, 28031U, 18071U, 29327U, 25897U, 20912U, 27400U, 
    16071U, 27807U, 17348U, 29214U, 25800U, 21146U, 27415U, 16101U, 
    27837U, 17534U, 29228U, 25821U, 21421U, 27462U, 16177U, 27913U, 
    17635U, 29272U, 25846U, 22173U, 27539U, 16313U, 28049U, 18359U, 
    29344U, 25913U, 21518U, 27506U, 16265U, 28001U, 17676U, 29313U, 
    25884U, 22190U, 27557U, 16331U, 28067U, 18376U, 29361U, 25929U, 
    11515U, 19338U, 19393U, 8466U, 8967U, 9174U, 12274U, 14566U, 
    44794U, 14749U, 27196U, 14788U, 27235U, 8549U, 8712U, 13421U, 
    12529U, 13410U, 14448U, 32521U, 8456U, 19472U, 8945U, 19489U, 
    14507U, 19525U, 14227U, 19507U, 8733U, 13916U, 8510U, 8699U, 
    13149U, 44290U, 8421U, 14425U, 8444U, 14474U, 13159U, 44300U, 
    16420U, 18844U, 18903U, 18859U, 18918U, 16398U, 16431U, 20099U, 
    34910U, 26306U, 26471U, 26261U, 16579U, 14800U, 27247U, 16443U, 
    45041U, 18998U, 18874U, 18933U, 45300U, 31136U, 29543U, 31625U, 
    21863U, 30103U, 31303U, 29714U, 31822U, 22107U, 30290U, 31546U, 
    30011U, 32107U, 22469U, 30595U, 31379U, 29854U, 31910U, 22225U, 
    30408U, 31186U, 29590U, 31684U, 21938U, 30159U, 31429U, 29901U, 
    31969U, 22300U, 30464U, 31203U, 29606U, 31704U, 21957U, 30178U, 
    31446U, 29917U, 31989U, 22319U, 30483U, 31236U, 29637U, 31743U, 
    21994U, 30215U, 31323U, 29733U, 31845U, 22129U, 30312U, 31566U, 
    30030U, 32130U, 22491U, 30617U, 31479U, 29948U, 32028U, 22356U, 
    30520U, 31286U, 29684U, 31802U, 22069U, 30271U, 31343U, 29752U, 
    31868U, 22151U, 30334U, 31586U, 30049U, 32153U, 22513U, 30639U, 
    31529U, 29995U, 32087U, 22431U, 30576U, 11482U, 19319U, 19374U, 
    20843U, 20957U, 21882U, 21582U, 22244U, 21435U, 21067U, 22013U, 
    21692U, 22375U, 21536U, 21130U, 22088U, 21755U, 22450U, 23006U, 
    29434U, 30849U, 23160U, 30068U, 31003U, 23047U, 29514U, 30890U, 
    23061U, 29700U, 30904U, 23105U, 29784U, 30948U, 23177U, 30356U, 
    31020U, 23146U, 29825U, 30989U, 23194U, 30373U, 31037U, 16409U, 
    18829U, 18888U, 12516U, 9767U, 13191U, 28187U, 43579U, 13277U, 
    28201U, 43610U, 34149U, 34135U, 26493U, 12184U, 22806U, 9992U, 
    11708U, 9284U, 28460U, 11090U, 27040U, 10112U, 11828U, 9404U, 
    28572U, 11138U, 25692U, 26203U, 26219U, 16349U, 45142U, 26444U, 
    2520U, 12903U, 43846U, 41626U, 44115U, 18742U, 14605U, 14629U, 
    14653U, 14667U, 45355U, 31099U, 11210U, 11244U, 19094U, 2571U, 
    8789U, 14017U, 28168U, 8810U, 14038U, 4676U, 6198U, 7899U, 
    5219U, 5080U, 7841U, 5153U, 5022U, 21483U, 20858U, 12389U, 
    2499U, 12598U, 43651U, 32692U, 43920U, 20790U, 26394U, 21386U, 
    26408U, 21450U, 20352U, 12612U, 43668U, 32706U, 43937U, 20621U, 
    22535U, 12356U, 95U, 2538U, 26380U, 21217U, 26422U, 108U, 
    2551U, 41798U, 4631U, 44530U, 8761U, 13962U, 44518U, 11621U, 
    20111U, 41197U, 28395U, 20147U, 4529U, 4576U, 28876U, 13857U, 
    44427U, 9U, 45175U, 24U, 45194U, 14837U, 16681U, 41928U, 
    14813U, 15497U, 15217U, 17119U, 42328U, 17725U, 42591U, 14985U, 
    16887U, 42085U, 15115U, 17017U, 42221U, 15549U, 15513U, 15239U, 
    17141U, 42351U, 17741U, 42608U, 15006U, 16908U, 42107U, 15264U, 
    17166U, 42377U, 17949U, 42646U, 15030U, 16932U, 42132U, 15449U, 
    15192U, 17094U, 42302U, 17706U, 42571U, 14961U, 16863U, 42060U, 
    16657U, 41902U, 14873U, 16775U, 41967U, 15433U, 15170U, 17072U, 
    42279U, 17690U, 42554U, 14940U, 16842U, 42038U, 14850U, 15151U, 
    17053U, 42259U, 16694U, 41942U, 14907U, 16809U, 42003U, 14825U, 
    15678U, 15306U, 17208U, 42421U, 18036U, 42678U, 15070U, 16972U, 
    42174U, 15133U, 17035U, 42240U, 15392U, 17294U, 42511U, 15564U, 
    15694U, 15328U, 17230U, 42444U, 18052U, 42695U, 15091U, 16993U, 
    42196U, 15285U, 17187U, 42399U, 15411U, 17313U, 42531U, 17964U, 
    42662U, 15050U, 16952U, 42153U, 15371U, 17273U, 42489U, 16669U, 
    41915U, 14890U, 16792U, 41985U, 15353U, 17255U, 42470U, 15532U, 
    17760U, 42628U, 8745U, 34106U, 13386U, 8887U, 14081U, 44190U, 
    13946U, 34167U, 44509U, 34306U, 8301U, 42996U, 26875U, 26690U, 
    34331U, 43076U, 45287U, 22760U, 34865U, 13137U, 43567U, 13309U, 
    43034U, 26897U, 26825U, 34575U, 43138U, 44251U, 10789U, 13180U, 
    9784U, 34369U, 43107U, 34074U, 34625U, 43169U, 44321U, 10803U, 
    34852U, 43231U, 43632U, 43259U, 26919U, 26950U, 34815U, 43200U, 
    8602U, 15755U, 12032U, 41683U, 10545U, 41672U, 10530U, 43349U, 
    43361U, 41695U, 10561U, 13714U, 9813U, 43279U, 44354U, 10833U, 
    43421U, 22711U, 13898U, 9826U, 34439U, 34343U, 34455U, 34382U, 
    43289U, 34472U, 34396U, 34507U, 34682U, 44460U, 10859U, 14497U, 
    34525U, 34697U, 34490U, 34668U, 43431U, 20234U, 8390U, 12147U, 
    13471U, 12172U, 8922U, 12159U, 14105U, 12196U, 44609U, 12221U, 
    44232U, 12209U, 12452U, 13074U, 43451U, 43340U, 12465U, 19660U, 
    8573U, 43486U, 13696U, 11454U, 8233U, 32614U, 10247U, 43046U, 
    10708U, 8488U, 9586U, 43008U, 10690U, 34723U, 10358U, 34710U, 
    10325U, 34737U, 10376U, 34774U, 10396U, 34789U, 10415U, 14059U, 
    9839U, 8678U, 11568U, 28361U, 28823U, 13869U, 11655U, 28426U, 
    28899U, 44439U, 11979U, 28712U, 29022U, 13734U, 26835U, 44261U, 
    26960U, 44372U, 26991U, 8781U, 11580U, 28372U, 28835U, 13982U, 
    11667U, 28437U, 28911U, 9072U, 11608U, 28383U, 28863U, 14180U, 
    11695U, 28448U, 28939U, 44652U, 12019U, 28734U, 29062U, 44542U, 
    11991U, 28723U, 29034U, 41706U, 26930U, 31075U, 8590U, 15742U, 
    8724U, 13907U, 43299U, 44469U, 43441U, 4740U, 9134U, 20045U, 
    11020U, 15837U, 15791U, 14527U, 20059U, 11037U, 15855U, 16505U, 
    9165U, 14557U, 9103U, 14285U, 44785U, 8622U, 13780U, 9016U, 
    14149U, 44418U, 32603U, 10232U, 43372U, 42875U, 10615U, 43409U, 
    8399U, 9542U, 34587U, 8477U, 9571U, 34638U, 34653U, 32650U, 
    10295U, 43397U, 10773U, 42974U, 10676U, 14215U, 4616U, 14589U, 
    9930U, 10342U, 32545U, 32592U, 32661U, 10310U, 43320U, 10742U, 
    32557U, 13789U, 9885U, 14202U, 9854U, 13592U, 9799U, 8433U, 
    9556U, 14462U, 9145U, 9691U, 14437U, 9901U, 9081U, 9646U, 
    14486U, 9524U, 12072U, 11054U, 11074U, 9124U, 9677U, 42952U, 
    10646U, 14295U, 9871U, 12333U, 9752U, 43309U, 10727U, 45167U, 
    8380U, 13441U, 8901U, 44213U, 12438U, 43330U, 13990U, 44550U, 
    41209U, 28802U, 8333U, 13350U, 34091U, 34119U, 8667U, 13836U, 
    34196U, 34180U, 14003U, 8686U, 13877U, 44447U, 8222U, 41736U, 
    10576U, 32626U, 10263U, 19081U, 9975U, 43384U, 10756U, 42963U, 
    10661U, 9113U, 9662U, 41752U, 10596U, 15779U, 9959U, 42940U, 
    10630U, 41520U, 10433U, 45065U, 10900U, 41565U, 10490U, 45110U, 
    10957U, 41535U, 10452U, 45080U, 10919U, 41581U, 10510U, 45126U, 
    10977U, 41550U, 10471U, 45095U, 10938U, 28794U, 30750U, 8409U, 
    8932U, 8979U, 14238U, 14413U, 14189U, 15767U, 9943U, 43641U, 
    8956U, 14252U, 14517U, 8754U, 13747U, 11368U, 26849U, 44275U, 
    11386U, 26975U, 44385U, 11405U, 27005U, 13955U, 13339U, 12775U, 
    8369U, 8321U, 13399U, 8642U, 11441U, 8344U, 13361U, 13812U, 
    8292U, 42984U, 26864U, 26680U, 34319U, 43061U, 45274U, 22746U, 
    13213U, 43022U, 26886U, 26815U, 34563U, 43123U, 44241U, 13169U, 
    34356U, 43091U, 34057U, 34612U, 43153U, 44310U, 34839U, 43215U, 
    43601U, 43247U, 26908U, 26940U, 34803U, 43185U, 25675U, 9187U, 
    9706U, 32638U, 10279U, 8499U, 9601U, 8561U, 13602U, 8654U, 
    13823U, 8993U, 14115U, 4804U, 20031U, 26642U, 20073U, 4763U, 
    34040U, 26628U, 34227U, 29075U, 9197U, 14598U, 14863U, 16765U, 
    41956U, 14925U, 16827U, 42022U, 34921U, 28157U, 19429U, 8177U, 
    8277U, 20409U, 8257U, 8199U, 8267U, 11252U, 35101U, 35151U, 
    13244U, 12287U, 13255U, 13059U, 86U, 2529U, 19568U, 12505U, 
    20000U, 12426U, 41597U, 35159U, 34425U, 34411U, 19819U, 12296U, 
};

static inline void InitHexagonMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(HexagonInsts, HexagonInstrNameIndices, HexagonInstrNameData, nullptr, nullptr, 3112);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct HexagonGenInstrInfo : public TargetInstrInfo {
  explicit HexagonGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~HexagonGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc HexagonInsts[];
extern const unsigned HexagonInstrNameIndices[];
extern const char HexagonInstrNameData[];
HexagonGenInstrInfo::HexagonGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(HexagonInsts, HexagonInstrNameIndices, HexagonInstrNameData, nullptr, nullptr, 3112);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace Hexagon {
namespace OpName {
enum {
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace Hexagon
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace Hexagon {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace Hexagon
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace Hexagon {
namespace OpTypes {
enum OperandType {
  a30_2Imm = 0,
  b13_2Imm = 1,
  b15_2Imm = 2,
  b30_2Imm = 3,
  bblabel = 4,
  f32Imm = 5,
  f32imm = 6,
  f64Imm = 7,
  f64imm = 8,
  globaladdress = 9,
  globaladdressExt = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  m32_0Imm = 16,
  n1Const = 17,
  ptype0 = 18,
  ptype1 = 19,
  ptype2 = 20,
  ptype3 = 21,
  ptype4 = 22,
  ptype5 = 23,
  s27_2Imm = 24,
  s29_3Imm = 25,
  s30_2Imm = 26,
  s31_1Imm = 27,
  s32_0Imm = 28,
  s3_0Imm = 29,
  s4_0Imm = 30,
  s4_1Imm = 31,
  s4_2Imm = 32,
  s4_3Imm = 33,
  s6_0Imm = 34,
  s6_3Imm = 35,
  s8_0Imm = 36,
  s9_0Imm = 37,
  type0 = 38,
  type1 = 39,
  type2 = 40,
  type3 = 41,
  type4 = 42,
  type5 = 43,
  u10_0Imm = 44,
  u11_3Imm = 45,
  u16_0Imm = 46,
  u1_0Imm = 47,
  u26_6Imm = 48,
  u29_3Imm = 49,
  u2_0Imm = 50,
  u30_2Imm = 51,
  u31_1Imm = 52,
  u32_0Imm = 53,
  u3_0Imm = 54,
  u3_1Imm = 55,
  u4_0Imm = 56,
  u4_2Imm = 57,
  u5_0Imm = 58,
  u5_2Imm = 59,
  u5_3Imm = 60,
  u64_0Imm = 61,
  u6_0Imm = 62,
  u6_1Imm = 63,
  u6_2Imm = 64,
  u7_0Imm = 65,
  u8_0Imm = 66,
  untyped_imm_0 = 67,
  CtrRegs = 68,
  CtrRegs64 = 69,
  DoubleRegs = 70,
  GeneralDoubleLow8Regs = 71,
  GeneralSubRegs = 72,
  GuestRegs = 73,
  GuestRegs64 = 74,
  HvxQR = 75,
  HvxVQR = 76,
  HvxVR = 77,
  HvxWR = 78,
  IntRegs = 79,
  IntRegsLow8 = 80,
  ModRegs = 81,
  PredRegs = 82,
  UsrBits = 83,
  V62Regs = 84,
  V65Regs = 85,
  VectRegRev = 86,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace Hexagon {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const uint16_t Offsets[] = {
    0,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    5,
    8,
    12,
    13,
    17,
    20,
    20,
    20,
    21,
    23,
    25,
    25,
    26,
    27,
    31,
    33,
    33,
    39,
    40,
    41,
    44,
    44,
    46,
    47,
    47,
    47,
    47,
    47,
    47,
    49,
    52,
    52,
    55,
    58,
    61,
    64,
    67,
    70,
    73,
    76,
    79,
    82,
    85,
    86,
    87,
    89,
    91,
    94,
    96,
    100,
    102,
    104,
    106,
    108,
    110,
    112,
    114,
    116,
    118,
    120,
    122,
    124,
    125,
    127,
    129,
    131,
    136,
    141,
    146,
    148,
    153,
    158,
    162,
    165,
    168,
    171,
    174,
    177,
    180,
    183,
    186,
    189,
    192,
    195,
    198,
    201,
    203,
    205,
    206,
    207,
    208,
    210,
    212,
    214,
    216,
    217,
    220,
    222,
    225,
    227,
    230,
    233,
    236,
    240,
    244,
    248,
    252,
    256,
    260,
    265,
    269,
    274,
    278,
    283,
    287,
    292,
    296,
    300,
    303,
    306,
    309,
    312,
    315,
    318,
    321,
    324,
    328,
    332,
    336,
    340,
    344,
    348,
    352,
    356,
    359,
    362,
    365,
    369,
    373,
    376,
    379,
    382,
    385,
    387,
    389,
    391,
    393,
    395,
    397,
    399,
    401,
    403,
    405,
    407,
    409,
    411,
    414,
    416,
    419,
    422,
    425,
    428,
    431,
    434,
    437,
    440,
    443,
    446,
    449,
    452,
    454,
    455,
    458,
    462,
    465,
    469,
    471,
    473,
    475,
    477,
    479,
    481,
    483,
    485,
    487,
    489,
    491,
    493,
    495,
    497,
    499,
    501,
    503,
    506,
    509,
    512,
    515,
    518,
    521,
    525,
    527,
    529,
    531,
    535,
    539,
    543,
    546,
    549,
    551,
    553,
    555,
    557,
    559,
    561,
    563,
    565,
    567,
    569,
    571,
    573,
    575,
    578,
    580,
    582,
    584,
    587,
    590,
    592,
    595,
    598,
    600,
    603,
    606,
    609,
    612,
    615,
    618,
    620,
    623,
    625,
    627,
    630,
    633,
    636,
    639,
    641,
    642,
    643,
    644,
    645,
    645,
    645,
    645,
    647,
    649,
    651,
    653,
    654,
    657,
    660,
    662,
    664,
    666,
    668,
    670,
    672,
    674,
    676,
    678,
    680,
    683,
    686,
    689,
    692,
    695,
    698,
    701,
    704,
    707,
    710,
    713,
    716,
    719,
    722,
    725,
    728,
    731,
    734,
    737,
    740,
    743,
    746,
    749,
    752,
    754,
    756,
    758,
    760,
    762,
    764,
    766,
    768,
    770,
    772,
    774,
    776,
    778,
    780,
    782,
    784,
    786,
    788,
    790,
    792,
    794,
    795,
    796,
    797,
    798,
    799,
    800,
    802,
    804,
    806,
    806,
    806,
    809,
    812,
    815,
    818,
    822,
    825,
    828,
    831,
    835,
    837,
    840,
    841,
    841,
    842,
    845,
    849,
    855,
    860,
    866,
    871,
    877,
    882,
    888,
    893,
    899,
    904,
    910,
    915,
    919,
    920,
    921,
    927,
    932,
    938,
    943,
    949,
    954,
    960,
    965,
    971,
    976,
    977,
    978,
    979,
    980,
    983,
    986,
    989,
    992,
    995,
    998,
    1002,
    1006,
    1009,
    1012,
    1015,
    1018,
    1021,
    1025,
    1028,
    1031,
    1034,
    1037,
    1040,
    1043,
    1046,
    1049,
    1052,
    1055,
    1058,
    1061,
    1064,
    1067,
    1070,
    1073,
    1076,
    1079,
    1081,
    1083,
    1085,
    1087,
    1089,
    1091,
    1093,
    1095,
    1100,
    1105,
    1110,
    1115,
    1118,
    1121,
    1124,
    1127,
    1130,
    1133,
    1136,
    1139,
    1142,
    1145,
    1148,
    1151,
    1154,
    1157,
    1160,
    1163,
    1165,
    1168,
    1171,
    1174,
    1177,
    1179,
    1182,
    1185,
    1188,
    1191,
    1193,
    1196,
    1199,
    1202,
    1205,
    1208,
    1211,
    1212,
    1215,
    1218,
    1221,
    1225,
    1229,
    1233,
    1236,
    1240,
    1244,
    1248,
    1251,
    1255,
    1259,
    1263,
    1266,
    1268,
    1270,
    1273,
    1276,
    1279,
    1282,
    1285,
    1288,
    1290,
    1292,
    1295,
    1298,
    1301,
    1304,
    1307,
    1310,
    1312,
    1314,
    1316,
    1318,
    1320,
    1323,
    1326,
    1329,
    1332,
    1334,
    1337,
    1340,
    1343,
    1346,
    1348,
    1351,
    1354,
    1358,
    1362,
    1364,
    1366,
    1369,
    1372,
    1375,
    1378,
    1380,
    1382,
    1384,
    1386,
    1388,
    1390,
    1392,
    1395,
    1398,
    1402,
    1406,
    1409,
    1412,
    1415,
    1418,
    1422,
    1426,
    1429,
    1432,
    1436,
    1439,
    1443,
    1446,
    1449,
    1452,
    1455,
    1458,
    1462,
    1465,
    1468,
    1471,
    1474,
    1477,
    1481,
    1485,
    1488,
    1491,
    1495,
    1498,
    1502,
    1505,
    1509,
    1512,
    1516,
    1519,
    1522,
    1526,
    1529,
    1532,
    1536,
    1540,
    1543,
    1546,
    1550,
    1553,
    1556,
    1558,
    1561,
    1564,
    1567,
    1570,
    1573,
    1576,
    1579,
    1582,
    1585,
    1588,
    1591,
    1594,
    1596,
    1598,
    1599,
    1600,
    1603,
    1605,
    1607,
    1611,
    1614,
    1618,
    1621,
    1625,
    1628,
    1632,
    1635,
    1639,
    1642,
    1646,
    1649,
    1653,
    1656,
    1660,
    1663,
    1667,
    1670,
    1674,
    1677,
    1681,
    1686,
    1690,
    1695,
    1699,
    1704,
    1707,
    1710,
    1713,
    1716,
    1719,
    1722,
    1725,
    1728,
    1731,
    1734,
    1737,
    1740,
    1743,
    1746,
    1750,
    1753,
    1756,
    1760,
    1763,
    1766,
    1770,
    1773,
    1777,
    1780,
    1784,
    1787,
    1791,
    1794,
    1798,
    1801,
    1804,
    1808,
    1811,
    1815,
    1818,
    1821,
    1825,
    1828,
    1832,
    1835,
    1838,
    1842,
    1846,
    1849,
    1853,
    1856,
    1860,
    1863,
    1866,
    1870,
    1873,
    1877,
    1880,
    1884,
    1887,
    1890,
    1893,
    1897,
    1901,
    1905,
    1908,
    1912,
    1915,
    1919,
    1922,
    1926,
    1929,
    1932,
    1935,
    1938,
    1941,
    1943,
    1945,
    1948,
    1951,
    1954,
    1957,
    1960,
    1963,
    1966,
    1969,
    1971,
    1975,
    1978,
    1982,
    1985,
    1990,
    1994,
    1998,
    2001,
    2005,
    2008,
    2012,
    2015,
    2019,
    2022,
    2027,
    2031,
    2035,
    2038,
    2041,
    2044,
    2047,
    2050,
    2053,
    2056,
    2059,
    2064,
    2068,
    2071,
    2074,
    2077,
    2079,
    2083,
    2087,
    2092,
    2096,
    2100,
    2104,
    2108,
    2113,
    2118,
    2120,
    2123,
    2125,
    2128,
    2130,
    2133,
    2136,
    2139,
    2142,
    2145,
    2148,
    2152,
    2156,
    2159,
    2162,
    2165,
    2168,
    2172,
    2176,
    2179,
    2182,
    2185,
    2188,
    2191,
    2194,
    2197,
    2200,
    2203,
    2206,
    2209,
    2212,
    2215,
    2219,
    2223,
    2226,
    2229,
    2233,
    2236,
    2240,
    2243,
    2247,
    2250,
    2255,
    2257,
    2259,
    2262,
    2265,
    2267,
    2269,
    2271,
    2273,
    2274,
    2276,
    2277,
    2280,
    2283,
    2286,
    2289,
    2291,
    2293,
    2295,
    2297,
    2299,
    2301,
    2304,
    2307,
    2310,
    2313,
    2316,
    2319,
    2322,
    2325,
    2327,
    2330,
    2333,
    2336,
    2339,
    2342,
    2345,
    2348,
    2351,
    2354,
    2357,
    2360,
    2363,
    2366,
    2368,
    2370,
    2372,
    2375,
    2378,
    2381,
    2384,
    2387,
    2390,
    2393,
    2396,
    2399,
    2402,
    2405,
    2408,
    2411,
    2414,
    2417,
    2420,
    2423,
    2426,
    2429,
    2432,
    2435,
    2438,
    2440,
    2442,
    2445,
    2448,
    2451,
    2454,
    2457,
    2460,
    2463,
    2466,
    2469,
    2472,
    2475,
    2478,
    2481,
    2484,
    2486,
    2488,
    2488,
    2490,
    2493,
    2496,
    2499,
    2503,
    2507,
    2511,
    2515,
    2519,
    2523,
    2527,
    2531,
    2535,
    2539,
    2543,
    2547,
    2551,
    2555,
    2559,
    2563,
    2567,
    2571,
    2575,
    2579,
    2583,
    2587,
    2591,
    2595,
    2597,
    2599,
    2601,
    2603,
    2605,
    2607,
    2610,
    2613,
    2616,
    2619,
    2622,
    2625,
    2628,
    2631,
    2634,
    2637,
    2640,
    2643,
    2646,
    2649,
    2652,
    2655,
    2658,
    2661,
    2664,
    2667,
    2670,
    2673,
    2676,
    2679,
    2682,
    2684,
    2686,
    2688,
    2690,
    2692,
    2694,
    2697,
    2700,
    2702,
    2704,
    2706,
    2708,
    2710,
    2712,
    2715,
    2718,
    2721,
    2724,
    2727,
    2730,
    2733,
    2736,
    2739,
    2742,
    2745,
    2748,
    2751,
    2754,
    2757,
    2760,
    2763,
    2766,
    2769,
    2772,
    2775,
    2778,
    2781,
    2784,
    2787,
    2790,
    2793,
    2795,
    2798,
    2801,
    2804,
    2807,
    2810,
    2813,
    2816,
    2819,
    2822,
    2825,
    2828,
    2831,
    2834,
    2837,
    2840,
    2843,
    2846,
    2849,
    2852,
    2856,
    2859,
    2863,
    2866,
    2869,
    2872,
    2875,
    2878,
    2881,
    2884,
    2887,
    2890,
    2892,
    2897,
    2900,
    2903,
    2906,
    2909,
    2912,
    2915,
    2918,
    2921,
    2924,
    2927,
    2930,
    2933,
    2936,
    2939,
    2942,
    2945,
    2948,
    2951,
    2954,
    2957,
    2960,
    2963,
    2966,
    2967,
    2970,
    2973,
    2976,
    2979,
    2982,
    2985,
    2988,
    2991,
    2994,
    2997,
    3000,
    3003,
    3006,
    3009,
    3012,
    3015,
    3018,
    3021,
    3024,
    3027,
    3030,
    3033,
    3036,
    3039,
    3042,
    3045,
    3048,
    3051,
    3054,
    3057,
    3060,
    3063,
    3066,
    3069,
    3072,
    3077,
    3079,
    3081,
    3084,
    3087,
    3090,
    3093,
    3096,
    3099,
    3102,
    3105,
    3108,
    3111,
    3114,
    3117,
    3121,
    3125,
    3129,
    3133,
    3137,
    3141,
    3145,
    3149,
    3154,
    3157,
    3160,
    3164,
    3167,
    3170,
    3173,
    3176,
    3178,
    3181,
    3184,
    3186,
    3189,
    3192,
    3195,
    3199,
    3203,
    3207,
    3211,
    3214,
    3217,
    3220,
    3223,
    3226,
    3229,
    3232,
    3235,
    3238,
    3241,
    3244,
    3247,
    3250,
    3252,
    3256,
    3260,
    3264,
    3268,
    3270,
    3273,
    3276,
    3278,
    3280,
    3283,
    3287,
    3290,
    3292,
    3296,
    3300,
    3304,
    3308,
    3311,
    3314,
    3317,
    3320,
    3323,
    3326,
    3329,
    3332,
    3335,
    3338,
    3341,
    3345,
    3349,
    3353,
    3357,
    3358,
    3360,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3362,
    3363,
    3365,
    3367,
    3369,
    3371,
    3373,
    3375,
    3377,
    3379,
    3381,
    3383,
    3385,
    3387,
    3389,
    3391,
    3393,
    3395,
    3397,
    3399,
    3401,
    3403,
    3405,
    3407,
    3409,
    3411,
    3413,
    3415,
    3418,
    3421,
    3424,
    3427,
    3430,
    3433,
    3435,
    3437,
    3440,
    3443,
    3446,
    3450,
    3454,
    3457,
    3460,
    3463,
    3466,
    3469,
    3472,
    3475,
    3478,
    3481,
    3484,
    3486,
    3490,
    3494,
    3499,
    3503,
    3507,
    3509,
    3511,
    3514,
    3517,
    3520,
    3523,
    3527,
    3530,
    3532,
    3534,
    3536,
    3538,
    3540,
    3541,
    3543,
    3544,
    3546,
    3548,
    3550,
    3551,
    3553,
    3555,
    3557,
    3559,
    3560,
    3562,
    3564,
    3566,
    3568,
    3570,
    3572,
    3574,
    3576,
    3578,
    3580,
    3582,
    3584,
    3586,
    3588,
    3590,
    3592,
    3594,
    3596,
    3598,
    3600,
    3602,
    3604,
    3606,
    3608,
    3610,
    3612,
    3614,
    3616,
    3617,
    3619,
    3621,
    3623,
    3625,
    3627,
    3629,
    3630,
    3633,
    3636,
    3639,
    3642,
    3645,
    3648,
    3651,
    3654,
    3657,
    3660,
    3663,
    3666,
    3669,
    3672,
    3675,
    3678,
    3681,
    3684,
    3687,
    3690,
    3693,
    3696,
    3699,
    3702,
    3705,
    3708,
    3711,
    3714,
    3717,
    3720,
    3723,
    3726,
    3729,
    3732,
    3735,
    3738,
    3741,
    3744,
    3747,
    3750,
    3753,
    3756,
    3759,
    3762,
    3765,
    3768,
    3771,
    3774,
    3777,
    3780,
    3783,
    3786,
    3789,
    3792,
    3795,
    3798,
    3801,
    3804,
    3807,
    3810,
    3813,
    3816,
    3819,
    3822,
    3825,
    3828,
    3831,
    3834,
    3837,
    3840,
    3843,
    3846,
    3849,
    3852,
    3855,
    3858,
    3861,
    3864,
    3867,
    3870,
    3873,
    3876,
    3879,
    3882,
    3885,
    3888,
    3891,
    3894,
    3897,
    3900,
    3903,
    3906,
    3909,
    3912,
    3915,
    3918,
    3921,
    3924,
    3927,
    3930,
    3933,
    3936,
    3939,
    3942,
    3945,
    3946,
    3949,
    3952,
    3954,
    3956,
    3958,
    3960,
    3962,
    3964,
    3966,
    3968,
    3970,
    3972,
    3974,
    3976,
    3978,
    3982,
    3987,
    3993,
    3998,
    4003,
    4008,
    4012,
    4017,
    4023,
    4028,
    4033,
    4038,
    4041,
    4045,
    4050,
    4054,
    4058,
    4062,
    4065,
    4069,
    4074,
    4078,
    4082,
    4086,
    4089,
    4093,
    4098,
    4102,
    4106,
    4110,
    4113,
    4117,
    4122,
    4126,
    4130,
    4134,
    4137,
    4141,
    4146,
    4150,
    4154,
    4158,
    4160,
    4163,
    4167,
    4172,
    4176,
    4180,
    4184,
    4186,
    4189,
    4193,
    4198,
    4202,
    4206,
    4210,
    4212,
    4215,
    4219,
    4224,
    4228,
    4232,
    4236,
    4238,
    4241,
    4245,
    4250,
    4254,
    4258,
    4262,
    4264,
    4267,
    4271,
    4276,
    4280,
    4284,
    4288,
    4290,
    4292,
    4294,
    4298,
    4303,
    4307,
    4312,
    4316,
    4321,
    4325,
    4330,
    4334,
    4339,
    4343,
    4348,
    4352,
    4357,
    4361,
    4366,
    4370,
    4375,
    4379,
    4384,
    4388,
    4393,
    4397,
    4402,
    4406,
    4411,
    4415,
    4420,
    4424,
    4429,
    4433,
    4438,
    4442,
    4447,
    4451,
    4456,
    4460,
    4465,
    4469,
    4474,
    4478,
    4483,
    4487,
    4492,
    4496,
    4501,
    4505,
    4510,
    4513,
    4516,
    4519,
    4522,
    4525,
    4528,
    4531,
    4534,
    4537,
    4540,
    4543,
    4546,
    4549,
    4552,
    4555,
    4558,
    4561,
    4564,
    4568,
    4573,
    4577,
    4582,
    4585,
    4589,
    4592,
    4596,
    4599,
    4603,
    4606,
    4610,
    4612,
    4614,
    4617,
    4621,
    4625,
    4628,
    4632,
    4636,
    4639,
    4643,
    4647,
    4650,
    4654,
    4658,
    4661,
    4665,
    4669,
    4672,
    4676,
    4680,
    4683,
    4686,
    4689,
    4692,
    4697,
    4700,
    4705,
    4708,
    4713,
    4716,
    4721,
    4724,
    4729,
    4732,
    4737,
    4740,
    4745,
    4748,
    4753,
    4756,
    4761,
    4764,
    4769,
    4772,
    4777,
    4780,
    4785,
    4788,
    4793,
    4796,
    4801,
    4804,
    4809,
    4812,
    4817,
    4820,
    4825,
    4828,
    4833,
    4836,
    4841,
    4844,
    4849,
    4852,
    4857,
    4860,
    4865,
    4868,
    4873,
    4876,
    4881,
    4883,
    4886,
    4889,
    4892,
    4895,
    4898,
    4901,
    4904,
    4907,
    4910,
    4913,
    4915,
    4919,
    4923,
    4927,
    4931,
    4935,
    4939,
    4943,
    4947,
    4950,
    4953,
    4956,
    4959,
    4962,
    4965,
    4968,
    4971,
    4974,
    4977,
    4981,
    4985,
    4989,
    4993,
    4997,
    5001,
    5004,
    5007,
    5011,
    5015,
    5018,
    5021,
    5024,
    5027,
    5030,
    5034,
    5038,
    5042,
    5046,
    5050,
    5054,
    5058,
    5062,
    5066,
    5070,
    5074,
    5078,
    5082,
    5086,
    5090,
    5094,
    5098,
    5102,
    5106,
    5109,
    5112,
    5115,
    5118,
    5121,
    5124,
    5127,
    5130,
    5133,
    5136,
    5139,
    5142,
    5145,
    5148,
    5151,
    5154,
    5158,
    5162,
    5166,
    5170,
    5174,
    5178,
    5182,
    5186,
    5190,
    5194,
    5198,
    5202,
    5206,
    5210,
    5214,
    5218,
    5222,
    5225,
    5228,
    5231,
    5234,
    5237,
    5240,
    5243,
    5246,
    5250,
    5254,
    5258,
    5262,
    5266,
    5270,
    5274,
    5278,
    5282,
    5286,
    5290,
    5294,
    5298,
    5302,
    5306,
    5310,
    5313,
    5316,
    5319,
    5322,
    5325,
    5328,
    5331,
    5334,
    5337,
    5340,
    5343,
    5346,
    5349,
    5352,
    5355,
    5358,
    5361,
    5364,
    5367,
    5370,
    5373,
    5376,
    5379,
    5382,
    5385,
    5388,
    5391,
    5395,
    5399,
    5403,
    5407,
    5411,
    5415,
    5419,
    5423,
    5426,
    5429,
    5432,
    5435,
    5438,
    5441,
    5444,
    5447,
    5451,
    5455,
    5459,
    5463,
    5467,
    5471,
    5475,
    5479,
    5482,
    5485,
    5488,
    5491,
    5494,
    5497,
    5500,
    5503,
    5506,
    5509,
    5512,
    5515,
    5519,
    5523,
    5527,
    5531,
    5535,
    5539,
    5543,
    5547,
    5550,
    5553,
    5556,
    5559,
    5562,
    5565,
    5568,
    5571,
    5575,
    5579,
    5583,
    5587,
    5591,
    5595,
    5599,
    5603,
    5606,
    5610,
    5614,
    5618,
    5622,
    5626,
    5630,
    5634,
    5638,
    5641,
    5644,
    5647,
    5650,
    5653,
    5656,
    5659,
    5662,
    5666,
    5670,
    5674,
    5678,
    5682,
    5686,
    5690,
    5694,
    5698,
    5702,
    5706,
    5709,
    5712,
    5716,
    5720,
    5723,
    5726,
    5729,
    5732,
    5736,
    5740,
    5743,
    5746,
    5749,
    5752,
    5756,
    5760,
    5764,
    5768,
    5772,
    5776,
    5780,
    5784,
    5787,
    5790,
    5793,
    5796,
    5799,
    5802,
    5805,
    5808,
    5811,
    5814,
    5818,
    5822,
    5826,
    5830,
    5833,
    5836,
    5839,
    5842,
    5846,
    5850,
    5853,
    5856,
    5859,
    5862,
    5866,
    5869,
    5873,
    5877,
    5881,
    5885,
    5889,
    5892,
    5895,
    5898,
    5901,
    5905,
    5909,
    5913,
    5917,
    5921,
    5925,
    5929,
    5933,
    5937,
    5941,
    5945,
    5948,
    5952,
    5955,
    5959,
    5963,
    5967,
    5970,
    5973,
    5977,
    5981,
    5984,
    5987,
    5991,
    5995,
    5999,
    6003,
    6007,
    6010,
    6014,
    6018,
    6021,
    6024,
    6028,
    6032,
    6035,
    6038,
    6041,
    6044,
    6047,
    6051,
    6054,
    6058,
    6061,
    6065,
    6068,
    6072,
    6075,
    6078,
    6081,
    6084,
    6087,
    6090,
    6093,
    6096,
    6097,
    6098,
    6099,
    6101,
    6103,
    6105,
    6107,
    6109,
    6111,
    6113,
    6115,
    6117,
    6119,
    6121,
    6123,
    6125,
    6127,
    6129,
    6131,
    6133,
    6135,
    6137,
    6139,
    6140,
    6141,
    6142,
    6143,
    6144,
    6145,
    6146,
    6147,
    6148,
    6149,
    6150,
    6154,
    6157,
    6160,
    6164,
    6168,
    6172,
    6176,
    6180,
    6183,
    6187,
    6191,
    6195,
    6199,
    6202,
    6206,
    6209,
    6212,
    6215,
    6219,
    6223,
    6227,
    6231,
    6235,
    6238,
    6242,
    6246,
    6250,
    6254,
    6257,
    6260,
    6263,
    6266,
    6270,
    6274,
    6278,
    6282,
    6285,
    6288,
    6292,
    6296,
    6300,
    6304,
    6307,
    6310,
    6313,
    6316,
    6319,
    6323,
    6327,
    6331,
    6335,
    6339,
    6342,
    6346,
    6350,
    6354,
    6358,
    6361,
    6364,
    6367,
    6370,
    6372,
    6374,
    6377,
    6379,
    6381,
    6383,
    6385,
    6387,
    6389,
    6391,
    6394,
    6397,
    6399,
    6401,
    6403,
    6405,
    6407,
    6411,
    6414,
    6418,
    6421,
    6426,
    6430,
    6435,
    6439,
    6441,
    6444,
    6447,
    6451,
    6455,
    6459,
    6463,
    6467,
    6470,
    6474,
    6478,
    6482,
    6486,
    6489,
    6492,
    6495,
    6499,
    6503,
    6507,
    6511,
    6515,
    6518,
    6522,
    6526,
    6530,
    6534,
    6538,
    6541,
    6544,
    6547,
    6551,
    6555,
    6559,
    6563,
    6567,
    6570,
    6574,
    6578,
    6582,
    6586,
    6589,
    6592,
    6595,
    6598,
    6601,
    6605,
    6610,
    6615,
    6619,
    6624,
    6629,
    6633,
    6638,
    6643,
    6647,
    6652,
    6657,
    6661,
    6666,
    6671,
    6675,
    6680,
    6685,
    6689,
    6694,
    6699,
    6703,
    6708,
    6713,
    6717,
    6722,
    6727,
    6731,
    6736,
    6741,
    6745,
    6750,
    6755,
    6759,
    6764,
    6769,
    6773,
    6778,
    6783,
    6787,
    6792,
    6797,
    6801,
    6806,
    6811,
    6815,
    6820,
    6825,
    6828,
    6831,
    6834,
    6837,
    6840,
    6843,
    6846,
    6850,
    6855,
    6859,
    6863,
    6867,
    6869,
    6872,
    6876,
    6881,
    6885,
    6889,
    6893,
    6895,
    6898,
    6902,
    6907,
    6911,
    6915,
    6919,
    6921,
    6924,
    6928,
    6933,
    6937,
    6941,
    6945,
    6947,
    6950,
    6954,
    6959,
    6963,
    6967,
    6971,
    6973,
    6976,
    6980,
    6985,
    6989,
    6993,
    6997,
    6999,
    7002,
    7006,
    7011,
    7015,
    7019,
    7023,
    7025,
    7028,
    7032,
    7037,
    7041,
    7045,
    7049,
    7051,
    7054,
    7056,
    7058,
    7060,
    7062,
    7067,
    7072,
    7077,
    7082,
    7085,
    7088,
    7091,
    7094,
    7098,
    7102,
    7105,
    7108,
    7112,
    7114,
    7116,
    7118,
    7120,
    7122,
    7124,
    7126,
    7128,
    7130,
    7132,
    7134,
    7136,
    7140,
    7144,
    7146,
    7148,
    7150,
    7153,
    7155,
    7158,
    7160,
    7162,
    7166,
    7170,
    7174,
    7178,
    7182,
    7185,
    7188,
    7190,
    7194,
    7197,
    7201,
    7204,
    7207,
    7210,
    7213,
    7217,
    7221,
    7225,
    7229,
    7233,
    7236,
    7239,
    7244,
    7247,
    7251,
    7256,
    7259,
    7264,
    7267,
    7271,
    7276,
    7279,
    7284,
    7287,
    7291,
    7296,
    7299,
    7304,
    7307,
    7311,
    7316,
    7319,
    7324,
    7327,
    7331,
    7336,
    7339,
    7344,
    7347,
    7351,
    7356,
    7359,
    7364,
    7367,
    7371,
    7376,
    7379,
    7384,
    7387,
    7391,
    7396,
    7399,
    7404,
    7407,
    7411,
    7416,
    7419,
    7424,
    7427,
    7431,
    7436,
    7439,
    7444,
    7447,
    7451,
    7456,
    7459,
    7464,
    7467,
    7471,
    7476,
    7479,
    7484,
    7487,
    7491,
    7496,
    7499,
    7504,
    7507,
    7511,
    7516,
    7519,
    7524,
    7527,
    7531,
    7536,
    7539,
    7544,
    7547,
    7551,
    7556,
    7559,
    7561,
    7563,
    7566,
    7570,
    7574,
    7578,
    7582,
    7585,
    7589,
    7593,
    7597,
    7601,
    7604,
    7608,
    7612,
    7616,
    7620,
    7623,
    7627,
    7631,
    7634,
    7638,
    7642,
    7645,
    7649,
    7653,
    7656,
    7660,
    7664,
    7667,
    7671,
    7675,
    7678,
    7682,
    7686,
    7689,
    7693,
    7697,
    7700,
    7704,
    7708,
    7712,
    7716,
    7720,
    7724,
    7729,
    7732,
    7735,
    7738,
    7741,
    7744,
    7747,
    7750,
    7753,
    7755,
    7758,
    7761,
    7765,
    7769,
    7773,
    7777,
    7781,
    7784,
    7788,
    7792,
    7796,
    7800,
    7804,
    7806,
    7809,
    7812,
    7815,
    7818,
    7820,
    7822,
    7823,
    7824,
    7825,
    7826,
    7828,
    7830,
    7832,
    7834,
    7836,
    7838,
    7840,
    7843,
    7845,
    7847,
    7849,
    7851,
    7853,
    7855,
    7857,
    7859,
    7860,
    7861,
    7862,
    7863,
    7864,
    7865,
    7866,
    7867,
    7870,
    7873,
    7873,
    7873,
    7873,
    7873,
    7873,
    7873,
    7876,
    7878,
    7881,
    7883,
    7886,
    7886,
    7886,
    7886,
    7886,
    7886,
    7889,
    7892,
    7893,
    7895,
    7897,
    7899,
    7902,
    7904,
    7906,
    7908,
    7911,
    7913,
    7916,
    7918,
    7920,
    7922,
    7925,
    7928,
    7930,
    7933,
    7936,
    7938,
    7940,
    7943,
    7946,
    7949,
    7953,
    7958,
    7962,
    7967,
    7970,
    7974,
    7978,
    7981,
    7984,
    7988,
    7993,
    7998,
    8002,
    8006,
    8010,
    8015,
    8020,
    8024,
    8029,
    8034,
    8037,
    8040,
    8044,
    8049,
    8054,
    8058,
    8062,
    8066,
    8071,
    8076,
    8080,
    8085,
    8090,
    8094,
    8098,
    8102,
    8107,
    8112,
    8115,
    8119,
    8124,
    8129,
    8133,
    8137,
    8141,
    8146,
    8151,
    8155,
    8159,
    8163,
    8168,
    8173,
    8176,
    8180,
    8185,
    8190,
    8194,
    8198,
    8202,
    8207,
    8212,
    8215,
    8219,
    8224,
    8229,
    8233,
    8237,
    8241,
    8246,
    8251,
    8254,
    8257,
    8261,
    8266,
    8271,
    8275,
    8279,
    8283,
    8288,
    8293,
    8297,
    8302,
    8307,
    8311,
    8316,
    8321,
    8324,
    8327,
    8331,
    8336,
    8341,
    8345,
    8349,
    8353,
    8358,
    8363,
    8367,
    8372,
    8377,
    8381,
    8386,
    8391,
    8395,
    8399,
    8403,
    8408,
    8413,
    8417,
    8422,
    8427,
    8431,
    8435,
    8439,
    8444,
    8449,
    8453,
    8458,
    8463,
    8465,
    8468,
    8471,
    8473,
    8475,
    8478,
    8481,
    8484,
    8487,
    8489,
    8491,
    8493,
    8495,
    8498,
    8501,
    8505,
    8509,
    8512,
    8515,
    8520,
    8524,
    8528,
    8531,
    8534,
    8537,
    8540,
    8544,
    8548,
    8551,
    8554,
    8557,
    8561,
    8564,
    8568,
    8571,
    8574,
    8577,
    8580,
    8583,
    8586,
    8590,
    8593,
    8596,
    8599,
    8602,
    8606,
    8610,
    8613,
    8616,
    8620,
    8624,
    8627,
    8630,
    8634,
    8637,
    8641,
    8644,
    8647,
    8650,
    8654,
    8657,
    8661,
    8664,
    8667,
    8671,
    8674,
    8678,
    8681,
    8685,
    8689,
    8693,
    8697,
    8701,
    8704,
    8708,
    8712,
    8716,
    8720,
    8723,
    8727,
    8731,
    8735,
    8739,
    8743,
    8747,
    8750,
    8752,
    8755,
    8758,
    8761,
    8764,
    8767,
    8770,
    8773,
    8776,
    8779,
    8782,
    8785,
    8788,
    8792,
    8794,
    8796,
    8799,
    8802,
    8807,
    8809,
    8812,
    8814,
    8818,
    8821,
    8824,
    8828,
    8831,
    8835,
    8838,
    8842,
    8845,
    8849,
    8852,
    8856,
    8859,
    8863,
    8866,
    8870,
    8873,
    8877,
    8880,
    8884,
    8887,
    8891,
    8894,
    8898,
    8902,
    8906,
    8909,
    8913,
    8917,
    8921,
    8924,
    8928,
    8932,
    8936,
    8939,
    8943,
    8946,
    8950,
    8953,
    8957,
    8960,
    8964,
    8968,
    8972,
    8975,
    8979,
    8983,
    8987,
    8990,
    8994,
    8998,
    9002,
    9005,
    9009,
    9013,
    9017,
    9020,
    9024,
    9028,
    9032,
    9035,
    9039,
    9043,
    9047,
    9047,
    9048,
    9051,
    9055,
    9059,
    9062,
    9065,
    9068,
    9071,
    9074,
    9077,
    9081,
    9085,
    9090,
    9095,
    9099,
    9103,
    9107,
    9112,
    9117,
    9121,
    9124,
    9127,
    9130,
    9133,
    9136,
    9139,
    9142,
    9145,
    9148,
    9151,
    9154,
    9158,
    9161,
    9164,
    9168,
    9171,
    9174,
    9178,
    9182,
    9185,
    9189,
    9193,
    9197,
    9200,
    9204,
    9207,
    9211,
    9214,
    9218,
    9221,
    9224,
    9227,
    9231,
    9235,
    9238,
    9241,
    9244,
    9248,
    9251,
    9255,
    9258,
    9261,
    9265,
    9268,
    9272,
    9275,
    9279,
    9282,
    9286,
    9289,
    9292,
    9296,
    9299,
    9303,
    9306,
    9310,
    9313,
    9317,
    9320,
    9324,
    9328,
    9331,
    9335,
    9338,
    9342,
    9345,
    9349,
    9352,
    9356,
    9359,
    9363,
    9367,
    9370,
    9373,
    9376,
    9379,
    9383,
    9386,
    9388,
    9390,
    9392,
    9395,
    9398,
    9401,
    9404,
    9407,
    9410,
    9413,
    9416,
    9419,
    9421,
    9423,
    9425,
    9427,
    9430,
    9433,
    9437,
    9440,
    9444,
    9448,
    9453,
    9456,
    9460,
    9463,
    9467,
    9470,
    9474,
    9477,
    9481,
    9485,
    9490,
    9493,
    9497,
    9500,
    9504,
    9508,
    9513,
    9516,
    9520,
    9524,
    9529,
    9532,
    9536,
    9540,
    9545,
    9548,
    9552,
    9556,
    9561,
    9564,
    9568,
    9572,
    9577,
    9580,
    9583,
    9586,
    9589,
    9592,
    9595,
    9598,
    9601,
    9605,
    9610,
    9613,
    9616,
    9619,
    9622,
    9624,
    9628,
    9632,
    9637,
    9641,
    9645,
    9650,
    9654,
    9658,
    9663,
    9665,
    9668,
    9673,
    9675,
    9678,
    9680,
    9683,
    9687,
    9690,
    9693,
    9696,
    9699,
    9702,
    9706,
    9710,
    9713,
    9716,
    9721,
    9725,
    9728,
    9731,
    9735,
    9739,
    9742,
    9745,
    9748,
    9751,
    9754,
    9757,
    9760,
    9763,
    9766,
    9769,
    9772,
    9775,
    9778,
    9781,
    9785,
    9789,
    9792,
    9795,
    9799,
    9802,
    9806,
    9809,
    9813,
    9816,
    9820,
    9822,
    9824,
    9827,
    9830,
    9832,
    9834,
    9834,
    9835,
    9836,
    9838,
    9838,
    9838,
    9839,
    9840,
    9843,
    9845,
    9847,
    9849,
    9852,
    9855,
    9858,
    9862,
    9866,
    9868,
    9868,
    9868,
    9869,
    9870,
    9872,
    9873,
    9874,
    9875,
    9875,
    9875,
    9876,
    9878,
    9879,
    9881,
    9882,
    9884,
    9886,
    9888,
    9889,
    9890,
    9891,
    9892,
    9893,
    9896,
    9899,
    9902,
  };
  const int8_t OpcodeOperandTypes[] = {
    -1, 
    /**/
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    /**/
    -1, -1, OpTypes::i32imm, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, -1, OpTypes::i32imm, 
    /**/
    /**/
    -1, 
    -1, -1, 
    -1, -1, 
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i64imm, OpTypes::i8imm, OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i64imm, OpTypes::i32imm, -1, OpTypes::i32imm, OpTypes::i32imm, 
    -1, 
    OpTypes::i32imm, 
    -1, OpTypes::i32imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i32imm, 
    -1, 
    /**/
    /**/
    /**/
    /**/
    /**/
    -1, -1, 
    -1, -1, -1, 
    /**/
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::ptype0, OpTypes::ptype2, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    -1, 
    -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::ptype0, OpTypes::ptype0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    -1, 
    OpTypes::ptype0, -1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::i32imm, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, -1, 
    -1, OpTypes::type0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s27_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::s32_0Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    /**/
    /**/
    /**/
    OpTypes::PredRegs, OpTypes::b15_2Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::b15_2Imm, 
    OpTypes::u8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::CtrRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::m32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::s32_0Imm, 
    /**/
    OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::HvxQR, 
    OpTypes::HvxQR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, 
    OpTypes::HvxWR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxQR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::u11_3Imm, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::CtrRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::PredRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, 
    OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s29_3Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    /**/
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::CtrRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::CtrRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s8_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::u26_6Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::CtrRegs64, 
    OpTypes::CtrRegs64, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::s8_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u7_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, OpTypes::PredRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, OpTypes::i32imm, 
    OpTypes::DoubleRegs, OpTypes::i64imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::u10_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u10_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u10_0Imm, 
    OpTypes::IntRegs, OpTypes::u10_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::GuestRegs64, 
    OpTypes::IntRegs, OpTypes::GuestRegs, 
    OpTypes::GuestRegs64, OpTypes::DoubleRegs, 
    OpTypes::GuestRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::PredRegs, OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::a30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::IntRegs, OpTypes::b13_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::PredRegs, OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::b30_2Imm, OpTypes::u10_0Imm, 
    OpTypes::b30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_0Imm, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u6_0Imm, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::b30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::s29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::DoubleRegs, OpTypes::u29_3Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::u16_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u8_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u29_3Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::IntRegs, OpTypes::u30_2Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, 
    OpTypes::IntRegs, OpTypes::u31_1Imm, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::u8_0Imm, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::b30_2Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::DoubleRegs, 
    OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::s30_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s4_2Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::IntRegs, 
    OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u4_0Imm, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u3_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u3_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::PredRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::s6_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::s6_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u29_3Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u31_1Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u30_2Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_0Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_1Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::u6_2Imm, OpTypes::s32_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u2_0Imm, OpTypes::u32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s32_0Imm, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::u32_0Imm, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::u2_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u4_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::u6_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::u5_0Imm, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::s32_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u6_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u2_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::n1Const, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u32_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::n1Const, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::a30_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_0Imm, 
    OpTypes::GeneralDoubleLow8Regs, OpTypes::u5_3Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u5_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, 
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, OpTypes::GeneralSubRegs, 
    OpTypes::u5_3Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_0Imm, 
    OpTypes::s6_3Imm, OpTypes::GeneralDoubleLow8Regs, 
    OpTypes::GeneralSubRegs, OpTypes::u3_1Imm, OpTypes::GeneralSubRegs, 
    OpTypes::u5_2Imm, OpTypes::GeneralSubRegs, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::GeneralSubRegs, OpTypes::u4_2Imm, 
    OpTypes::DoubleRegs, OpTypes::s32_0Imm, OpTypes::s8_0Imm, 
    OpTypes::DoubleRegs, OpTypes::u64_0Imm, 
    OpTypes::IntRegs, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxQR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::u2_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::HvxVR, OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s4_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::s3_0Imm, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    /**/
    OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::u3_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::PredRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::PredRegs, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::DoubleRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVQR, OpTypes::IntRegsLow8, OpTypes::HvxVQR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, OpTypes::u1_0Imm, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxQR, OpTypes::IntRegs, OpTypes::ModRegs, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegs, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::IntRegsLow8, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, 
    OpTypes::HvxWR, OpTypes::HvxQR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::IntRegs, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    /**/
    OpTypes::u1_0Imm, 
    OpTypes::HvxQR, 
    OpTypes::HvxQR, OpTypes::u1_0Imm, 
    /**/
    /**/
    OpTypes::HvxQR, 
    OpTypes::HvxQR, 
    OpTypes::HvxVR, OpTypes::HvxVR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::HvxWR, OpTypes::HvxVR, 
    OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s4_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::s3_0Imm, 
    OpTypes::IntRegs, OpTypes::PredRegs, OpTypes::IntRegs, OpTypes::ModRegs, 
    OpTypes::HvxVR, OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::u11_3Imm, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    /**/
    /**/
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::DoubleRegs, OpTypes::DoubleRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::IntRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
    OpTypes::DoubleRegs, OpTypes::IntRegs, OpTypes::IntRegs, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Hexagon {

enum InputType {
	InputType_reg
};

enum InstrType {
	InstrType_Pseudo,
	InstrType_Real
};

enum NValueST {
	NValueST_true,
	NValueST_false
};

enum PNewValue {
	PNewValue_new,
	PNewValue_
};

enum PredSense {
	PredSense_false,
	PredSense_true
};

enum addrMode {
	addrMode_BaseImmOffset,
	addrMode_Absolute,
	addrMode_PostInc,
	addrMode_BaseRegOffset,
	addrMode_BaseLongOffset
};

enum isBrTaken {
	isBrTaken_false,
	isBrTaken_true
};

// changeAddrMode_abs_io
LLVM_READONLY
int changeAddrMode_abs_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_abs_ioTable[][2] = {
  { Hexagon::L4_ploadrbf_abs, Hexagon::L2_ploadrbf_io },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L2_ploadrbt_io },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L2_ploadrdf_io },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L2_ploadrdt_io },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L2_ploadrhf_io },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L4_ploadrht_abs, Hexagon::L2_ploadrht_io },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L4_ploadrif_abs, Hexagon::L2_ploadrif_io },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L4_ploadrit_abs, Hexagon::L2_ploadrit_io },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L2_ploadritnew_io },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L2_ploadrubf_io },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L2_ploadrubt_io },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L2_ploadruhf_io },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L4_ploadruht_abs, Hexagon::L2_ploadruht_io },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::PS_loadrbabs, Hexagon::L2_loadrb_io },
  { Hexagon::PS_loadrdabs, Hexagon::L2_loadrd_io },
  { Hexagon::PS_loadrhabs, Hexagon::L2_loadrh_io },
  { Hexagon::PS_loadriabs, Hexagon::L2_loadri_io },
  { Hexagon::PS_loadrubabs, Hexagon::L2_loadrub_io },
  { Hexagon::PS_loadruhabs, Hexagon::L2_loadruh_io },
  { Hexagon::PS_storerbabs, Hexagon::S2_storerb_io },
  { Hexagon::PS_storerbnewabs, Hexagon::S2_storerbnew_io },
  { Hexagon::PS_storerdabs, Hexagon::S2_storerd_io },
  { Hexagon::PS_storerfabs, Hexagon::S2_storerf_io },
  { Hexagon::PS_storerhabs, Hexagon::S2_storerh_io },
  { Hexagon::PS_storerhnewabs, Hexagon::S2_storerhnew_io },
  { Hexagon::PS_storeriabs, Hexagon::S2_storeri_io },
  { Hexagon::PS_storerinewabs, Hexagon::S2_storerinew_io },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerff_abs, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerft_abs, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerht_abs, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerif_abs, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerit_abs, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstoreritnew_io },
}; // End of changeAddrMode_abs_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_abs_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_abs_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_abs_ioTable[mid][1];
}

// changeAddrMode_io_abs
LLVM_READONLY
int changeAddrMode_io_abs(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_absTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::PS_loadrbabs },
  { Hexagon::L2_loadrd_io, Hexagon::PS_loadrdabs },
  { Hexagon::L2_loadrh_io, Hexagon::PS_loadrhabs },
  { Hexagon::L2_loadri_io, Hexagon::PS_loadriabs },
  { Hexagon::L2_loadrub_io, Hexagon::PS_loadrubabs },
  { Hexagon::L2_loadruh_io, Hexagon::PS_loadruhabs },
  { Hexagon::L2_ploadrbf_io, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L2_ploadrbt_io, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L2_ploadrdf_io, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L2_ploadrdt_io, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L2_ploadrhf_io, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L2_ploadrht_io, Hexagon::L4_ploadrht_abs },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L2_ploadrif_io, Hexagon::L4_ploadrif_abs },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L2_ploadrit_io, Hexagon::L4_ploadrit_abs },
  { Hexagon::L2_ploadritnew_io, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L2_ploadrubf_io, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L2_ploadrubt_io, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L2_ploadruhf_io, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L2_ploadruht_io, Hexagon::L4_ploadruht_abs },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerff_abs },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerft_abs },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerht_abs },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerif_abs },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstorerit_abs },
  { Hexagon::S2_storerb_io, Hexagon::PS_storerbabs },
  { Hexagon::S2_storerbnew_io, Hexagon::PS_storerbnewabs },
  { Hexagon::S2_storerd_io, Hexagon::PS_storerdabs },
  { Hexagon::S2_storerf_io, Hexagon::PS_storerfabs },
  { Hexagon::S2_storerh_io, Hexagon::PS_storerhabs },
  { Hexagon::S2_storerhnew_io, Hexagon::PS_storerhnewabs },
  { Hexagon::S2_storeri_io, Hexagon::PS_storeriabs },
  { Hexagon::S2_storerinew_io, Hexagon::PS_storerinewabs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstoreritnew_abs },
}; // End of changeAddrMode_io_absTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_absTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_absTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_absTable[mid][1];
}

// changeAddrMode_io_pi
LLVM_READONLY
int changeAddrMode_io_pi(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_piTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::L2_loadrb_pi },
  { Hexagon::L2_loadrd_io, Hexagon::L2_loadrd_pi },
  { Hexagon::L2_loadrh_io, Hexagon::L2_loadrh_pi },
  { Hexagon::L2_loadri_io, Hexagon::L2_loadri_pi },
  { Hexagon::L2_loadrub_io, Hexagon::L2_loadrub_pi },
  { Hexagon::L2_loadruh_io, Hexagon::L2_loadruh_pi },
  { Hexagon::S2_storerb_io, Hexagon::S2_storerb_pi },
  { Hexagon::S2_storerd_io, Hexagon::S2_storerd_pi },
  { Hexagon::S2_storerf_io, Hexagon::S2_storerf_pi },
  { Hexagon::S2_storerh_io, Hexagon::S2_storerh_pi },
  { Hexagon::S2_storeri_io, Hexagon::S2_storeri_pi },
}; // End of changeAddrMode_io_piTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_piTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_piTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_piTable[mid][1];
}

// changeAddrMode_io_rr
LLVM_READONLY
int changeAddrMode_io_rr(uint16_t Opcode) {
static const uint16_t changeAddrMode_io_rrTable[][2] = {
  { Hexagon::L2_loadrb_io, Hexagon::L4_loadrb_rr },
  { Hexagon::L2_loadrd_io, Hexagon::L4_loadrd_rr },
  { Hexagon::L2_loadrh_io, Hexagon::L4_loadrh_rr },
  { Hexagon::L2_loadri_io, Hexagon::L4_loadri_rr },
  { Hexagon::L2_loadrub_io, Hexagon::L4_loadrub_rr },
  { Hexagon::L2_loadruh_io, Hexagon::L4_loadruh_rr },
  { Hexagon::L2_ploadrbf_io, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L2_ploadrbt_io, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L2_ploadrdf_io, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L2_ploadrdt_io, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L2_ploadrhf_io, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L2_ploadrht_io, Hexagon::L4_ploadrht_rr },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L2_ploadrif_io, Hexagon::L4_ploadrif_rr },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L2_ploadrit_io, Hexagon::L4_ploadrit_rr },
  { Hexagon::L2_ploadritnew_io, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L2_ploadrubf_io, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L2_ploadrubt_io, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L2_ploadruhf_io, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L2_ploadruht_io, Hexagon::L4_ploadruht_rr },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerff_rr },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerft_rr },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerht_rr },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerif_rr },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstorerit_rr },
  { Hexagon::S2_storerb_io, Hexagon::S4_storerb_rr },
  { Hexagon::S2_storerbnew_io, Hexagon::S4_storerbnew_rr },
  { Hexagon::S2_storerd_io, Hexagon::S4_storerd_rr },
  { Hexagon::S2_storerf_io, Hexagon::S4_storerf_rr },
  { Hexagon::S2_storerh_io, Hexagon::S4_storerh_rr },
  { Hexagon::S2_storerhnew_io, Hexagon::S4_storerhnew_rr },
  { Hexagon::S2_storeri_io, Hexagon::S4_storeri_rr },
  { Hexagon::S2_storerinew_io, Hexagon::S4_storerinew_rr },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstoreritnew_rr },
}; // End of changeAddrMode_io_rrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_io_rrTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_io_rrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_io_rrTable[mid][1];
}

// changeAddrMode_pi_io
LLVM_READONLY
int changeAddrMode_pi_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_pi_ioTable[][2] = {
  { Hexagon::L2_loadrb_pi, Hexagon::L2_loadrb_io },
  { Hexagon::L2_loadrd_pi, Hexagon::L2_loadrd_io },
  { Hexagon::L2_loadrh_pi, Hexagon::L2_loadrh_io },
  { Hexagon::L2_loadri_pi, Hexagon::L2_loadri_io },
  { Hexagon::L2_loadrub_pi, Hexagon::L2_loadrub_io },
  { Hexagon::L2_loadruh_pi, Hexagon::L2_loadruh_io },
  { Hexagon::S2_storerb_pi, Hexagon::S2_storerb_io },
  { Hexagon::S2_storerd_pi, Hexagon::S2_storerd_io },
  { Hexagon::S2_storerf_pi, Hexagon::S2_storerf_io },
  { Hexagon::S2_storerh_pi, Hexagon::S2_storerh_io },
  { Hexagon::S2_storeri_pi, Hexagon::S2_storeri_io },
}; // End of changeAddrMode_pi_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_pi_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_pi_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_pi_ioTable[mid][1];
}

// changeAddrMode_rr_io
LLVM_READONLY
int changeAddrMode_rr_io(uint16_t Opcode) {
static const uint16_t changeAddrMode_rr_ioTable[][2] = {
  { Hexagon::L4_loadrb_rr, Hexagon::L2_loadrb_io },
  { Hexagon::L4_loadrd_rr, Hexagon::L2_loadrd_io },
  { Hexagon::L4_loadrh_rr, Hexagon::L2_loadrh_io },
  { Hexagon::L4_loadri_rr, Hexagon::L2_loadri_io },
  { Hexagon::L4_loadrub_rr, Hexagon::L2_loadrub_io },
  { Hexagon::L4_loadruh_rr, Hexagon::L2_loadruh_io },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L2_ploadrbf_io },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L2_ploadrbt_io },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L2_ploadrdf_io },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L2_ploadrdt_io },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L2_ploadrhf_io },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L4_ploadrht_rr, Hexagon::L2_ploadrht_io },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L4_ploadrif_rr, Hexagon::L2_ploadrif_io },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L4_ploadrit_rr, Hexagon::L2_ploadrit_io },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L2_ploadritnew_io },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L2_ploadrubf_io },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L2_ploadrubt_io },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L2_ploadruhf_io },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L4_ploadruht_rr, Hexagon::L2_ploadruht_io },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerff_rr, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerft_rr, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerht_rr, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerif_rr, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerit_rr, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_storerb_rr, Hexagon::S2_storerb_io },
  { Hexagon::S4_storerbnew_rr, Hexagon::S2_storerbnew_io },
  { Hexagon::S4_storerd_rr, Hexagon::S2_storerd_io },
  { Hexagon::S4_storerf_rr, Hexagon::S2_storerf_io },
  { Hexagon::S4_storerh_rr, Hexagon::S2_storerh_io },
  { Hexagon::S4_storerhnew_rr, Hexagon::S2_storerhnew_io },
  { Hexagon::S4_storeri_rr, Hexagon::S2_storeri_io },
  { Hexagon::S4_storerinew_rr, Hexagon::S2_storerinew_io },
}; // End of changeAddrMode_rr_ioTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 70;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_rr_ioTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_rr_ioTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_rr_ioTable[mid][1];
}

// changeAddrMode_rr_ur
LLVM_READONLY
int changeAddrMode_rr_ur(uint16_t Opcode) {
static const uint16_t changeAddrMode_rr_urTable[][2] = {
  { Hexagon::L4_loadrb_rr, Hexagon::L4_loadrb_ur },
  { Hexagon::L4_loadrd_rr, Hexagon::L4_loadrd_ur },
  { Hexagon::L4_loadrh_rr, Hexagon::L4_loadrh_ur },
  { Hexagon::L4_loadri_rr, Hexagon::L4_loadri_ur },
  { Hexagon::L4_loadrub_rr, Hexagon::L4_loadrub_ur },
  { Hexagon::L4_loadruh_rr, Hexagon::L4_loadruh_ur },
  { Hexagon::S4_storerb_rr, Hexagon::S4_storerb_ur },
  { Hexagon::S4_storerd_rr, Hexagon::S4_storerd_ur },
  { Hexagon::S4_storerf_rr, Hexagon::S4_storerf_ur },
  { Hexagon::S4_storerh_rr, Hexagon::S4_storerh_ur },
  { Hexagon::S4_storeri_rr, Hexagon::S4_storeri_ur },
}; // End of changeAddrMode_rr_urTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_rr_urTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_rr_urTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_rr_urTable[mid][1];
}

// changeAddrMode_ur_rr
LLVM_READONLY
int changeAddrMode_ur_rr(uint16_t Opcode) {
static const uint16_t changeAddrMode_ur_rrTable[][2] = {
  { Hexagon::L4_loadrb_ur, Hexagon::L4_loadrb_rr },
  { Hexagon::L4_loadrd_ur, Hexagon::L4_loadrd_rr },
  { Hexagon::L4_loadrh_ur, Hexagon::L4_loadrh_rr },
  { Hexagon::L4_loadri_ur, Hexagon::L4_loadri_rr },
  { Hexagon::L4_loadrub_ur, Hexagon::L4_loadrub_rr },
  { Hexagon::L4_loadruh_ur, Hexagon::L4_loadruh_rr },
  { Hexagon::S4_storerb_ur, Hexagon::S4_storerb_rr },
  { Hexagon::S4_storerd_ur, Hexagon::S4_storerd_rr },
  { Hexagon::S4_storerf_ur, Hexagon::S4_storerf_rr },
  { Hexagon::S4_storerh_ur, Hexagon::S4_storerh_rr },
  { Hexagon::S4_storeri_ur, Hexagon::S4_storeri_rr },
}; // End of changeAddrMode_ur_rrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 11;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == changeAddrMode_ur_rrTable[mid][0]) {
      break;
    }
    if (Opcode < changeAddrMode_ur_rrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return changeAddrMode_ur_rrTable[mid][1];
}

// getFalsePredOpcode
LLVM_READONLY
int getFalsePredOpcode(uint16_t Opcode) {
static const uint16_t getFalsePredOpcodeTable[][2] = {
  { Hexagon::A2_tfrpt, Hexagon::A2_tfrpf },
  { Hexagon::A2_tfrptnew, Hexagon::A2_tfrpfnew },
  { Hexagon::A2_tfrt, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrtnew, Hexagon::A2_tfrfnew },
  { Hexagon::A2_paddit, Hexagon::A2_paddif },
  { Hexagon::A2_padditnew, Hexagon::A2_paddifnew },
  { Hexagon::A2_paddt, Hexagon::A2_paddf },
  { Hexagon::A2_paddtnew, Hexagon::A2_paddfnew },
  { Hexagon::A2_pandt, Hexagon::A2_pandf },
  { Hexagon::A2_pandtnew, Hexagon::A2_pandfnew },
  { Hexagon::A2_port, Hexagon::A2_porf },
  { Hexagon::A2_portnew, Hexagon::A2_porfnew },
  { Hexagon::A2_psubt, Hexagon::A2_psubf },
  { Hexagon::A2_psubtnew, Hexagon::A2_psubfnew },
  { Hexagon::A2_pxort, Hexagon::A2_pxorf },
  { Hexagon::A2_pxortnew, Hexagon::A2_pxorfnew },
  { Hexagon::A4_paslht, Hexagon::A4_paslhf },
  { Hexagon::A4_paslhtnew, Hexagon::A4_paslhfnew },
  { Hexagon::A4_pasrht, Hexagon::A4_pasrhf },
  { Hexagon::A4_pasrhtnew, Hexagon::A4_pasrhfnew },
  { Hexagon::A4_psxtbt, Hexagon::A4_psxtbf },
  { Hexagon::A4_psxtbtnew, Hexagon::A4_psxtbfnew },
  { Hexagon::A4_psxtht, Hexagon::A4_psxthf },
  { Hexagon::A4_psxthtnew, Hexagon::A4_psxthfnew },
  { Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbf },
  { Hexagon::A4_pzxtbtnew, Hexagon::A4_pzxtbfnew },
  { Hexagon::A4_pzxtht, Hexagon::A4_pzxthf },
  { Hexagon::A4_pzxthtnew, Hexagon::A4_pzxthfnew },
  { Hexagon::C2_ccombinewnewt, Hexagon::C2_ccombinewnewf },
  { Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewf },
  { Hexagon::C2_cmoveit, Hexagon::C2_cmoveif },
  { Hexagon::C2_cmovenewit, Hexagon::C2_cmovenewif },
  { Hexagon::J2_callt, Hexagon::J2_callf },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumpfpt },
  { Hexagon::J4_cmpeq_t_jumpnv_nt, Hexagon::J4_cmpeq_f_jumpnv_nt },
  { Hexagon::J4_cmpeq_t_jumpnv_t, Hexagon::J4_cmpeq_f_jumpnv_t },
  { Hexagon::J4_cmpeq_tp0_jump_nt, Hexagon::J4_cmpeq_fp0_jump_nt },
  { Hexagon::J4_cmpeq_tp0_jump_t, Hexagon::J4_cmpeq_fp0_jump_t },
  { Hexagon::J4_cmpeq_tp1_jump_nt, Hexagon::J4_cmpeq_fp1_jump_nt },
  { Hexagon::J4_cmpeq_tp1_jump_t, Hexagon::J4_cmpeq_fp1_jump_t },
  { Hexagon::J4_cmpeqi_t_jumpnv_nt, Hexagon::J4_cmpeqi_f_jumpnv_nt },
  { Hexagon::J4_cmpeqi_t_jumpnv_t, Hexagon::J4_cmpeqi_f_jumpnv_t },
  { Hexagon::J4_cmpeqi_tp0_jump_nt, Hexagon::J4_cmpeqi_fp0_jump_nt },
  { Hexagon::J4_cmpeqi_tp0_jump_t, Hexagon::J4_cmpeqi_fp0_jump_t },
  { Hexagon::J4_cmpeqi_tp1_jump_nt, Hexagon::J4_cmpeqi_fp1_jump_nt },
  { Hexagon::J4_cmpeqi_tp1_jump_t, Hexagon::J4_cmpeqi_fp1_jump_t },
  { Hexagon::J4_cmpeqn1_t_jumpnv_nt, Hexagon::J4_cmpeqn1_f_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_t_jumpnv_t, Hexagon::J4_cmpeqn1_f_jumpnv_t },
  { Hexagon::J4_cmpeqn1_tp0_jump_nt, Hexagon::J4_cmpeqn1_fp0_jump_nt },
  { Hexagon::J4_cmpeqn1_tp0_jump_t, Hexagon::J4_cmpeqn1_fp0_jump_t },
  { Hexagon::J4_cmpeqn1_tp1_jump_nt, Hexagon::J4_cmpeqn1_fp1_jump_nt },
  { Hexagon::J4_cmpeqn1_tp1_jump_t, Hexagon::J4_cmpeqn1_fp1_jump_t },
  { Hexagon::J4_cmpgt_t_jumpnv_nt, Hexagon::J4_cmpgt_f_jumpnv_nt },
  { Hexagon::J4_cmpgt_t_jumpnv_t, Hexagon::J4_cmpgt_f_jumpnv_t },
  { Hexagon::J4_cmpgt_tp0_jump_nt, Hexagon::J4_cmpgt_fp0_jump_nt },
  { Hexagon::J4_cmpgt_tp0_jump_t, Hexagon::J4_cmpgt_fp0_jump_t },
  { Hexagon::J4_cmpgt_tp1_jump_nt, Hexagon::J4_cmpgt_fp1_jump_nt },
  { Hexagon::J4_cmpgt_tp1_jump_t, Hexagon::J4_cmpgt_fp1_jump_t },
  { Hexagon::J4_cmpgti_t_jumpnv_nt, Hexagon::J4_cmpgti_f_jumpnv_nt },
  { Hexagon::J4_cmpgti_t_jumpnv_t, Hexagon::J4_cmpgti_f_jumpnv_t },
  { Hexagon::J4_cmpgti_tp0_jump_nt, Hexagon::J4_cmpgti_fp0_jump_nt },
  { Hexagon::J4_cmpgti_tp0_jump_t, Hexagon::J4_cmpgti_fp0_jump_t },
  { Hexagon::J4_cmpgti_tp1_jump_nt, Hexagon::J4_cmpgti_fp1_jump_nt },
  { Hexagon::J4_cmpgti_tp1_jump_t, Hexagon::J4_cmpgti_fp1_jump_t },
  { Hexagon::J4_cmpgtn1_t_jumpnv_nt, Hexagon::J4_cmpgtn1_f_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_t_jumpnv_t, Hexagon::J4_cmpgtn1_f_jumpnv_t },
  { Hexagon::J4_cmpgtn1_tp0_jump_nt, Hexagon::J4_cmpgtn1_fp0_jump_nt },
  { Hexagon::J4_cmpgtn1_tp0_jump_t, Hexagon::J4_cmpgtn1_fp0_jump_t },
  { Hexagon::J4_cmpgtn1_tp1_jump_nt, Hexagon::J4_cmpgtn1_fp1_jump_nt },
  { Hexagon::J4_cmpgtn1_tp1_jump_t, Hexagon::J4_cmpgtn1_fp1_jump_t },
  { Hexagon::J4_cmpgtu_t_jumpnv_nt, Hexagon::J4_cmpgtu_f_jumpnv_nt },
  { Hexagon::J4_cmpgtu_t_jumpnv_t, Hexagon::J4_cmpgtu_f_jumpnv_t },
  { Hexagon::J4_cmpgtu_tp0_jump_nt, Hexagon::J4_cmpgtu_fp0_jump_nt },
  { Hexagon::J4_cmpgtu_tp0_jump_t, Hexagon::J4_cmpgtu_fp0_jump_t },
  { Hexagon::J4_cmpgtu_tp1_jump_nt, Hexagon::J4_cmpgtu_fp1_jump_nt },
  { Hexagon::J4_cmpgtu_tp1_jump_t, Hexagon::J4_cmpgtu_fp1_jump_t },
  { Hexagon::J4_cmpgtui_t_jumpnv_nt, Hexagon::J4_cmpgtui_f_jumpnv_nt },
  { Hexagon::J4_cmpgtui_t_jumpnv_t, Hexagon::J4_cmpgtui_f_jumpnv_t },
  { Hexagon::J4_cmpgtui_tp0_jump_nt, Hexagon::J4_cmpgtui_fp0_jump_nt },
  { Hexagon::J4_cmpgtui_tp0_jump_t, Hexagon::J4_cmpgtui_fp0_jump_t },
  { Hexagon::J4_cmpgtui_tp1_jump_nt, Hexagon::J4_cmpgtui_fp1_jump_nt },
  { Hexagon::J4_cmpgtui_tp1_jump_t, Hexagon::J4_cmpgtui_fp1_jump_t },
  { Hexagon::J4_cmplt_t_jumpnv_nt, Hexagon::J4_cmplt_f_jumpnv_nt },
  { Hexagon::J4_cmplt_t_jumpnv_t, Hexagon::J4_cmplt_f_jumpnv_t },
  { Hexagon::J4_cmpltu_t_jumpnv_nt, Hexagon::J4_cmpltu_f_jumpnv_nt },
  { Hexagon::J4_cmpltu_t_jumpnv_t, Hexagon::J4_cmpltu_f_jumpnv_t },
  { Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L2_ploadrbtnew_pi, Hexagon::L2_ploadrbfnew_pi },
  { Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L2_ploadrdtnew_pi, Hexagon::L2_ploadrdfnew_pi },
  { Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L2_ploadrhtnew_pi, Hexagon::L2_ploadrhfnew_pi },
  { Hexagon::L2_ploadrit_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_ploadritnew_io, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L2_ploadritnew_pi, Hexagon::L2_ploadrifnew_pi },
  { Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L2_ploadrubtnew_pi, Hexagon::L2_ploadrubfnew_pi },
  { Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L2_ploadruhtnew_pi, Hexagon::L2_ploadruhfnew_pi },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L4_return_t, Hexagon::L4_return_f },
  { Hexagon::L4_return_tnew_pnt, Hexagon::L4_return_fnew_pnt },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_fnew_pt },
  { Hexagon::PS_jmprett, Hexagon::PS_jmpretf },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprettnewpt, Hexagon::PS_jmpretfnewpt },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerdt_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_pstorerdtnew_pi, Hexagon::S2_pstorerdfnew_pi },
  { Hexagon::S2_pstorerft_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_pstorerftnew_pi, Hexagon::S2_pstorerffnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirbtnew_io, Hexagon::S4_storeirbfnew_io },
  { Hexagon::S4_storeirht_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeirhtnew_io, Hexagon::S4_storeirhfnew_io },
  { Hexagon::S4_storeirit_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storeiritnew_io, Hexagon::S4_storeirifnew_io },
  { Hexagon::V6_vL32b_cur_pred_ai, Hexagon::V6_vL32b_cur_npred_ai },
  { Hexagon::V6_vL32b_cur_pred_pi, Hexagon::V6_vL32b_cur_npred_pi },
  { Hexagon::V6_vL32b_cur_pred_ppu, Hexagon::V6_vL32b_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_cur_pred_ai, Hexagon::V6_vL32b_nt_cur_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_pred_pi, Hexagon::V6_vL32b_nt_cur_npred_pi },
  { Hexagon::V6_vL32b_nt_cur_pred_ppu, Hexagon::V6_vL32b_nt_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_pred_ai, Hexagon::V6_vL32b_nt_npred_ai },
  { Hexagon::V6_vL32b_nt_pred_pi, Hexagon::V6_vL32b_nt_npred_pi },
  { Hexagon::V6_vL32b_nt_pred_ppu, Hexagon::V6_vL32b_nt_npred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_pred_ai, Hexagon::V6_vL32b_nt_tmp_npred_ai },
  { Hexagon::V6_vL32b_nt_tmp_pred_pi, Hexagon::V6_vL32b_nt_tmp_npred_pi },
  { Hexagon::V6_vL32b_nt_tmp_pred_ppu, Hexagon::V6_vL32b_nt_tmp_npred_ppu },
  { Hexagon::V6_vL32b_pred_ai, Hexagon::V6_vL32b_npred_ai },
  { Hexagon::V6_vL32b_pred_pi, Hexagon::V6_vL32b_npred_pi },
  { Hexagon::V6_vL32b_pred_ppu, Hexagon::V6_vL32b_npred_ppu },
  { Hexagon::V6_vL32b_tmp_pred_ai, Hexagon::V6_vL32b_tmp_npred_ai },
  { Hexagon::V6_vL32b_tmp_pred_pi, Hexagon::V6_vL32b_tmp_npred_pi },
  { Hexagon::V6_vL32b_tmp_pred_ppu, Hexagon::V6_vL32b_tmp_npred_ppu },
  { Hexagon::V6_vS32Ub_pred_ai, Hexagon::V6_vS32Ub_npred_ai },
  { Hexagon::V6_vS32Ub_pred_pi, Hexagon::V6_vS32Ub_npred_pi },
  { Hexagon::V6_vS32Ub_pred_ppu, Hexagon::V6_vS32Ub_npred_ppu },
  { Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_npred_ppu },
}; // End of getFalsePredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 250;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getFalsePredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getFalsePredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getFalsePredOpcodeTable[mid][1];
}

// getNewValueOpcode
LLVM_READONLY
int getNewValueOpcode(uint16_t Opcode) {
static const uint16_t getNewValueOpcodeTable[][2] = {
  { Hexagon::PS_storerbabs, Hexagon::PS_storerbnewabs },
  { Hexagon::PS_storerhabs, Hexagon::PS_storerhnewabs },
  { Hexagon::PS_storeriabs, Hexagon::PS_storerinewabs },
  { Hexagon::S2_pstorerbf_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S2_storerb_io, Hexagon::S2_storerbnew_io },
  { Hexagon::S2_storerb_pbr, Hexagon::S2_storerbnew_pbr },
  { Hexagon::S2_storerb_pci, Hexagon::S2_storerbnew_pci },
  { Hexagon::S2_storerb_pcr, Hexagon::S2_storerbnew_pcr },
  { Hexagon::S2_storerb_pi, Hexagon::S2_storerbnew_pi },
  { Hexagon::S2_storerb_pr, Hexagon::S2_storerbnew_pr },
  { Hexagon::S2_storerbgp, Hexagon::S2_storerbnewgp },
  { Hexagon::S2_storerh_io, Hexagon::S2_storerhnew_io },
  { Hexagon::S2_storerh_pbr, Hexagon::S2_storerhnew_pbr },
  { Hexagon::S2_storerh_pci, Hexagon::S2_storerhnew_pci },
  { Hexagon::S2_storerh_pcr, Hexagon::S2_storerhnew_pcr },
  { Hexagon::S2_storerh_pi, Hexagon::S2_storerhnew_pi },
  { Hexagon::S2_storerh_pr, Hexagon::S2_storerhnew_pr },
  { Hexagon::S2_storerhgp, Hexagon::S2_storerhnewgp },
  { Hexagon::S2_storeri_io, Hexagon::S2_storerinew_io },
  { Hexagon::S2_storeri_pbr, Hexagon::S2_storerinew_pbr },
  { Hexagon::S2_storeri_pci, Hexagon::S2_storerinew_pci },
  { Hexagon::S2_storeri_pcr, Hexagon::S2_storerinew_pcr },
  { Hexagon::S2_storeri_pi, Hexagon::S2_storerinew_pi },
  { Hexagon::S2_storeri_pr, Hexagon::S2_storerinew_pr },
  { Hexagon::S2_storerigp, Hexagon::S2_storerinewgp },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_storerb_ap, Hexagon::S4_storerbnew_ap },
  { Hexagon::S4_storerb_rr, Hexagon::S4_storerbnew_rr },
  { Hexagon::S4_storerb_ur, Hexagon::S4_storerbnew_ur },
  { Hexagon::S4_storerh_ap, Hexagon::S4_storerhnew_ap },
  { Hexagon::S4_storerh_rr, Hexagon::S4_storerhnew_rr },
  { Hexagon::S4_storerh_ur, Hexagon::S4_storerhnew_ur },
  { Hexagon::S4_storeri_ap, Hexagon::S4_storerinew_ap },
  { Hexagon::S4_storeri_rr, Hexagon::S4_storerinew_rr },
  { Hexagon::S4_storeri_ur, Hexagon::S4_storerinew_ur },
  { Hexagon::V6_vS32b_ai, Hexagon::V6_vS32b_new_ai },
  { Hexagon::V6_vS32b_npred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_npred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_npred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_ai, Hexagon::V6_vS32b_nt_new_ai },
  { Hexagon::V6_vS32b_nt_npred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_npred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_npred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pi, Hexagon::V6_vS32b_nt_new_pi },
  { Hexagon::V6_vS32b_nt_ppu, Hexagon::V6_vS32b_nt_new_ppu },
  { Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_new_pred_ai },
  { Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_new_pred_pi },
  { Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu },
  { Hexagon::V6_vS32b_pi, Hexagon::V6_vS32b_new_pi },
  { Hexagon::V6_vS32b_ppu, Hexagon::V6_vS32b_new_ppu },
  { Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_new_pred_ai },
  { Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_new_pred_pi },
  { Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_new_pred_ppu },
}; // End of getNewValueOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 99;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getNewValueOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNewValueOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNewValueOpcodeTable[mid][1];
}

// getNonNVStore
LLVM_READONLY
int getNonNVStore(uint16_t Opcode) {
static const uint16_t getNonNVStoreTable[][2] = {
  { Hexagon::PS_storerbnewabs, Hexagon::PS_storerbabs },
  { Hexagon::PS_storerhnewabs, Hexagon::PS_storerhabs },
  { Hexagon::PS_storerinewabs, Hexagon::PS_storeriabs },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S2_storerbnew_io, Hexagon::S2_storerb_io },
  { Hexagon::S2_storerbnew_pbr, Hexagon::S2_storerb_pbr },
  { Hexagon::S2_storerbnew_pci, Hexagon::S2_storerb_pci },
  { Hexagon::S2_storerbnew_pcr, Hexagon::S2_storerb_pcr },
  { Hexagon::S2_storerbnew_pi, Hexagon::S2_storerb_pi },
  { Hexagon::S2_storerbnew_pr, Hexagon::S2_storerb_pr },
  { Hexagon::S2_storerbnewgp, Hexagon::S2_storerbgp },
  { Hexagon::S2_storerhnew_io, Hexagon::S2_storerh_io },
  { Hexagon::S2_storerhnew_pbr, Hexagon::S2_storerh_pbr },
  { Hexagon::S2_storerhnew_pci, Hexagon::S2_storerh_pci },
  { Hexagon::S2_storerhnew_pcr, Hexagon::S2_storerh_pcr },
  { Hexagon::S2_storerhnew_pi, Hexagon::S2_storerh_pi },
  { Hexagon::S2_storerhnew_pr, Hexagon::S2_storerh_pr },
  { Hexagon::S2_storerhnewgp, Hexagon::S2_storerhgp },
  { Hexagon::S2_storerinew_io, Hexagon::S2_storeri_io },
  { Hexagon::S2_storerinew_pbr, Hexagon::S2_storeri_pbr },
  { Hexagon::S2_storerinew_pci, Hexagon::S2_storeri_pci },
  { Hexagon::S2_storerinew_pcr, Hexagon::S2_storeri_pcr },
  { Hexagon::S2_storerinew_pi, Hexagon::S2_storeri_pi },
  { Hexagon::S2_storerinew_pr, Hexagon::S2_storeri_pr },
  { Hexagon::S2_storerinewgp, Hexagon::S2_storerigp },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_storerbnew_ap, Hexagon::S4_storerb_ap },
  { Hexagon::S4_storerbnew_rr, Hexagon::S4_storerb_rr },
  { Hexagon::S4_storerbnew_ur, Hexagon::S4_storerb_ur },
  { Hexagon::S4_storerhnew_ap, Hexagon::S4_storerh_ap },
  { Hexagon::S4_storerhnew_rr, Hexagon::S4_storerh_rr },
  { Hexagon::S4_storerhnew_ur, Hexagon::S4_storerh_ur },
  { Hexagon::S4_storerinew_ap, Hexagon::S4_storeri_ap },
  { Hexagon::S4_storerinew_rr, Hexagon::S4_storeri_rr },
  { Hexagon::S4_storerinew_ur, Hexagon::S4_storeri_ur },
  { Hexagon::V6_vS32b_new_ai, Hexagon::V6_vS32b_ai },
  { Hexagon::V6_vS32b_new_npred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_new_npred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_new_npred_ppu, Hexagon::V6_vS32b_npred_ppu },
  { Hexagon::V6_vS32b_new_pi, Hexagon::V6_vS32b_pi },
  { Hexagon::V6_vS32b_new_ppu, Hexagon::V6_vS32b_ppu },
  { Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_pred_ai },
  { Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_pred_pi },
  { Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_pred_ppu },
  { Hexagon::V6_vS32b_nt_new_ai, Hexagon::V6_vS32b_nt_ai },
  { Hexagon::V6_vS32b_nt_new_npred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_new_npred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_new_npred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_nt_new_pi, Hexagon::V6_vS32b_nt_pi },
  { Hexagon::V6_vS32b_nt_new_ppu, Hexagon::V6_vS32b_nt_ppu },
  { Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_pred_ai },
  { Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_pred_pi },
  { Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_pred_ppu },
}; // End of getNonNVStoreTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 99;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getNonNVStoreTable[mid][0]) {
      break;
    }
    if (Opcode < getNonNVStoreTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonNVStoreTable[mid][1];
}

// getPredNewOpcode
LLVM_READONLY
int getPredNewOpcode(uint16_t Opcode) {
static const uint16_t getPredNewOpcodeTable[][2] = {
  { Hexagon::A2_tfrf, Hexagon::A2_tfrfnew },
  { Hexagon::A2_tfrpf, Hexagon::A2_tfrpfnew },
  { Hexagon::A2_tfrpt, Hexagon::A2_tfrptnew },
  { Hexagon::A2_tfrt, Hexagon::A2_tfrtnew },
  { Hexagon::A2_paddf, Hexagon::A2_paddfnew },
  { Hexagon::A2_paddif, Hexagon::A2_paddifnew },
  { Hexagon::A2_paddit, Hexagon::A2_padditnew },
  { Hexagon::A2_paddt, Hexagon::A2_paddtnew },
  { Hexagon::A2_pandf, Hexagon::A2_pandfnew },
  { Hexagon::A2_pandt, Hexagon::A2_pandtnew },
  { Hexagon::A2_porf, Hexagon::A2_porfnew },
  { Hexagon::A2_port, Hexagon::A2_portnew },
  { Hexagon::A2_psubf, Hexagon::A2_psubfnew },
  { Hexagon::A2_psubt, Hexagon::A2_psubtnew },
  { Hexagon::A2_pxorf, Hexagon::A2_pxorfnew },
  { Hexagon::A2_pxort, Hexagon::A2_pxortnew },
  { Hexagon::A4_paslhf, Hexagon::A4_paslhfnew },
  { Hexagon::A4_paslht, Hexagon::A4_paslhtnew },
  { Hexagon::A4_pasrhf, Hexagon::A4_pasrhfnew },
  { Hexagon::A4_pasrht, Hexagon::A4_pasrhtnew },
  { Hexagon::A4_psxtbf, Hexagon::A4_psxtbfnew },
  { Hexagon::A4_psxtbt, Hexagon::A4_psxtbtnew },
  { Hexagon::A4_psxthf, Hexagon::A4_psxthfnew },
  { Hexagon::A4_psxtht, Hexagon::A4_psxthtnew },
  { Hexagon::A4_pzxtbf, Hexagon::A4_pzxtbfnew },
  { Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbtnew },
  { Hexagon::A4_pzxthf, Hexagon::A4_pzxthfnew },
  { Hexagon::A4_pzxtht, Hexagon::A4_pzxthtnew },
  { Hexagon::C2_ccombinewf, Hexagon::C2_ccombinewnewf },
  { Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewnewt },
  { Hexagon::C2_cmoveif, Hexagon::C2_cmovenewif },
  { Hexagon::C2_cmoveit, Hexagon::C2_cmovenewit },
  { Hexagon::J2_jumpf, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumptnewpt },
  { Hexagon::L2_ploadrbf_io, Hexagon::L2_ploadrbfnew_io },
  { Hexagon::L2_ploadrbf_pi, Hexagon::L2_ploadrbfnew_pi },
  { Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbtnew_pi },
  { Hexagon::L2_ploadrdf_io, Hexagon::L2_ploadrdfnew_io },
  { Hexagon::L2_ploadrdf_pi, Hexagon::L2_ploadrdfnew_pi },
  { Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdtnew_pi },
  { Hexagon::L2_ploadrhf_io, Hexagon::L2_ploadrhfnew_io },
  { Hexagon::L2_ploadrhf_pi, Hexagon::L2_ploadrhfnew_pi },
  { Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhtnew_pi },
  { Hexagon::L2_ploadrif_io, Hexagon::L2_ploadrifnew_io },
  { Hexagon::L2_ploadrif_pi, Hexagon::L2_ploadrifnew_pi },
  { Hexagon::L2_ploadrit_io, Hexagon::L2_ploadritnew_io },
  { Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadritnew_pi },
  { Hexagon::L2_ploadrubf_io, Hexagon::L2_ploadrubfnew_io },
  { Hexagon::L2_ploadrubf_pi, Hexagon::L2_ploadrubfnew_pi },
  { Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubtnew_pi },
  { Hexagon::L2_ploadruhf_io, Hexagon::L2_ploadruhfnew_io },
  { Hexagon::L2_ploadruhf_pi, Hexagon::L2_ploadruhfnew_pi },
  { Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhtnew_pi },
  { Hexagon::L4_ploadrbf_abs, Hexagon::L4_ploadrbfnew_abs },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L4_ploadrbfnew_rr },
  { Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L4_ploadrdfnew_abs },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L4_ploadrdfnew_rr },
  { Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L4_ploadrhfnew_abs },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L4_ploadrhfnew_rr },
  { Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L4_ploadrif_abs, Hexagon::L4_ploadrifnew_abs },
  { Hexagon::L4_ploadrif_rr, Hexagon::L4_ploadrifnew_rr },
  { Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L4_ploadrubfnew_abs },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L4_ploadrubfnew_rr },
  { Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L4_ploadruhfnew_abs },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L4_ploadruhfnew_rr },
  { Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::L4_return_f, Hexagon::L4_return_fnew_pt },
  { Hexagon::L4_return_t, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretf, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprett, Hexagon::PS_jmprettnew },
  { Hexagon::S2_pstorerbf_io, Hexagon::S4_pstorerbfnew_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbfnew_pi },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S4_pstorerbnewfnew_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbnewfnew_pi },
  { Hexagon::S2_pstorerbnewt_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerbt_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerdf_io, Hexagon::S4_pstorerdfnew_io },
  { Hexagon::S2_pstorerdf_pi, Hexagon::S2_pstorerdfnew_pi },
  { Hexagon::S2_pstorerdt_io, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdtnew_pi },
  { Hexagon::S2_pstorerff_io, Hexagon::S4_pstorerffnew_io },
  { Hexagon::S2_pstorerff_pi, Hexagon::S2_pstorerffnew_pi },
  { Hexagon::S2_pstorerft_io, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerftnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S4_pstorerhfnew_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerhfnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S4_pstorerhnewfnew_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhnewfnew_pi },
  { Hexagon::S2_pstorerhnewt_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerht_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S4_pstorerifnew_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerifnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S4_pstorerinewfnew_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerinewfnew_pi },
  { Hexagon::S2_pstorerinewt_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S2_pstorerit_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S2_pstorerit_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbfnew_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbfnew_rr },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbnewfnew_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbnewfnew_rr },
  { Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S4_pstorerdfnew_abs },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S4_pstorerdfnew_rr },
  { Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerff_abs, Hexagon::S4_pstorerffnew_abs },
  { Hexagon::S4_pstorerff_rr, Hexagon::S4_pstorerffnew_rr },
  { Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerhfnew_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerhfnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhnewfnew_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhnewfnew_rr },
  { Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerifnew_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerifnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerinewfnew_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerinewfnew_rr },
  { Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_pstorerit_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerit_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_storeirbf_io, Hexagon::S4_storeirbfnew_io },
  { Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbtnew_io },
  { Hexagon::S4_storeirhf_io, Hexagon::S4_storeirhfnew_io },
  { Hexagon::S4_storeirht_io, Hexagon::S4_storeirhtnew_io },
  { Hexagon::S4_storeirif_io, Hexagon::S4_storeirifnew_io },
  { Hexagon::S4_storeirit_io, Hexagon::S4_storeiritnew_io },
}; // End of getPredNewOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 162;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredNewOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredNewOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getPredNewOpcodeTable[mid][1];
}

// getPredOldOpcode
LLVM_READONLY
int getPredOldOpcode(uint16_t Opcode) {
static const uint16_t getPredOldOpcodeTable[][2] = {
  { Hexagon::A2_tfrfnew, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrpfnew, Hexagon::A2_tfrpf },
  { Hexagon::A2_tfrptnew, Hexagon::A2_tfrpt },
  { Hexagon::A2_tfrtnew, Hexagon::A2_tfrt },
  { Hexagon::A2_paddfnew, Hexagon::A2_paddf },
  { Hexagon::A2_paddifnew, Hexagon::A2_paddif },
  { Hexagon::A2_padditnew, Hexagon::A2_paddit },
  { Hexagon::A2_paddtnew, Hexagon::A2_paddt },
  { Hexagon::A2_pandfnew, Hexagon::A2_pandf },
  { Hexagon::A2_pandtnew, Hexagon::A2_pandt },
  { Hexagon::A2_porfnew, Hexagon::A2_porf },
  { Hexagon::A2_portnew, Hexagon::A2_port },
  { Hexagon::A2_psubfnew, Hexagon::A2_psubf },
  { Hexagon::A2_psubtnew, Hexagon::A2_psubt },
  { Hexagon::A2_pxorfnew, Hexagon::A2_pxorf },
  { Hexagon::A2_pxortnew, Hexagon::A2_pxort },
  { Hexagon::A4_paslhfnew, Hexagon::A4_paslhf },
  { Hexagon::A4_paslhtnew, Hexagon::A4_paslht },
  { Hexagon::A4_pasrhfnew, Hexagon::A4_pasrhf },
  { Hexagon::A4_pasrhtnew, Hexagon::A4_pasrht },
  { Hexagon::A4_psxtbfnew, Hexagon::A4_psxtbf },
  { Hexagon::A4_psxtbtnew, Hexagon::A4_psxtbt },
  { Hexagon::A4_psxthfnew, Hexagon::A4_psxthf },
  { Hexagon::A4_psxthtnew, Hexagon::A4_psxtht },
  { Hexagon::A4_pzxtbfnew, Hexagon::A4_pzxtbf },
  { Hexagon::A4_pzxtbtnew, Hexagon::A4_pzxtbt },
  { Hexagon::A4_pzxthfnew, Hexagon::A4_pzxthf },
  { Hexagon::A4_pzxthtnew, Hexagon::A4_pzxtht },
  { Hexagon::C2_ccombinewnewf, Hexagon::C2_ccombinewf },
  { Hexagon::C2_ccombinewnewt, Hexagon::C2_ccombinewt },
  { Hexagon::C2_cmovenewif, Hexagon::C2_cmoveif },
  { Hexagon::C2_cmovenewit, Hexagon::C2_cmoveit },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumpf },
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumpfpt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprt },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprtpt },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumpt },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumptpt },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_ploadrbfnew_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_ploadrbtnew_io, Hexagon::L2_ploadrbt_io },
  { Hexagon::L2_ploadrbtnew_pi, Hexagon::L2_ploadrbt_pi },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_ploadrdfnew_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_ploadrdtnew_io, Hexagon::L2_ploadrdt_io },
  { Hexagon::L2_ploadrdtnew_pi, Hexagon::L2_ploadrdt_pi },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_ploadrhfnew_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_ploadrhtnew_io, Hexagon::L2_ploadrht_io },
  { Hexagon::L2_ploadrhtnew_pi, Hexagon::L2_ploadrht_pi },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_ploadrifnew_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_ploadritnew_io, Hexagon::L2_ploadrit_io },
  { Hexagon::L2_ploadritnew_pi, Hexagon::L2_ploadrit_pi },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_ploadrubfnew_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_ploadrubtnew_io, Hexagon::L2_ploadrubt_io },
  { Hexagon::L2_ploadrubtnew_pi, Hexagon::L2_ploadrubt_pi },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_ploadruhfnew_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_ploadruhtnew_io, Hexagon::L2_ploadruht_io },
  { Hexagon::L2_ploadruhtnew_pi, Hexagon::L2_ploadruht_pi },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_ploadrbtnew_abs, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L4_ploadrbtnew_rr, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_ploadrdtnew_abs, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L4_ploadrdtnew_rr, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_ploadrhtnew_abs, Hexagon::L4_ploadrht_abs },
  { Hexagon::L4_ploadrhtnew_rr, Hexagon::L4_ploadrht_rr },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_ploadritnew_abs, Hexagon::L4_ploadrit_abs },
  { Hexagon::L4_ploadritnew_rr, Hexagon::L4_ploadrit_rr },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_ploadrubtnew_abs, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L4_ploadrubtnew_rr, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_ploadruhtnew_abs, Hexagon::L4_ploadruht_abs },
  { Hexagon::L4_ploadruhtnew_rr, Hexagon::L4_ploadruht_rr },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_f },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_t },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmpretf },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmprett },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_pstorerbnewtnew_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbtnew_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerdfnew_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_pstorerdtnew_pi, Hexagon::S2_pstorerdt_pi },
  { Hexagon::S2_pstorerffnew_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_pstorerftnew_pi, Hexagon::S2_pstorerft_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_pstorerhnewtnew_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhtnew_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_pstorerinewtnew_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstoreritnew_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_pstorerbnewtnew_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbnewtnew_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S4_pstorerbnewtnew_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbtnew_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbtnew_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S4_pstorerbtnew_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_pstorerdtnew_abs, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S4_pstorerdtnew_io, Hexagon::S2_pstorerdt_io },
  { Hexagon::S4_pstorerdtnew_rr, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_pstorerftnew_abs, Hexagon::S4_pstorerft_abs },
  { Hexagon::S4_pstorerftnew_io, Hexagon::S2_pstorerft_io },
  { Hexagon::S4_pstorerftnew_rr, Hexagon::S4_pstorerft_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_pstorerhnewtnew_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerhnewtnew_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S4_pstorerhnewtnew_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhtnew_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhtnew_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S4_pstorerhtnew_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::S4_pstorerinewtnew_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerinewtnew_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S4_pstorerinewtnew_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstoreritnew_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstoreritnew_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S4_pstoreritnew_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_storeirbfnew_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirbtnew_io, Hexagon::S4_storeirbt_io },
  { Hexagon::S4_storeirhfnew_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeirhtnew_io, Hexagon::S4_storeirht_io },
  { Hexagon::S4_storeirifnew_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storeiritnew_io, Hexagon::S4_storeirit_io },
}; // End of getPredOldOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 162;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredOldOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredOldOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getPredOldOpcodeTable[mid][1];
}

// getPredOpcode
LLVM_READONLY
int getPredOpcode(uint16_t Opcode, enum PredSense inPredSense) {
static const uint16_t getPredOpcodeTable[][3] = {
  { Hexagon::A2_tfrp, Hexagon::A2_tfrpt, Hexagon::A2_tfrpf },
  { Hexagon::A2_zxtb, Hexagon::A4_pzxtbt, Hexagon::A4_pzxtbf },
  { Hexagon::A2_add, Hexagon::A2_paddt, Hexagon::A2_paddf },
  { Hexagon::A2_addi, Hexagon::A2_paddit, Hexagon::A2_paddif },
  { Hexagon::A2_and, Hexagon::A2_pandt, Hexagon::A2_pandf },
  { Hexagon::A2_aslh, Hexagon::A4_paslht, Hexagon::A4_paslhf },
  { Hexagon::A2_asrh, Hexagon::A4_pasrht, Hexagon::A4_pasrhf },
  { Hexagon::A2_combinew, Hexagon::C2_ccombinewt, Hexagon::C2_ccombinewf },
  { Hexagon::A2_or, Hexagon::A2_port, Hexagon::A2_porf },
  { Hexagon::A2_sub, Hexagon::A2_psubt, Hexagon::A2_psubf },
  { Hexagon::A2_sxtb, Hexagon::A4_psxtbt, Hexagon::A4_psxtbf },
  { Hexagon::A2_sxth, Hexagon::A4_psxtht, Hexagon::A4_psxthf },
  { Hexagon::A2_tfr, Hexagon::A2_tfrt, Hexagon::A2_tfrf },
  { Hexagon::A2_tfrsi, Hexagon::C2_cmoveit, Hexagon::C2_cmoveif },
  { Hexagon::A2_xor, Hexagon::A2_pxort, Hexagon::A2_pxorf },
  { Hexagon::A2_zxth, Hexagon::A4_pzxtht, Hexagon::A4_pzxthf },
  { Hexagon::J2_call, Hexagon::J2_callt, Hexagon::J2_callf },
  { Hexagon::J2_jump, Hexagon::J2_jumpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumpr, Hexagon::J2_jumprt, Hexagon::J2_jumprf },
  { Hexagon::L2_loadrb_io, Hexagon::L2_ploadrbt_io, Hexagon::L2_ploadrbf_io },
  { Hexagon::L2_loadrb_pi, Hexagon::L2_ploadrbt_pi, Hexagon::L2_ploadrbf_pi },
  { Hexagon::L2_loadrbgp, Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::L2_loadrd_io, Hexagon::L2_ploadrdt_io, Hexagon::L2_ploadrdf_io },
  { Hexagon::L2_loadrd_pi, Hexagon::L2_ploadrdt_pi, Hexagon::L2_ploadrdf_pi },
  { Hexagon::L2_loadrdgp, Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::L2_loadrh_io, Hexagon::L2_ploadrht_io, Hexagon::L2_ploadrhf_io },
  { Hexagon::L2_loadrh_pi, Hexagon::L2_ploadrht_pi, Hexagon::L2_ploadrhf_pi },
  { Hexagon::L2_loadrhgp, Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::L2_loadri_io, Hexagon::L2_ploadrit_io, Hexagon::L2_ploadrif_io },
  { Hexagon::L2_loadri_pi, Hexagon::L2_ploadrit_pi, Hexagon::L2_ploadrif_pi },
  { Hexagon::L2_loadrigp, Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::L2_loadrub_io, Hexagon::L2_ploadrubt_io, Hexagon::L2_ploadrubf_io },
  { Hexagon::L2_loadrub_pi, Hexagon::L2_ploadrubt_pi, Hexagon::L2_ploadrubf_pi },
  { Hexagon::L2_loadrubgp, Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::L2_loadruh_io, Hexagon::L2_ploadruht_io, Hexagon::L2_ploadruhf_io },
  { Hexagon::L2_loadruh_pi, Hexagon::L2_ploadruht_pi, Hexagon::L2_ploadruhf_pi },
  { Hexagon::L2_loadruhgp, Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::L4_loadrb_rr, Hexagon::L4_ploadrbt_rr, Hexagon::L4_ploadrbf_rr },
  { Hexagon::L4_loadrd_rr, Hexagon::L4_ploadrdt_rr, Hexagon::L4_ploadrdf_rr },
  { Hexagon::L4_loadrh_rr, Hexagon::L4_ploadrht_rr, Hexagon::L4_ploadrhf_rr },
  { Hexagon::L4_loadri_rr, Hexagon::L4_ploadrit_rr, Hexagon::L4_ploadrif_rr },
  { Hexagon::L4_loadrub_rr, Hexagon::L4_ploadrubt_rr, Hexagon::L4_ploadrubf_rr },
  { Hexagon::L4_loadruh_rr, Hexagon::L4_ploadruht_rr, Hexagon::L4_ploadruhf_rr },
  { Hexagon::L4_return, Hexagon::L4_return_t, Hexagon::L4_return_f },
  { Hexagon::PS_jmpret, Hexagon::PS_jmprett, Hexagon::PS_jmpretf },
  { Hexagon::PS_loadrbabs, Hexagon::L4_ploadrbt_abs, Hexagon::L4_ploadrbf_abs },
  { Hexagon::PS_loadrdabs, Hexagon::L4_ploadrdt_abs, Hexagon::L4_ploadrdf_abs },
  { Hexagon::PS_loadrhabs, Hexagon::L4_ploadrht_abs, Hexagon::L4_ploadrhf_abs },
  { Hexagon::PS_loadriabs, Hexagon::L4_ploadrit_abs, Hexagon::L4_ploadrif_abs },
  { Hexagon::PS_loadrubabs, Hexagon::L4_ploadrubt_abs, Hexagon::L4_ploadrubf_abs },
  { Hexagon::PS_loadruhabs, Hexagon::L4_ploadruht_abs, Hexagon::L4_ploadruhf_abs },
  { Hexagon::PS_storerbabs, Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::PS_storerbnewabs, Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::PS_storerdabs, Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::PS_storerfabs, Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::PS_storerhabs, Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::PS_storerhnewabs, Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::PS_storeriabs, Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::PS_storerinewabs, Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S2_storerb_io, Hexagon::S2_pstorerbt_io, Hexagon::S2_pstorerbf_io },
  { Hexagon::S2_storerb_pi, Hexagon::S2_pstorerbt_pi, Hexagon::S2_pstorerbf_pi },
  { Hexagon::S2_storerbgp, Hexagon::S4_pstorerbt_abs, Hexagon::S4_pstorerbf_abs },
  { Hexagon::S2_storerbnew_io, Hexagon::S2_pstorerbnewt_io, Hexagon::S2_pstorerbnewf_io },
  { Hexagon::S2_storerbnew_pi, Hexagon::S2_pstorerbnewt_pi, Hexagon::S2_pstorerbnewf_pi },
  { Hexagon::S2_storerbnewgp, Hexagon::S4_pstorerbnewt_abs, Hexagon::S4_pstorerbnewf_abs },
  { Hexagon::S2_storerd_io, Hexagon::S2_pstorerdt_io, Hexagon::S2_pstorerdf_io },
  { Hexagon::S2_storerd_pi, Hexagon::S2_pstorerdt_pi, Hexagon::S2_pstorerdf_pi },
  { Hexagon::S2_storerdgp, Hexagon::S4_pstorerdt_abs, Hexagon::S4_pstorerdf_abs },
  { Hexagon::S2_storerf_io, Hexagon::S2_pstorerft_io, Hexagon::S2_pstorerff_io },
  { Hexagon::S2_storerf_pi, Hexagon::S2_pstorerft_pi, Hexagon::S2_pstorerff_pi },
  { Hexagon::S2_storerfgp, Hexagon::S4_pstorerft_abs, Hexagon::S4_pstorerff_abs },
  { Hexagon::S2_storerh_io, Hexagon::S2_pstorerht_io, Hexagon::S2_pstorerhf_io },
  { Hexagon::S2_storerh_pi, Hexagon::S2_pstorerht_pi, Hexagon::S2_pstorerhf_pi },
  { Hexagon::S2_storerhgp, Hexagon::S4_pstorerht_abs, Hexagon::S4_pstorerhf_abs },
  { Hexagon::S2_storerhnew_io, Hexagon::S2_pstorerhnewt_io, Hexagon::S2_pstorerhnewf_io },
  { Hexagon::S2_storerhnew_pi, Hexagon::S2_pstorerhnewt_pi, Hexagon::S2_pstorerhnewf_pi },
  { Hexagon::S2_storerhnewgp, Hexagon::S4_pstorerhnewt_abs, Hexagon::S4_pstorerhnewf_abs },
  { Hexagon::S2_storeri_io, Hexagon::S2_pstorerit_io, Hexagon::S2_pstorerif_io },
  { Hexagon::S2_storeri_pi, Hexagon::S2_pstorerit_pi, Hexagon::S2_pstorerif_pi },
  { Hexagon::S2_storerigp, Hexagon::S4_pstorerit_abs, Hexagon::S4_pstorerif_abs },
  { Hexagon::S2_storerinew_io, Hexagon::S2_pstorerinewt_io, Hexagon::S2_pstorerinewf_io },
  { Hexagon::S2_storerinew_pi, Hexagon::S2_pstorerinewt_pi, Hexagon::S2_pstorerinewf_pi },
  { Hexagon::S2_storerinewgp, Hexagon::S4_pstorerinewt_abs, Hexagon::S4_pstorerinewf_abs },
  { Hexagon::S4_storeirb_io, Hexagon::S4_storeirbt_io, Hexagon::S4_storeirbf_io },
  { Hexagon::S4_storeirh_io, Hexagon::S4_storeirht_io, Hexagon::S4_storeirhf_io },
  { Hexagon::S4_storeiri_io, Hexagon::S4_storeirit_io, Hexagon::S4_storeirif_io },
  { Hexagon::S4_storerb_rr, Hexagon::S4_pstorerbt_rr, Hexagon::S4_pstorerbf_rr },
  { Hexagon::S4_storerbnew_rr, Hexagon::S4_pstorerbnewt_rr, Hexagon::S4_pstorerbnewf_rr },
  { Hexagon::S4_storerd_rr, Hexagon::S4_pstorerdt_rr, Hexagon::S4_pstorerdf_rr },
  { Hexagon::S4_storerf_rr, Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_storerf_ur, Hexagon::S4_pstorerft_rr, Hexagon::S4_pstorerff_rr },
  { Hexagon::S4_storerh_rr, Hexagon::S4_pstorerht_rr, Hexagon::S4_pstorerhf_rr },
  { Hexagon::S4_storerhnew_rr, Hexagon::S4_pstorerhnewt_rr, Hexagon::S4_pstorerhnewf_rr },
  { Hexagon::S4_storeri_rr, Hexagon::S4_pstorerit_rr, Hexagon::S4_pstorerif_rr },
  { Hexagon::S4_storerinew_rr, Hexagon::S4_pstorerinewt_rr, Hexagon::S4_pstorerinewf_rr },
  { Hexagon::V6_vL32b_ai, Hexagon::V6_vL32b_pred_ai, Hexagon::V6_vL32b_npred_ai },
  { Hexagon::V6_vL32b_cur_ai, Hexagon::V6_vL32b_cur_pred_ai, Hexagon::V6_vL32b_cur_npred_ai },
  { Hexagon::V6_vL32b_cur_pi, Hexagon::V6_vL32b_cur_pred_pi, Hexagon::V6_vL32b_cur_npred_pi },
  { Hexagon::V6_vL32b_cur_ppu, Hexagon::V6_vL32b_cur_pred_ppu, Hexagon::V6_vL32b_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_ai, Hexagon::V6_vL32b_nt_pred_ai, Hexagon::V6_vL32b_nt_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_ai, Hexagon::V6_vL32b_nt_cur_pred_ai, Hexagon::V6_vL32b_nt_cur_npred_ai },
  { Hexagon::V6_vL32b_nt_cur_pi, Hexagon::V6_vL32b_nt_cur_pred_pi, Hexagon::V6_vL32b_nt_cur_npred_pi },
  { Hexagon::V6_vL32b_nt_cur_ppu, Hexagon::V6_vL32b_nt_cur_pred_ppu, Hexagon::V6_vL32b_nt_cur_npred_ppu },
  { Hexagon::V6_vL32b_nt_pi, Hexagon::V6_vL32b_nt_pred_pi, Hexagon::V6_vL32b_nt_npred_pi },
  { Hexagon::V6_vL32b_nt_ppu, Hexagon::V6_vL32b_nt_pred_ppu, Hexagon::V6_vL32b_nt_npred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_ai, Hexagon::V6_vL32b_nt_tmp_pred_ai, Hexagon::V6_vL32b_nt_tmp_npred_ai },
  { Hexagon::V6_vL32b_nt_tmp_pi, Hexagon::V6_vL32b_nt_tmp_pred_pi, Hexagon::V6_vL32b_nt_tmp_npred_pi },
  { Hexagon::V6_vL32b_nt_tmp_ppu, Hexagon::V6_vL32b_nt_tmp_pred_ppu, Hexagon::V6_vL32b_nt_tmp_npred_ppu },
  { Hexagon::V6_vL32b_pi, Hexagon::V6_vL32b_pred_pi, Hexagon::V6_vL32b_npred_pi },
  { Hexagon::V6_vL32b_ppu, Hexagon::V6_vL32b_pred_ppu, Hexagon::V6_vL32b_npred_ppu },
  { Hexagon::V6_vL32b_tmp_ai, Hexagon::V6_vL32b_tmp_pred_ai, Hexagon::V6_vL32b_tmp_npred_ai },
  { Hexagon::V6_vL32b_tmp_pi, Hexagon::V6_vL32b_tmp_pred_pi, Hexagon::V6_vL32b_tmp_npred_pi },
  { Hexagon::V6_vL32b_tmp_ppu, Hexagon::V6_vL32b_tmp_pred_ppu, Hexagon::V6_vL32b_tmp_npred_ppu },
  { Hexagon::V6_vS32Ub_ai, Hexagon::V6_vS32Ub_pred_ai, Hexagon::V6_vS32Ub_npred_ai },
  { Hexagon::V6_vS32Ub_pi, Hexagon::V6_vS32Ub_pred_pi, Hexagon::V6_vS32Ub_npred_pi },
  { Hexagon::V6_vS32Ub_ppu, Hexagon::V6_vS32Ub_pred_ppu, Hexagon::V6_vS32Ub_npred_ppu },
  { Hexagon::V6_vS32b_ai, Hexagon::V6_vS32b_pred_ai, Hexagon::V6_vS32b_npred_ai },
  { Hexagon::V6_vS32b_new_ai, Hexagon::V6_vS32b_new_pred_ai, Hexagon::V6_vS32b_new_npred_ai },
  { Hexagon::V6_vS32b_new_pi, Hexagon::V6_vS32b_new_pred_pi, Hexagon::V6_vS32b_new_npred_pi },
  { Hexagon::V6_vS32b_new_ppu, Hexagon::V6_vS32b_new_pred_ppu, Hexagon::V6_vS32b_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_ai, Hexagon::V6_vS32b_nt_pred_ai, Hexagon::V6_vS32b_nt_npred_ai },
  { Hexagon::V6_vS32b_nt_new_ai, Hexagon::V6_vS32b_nt_new_pred_ai, Hexagon::V6_vS32b_nt_new_npred_ai },
  { Hexagon::V6_vS32b_nt_new_pi, Hexagon::V6_vS32b_nt_new_pred_pi, Hexagon::V6_vS32b_nt_new_npred_pi },
  { Hexagon::V6_vS32b_nt_new_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu, Hexagon::V6_vS32b_nt_new_npred_ppu },
  { Hexagon::V6_vS32b_nt_pi, Hexagon::V6_vS32b_nt_pred_pi, Hexagon::V6_vS32b_nt_npred_pi },
  { Hexagon::V6_vS32b_nt_ppu, Hexagon::V6_vS32b_nt_pred_ppu, Hexagon::V6_vS32b_nt_npred_ppu },
  { Hexagon::V6_vS32b_pi, Hexagon::V6_vS32b_pred_pi, Hexagon::V6_vS32b_npred_pi },
  { Hexagon::V6_vS32b_ppu, Hexagon::V6_vS32b_pred_ppu, Hexagon::V6_vS32b_npred_ppu },
}; // End of getPredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 128;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getPredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getPredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inPredSense == PredSense_true)
    return getPredOpcodeTable[mid][1];
  if (inPredSense == PredSense_false)
    return getPredOpcodeTable[mid][2];
  return -1;}

// getRealHWInstr
LLVM_READONLY
int getRealHWInstr(uint16_t Opcode, enum InstrType inInstrType) {
static const uint16_t getRealHWInstrTable[][3] = {
  { Hexagon::INSTRUCTION_LIST_END, Hexagon::INSTRUCTION_LIST_END }}; // End of getRealHWInstrTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 0;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRealHWInstrTable[mid][0]) {
      break;
    }
    if (Opcode < getRealHWInstrTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inInstrType == InstrType_Pseudo)
    return getRealHWInstrTable[mid][1];
  if (inInstrType == InstrType_Real)
    return getRealHWInstrTable[mid][2];
  return -1;}

// getRegForm
LLVM_READONLY
int getRegForm(uint16_t Opcode) {
static const uint16_t getRegFormTable[][2] = {
  { Hexagon::M2_mpysmi, Hexagon::M2_mpyi },
  { Hexagon::A2_addi, Hexagon::A2_add },
  { Hexagon::A2_andir, Hexagon::A2_and },
  { Hexagon::A2_orir, Hexagon::A2_or },
  { Hexagon::A2_paddif, Hexagon::A2_paddf },
  { Hexagon::A2_paddifnew, Hexagon::A2_paddfnew },
  { Hexagon::A2_paddit, Hexagon::A2_paddt },
  { Hexagon::A2_padditnew, Hexagon::A2_paddtnew },
  { Hexagon::A2_subri, Hexagon::A2_sub },
  { Hexagon::A4_cmpbeqi, Hexagon::A4_cmpbeq },
  { Hexagon::A4_cmpbgti, Hexagon::A4_cmpbgt },
  { Hexagon::A4_cmpbgtui, Hexagon::A4_cmpbgtu },
  { Hexagon::A4_cmpheqi, Hexagon::A4_cmpheq },
  { Hexagon::A4_cmphgti, Hexagon::A4_cmphgt },
  { Hexagon::A4_cmphgtui, Hexagon::A4_cmphgtu },
  { Hexagon::C2_cmoveif, Hexagon::A2_tfrf },
  { Hexagon::C2_cmoveit, Hexagon::A2_tfrt },
  { Hexagon::C2_cmovenewif, Hexagon::A2_tfrfnew },
  { Hexagon::C2_cmovenewit, Hexagon::A2_tfrtnew },
  { Hexagon::C2_cmpeqi, Hexagon::C2_cmpeq },
  { Hexagon::C2_cmpgti, Hexagon::C2_cmpgt },
  { Hexagon::C2_cmpgtui, Hexagon::C2_cmpgtu },
  { Hexagon::C4_cmpltei, Hexagon::C4_cmplte },
  { Hexagon::C4_cmplteui, Hexagon::C4_cmplteu },
  { Hexagon::C4_cmpneqi, Hexagon::C4_cmpneq },
  { Hexagon::M2_accii, Hexagon::M2_acci },
  { Hexagon::M2_macsip, Hexagon::M2_maci },
  { Hexagon::M4_mpyrr_addi, Hexagon::M4_mpyrr_addr },
}; // End of getRegFormTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 28;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRegFormTable[mid][0]) {
      break;
    }
    if (Opcode < getRegFormTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRegFormTable[mid][1];
}

// getTruePredOpcode
LLVM_READONLY
int getTruePredOpcode(uint16_t Opcode) {
static const uint16_t getTruePredOpcodeTable[][2] = {
  { Hexagon::A2_tfrf, Hexagon::A2_tfrt },
  { Hexagon::A2_tfrfnew, Hexagon::A2_tfrtnew },
  { Hexagon::A2_tfrpf, Hexagon::A2_tfrpt },
  { Hexagon::A2_tfrpfnew, Hexagon::A2_tfrptnew },
  { Hexagon::A2_paddf, Hexagon::A2_paddt },
  { Hexagon::A2_paddfnew, Hexagon::A2_paddtnew },
  { Hexagon::A2_paddif, Hexagon::A2_paddit },
  { Hexagon::A2_paddifnew, Hexagon::A2_padditnew },
  { Hexagon::A2_pandf, Hexagon::A2_pandt },
  { Hexagon::A2_pandfnew, Hexagon::A2_pandtnew },
  { Hexagon::A2_porf, Hexagon::A2_port },
  { Hexagon::A2_porfnew, Hexagon::A2_portnew },
  { Hexagon::A2_psubf, Hexagon::A2_psubt },
  { Hexagon::A2_psubfnew, Hexagon::A2_psubtnew },
  { Hexagon::A2_pxorf, Hexagon::A2_pxort },
  { Hexagon::A2_pxorfnew, Hexagon::A2_pxortnew },
  { Hexagon::A4_paslhf, Hexagon::A4_paslht },
  { Hexagon::A4_paslhfnew, Hexagon::A4_paslhtnew },
  { Hexagon::A4_pasrhf, Hexagon::A4_pasrht },
  { Hexagon::A4_pasrhfnew, Hexagon::A4_pasrhtnew },
  { Hexagon::A4_psxtbf, Hexagon::A4_psxtbt },
  { Hexagon::A4_psxtbfnew, Hexagon::A4_psxtbtnew },
  { Hexagon::A4_psxthf, Hexagon::A4_psxtht },
  { Hexagon::A4_psxthfnew, Hexagon::A4_psxthtnew },
  { Hexagon::A4_pzxtbf, Hexagon::A4_pzxtbt },
  { Hexagon::A4_pzxtbfnew, Hexagon::A4_pzxtbtnew },
  { Hexagon::A4_pzxthf, Hexagon::A4_pzxtht },
  { Hexagon::A4_pzxthfnew, Hexagon::A4_pzxthtnew },
  { Hexagon::C2_ccombinewf, Hexagon::C2_ccombinewt },
  { Hexagon::C2_ccombinewnewf, Hexagon::C2_ccombinewnewt },
  { Hexagon::C2_cmoveif, Hexagon::C2_cmoveit },
  { Hexagon::C2_cmovenewif, Hexagon::C2_cmovenewit },
  { Hexagon::J2_callf, Hexagon::J2_callt },
  { Hexagon::J2_jumpf, Hexagon::J2_jumpt },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumptnewpt },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumptpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprtpt },
  { Hexagon::J4_cmpeq_f_jumpnv_nt, Hexagon::J4_cmpeq_t_jumpnv_nt },
  { Hexagon::J4_cmpeq_f_jumpnv_t, Hexagon::J4_cmpeq_t_jumpnv_t },
  { Hexagon::J4_cmpeq_fp0_jump_nt, Hexagon::J4_cmpeq_tp0_jump_nt },
  { Hexagon::J4_cmpeq_fp0_jump_t, Hexagon::J4_cmpeq_tp0_jump_t },
  { Hexagon::J4_cmpeq_fp1_jump_nt, Hexagon::J4_cmpeq_tp1_jump_nt },
  { Hexagon::J4_cmpeq_fp1_jump_t, Hexagon::J4_cmpeq_tp1_jump_t },
  { Hexagon::J4_cmpeqi_f_jumpnv_nt, Hexagon::J4_cmpeqi_t_jumpnv_nt },
  { Hexagon::J4_cmpeqi_f_jumpnv_t, Hexagon::J4_cmpeqi_t_jumpnv_t },
  { Hexagon::J4_cmpeqi_fp0_jump_nt, Hexagon::J4_cmpeqi_tp0_jump_nt },
  { Hexagon::J4_cmpeqi_fp0_jump_t, Hexagon::J4_cmpeqi_tp0_jump_t },
  { Hexagon::J4_cmpeqi_fp1_jump_nt, Hexagon::J4_cmpeqi_tp1_jump_nt },
  { Hexagon::J4_cmpeqi_fp1_jump_t, Hexagon::J4_cmpeqi_tp1_jump_t },
  { Hexagon::J4_cmpeqn1_f_jumpnv_nt, Hexagon::J4_cmpeqn1_t_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_f_jumpnv_t, Hexagon::J4_cmpeqn1_t_jumpnv_t },
  { Hexagon::J4_cmpeqn1_fp0_jump_nt, Hexagon::J4_cmpeqn1_tp0_jump_nt },
  { Hexagon::J4_cmpeqn1_fp0_jump_t, Hexagon::J4_cmpeqn1_tp0_jump_t },
  { Hexagon::J4_cmpeqn1_fp1_jump_nt, Hexagon::J4_cmpeqn1_tp1_jump_nt },
  { Hexagon::J4_cmpeqn1_fp1_jump_t, Hexagon::J4_cmpeqn1_tp1_jump_t },
  { Hexagon::J4_cmpgt_f_jumpnv_nt, Hexagon::J4_cmpgt_t_jumpnv_nt },
  { Hexagon::J4_cmpgt_f_jumpnv_t, Hexagon::J4_cmpgt_t_jumpnv_t },
  { Hexagon::J4_cmpgt_fp0_jump_nt, Hexagon::J4_cmpgt_tp0_jump_nt },
  { Hexagon::J4_cmpgt_fp0_jump_t, Hexagon::J4_cmpgt_tp0_jump_t },
  { Hexagon::J4_cmpgt_fp1_jump_nt, Hexagon::J4_cmpgt_tp1_jump_nt },
  { Hexagon::J4_cmpgt_fp1_jump_t, Hexagon::J4_cmpgt_tp1_jump_t },
  { Hexagon::J4_cmpgti_f_jumpnv_nt, Hexagon::J4_cmpgti_t_jumpnv_nt },
  { Hexagon::J4_cmpgti_f_jumpnv_t, Hexagon::J4_cmpgti_t_jumpnv_t },
  { Hexagon::J4_cmpgti_fp0_jump_nt, Hexagon::J4_cmpgti_tp0_jump_nt },
  { Hexagon::J4_cmpgti_fp0_jump_t, Hexagon::J4_cmpgti_tp0_jump_t },
  { Hexagon::J4_cmpgti_fp1_jump_nt, Hexagon::J4_cmpgti_tp1_jump_nt },
  { Hexagon::J4_cmpgti_fp1_jump_t, Hexagon::J4_cmpgti_tp1_jump_t },
  { Hexagon::J4_cmpgtn1_f_jumpnv_nt, Hexagon::J4_cmpgtn1_t_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_f_jumpnv_t, Hexagon::J4_cmpgtn1_t_jumpnv_t },
  { Hexagon::J4_cmpgtn1_fp0_jump_nt, Hexagon::J4_cmpgtn1_tp0_jump_nt },
  { Hexagon::J4_cmpgtn1_fp0_jump_t, Hexagon::J4_cmpgtn1_tp0_jump_t },
  { Hexagon::J4_cmpgtn1_fp1_jump_nt, Hexagon::J4_cmpgtn1_tp1_jump_nt },
  { Hexagon::J4_cmpgtn1_fp1_jump_t, Hexagon::J4_cmpgtn1_tp1_jump_t },
  { Hexagon::J4_cmpgtu_f_jumpnv_nt, Hexagon::J4_cmpgtu_t_jumpnv_nt },
  { Hexagon::J4_cmpgtu_f_jumpnv_t, Hexagon::J4_cmpgtu_t_jumpnv_t },
  { Hexagon::J4_cmpgtu_fp0_jump_nt, Hexagon::J4_cmpgtu_tp0_jump_nt },
  { Hexagon::J4_cmpgtu_fp0_jump_t, Hexagon::J4_cmpgtu_tp0_jump_t },
  { Hexagon::J4_cmpgtu_fp1_jump_nt, Hexagon::J4_cmpgtu_tp1_jump_nt },
  { Hexagon::J4_cmpgtu_fp1_jump_t, Hexagon::J4_cmpgtu_tp1_jump_t },
  { Hexagon::J4_cmpgtui_f_jumpnv_nt, Hexagon::J4_cmpgtui_t_jumpnv_nt },
  { Hexagon::J4_cmpgtui_f_jumpnv_t, Hexagon::J4_cmpgtui_t_jumpnv_t },
  { Hexagon::J4_cmpgtui_fp0_jump_nt, Hexagon::J4_cmpgtui_tp0_jump_nt },
  { Hexagon::J4_cmpgtui_fp0_jump_t, Hexagon::J4_cmpgtui_tp0_jump_t },
  { Hexagon::J4_cmpgtui_fp1_jump_nt, Hexagon::J4_cmpgtui_tp1_jump_nt },
  { Hexagon::J4_cmpgtui_fp1_jump_t, Hexagon::J4_cmpgtui_tp1_jump_t },
  { Hexagon::J4_cmplt_f_jumpnv_nt, Hexagon::J4_cmplt_t_jumpnv_nt },
  { Hexagon::J4_cmplt_f_jumpnv_t, Hexagon::J4_cmplt_t_jumpnv_t },
  { Hexagon::J4_cmpltu_f_jumpnv_nt, Hexagon::J4_cmpltu_t_jumpnv_nt },
  { Hexagon::J4_cmpltu_f_jumpnv_t, Hexagon::J4_cmpltu_t_jumpnv_t },
  { Hexagon::L2_ploadrbf_io, Hexagon::L2_ploadrbt_io },
  { Hexagon::L2_ploadrbf_pi, Hexagon::L2_ploadrbt_pi },
  { Hexagon::L2_ploadrbfnew_io, Hexagon::L2_ploadrbtnew_io },
  { Hexagon::L2_ploadrbfnew_pi, Hexagon::L2_ploadrbtnew_pi },
  { Hexagon::L2_ploadrdf_io, Hexagon::L2_ploadrdt_io },
  { Hexagon::L2_ploadrdf_pi, Hexagon::L2_ploadrdt_pi },
  { Hexagon::L2_ploadrdfnew_io, Hexagon::L2_ploadrdtnew_io },
  { Hexagon::L2_ploadrdfnew_pi, Hexagon::L2_ploadrdtnew_pi },
  { Hexagon::L2_ploadrhf_io, Hexagon::L2_ploadrht_io },
  { Hexagon::L2_ploadrhf_pi, Hexagon::L2_ploadrht_pi },
  { Hexagon::L2_ploadrhfnew_io, Hexagon::L2_ploadrhtnew_io },
  { Hexagon::L2_ploadrhfnew_pi, Hexagon::L2_ploadrhtnew_pi },
  { Hexagon::L2_ploadrif_io, Hexagon::L2_ploadrit_io },
  { Hexagon::L2_ploadrif_pi, Hexagon::L2_ploadrit_pi },
  { Hexagon::L2_ploadrifnew_io, Hexagon::L2_ploadritnew_io },
  { Hexagon::L2_ploadrifnew_pi, Hexagon::L2_ploadritnew_pi },
  { Hexagon::L2_ploadrubf_io, Hexagon::L2_ploadrubt_io },
  { Hexagon::L2_ploadrubf_pi, Hexagon::L2_ploadrubt_pi },
  { Hexagon::L2_ploadrubfnew_io, Hexagon::L2_ploadrubtnew_io },
  { Hexagon::L2_ploadrubfnew_pi, Hexagon::L2_ploadrubtnew_pi },
  { Hexagon::L2_ploadruhf_io, Hexagon::L2_ploadruht_io },
  { Hexagon::L2_ploadruhf_pi, Hexagon::L2_ploadruht_pi },
  { Hexagon::L2_ploadruhfnew_io, Hexagon::L2_ploadruhtnew_io },
  { Hexagon::L2_ploadruhfnew_pi, Hexagon::L2_ploadruhtnew_pi },
  { Hexagon::L4_ploadrbf_abs, Hexagon::L4_ploadrbt_abs },
  { Hexagon::L4_ploadrbf_rr, Hexagon::L4_ploadrbt_rr },
  { Hexagon::L4_ploadrbfnew_abs, Hexagon::L4_ploadrbtnew_abs },
  { Hexagon::L4_ploadrbfnew_rr, Hexagon::L4_ploadrbtnew_rr },
  { Hexagon::L4_ploadrdf_abs, Hexagon::L4_ploadrdt_abs },
  { Hexagon::L4_ploadrdf_rr, Hexagon::L4_ploadrdt_rr },
  { Hexagon::L4_ploadrdfnew_abs, Hexagon::L4_ploadrdtnew_abs },
  { Hexagon::L4_ploadrdfnew_rr, Hexagon::L4_ploadrdtnew_rr },
  { Hexagon::L4_ploadrhf_abs, Hexagon::L4_ploadrht_abs },
  { Hexagon::L4_ploadrhf_rr, Hexagon::L4_ploadrht_rr },
  { Hexagon::L4_ploadrhfnew_abs, Hexagon::L4_ploadrhtnew_abs },
  { Hexagon::L4_ploadrhfnew_rr, Hexagon::L4_ploadrhtnew_rr },
  { Hexagon::L4_ploadrif_abs, Hexagon::L4_ploadrit_abs },
  { Hexagon::L4_ploadrif_rr, Hexagon::L4_ploadrit_rr },
  { Hexagon::L4_ploadrifnew_abs, Hexagon::L4_ploadritnew_abs },
  { Hexagon::L4_ploadrifnew_rr, Hexagon::L4_ploadritnew_rr },
  { Hexagon::L4_ploadrubf_abs, Hexagon::L4_ploadrubt_abs },
  { Hexagon::L4_ploadrubf_rr, Hexagon::L4_ploadrubt_rr },
  { Hexagon::L4_ploadrubfnew_abs, Hexagon::L4_ploadrubtnew_abs },
  { Hexagon::L4_ploadrubfnew_rr, Hexagon::L4_ploadrubtnew_rr },
  { Hexagon::L4_ploadruhf_abs, Hexagon::L4_ploadruht_abs },
  { Hexagon::L4_ploadruhf_rr, Hexagon::L4_ploadruht_rr },
  { Hexagon::L4_ploadruhfnew_abs, Hexagon::L4_ploadruhtnew_abs },
  { Hexagon::L4_ploadruhfnew_rr, Hexagon::L4_ploadruhtnew_rr },
  { Hexagon::L4_return_f, Hexagon::L4_return_t },
  { Hexagon::L4_return_fnew_pnt, Hexagon::L4_return_tnew_pnt },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretf, Hexagon::PS_jmprett },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmprettnew },
  { Hexagon::PS_jmpretfnewpt, Hexagon::PS_jmprettnewpt },
  { Hexagon::S2_pstorerbf_io, Hexagon::S2_pstorerbt_io },
  { Hexagon::S2_pstorerbf_pi, Hexagon::S2_pstorerbt_pi },
  { Hexagon::S2_pstorerbfnew_pi, Hexagon::S2_pstorerbtnew_pi },
  { Hexagon::S2_pstorerbnewf_io, Hexagon::S2_pstorerbnewt_io },
  { Hexagon::S2_pstorerbnewf_pi, Hexagon::S2_pstorerbnewt_pi },
  { Hexagon::S2_pstorerbnewfnew_pi, Hexagon::S2_pstorerbnewtnew_pi },
  { Hexagon::S2_pstorerdf_io, Hexagon::S2_pstorerdt_io },
  { Hexagon::S2_pstorerdf_pi, Hexagon::S2_pstorerdt_pi },
  { Hexagon::S2_pstorerdfnew_pi, Hexagon::S2_pstorerdtnew_pi },
  { Hexagon::S2_pstorerff_io, Hexagon::S2_pstorerft_io },
  { Hexagon::S2_pstorerff_pi, Hexagon::S2_pstorerft_pi },
  { Hexagon::S2_pstorerffnew_pi, Hexagon::S2_pstorerftnew_pi },
  { Hexagon::S2_pstorerhf_io, Hexagon::S2_pstorerht_io },
  { Hexagon::S2_pstorerhf_pi, Hexagon::S2_pstorerht_pi },
  { Hexagon::S2_pstorerhfnew_pi, Hexagon::S2_pstorerhtnew_pi },
  { Hexagon::S2_pstorerhnewf_io, Hexagon::S2_pstorerhnewt_io },
  { Hexagon::S2_pstorerhnewf_pi, Hexagon::S2_pstorerhnewt_pi },
  { Hexagon::S2_pstorerhnewfnew_pi, Hexagon::S2_pstorerhnewtnew_pi },
  { Hexagon::S2_pstorerif_io, Hexagon::S2_pstorerit_io },
  { Hexagon::S2_pstorerif_pi, Hexagon::S2_pstorerit_pi },
  { Hexagon::S2_pstorerifnew_pi, Hexagon::S2_pstoreritnew_pi },
  { Hexagon::S2_pstorerinewf_io, Hexagon::S2_pstorerinewt_io },
  { Hexagon::S2_pstorerinewf_pi, Hexagon::S2_pstorerinewt_pi },
  { Hexagon::S2_pstorerinewfnew_pi, Hexagon::S2_pstorerinewtnew_pi },
  { Hexagon::S4_pstorerbf_abs, Hexagon::S4_pstorerbt_abs },
  { Hexagon::S4_pstorerbf_rr, Hexagon::S4_pstorerbt_rr },
  { Hexagon::S4_pstorerbfnew_abs, Hexagon::S4_pstorerbtnew_abs },
  { Hexagon::S4_pstorerbfnew_io, Hexagon::S4_pstorerbtnew_io },
  { Hexagon::S4_pstorerbfnew_rr, Hexagon::S4_pstorerbtnew_rr },
  { Hexagon::S4_pstorerbnewf_abs, Hexagon::S4_pstorerbnewt_abs },
  { Hexagon::S4_pstorerbnewf_rr, Hexagon::S4_pstorerbnewt_rr },
  { Hexagon::S4_pstorerbnewfnew_abs, Hexagon::S4_pstorerbnewtnew_abs },
  { Hexagon::S4_pstorerbnewfnew_io, Hexagon::S4_pstorerbnewtnew_io },
  { Hexagon::S4_pstorerbnewfnew_rr, Hexagon::S4_pstorerbnewtnew_rr },
  { Hexagon::S4_pstorerdf_abs, Hexagon::S4_pstorerdt_abs },
  { Hexagon::S4_pstorerdf_rr, Hexagon::S4_pstorerdt_rr },
  { Hexagon::S4_pstorerdfnew_abs, Hexagon::S4_pstorerdtnew_abs },
  { Hexagon::S4_pstorerdfnew_io, Hexagon::S4_pstorerdtnew_io },
  { Hexagon::S4_pstorerdfnew_rr, Hexagon::S4_pstorerdtnew_rr },
  { Hexagon::S4_pstorerff_abs, Hexagon::S4_pstorerft_abs },
  { Hexagon::S4_pstorerff_rr, Hexagon::S4_pstorerft_rr },
  { Hexagon::S4_pstorerffnew_abs, Hexagon::S4_pstorerftnew_abs },
  { Hexagon::S4_pstorerffnew_io, Hexagon::S4_pstorerftnew_io },
  { Hexagon::S4_pstorerffnew_rr, Hexagon::S4_pstorerftnew_rr },
  { Hexagon::S4_pstorerhf_abs, Hexagon::S4_pstorerht_abs },
  { Hexagon::S4_pstorerhf_rr, Hexagon::S4_pstorerht_rr },
  { Hexagon::S4_pstorerhfnew_abs, Hexagon::S4_pstorerhtnew_abs },
  { Hexagon::S4_pstorerhfnew_io, Hexagon::S4_pstorerhtnew_io },
  { Hexagon::S4_pstorerhfnew_rr, Hexagon::S4_pstorerhtnew_rr },
  { Hexagon::S4_pstorerhnewf_abs, Hexagon::S4_pstorerhnewt_abs },
  { Hexagon::S4_pstorerhnewf_rr, Hexagon::S4_pstorerhnewt_rr },
  { Hexagon::S4_pstorerhnewfnew_abs, Hexagon::S4_pstorerhnewtnew_abs },
  { Hexagon::S4_pstorerhnewfnew_io, Hexagon::S4_pstorerhnewtnew_io },
  { Hexagon::S4_pstorerhnewfnew_rr, Hexagon::S4_pstorerhnewtnew_rr },
  { Hexagon::S4_pstorerif_abs, Hexagon::S4_pstorerit_abs },
  { Hexagon::S4_pstorerif_rr, Hexagon::S4_pstorerit_rr },
  { Hexagon::S4_pstorerifnew_abs, Hexagon::S4_pstoreritnew_abs },
  { Hexagon::S4_pstorerifnew_io, Hexagon::S4_pstoreritnew_io },
  { Hexagon::S4_pstorerifnew_rr, Hexagon::S4_pstoreritnew_rr },
  { Hexagon::S4_pstorerinewf_abs, Hexagon::S4_pstorerinewt_abs },
  { Hexagon::S4_pstorerinewf_rr, Hexagon::S4_pstorerinewt_rr },
  { Hexagon::S4_pstorerinewfnew_abs, Hexagon::S4_pstorerinewtnew_abs },
  { Hexagon::S4_pstorerinewfnew_io, Hexagon::S4_pstorerinewtnew_io },
  { Hexagon::S4_pstorerinewfnew_rr, Hexagon::S4_pstorerinewtnew_rr },
  { Hexagon::S4_storeirbf_io, Hexagon::S4_storeirbt_io },
  { Hexagon::S4_storeirbfnew_io, Hexagon::S4_storeirbtnew_io },
  { Hexagon::S4_storeirhf_io, Hexagon::S4_storeirht_io },
  { Hexagon::S4_storeirhfnew_io, Hexagon::S4_storeirhtnew_io },
  { Hexagon::S4_storeirif_io, Hexagon::S4_storeirit_io },
  { Hexagon::S4_storeirifnew_io, Hexagon::S4_storeiritnew_io },
  { Hexagon::V6_vL32b_cur_npred_ai, Hexagon::V6_vL32b_cur_pred_ai },
  { Hexagon::V6_vL32b_cur_npred_pi, Hexagon::V6_vL32b_cur_pred_pi },
  { Hexagon::V6_vL32b_cur_npred_ppu, Hexagon::V6_vL32b_cur_pred_ppu },
  { Hexagon::V6_vL32b_npred_ai, Hexagon::V6_vL32b_pred_ai },
  { Hexagon::V6_vL32b_npred_pi, Hexagon::V6_vL32b_pred_pi },
  { Hexagon::V6_vL32b_npred_ppu, Hexagon::V6_vL32b_pred_ppu },
  { Hexagon::V6_vL32b_nt_cur_npred_ai, Hexagon::V6_vL32b_nt_cur_pred_ai },
  { Hexagon::V6_vL32b_nt_cur_npred_pi, Hexagon::V6_vL32b_nt_cur_pred_pi },
  { Hexagon::V6_vL32b_nt_cur_npred_ppu, Hexagon::V6_vL32b_nt_cur_pred_ppu },
  { Hexagon::V6_vL32b_nt_npred_ai, Hexagon::V6_vL32b_nt_pred_ai },
  { Hexagon::V6_vL32b_nt_npred_pi, Hexagon::V6_vL32b_nt_pred_pi },
  { Hexagon::V6_vL32b_nt_npred_ppu, Hexagon::V6_vL32b_nt_pred_ppu },
  { Hexagon::V6_vL32b_nt_tmp_npred_ai, Hexagon::V6_vL32b_nt_tmp_pred_ai },
  { Hexagon::V6_vL32b_nt_tmp_npred_pi, Hexagon::V6_vL32b_nt_tmp_pred_pi },
  { Hexagon::V6_vL32b_nt_tmp_npred_ppu, Hexagon::V6_vL32b_nt_tmp_pred_ppu },
  { Hexagon::V6_vL32b_tmp_npred_ai, Hexagon::V6_vL32b_tmp_pred_ai },
  { Hexagon::V6_vL32b_tmp_npred_pi, Hexagon::V6_vL32b_tmp_pred_pi },
  { Hexagon::V6_vL32b_tmp_npred_ppu, Hexagon::V6_vL32b_tmp_pred_ppu },
  { Hexagon::V6_vS32Ub_npred_ai, Hexagon::V6_vS32Ub_pred_ai },
  { Hexagon::V6_vS32Ub_npred_pi, Hexagon::V6_vS32Ub_pred_pi },
  { Hexagon::V6_vS32Ub_npred_ppu, Hexagon::V6_vS32Ub_pred_ppu },
  { Hexagon::V6_vS32b_new_npred_ai, Hexagon::V6_vS32b_new_pred_ai },
  { Hexagon::V6_vS32b_new_npred_pi, Hexagon::V6_vS32b_new_pred_pi },
  { Hexagon::V6_vS32b_new_npred_ppu, Hexagon::V6_vS32b_new_pred_ppu },
  { Hexagon::V6_vS32b_npred_ai, Hexagon::V6_vS32b_pred_ai },
  { Hexagon::V6_vS32b_npred_pi, Hexagon::V6_vS32b_pred_pi },
  { Hexagon::V6_vS32b_npred_ppu, Hexagon::V6_vS32b_pred_ppu },
  { Hexagon::V6_vS32b_nt_new_npred_ai, Hexagon::V6_vS32b_nt_new_pred_ai },
  { Hexagon::V6_vS32b_nt_new_npred_pi, Hexagon::V6_vS32b_nt_new_pred_pi },
  { Hexagon::V6_vS32b_nt_new_npred_ppu, Hexagon::V6_vS32b_nt_new_pred_ppu },
  { Hexagon::V6_vS32b_nt_npred_ai, Hexagon::V6_vS32b_nt_pred_ai },
  { Hexagon::V6_vS32b_nt_npred_pi, Hexagon::V6_vS32b_nt_pred_pi },
  { Hexagon::V6_vS32b_nt_npred_ppu, Hexagon::V6_vS32b_nt_pred_ppu },
}; // End of getTruePredOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 250;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getTruePredOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getTruePredOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getTruePredOpcodeTable[mid][1];
}

// notTakenBranchPrediction
LLVM_READONLY
int notTakenBranchPrediction(uint16_t Opcode) {
static const uint16_t notTakenBranchPredictionTable[][2] = {
  { Hexagon::J2_jumpfnewpt, Hexagon::J2_jumpfnew },
  { Hexagon::J2_jumpfpt, Hexagon::J2_jumpf },
  { Hexagon::J2_jumprfnewpt, Hexagon::J2_jumprfnew },
  { Hexagon::J2_jumprfpt, Hexagon::J2_jumprf },
  { Hexagon::J2_jumprtnewpt, Hexagon::J2_jumprtnew },
  { Hexagon::J2_jumprtpt, Hexagon::J2_jumprt },
  { Hexagon::J2_jumptnewpt, Hexagon::J2_jumptnew },
  { Hexagon::J2_jumptpt, Hexagon::J2_jumpt },
  { Hexagon::J4_cmpeq_f_jumpnv_t, Hexagon::J4_cmpeq_f_jumpnv_nt },
  { Hexagon::J4_cmpeq_fp0_jump_t, Hexagon::J4_cmpeq_fp0_jump_nt },
  { Hexagon::J4_cmpeq_fp1_jump_t, Hexagon::J4_cmpeq_fp1_jump_nt },
  { Hexagon::J4_cmpeq_t_jumpnv_t, Hexagon::J4_cmpeq_t_jumpnv_nt },
  { Hexagon::J4_cmpeq_tp0_jump_t, Hexagon::J4_cmpeq_tp0_jump_nt },
  { Hexagon::J4_cmpeq_tp1_jump_t, Hexagon::J4_cmpeq_tp1_jump_nt },
  { Hexagon::J4_cmpeqi_f_jumpnv_t, Hexagon::J4_cmpeqi_f_jumpnv_nt },
  { Hexagon::J4_cmpeqi_fp0_jump_t, Hexagon::J4_cmpeqi_fp0_jump_nt },
  { Hexagon::J4_cmpeqi_fp1_jump_t, Hexagon::J4_cmpeqi_fp1_jump_nt },
  { Hexagon::J4_cmpeqi_t_jumpnv_t, Hexagon::J4_cmpeqi_t_jumpnv_nt },
  { Hexagon::J4_cmpeqi_tp0_jump_t, Hexagon::J4_cmpeqi_tp0_jump_nt },
  { Hexagon::J4_cmpeqi_tp1_jump_t, Hexagon::J4_cmpeqi_tp1_jump_nt },
  { Hexagon::J4_cmpeqn1_f_jumpnv_t, Hexagon::J4_cmpeqn1_f_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_fp0_jump_t, Hexagon::J4_cmpeqn1_fp0_jump_nt },
  { Hexagon::J4_cmpeqn1_fp1_jump_t, Hexagon::J4_cmpeqn1_fp1_jump_nt },
  { Hexagon::J4_cmpeqn1_t_jumpnv_t, Hexagon::J4_cmpeqn1_t_jumpnv_nt },
  { Hexagon::J4_cmpeqn1_tp0_jump_t, Hexagon::J4_cmpeqn1_tp0_jump_nt },
  { Hexagon::J4_cmpeqn1_tp1_jump_t, Hexagon::J4_cmpeqn1_tp1_jump_nt },
  { Hexagon::J4_cmpgt_f_jumpnv_t, Hexagon::J4_cmpgt_f_jumpnv_nt },
  { Hexagon::J4_cmpgt_fp0_jump_t, Hexagon::J4_cmpgt_fp0_jump_nt },
  { Hexagon::J4_cmpgt_fp1_jump_t, Hexagon::J4_cmpgt_fp1_jump_nt },
  { Hexagon::J4_cmpgt_t_jumpnv_t, Hexagon::J4_cmpgt_t_jumpnv_nt },
  { Hexagon::J4_cmpgt_tp0_jump_t, Hexagon::J4_cmpgt_tp0_jump_nt },
  { Hexagon::J4_cmpgt_tp1_jump_t, Hexagon::J4_cmpgt_tp1_jump_nt },
  { Hexagon::J4_cmpgti_f_jumpnv_t, Hexagon::J4_cmpgti_f_jumpnv_nt },
  { Hexagon::J4_cmpgti_fp0_jump_t, Hexagon::J4_cmpgti_fp0_jump_nt },
  { Hexagon::J4_cmpgti_fp1_jump_t, Hexagon::J4_cmpgti_fp1_jump_nt },
  { Hexagon::J4_cmpgti_t_jumpnv_t, Hexagon::J4_cmpgti_t_jumpnv_nt },
  { Hexagon::J4_cmpgti_tp0_jump_t, Hexagon::J4_cmpgti_tp0_jump_nt },
  { Hexagon::J4_cmpgti_tp1_jump_t, Hexagon::J4_cmpgti_tp1_jump_nt },
  { Hexagon::J4_cmpgtn1_f_jumpnv_t, Hexagon::J4_cmpgtn1_f_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_fp0_jump_t, Hexagon::J4_cmpgtn1_fp0_jump_nt },
  { Hexagon::J4_cmpgtn1_fp1_jump_t, Hexagon::J4_cmpgtn1_fp1_jump_nt },
  { Hexagon::J4_cmpgtn1_t_jumpnv_t, Hexagon::J4_cmpgtn1_t_jumpnv_nt },
  { Hexagon::J4_cmpgtn1_tp0_jump_t, Hexagon::J4_cmpgtn1_tp0_jump_nt },
  { Hexagon::J4_cmpgtn1_tp1_jump_t, Hexagon::J4_cmpgtn1_tp1_jump_nt },
  { Hexagon::J4_cmpgtu_f_jumpnv_t, Hexagon::J4_cmpgtu_f_jumpnv_nt },
  { Hexagon::J4_cmpgtu_fp0_jump_t, Hexagon::J4_cmpgtu_fp0_jump_nt },
  { Hexagon::J4_cmpgtu_fp1_jump_t, Hexagon::J4_cmpgtu_fp1_jump_nt },
  { Hexagon::J4_cmpgtu_t_jumpnv_t, Hexagon::J4_cmpgtu_t_jumpnv_nt },
  { Hexagon::J4_cmpgtu_tp0_jump_t, Hexagon::J4_cmpgtu_tp0_jump_nt },
  { Hexagon::J4_cmpgtu_tp1_jump_t, Hexagon::J4_cmpgtu_tp1_jump_nt },
  { Hexagon::J4_cmpgtui_f_jumpnv_t, Hexagon::J4_cmpgtui_f_jumpnv_nt },
  { Hexagon::J4_cmpgtui_fp0_jump_t, Hexagon::J4_cmpgtui_fp0_jump_nt },
  { Hexagon::J4_cmpgtui_fp1_jump_t, Hexagon::J4_cmpgtui_fp1_jump_nt },
  { Hexagon::J4_cmpgtui_t_jumpnv_t, Hexagon::J4_cmpgtui_t_jumpnv_nt },
  { Hexagon::J4_cmpgtui_tp0_jump_t, Hexagon::J4_cmpgtui_tp0_jump_nt },
  { Hexagon::J4_cmpgtui_tp1_jump_t, Hexagon::J4_cmpgtui_tp1_jump_nt },
  { Hexagon::J4_cmplt_f_jumpnv_t, Hexagon::J4_cmplt_f_jumpnv_nt },
  { Hexagon::J4_cmplt_t_jumpnv_t, Hexagon::J4_cmplt_t_jumpnv_nt },
  { Hexagon::J4_cmpltu_f_jumpnv_t, Hexagon::J4_cmpltu_f_jumpnv_nt },
  { Hexagon::J4_cmpltu_t_jumpnv_t, Hexagon::J4_cmpltu_t_jumpnv_nt },
  { Hexagon::L4_return_fnew_pt, Hexagon::L4_return_fnew_pnt },
  { Hexagon::L4_return_tnew_pt, Hexagon::L4_return_tnew_pnt },
  { Hexagon::PS_jmpretfnewpt, Hexagon::PS_jmpretfnew },
  { Hexagon::PS_jmprettnewpt, Hexagon::PS_jmprettnew },
}; // End of notTakenBranchPredictionTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 64;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == notTakenBranchPredictionTable[mid][0]) {
      break;
    }
    if (Opcode < notTakenBranchPredictionTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return notTakenBranchPredictionTable[mid][1];
}

// takenBranchPrediction
LLVM_READONLY
int takenBranchPrediction(uint16_t Opcode) {
static const uint16_t takenBranchPredictionTable[][2] = {
  { Hexagon::J2_jumpf, Hexagon::J2_jumpfpt },
  { Hexagon::J2_jumpfnew, Hexagon::J2_jumpfnewpt },
  { Hexagon::J2_jumprf, Hexagon::J2_jumprfpt },
  { Hexagon::J2_jumprfnew, Hexagon::J2_jumprfnewpt },
  { Hexagon::J2_jumprt, Hexagon::J2_jumprtpt },
  { Hexagon::J2_jumprtnew, Hexagon::J2_jumprtnewpt },
  { Hexagon::J2_jumpt, Hexagon::J2_jumptpt },
  { Hexagon::J2_jumptnew, Hexagon::J2_jumptnewpt },
  { Hexagon::J4_cmpeq_f_jumpnv_nt, Hexagon::J4_cmpeq_f_jumpnv_t },
  { Hexagon::J4_cmpeq_fp0_jump_nt, Hexagon::J4_cmpeq_fp0_jump_t },
  { Hexagon::J4_cmpeq_fp1_jump_nt, Hexagon::J4_cmpeq_fp1_jump_t },
  { Hexagon::J4_cmpeq_t_jumpnv_nt, Hexagon::J4_cmpeq_t_jumpnv_t },
  { Hexagon::J4_cmpeq_tp0_jump_nt, Hexagon::J4_cmpeq_tp0_jump_t },
  { Hexagon::J4_cmpeq_tp1_jump_nt, Hexagon::J4_cmpeq_tp1_jump_t },
  { Hexagon::J4_cmpeqi_f_jumpnv_nt, Hexagon::J4_cmpeqi_f_jumpnv_t },
  { Hexagon::J4_cmpeqi_fp0_jump_nt, Hexagon::J4_cmpeqi_fp0_jump_t },
  { Hexagon::J4_cmpeqi_fp1_jump_nt, Hexagon::J4_cmpeqi_fp1_jump_t },
  { Hexagon::J4_cmpeqi_t_jumpnv_nt, Hexagon::J4_cmpeqi_t_jumpnv_t },
  { Hexagon::J4_cmpeqi_tp0_jump_nt, Hexagon::J4_cmpeqi_tp0_jump_t },
  { Hexagon::J4_cmpeqi_tp1_jump_nt, Hexagon::J4_cmpeqi_tp1_jump_t },
  { Hexagon::J4_cmpeqn1_f_jumpnv_nt, Hexagon::J4_cmpeqn1_f_jumpnv_t },
  { Hexagon::J4_cmpeqn1_fp0_jump_nt, Hexagon::J4_cmpeqn1_fp0_jump_t },
  { Hexagon::J4_cmpeqn1_fp1_jump_nt, Hexagon::J4_cmpeqn1_fp1_jump_t },
  { Hexagon::J4_cmpeqn1_t_jumpnv_nt, Hexagon::J4_cmpeqn1_t_jumpnv_t },
  { Hexagon::J4_cmpeqn1_tp0_jump_nt, Hexagon::J4_cmpeqn1_tp0_jump_t },
  { Hexagon::J4_cmpeqn1_tp1_jump_nt, Hexagon::J4_cmpeqn1_tp1_jump_t },
  { Hexagon::J4_cmpgt_f_jumpnv_nt, Hexagon::J4_cmpgt_f_jumpnv_t },
  { Hexagon::J4_cmpgt_fp0_jump_nt, Hexagon::J4_cmpgt_fp0_jump_t },
  { Hexagon::J4_cmpgt_fp1_jump_nt, Hexagon::J4_cmpgt_fp1_jump_t },
  { Hexagon::J4_cmpgt_t_jumpnv_nt, Hexagon::J4_cmpgt_t_jumpnv_t },
  { Hexagon::J4_cmpgt_tp0_jump_nt, Hexagon::J4_cmpgt_tp0_jump_t },
  { Hexagon::J4_cmpgt_tp1_jump_nt, Hexagon::J4_cmpgt_tp1_jump_t },
  { Hexagon::J4_cmpgti_f_jumpnv_nt, Hexagon::J4_cmpgti_f_jumpnv_t },
  { Hexagon::J4_cmpgti_fp0_jump_nt, Hexagon::J4_cmpgti_fp0_jump_t },
  { Hexagon::J4_cmpgti_fp1_jump_nt, Hexagon::J4_cmpgti_fp1_jump_t },
  { Hexagon::J4_cmpgti_t_jumpnv_nt, Hexagon::J4_cmpgti_t_jumpnv_t },
  { Hexagon::J4_cmpgti_tp0_jump_nt, Hexagon::J4_cmpgti_tp0_jump_t },
  { Hexagon::J4_cmpgti_tp1_jump_nt, Hexagon::J4_cmpgti_tp1_jump_t },
  { Hexagon::J4_cmpgtn1_f_jumpnv_nt, Hexagon::J4_cmpgtn1_f_jumpnv_t },
  { Hexagon::J4_cmpgtn1_fp0_jump_nt, Hexagon::J4_cmpgtn1_fp0_jump_t },
  { Hexagon::J4_cmpgtn1_fp1_jump_nt, Hexagon::J4_cmpgtn1_fp1_jump_t },
  { Hexagon::J4_cmpgtn1_t_jumpnv_nt, Hexagon::J4_cmpgtn1_t_jumpnv_t },
  { Hexagon::J4_cmpgtn1_tp0_jump_nt, Hexagon::J4_cmpgtn1_tp0_jump_t },
  { Hexagon::J4_cmpgtn1_tp1_jump_nt, Hexagon::J4_cmpgtn1_tp1_jump_t },
  { Hexagon::J4_cmpgtu_f_jumpnv_nt, Hexagon::J4_cmpgtu_f_jumpnv_t },
  { Hexagon::J4_cmpgtu_fp0_jump_nt, Hexagon::J4_cmpgtu_fp0_jump_t },
  { Hexagon::J4_cmpgtu_fp1_jump_nt, Hexagon::J4_cmpgtu_fp1_jump_t },
  { Hexagon::J4_cmpgtu_t_jumpnv_nt, Hexagon::J4_cmpgtu_t_jumpnv_t },
  { Hexagon::J4_cmpgtu_tp0_jump_nt, Hexagon::J4_cmpgtu_tp0_jump_t },
  { Hexagon::J4_cmpgtu_tp1_jump_nt, Hexagon::J4_cmpgtu_tp1_jump_t },
  { Hexagon::J4_cmpgtui_f_jumpnv_nt, Hexagon::J4_cmpgtui_f_jumpnv_t },
  { Hexagon::J4_cmpgtui_fp0_jump_nt, Hexagon::J4_cmpgtui_fp0_jump_t },
  { Hexagon::J4_cmpgtui_fp1_jump_nt, Hexagon::J4_cmpgtui_fp1_jump_t },
  { Hexagon::J4_cmpgtui_t_jumpnv_nt, Hexagon::J4_cmpgtui_t_jumpnv_t },
  { Hexagon::J4_cmpgtui_tp0_jump_nt, Hexagon::J4_cmpgtui_tp0_jump_t },
  { Hexagon::J4_cmpgtui_tp1_jump_nt, Hexagon::J4_cmpgtui_tp1_jump_t },
  { Hexagon::J4_cmplt_f_jumpnv_nt, Hexagon::J4_cmplt_f_jumpnv_t },
  { Hexagon::J4_cmplt_t_jumpnv_nt, Hexagon::J4_cmplt_t_jumpnv_t },
  { Hexagon::J4_cmpltu_f_jumpnv_nt, Hexagon::J4_cmpltu_f_jumpnv_t },
  { Hexagon::J4_cmpltu_t_jumpnv_nt, Hexagon::J4_cmpltu_t_jumpnv_t },
  { Hexagon::L4_return_fnew_pnt, Hexagon::L4_return_fnew_pt },
  { Hexagon::L4_return_tnew_pnt, Hexagon::L4_return_tnew_pt },
  { Hexagon::PS_jmpretfnew, Hexagon::PS_jmpretfnewpt },
  { Hexagon::PS_jmprettnew, Hexagon::PS_jmprettnewpt },
}; // End of takenBranchPredictionTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 64;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == takenBranchPredictionTable[mid][0]) {
      break;
    }
    if (Opcode < takenBranchPredictionTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return takenBranchPredictionTable[mid][1];
}

} // end namespace Hexagon
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

