/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> WebAssemblyInstPrinter::getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "br      \t\0"
  /* 10 */ "try     \t\0"
  /* 20 */ "if    \t\0"
  /* 28 */ "return_call    \t\0"
  /* 45 */ "loop    \t\0"
  /* 55 */ "br_if   \t\0"
  /* 65 */ "catch   \t\0"
  /* 75 */ "block   \t\0"
  /* 85 */ "throw   \t\0"
  /* 95 */ "f32.ge  \t\0"
  /* 105 */ "f64.ge  \t\0"
  /* 115 */ "f32.le  \t\0"
  /* 125 */ "f64.le  \t\0"
  /* 135 */ "f32.ne  \t\0"
  /* 145 */ "i32.ne  \t\0"
  /* 155 */ "f64.ne  \t\0"
  /* 165 */ "i64.ne  \t\0"
  /* 175 */ "f32.eq  \t\0"
  /* 185 */ "i32.eq  \t\0"
  /* 195 */ "f64.eq  \t\0"
  /* 205 */ "i64.eq  \t\0"
  /* 215 */ "i32.or  \t\0"
  /* 225 */ "i64.or  \t\0"
  /* 235 */ "f32.gt  \t\0"
  /* 245 */ "f64.gt  \t\0"
  /* 255 */ "f32.lt  \t\0"
  /* 265 */ "f64.lt  \t\0"
  /* 275 */ "memory.atomic.wait32 \t\0"
  /* 298 */ "memory.atomic.wait64 \t\0"
  /* 321 */ "f32.sub \t\0"
  /* 331 */ "i32.sub \t\0"
  /* 341 */ "f64.sub \t\0"
  /* 351 */ "i64.sub \t\0"
  /* 361 */ "f32.add \t\0"
  /* 371 */ "i32.add \t\0"
  /* 381 */ "f64.add \t\0"
  /* 391 */ "i64.add \t\0"
  /* 401 */ "i32.and \t\0"
  /* 411 */ "i64.and \t\0"
  /* 421 */ "br_table \t\0"
  /* 432 */ "f32.neg \t\0"
  /* 442 */ "f64.neg \t\0"
  /* 452 */ "i32.shl \t\0"
  /* 462 */ "i64.shl \t\0"
  /* 472 */ "f32.mul \t\0"
  /* 482 */ "i32.mul \t\0"
  /* 492 */ "f64.mul \t\0"
  /* 502 */ "i64.mul \t\0"
  /* 512 */ "f32.min \t\0"
  /* 522 */ "f64.min \t\0"
  /* 532 */ "i32.xor \t\0"
  /* 542 */ "i64.xor \t\0"
  /* 552 */ "f32.abs \t\0"
  /* 562 */ "f64.abs \t\0"
  /* 572 */ "f32.div \t\0"
  /* 582 */ "f64.div \t\0"
  /* 592 */ "rethrow \t\0"
  /* 602 */ "f32.max \t\0"
  /* 612 */ "f64.max \t\0"
  /* 622 */ "memory.atomic.notify \t\0"
  /* 645 */ "i32.clz \t\0"
  /* 655 */ "i64.clz \t\0"
  /* 665 */ "i32.eqz \t\0"
  /* 675 */ "i64.eqz \t\0"
  /* 685 */ "i32.ctz \t\0"
  /* 695 */ "i64.ctz \t\0"
  /* 705 */ "i64.store32\t\0"
  /* 718 */ "i64.atomic.store32\t\0"
  /* 738 */ "f64.promote_f32\t\0"
  /* 755 */ "i32.reinterpret_f32\t\0"
  /* 776 */ "f32.reinterpret_i32\t\0"
  /* 797 */ "f32x4.demote_zero_f64x2\t\0"
  /* 822 */ "f32.demote_f64\t\0"
  /* 838 */ "i64.reinterpret_f64\t\0"
  /* 859 */ "i32.wrap_i64\t\0"
  /* 873 */ "f64.reinterpret_i64\t\0"
  /* 894 */ "f64x2.promote_low_f32x4\t\0"
  /* 919 */ "i32.store16\t\0"
  /* 932 */ "i64.store16\t\0"
  /* 945 */ "i32.atomic.store16\t\0"
  /* 965 */ "i64.atomic.store16\t\0"
  /* 985 */ "i32.store8\t\0"
  /* 997 */ "i64.store8\t\0"
  /* 1009 */ "i32.atomic.store8\t\0"
  /* 1028 */ "i64.atomic.store8\t\0"
  /* 1047 */ "f64x2.qfma\t\0"
  /* 1059 */ "f32x4.qfma\t\0"
  /* 1071 */ "f64x2.sub\t\0"
  /* 1082 */ "i64x2.sub\t\0"
  /* 1093 */ "f32x4.sub\t\0"
  /* 1104 */ "i32x4.sub\t\0"
  /* 1115 */ "i8x16.sub\t\0"
  /* 1126 */ "i16x8.sub\t\0"
  /* 1137 */ "i32.atomic.rmw.sub\t\0"
  /* 1157 */ "i64.atomic.rmw.sub\t\0"
  /* 1177 */ "f32.trunc\t\0"
  /* 1188 */ "f64x2.trunc\t\0"
  /* 1201 */ "f64.trunc\t\0"
  /* 1212 */ "f32x4.trunc\t\0"
  /* 1225 */ "f32.load\t\0"
  /* 1235 */ "i32.load\t\0"
  /* 1245 */ "f64.load\t\0"
  /* 1255 */ "i64.load\t\0"
  /* 1265 */ "v128.load\t\0"
  /* 1276 */ "i32.atomic.load\t\0"
  /* 1293 */ "i64.atomic.load\t\0"
  /* 1310 */ "f64x2.add\t\0"
  /* 1321 */ "i64x2.add\t\0"
  /* 1332 */ "f32x4.add\t\0"
  /* 1343 */ "i32x4.add\t\0"
  /* 1354 */ "i8x16.add\t\0"
  /* 1365 */ "i16x8.add\t\0"
  /* 1376 */ "i32.atomic.rmw.add\t\0"
  /* 1396 */ "i64.atomic.rmw.add\t\0"
  /* 1416 */ "v128.and\t\0"
  /* 1426 */ "i32.atomic.rmw.and\t\0"
  /* 1446 */ "i64.atomic.rmw.and\t\0"
  /* 1466 */ "local.tee\t\0"
  /* 1477 */ "f64x2.ge\t\0"
  /* 1487 */ "f32x4.ge\t\0"
  /* 1497 */ "f64x2.le\t\0"
  /* 1507 */ "f32x4.le\t\0"
  /* 1517 */ "i8x16.shuffle\t\0"
  /* 1532 */ "i8x16.swizzle\t\0"
  /* 1547 */ "f64x2.ne\t\0"
  /* 1557 */ "f32x4.ne\t\0"
  /* 1567 */ "i32x4.ne\t\0"
  /* 1577 */ "i8x16.ne\t\0"
  /* 1587 */ "i16x8.ne\t\0"
  /* 1597 */ "v128.load32_lane\t\0"
  /* 1615 */ "v128.store32_lane\t\0"
  /* 1634 */ "v128.load64_lane\t\0"
  /* 1652 */ "v128.store64_lane\t\0"
  /* 1671 */ "v128.load16_lane\t\0"
  /* 1689 */ "v128.store16_lane\t\0"
  /* 1708 */ "v128.load8_lane\t\0"
  /* 1725 */ "v128.store8_lane\t\0"
  /* 1743 */ "f64x2.replace_lane\t\0"
  /* 1763 */ "i64x2.replace_lane\t\0"
  /* 1783 */ "f32x4.replace_lane\t\0"
  /* 1803 */ "i32x4.replace_lane\t\0"
  /* 1823 */ "i8x16.replace_lane\t\0"
  /* 1843 */ "i16x8.replace_lane\t\0"
  /* 1863 */ "f64x2.extract_lane\t\0"
  /* 1883 */ "i64x2.extract_lane\t\0"
  /* 1903 */ "f32x4.extract_lane\t\0"
  /* 1923 */ "i32x4.extract_lane\t\0"
  /* 1943 */ "f32.store\t\0"
  /* 1954 */ "i32.store\t\0"
  /* 1965 */ "f64.store\t\0"
  /* 1976 */ "i64.store\t\0"
  /* 1987 */ "v128.store\t\0"
  /* 1999 */ "i32.atomic.store\t\0"
  /* 2017 */ "i64.atomic.store\t\0"
  /* 2035 */ "i64x2.all_true\t\0"
  /* 2051 */ "i32x4.all_true\t\0"
  /* 2067 */ "i8x16.all_true\t\0"
  /* 2083 */ "i16x8.all_true\t\0"
  /* 2099 */ "i64x2.any_true\t\0"
  /* 2115 */ "i32x4.any_true\t\0"
  /* 2131 */ "i8x16.any_true\t\0"
  /* 2147 */ "i16x8.any_true\t\0"
  /* 2163 */ "table.size\t\0"
  /* 2175 */ "memory.size\t\0"
  /* 2188 */ "f64x2.neg\t\0"
  /* 2199 */ "i64x2.neg\t\0"
  /* 2210 */ "f32x4.neg\t\0"
  /* 2221 */ "i32x4.neg\t\0"
  /* 2232 */ "i8x16.neg\t\0"
  /* 2243 */ "i16x8.neg\t\0"
  /* 2254 */ "i32.atomic.rmw.xchg\t\0"
  /* 2275 */ "i64.atomic.rmw.xchg\t\0"
  /* 2296 */ "i32.atomic.rmw.cmpxchg\t\0"
  /* 2320 */ "i64.atomic.rmw.cmpxchg\t\0"
  /* 2344 */ "i64x2.bitmask\t\0"
  /* 2359 */ "i32x4.bitmask\t\0"
  /* 2374 */ "i8x16.bitmask\t\0"
  /* 2389 */ "i16x8.bitmask\t\0"
  /* 2404 */ "i64x2.shl\t\0"
  /* 2415 */ "i32x4.shl\t\0"
  /* 2426 */ "i8x16.shl\t\0"
  /* 2437 */ "i16x8.shl\t\0"
  /* 2448 */ "f32.ceil\t\0"
  /* 2458 */ "f64x2.ceil\t\0"
  /* 2470 */ "f64.ceil\t\0"
  /* 2480 */ "f32x4.ceil\t\0"
  /* 2492 */ "return_call\t\0"
  /* 2505 */ "table.fill\t\0"
  /* 2517 */ "memory.fill\t\0"
  /* 2530 */ "ref.null\t\0"
  /* 2540 */ "i32.rotl\t\0"
  /* 2550 */ "i64.rotl\t\0"
  /* 2560 */ "f64x2.mul\t\0"
  /* 2571 */ "i64x2.mul\t\0"
  /* 2582 */ "f32x4.mul\t\0"
  /* 2593 */ "i32x4.mul\t\0"
  /* 2604 */ "i16x8.mul\t\0"
  /* 2615 */ "f32.copysign\t\0"
  /* 2629 */ "f64.copysign\t\0"
  /* 2643 */ "f64x2.min\t\0"
  /* 2654 */ "f32x4.min\t\0"
  /* 2665 */ "f64x2.pmin\t\0"
  /* 2677 */ "f32x4.pmin\t\0"
  /* 2689 */ "v128.load32_zero\t\0"
  /* 2707 */ "v128.load64_zero\t\0"
  /* 2725 */ "data.drop\t\0"
  /* 2736 */ "f64x2.eq\t\0"
  /* 2746 */ "i64x2.eq\t\0"
  /* 2756 */ "f32x4.eq\t\0"
  /* 2766 */ "i32x4.eq\t\0"
  /* 2776 */ "i8x16.eq\t\0"
  /* 2786 */ "i16x8.eq\t\0"
  /* 2796 */ "v128.or\t\0"
  /* 2805 */ "i32.atomic.rmw.or\t\0"
  /* 2824 */ "i64.atomic.rmw.or\t\0"
  /* 2843 */ "f32.floor\t\0"
  /* 2854 */ "f64x2.floor\t\0"
  /* 2867 */ "f64.floor\t\0"
  /* 2878 */ "f32x4.floor\t\0"
  /* 2891 */ "v128.xor\t\0"
  /* 2901 */ "i32.atomic.rmw.xor\t\0"
  /* 2921 */ "i64.atomic.rmw.xor\t\0"
  /* 2941 */ "i32.rotr\t\0"
  /* 2951 */ "i64.rotr\t\0"
  /* 2961 */ "i64.load32_s\t\0"
  /* 2975 */ "i64.extend32_s\t\0"
  /* 2991 */ "i32.trunc_f32_s\t\0"
  /* 3008 */ "i64.trunc_f32_s\t\0"
  /* 3025 */ "i32.trunc_sat_f32_s\t\0"
  /* 3046 */ "i64.trunc_sat_f32_s\t\0"
  /* 3067 */ "i64.extend_i32_s\t\0"
  /* 3085 */ "f32.convert_i32_s\t\0"
  /* 3104 */ "f64.convert_i32_s\t\0"
  /* 3123 */ "i64x2.load32x2_s\t\0"
  /* 3141 */ "i32x4.trunc_sat_zero_f64x2_s\t\0"
  /* 3171 */ "i32.trunc_f64_s\t\0"
  /* 3188 */ "i64.trunc_f64_s\t\0"
  /* 3205 */ "i32.trunc_sat_f64_s\t\0"
  /* 3226 */ "i64.trunc_sat_f64_s\t\0"
  /* 3247 */ "f32.convert_i64_s\t\0"
  /* 3266 */ "f64.convert_i64_s\t\0"
  /* 3285 */ "i32x4.trunc_sat_f32x4_s\t\0"
  /* 3310 */ "i64x2.extmul_high_i32x4_s\t\0"
  /* 3337 */ "i64x2.widen_high_i32x4_s\t\0"
  /* 3363 */ "f32x4.convert_i32x4_s\t\0"
  /* 3386 */ "i64x2.extmul_low_i32x4_s\t\0"
  /* 3412 */ "i64x2.widen_low_i32x4_s\t\0"
  /* 3437 */ "f64x2.convert_low_i32x4_s\t\0"
  /* 3464 */ "i16x8.narrow_i32x4_s\t\0"
  /* 3486 */ "i32x4.load16x4_s\t\0"
  /* 3504 */ "i32.load16_s\t\0"
  /* 3518 */ "i64.load16_s\t\0"
  /* 3532 */ "i32.extend16_s\t\0"
  /* 3548 */ "i64.extend16_s\t\0"
  /* 3564 */ "i16x8.extadd_pairwise_i8x16_s\t\0"
  /* 3595 */ "i16x8.extmul_high_i8x16_s\t\0"
  /* 3622 */ "i16x8.widen_high_i8x16_s\t\0"
  /* 3648 */ "i32x4.widen_i8x16_s\t\0"
  /* 3669 */ "i16x8.extmul_low_i8x16_s\t\0"
  /* 3695 */ "i16x8.widen_low_i8x16_s\t\0"
  /* 3720 */ "i32.load8_s\t\0"
  /* 3733 */ "i64.load8_s\t\0"
  /* 3746 */ "i32.extend8_s\t\0"
  /* 3761 */ "i64.extend8_s\t\0"
  /* 3776 */ "i32x4.extadd_pairwise_i16x8_s\t\0"
  /* 3807 */ "i32x4.extmul_high_i16x8_s\t\0"
  /* 3834 */ "i32x4.widen_high_i16x8_s\t\0"
  /* 3860 */ "i32x4.dot_i16x8_s\t\0"
  /* 3879 */ "i32x4.extmul_low_i16x8_s\t\0"
  /* 3905 */ "i32x4.widen_low_i16x8_s\t\0"
  /* 3930 */ "i8x16.narrow_i16x8_s\t\0"
  /* 3952 */ "i16x8.load8x8_s\t\0"
  /* 3969 */ "i32.ge_s\t\0"
  /* 3979 */ "i64.ge_s\t\0"
  /* 3989 */ "i32x4.ge_s\t\0"
  /* 4001 */ "i8x16.ge_s\t\0"
  /* 4013 */ "i16x8.ge_s\t\0"
  /* 4025 */ "i32.le_s\t\0"
  /* 4035 */ "i64.le_s\t\0"
  /* 4045 */ "i32x4.le_s\t\0"
  /* 4057 */ "i8x16.le_s\t\0"
  /* 4069 */ "i16x8.le_s\t\0"
  /* 4081 */ "i8x16.extract_lane_s\t\0"
  /* 4103 */ "i16x8.extract_lane_s\t\0"
  /* 4125 */ "i8x16.sub_saturate_s\t\0"
  /* 4147 */ "i16x8.sub_saturate_s\t\0"
  /* 4169 */ "i8x16.add_saturate_s\t\0"
  /* 4191 */ "i16x8.add_saturate_s\t\0"
  /* 4213 */ "i32.rem_s\t\0"
  /* 4224 */ "i64.rem_s\t\0"
  /* 4235 */ "i32x4.min_s\t\0"
  /* 4248 */ "i8x16.min_s\t\0"
  /* 4261 */ "i16x8.min_s\t\0"
  /* 4274 */ "i32.shr_s\t\0"
  /* 4285 */ "i64x2.shr_s\t\0"
  /* 4298 */ "i64.shr_s\t\0"
  /* 4309 */ "i32x4.shr_s\t\0"
  /* 4322 */ "i8x16.shr_s\t\0"
  /* 4335 */ "i16x8.shr_s\t\0"
  /* 4348 */ "i16x8.q15mulr_sat_s\t\0"
  /* 4369 */ "i32.gt_s\t\0"
  /* 4379 */ "i64.gt_s\t\0"
  /* 4389 */ "i32x4.gt_s\t\0"
  /* 4401 */ "i8x16.gt_s\t\0"
  /* 4413 */ "i16x8.gt_s\t\0"
  /* 4425 */ "i32.lt_s\t\0"
  /* 4435 */ "i64.lt_s\t\0"
  /* 4445 */ "i32x4.lt_s\t\0"
  /* 4457 */ "i8x16.lt_s\t\0"
  /* 4469 */ "i16x8.lt_s\t\0"
  /* 4481 */ "i32.div_s\t\0"
  /* 4492 */ "i64.div_s\t\0"
  /* 4503 */ "i32x4.max_s\t\0"
  /* 4516 */ "i8x16.max_s\t\0"
  /* 4529 */ "i16x8.max_s\t\0"
  /* 4542 */ "f64x2.abs\t\0"
  /* 4553 */ "i64x2.abs\t\0"
  /* 4564 */ "f32x4.abs\t\0"
  /* 4575 */ "i32x4.abs\t\0"
  /* 4586 */ "i8x16.abs\t\0"
  /* 4597 */ "i16x8.abs\t\0"
  /* 4608 */ "call_params\t\0"
  /* 4621 */ "f64x2.qfms\t\0"
  /* 4633 */ "f32x4.qfms\t\0"
  /* 4645 */ "prefetch.t\t\0"
  /* 4657 */ "f64x2.splat\t\0"
  /* 4670 */ "i64x2.splat\t\0"
  /* 4683 */ "f32x4.splat\t\0"
  /* 4696 */ "i32x4.splat\t\0"
  /* 4709 */ "i8x16.splat\t\0"
  /* 4722 */ "i16x8.splat\t\0"
  /* 4735 */ "v128.load32_splat\t\0"
  /* 4754 */ "v128.load64_splat\t\0"
  /* 4773 */ "v128.load16_splat\t\0"
  /* 4792 */ "v128.load8_splat\t\0"
  /* 4810 */ "f32.select\t\0"
  /* 4822 */ "i32.select\t\0"
  /* 4834 */ "f64.select\t\0"
  /* 4846 */ "i64.select\t\0"
  /* 4858 */ "v128.select\t\0"
  /* 4871 */ "funcref.select\t\0"
  /* 4887 */ "externref.select\t\0"
  /* 4905 */ "i64x2.signselect\t\0"
  /* 4923 */ "i32x4.signselect\t\0"
  /* 4941 */ "i8x16.signselect\t\0"
  /* 4959 */ "i16x8.signselect\t\0"
  /* 4977 */ "v128.bitselect\t\0"
  /* 4993 */ "return_call_indirect\t\0"
  /* 5015 */ "table.get\t\0"
  /* 5026 */ "global.get\t\0"
  /* 5038 */ "local.get\t\0"
  /* 5049 */ "table.set\t\0"
  /* 5060 */ "global.set\t\0"
  /* 5072 */ "local.set\t\0"
  /* 5083 */ "f64x2.gt\t\0"
  /* 5093 */ "f32x4.gt\t\0"
  /* 5103 */ "memory.init\t\0"
  /* 5116 */ "f64x2.lt\t\0"
  /* 5126 */ "f32x4.lt\t\0"
  /* 5136 */ "prefetch.nt\t\0"
  /* 5149 */ "i32.popcnt\t\0"
  /* 5161 */ "i64.popcnt\t\0"
  /* 5173 */ "i8x16.popcnt\t\0"
  /* 5187 */ "v128.not\t\0"
  /* 5197 */ "v128.andnot\t\0"
  /* 5210 */ "f32.sqrt\t\0"
  /* 5220 */ "f64x2.sqrt\t\0"
  /* 5232 */ "f64.sqrt\t\0"
  /* 5242 */ "f32x4.sqrt\t\0"
  /* 5254 */ "f32.nearest\t\0"
  /* 5267 */ "f64x2.nearest\t\0"
  /* 5282 */ "f64.nearest\t\0"
  /* 5295 */ "f32x4.nearest\t\0"
  /* 5310 */ "f32.const\t\0"
  /* 5321 */ "i32.const\t\0"
  /* 5332 */ "f64.const\t\0"
  /* 5343 */ "i64.const\t\0"
  /* 5354 */ "v128.const\t\0"
  /* 5366 */ "i64.load32_u\t\0"
  /* 5380 */ "i64.atomic.load32_u\t\0"
  /* 5401 */ "i32.trunc_f32_u\t\0"
  /* 5418 */ "i64.trunc_f32_u\t\0"
  /* 5435 */ "i32.trunc_sat_f32_u\t\0"
  /* 5456 */ "i64.trunc_sat_f32_u\t\0"
  /* 5477 */ "i64.extend_i32_u\t\0"
  /* 5495 */ "f32.convert_i32_u\t\0"
  /* 5514 */ "f64.convert_i32_u\t\0"
  /* 5533 */ "i64x2.load32x2_u\t\0"
  /* 5551 */ "i32x4.trunc_sat_zero_f64x2_u\t\0"
  /* 5581 */ "i32.trunc_f64_u\t\0"
  /* 5598 */ "i64.trunc_f64_u\t\0"
  /* 5615 */ "i32.trunc_sat_f64_u\t\0"
  /* 5636 */ "i64.trunc_sat_f64_u\t\0"
  /* 5657 */ "f32.convert_i64_u\t\0"
  /* 5676 */ "f64.convert_i64_u\t\0"
  /* 5695 */ "i32x4.trunc_sat_f32x4_u\t\0"
  /* 5720 */ "i64x2.extmul_high_i32x4_u\t\0"
  /* 5747 */ "i64x2.widen_high_i32x4_u\t\0"
  /* 5773 */ "f32x4.convert_i32x4_u\t\0"
  /* 5796 */ "i64x2.extmul_low_i32x4_u\t\0"
  /* 5822 */ "i64x2.widen_low_i32x4_u\t\0"
  /* 5847 */ "f64x2.convert_low_i32x4_u\t\0"
  /* 5874 */ "i16x8.narrow_i32x4_u\t\0"
  /* 5896 */ "i32x4.load16x4_u\t\0"
  /* 5914 */ "i32.load16_u\t\0"
  /* 5928 */ "i64.load16_u\t\0"
  /* 5942 */ "i32.atomic.load16_u\t\0"
  /* 5963 */ "i64.atomic.load16_u\t\0"
  /* 5984 */ "i16x8.extadd_pairwise_i8x16_u\t\0"
  /* 6015 */ "i16x8.extmul_high_i8x16_u\t\0"
  /* 6042 */ "i16x8.widen_high_i8x16_u\t\0"
  /* 6068 */ "i32x4.widen_i8x16_u\t\0"
  /* 6089 */ "i16x8.extmul_low_i8x16_u\t\0"
  /* 6115 */ "i16x8.widen_low_i8x16_u\t\0"
  /* 6140 */ "i32.load8_u\t\0"
  /* 6153 */ "i64.load8_u\t\0"
  /* 6166 */ "i32.atomic.load8_u\t\0"
  /* 6186 */ "i64.atomic.load8_u\t\0"
  /* 6206 */ "i32x4.extadd_pairwise_i16x8_u\t\0"
  /* 6237 */ "i32x4.extmul_high_i16x8_u\t\0"
  /* 6264 */ "i32x4.widen_high_i16x8_u\t\0"
  /* 6290 */ "i32x4.extmul_low_i16x8_u\t\0"
  /* 6316 */ "i32x4.widen_low_i16x8_u\t\0"
  /* 6341 */ "i8x16.narrow_i16x8_u\t\0"
  /* 6363 */ "i16x8.load8x8_u\t\0"
  /* 6380 */ "i64.atomic.rmw32.sub_u\t\0"
  /* 6404 */ "i32.atomic.rmw16.sub_u\t\0"
  /* 6428 */ "i64.atomic.rmw16.sub_u\t\0"
  /* 6452 */ "i32.atomic.rmw8.sub_u\t\0"
  /* 6475 */ "i64.atomic.rmw8.sub_u\t\0"
  /* 6498 */ "i64.atomic.rmw32.add_u\t\0"
  /* 6522 */ "i32.atomic.rmw16.add_u\t\0"
  /* 6546 */ "i64.atomic.rmw16.add_u\t\0"
  /* 6570 */ "i32.atomic.rmw8.add_u\t\0"
  /* 6593 */ "i64.atomic.rmw8.add_u\t\0"
  /* 6616 */ "i64.atomic.rmw32.and_u\t\0"
  /* 6640 */ "i32.atomic.rmw16.and_u\t\0"
  /* 6664 */ "i64.atomic.rmw16.and_u\t\0"
  /* 6688 */ "i32.atomic.rmw8.and_u\t\0"
  /* 6711 */ "i64.atomic.rmw8.and_u\t\0"
  /* 6734 */ "i32.ge_u\t\0"
  /* 6744 */ "i64.ge_u\t\0"
  /* 6754 */ "i32x4.ge_u\t\0"
  /* 6766 */ "i8x16.ge_u\t\0"
  /* 6778 */ "i16x8.ge_u\t\0"
  /* 6790 */ "i32.le_u\t\0"
  /* 6800 */ "i64.le_u\t\0"
  /* 6810 */ "i32x4.le_u\t\0"
  /* 6822 */ "i8x16.le_u\t\0"
  /* 6834 */ "i16x8.le_u\t\0"
  /* 6846 */ "i8x16.extract_lane_u\t\0"
  /* 6868 */ "i16x8.extract_lane_u\t\0"
  /* 6890 */ "i8x16.sub_saturate_u\t\0"
  /* 6912 */ "i16x8.sub_saturate_u\t\0"
  /* 6934 */ "i8x16.add_saturate_u\t\0"
  /* 6956 */ "i16x8.add_saturate_u\t\0"
  /* 6978 */ "i64.atomic.rmw32.xchg_u\t\0"
  /* 7003 */ "i32.atomic.rmw16.xchg_u\t\0"
  /* 7028 */ "i64.atomic.rmw16.xchg_u\t\0"
  /* 7053 */ "i32.atomic.rmw8.xchg_u\t\0"
  /* 7077 */ "i64.atomic.rmw8.xchg_u\t\0"
  /* 7101 */ "i64.atomic.rmw32.cmpxchg_u\t\0"
  /* 7129 */ "i32.atomic.rmw16.cmpxchg_u\t\0"
  /* 7157 */ "i64.atomic.rmw16.cmpxchg_u\t\0"
  /* 7185 */ "i32.atomic.rmw8.cmpxchg_u\t\0"
  /* 7212 */ "i64.atomic.rmw8.cmpxchg_u\t\0"
  /* 7239 */ "i32.rem_u\t\0"
  /* 7250 */ "i64.rem_u\t\0"
  /* 7261 */ "i32x4.min_u\t\0"
  /* 7274 */ "i8x16.min_u\t\0"
  /* 7287 */ "i16x8.min_u\t\0"
  /* 7300 */ "i8x16.avgr_u\t\0"
  /* 7314 */ "i16x8.avgr_u\t\0"
  /* 7328 */ "i32.shr_u\t\0"
  /* 7339 */ "i64x2.shr_u\t\0"
  /* 7352 */ "i64.shr_u\t\0"
  /* 7363 */ "i32x4.shr_u\t\0"
  /* 7376 */ "i8x16.shr_u\t\0"
  /* 7389 */ "i16x8.shr_u\t\0"
  /* 7402 */ "i64.atomic.rmw32.or_u\t\0"
  /* 7425 */ "i32.atomic.rmw16.or_u\t\0"
  /* 7448 */ "i64.atomic.rmw16.or_u\t\0"
  /* 7471 */ "i32.atomic.rmw8.or_u\t\0"
  /* 7493 */ "i64.atomic.rmw8.or_u\t\0"
  /* 7515 */ "i64.atomic.rmw32.xor_u\t\0"
  /* 7539 */ "i32.atomic.rmw16.xor_u\t\0"
  /* 7563 */ "i64.atomic.rmw16.xor_u\t\0"
  /* 7587 */ "i32.atomic.rmw8.xor_u\t\0"
  /* 7610 */ "i64.atomic.rmw8.xor_u\t\0"
  /* 7633 */ "i32.gt_u\t\0"
  /* 7643 */ "i64.gt_u\t\0"
  /* 7653 */ "i32x4.gt_u\t\0"
  /* 7665 */ "i8x16.gt_u\t\0"
  /* 7677 */ "i16x8.gt_u\t\0"
  /* 7689 */ "i32.lt_u\t\0"
  /* 7699 */ "i64.lt_u\t\0"
  /* 7709 */ "i32x4.lt_u\t\0"
  /* 7721 */ "i8x16.lt_u\t\0"
  /* 7733 */ "i16x8.lt_u\t\0"
  /* 7745 */ "i32.div_u\t\0"
  /* 7756 */ "i64.div_u\t\0"
  /* 7767 */ "i32x4.max_u\t\0"
  /* 7780 */ "i8x16.max_u\t\0"
  /* 7793 */ "i16x8.max_u\t\0"
  /* 7806 */ "f64x2.div\t\0"
  /* 7817 */ "f32x4.div\t\0"
  /* 7828 */ "table.grow\t\0"
  /* 7840 */ "memory.grow\t\0"
  /* 7853 */ "f64x2.max\t\0"
  /* 7864 */ "f32x4.max\t\0"
  /* 7875 */ "f64x2.pmax\t\0"
  /* 7887 */ "f32x4.pmax\t\0"
  /* 7899 */ "table.copy\t\0"
  /* 7911 */ "local.copy\t\0"
  /* 7923 */ "memory.copy\t\0"
  /* 7936 */ "f32.ge  \0"
  /* 7945 */ "f64.ge  \0"
  /* 7954 */ "f32.le  \0"
  /* 7963 */ "f64.le  \0"
  /* 7972 */ "f32.ne  \0"
  /* 7981 */ "i32.ne  \0"
  /* 7990 */ "f64.ne  \0"
  /* 7999 */ "i64.ne  \0"
  /* 8008 */ "f32.eq  \0"
  /* 8017 */ "i32.eq  \0"
  /* 8026 */ "f64.eq  \0"
  /* 8035 */ "i64.eq  \0"
  /* 8044 */ "i32.or  \0"
  /* 8053 */ "i64.or  \0"
  /* 8062 */ "f32.gt  \0"
  /* 8071 */ "f64.gt  \0"
  /* 8080 */ "f32.lt  \0"
  /* 8089 */ "f64.lt  \0"
  /* 8098 */ "f32.sub \0"
  /* 8107 */ "i32.sub \0"
  /* 8116 */ "f64.sub \0"
  /* 8125 */ "i64.sub \0"
  /* 8134 */ "f32.add \0"
  /* 8143 */ "i32.add \0"
  /* 8152 */ "f64.add \0"
  /* 8161 */ "i64.add \0"
  /* 8170 */ "i32.and \0"
  /* 8179 */ "i64.and \0"
  /* 8188 */ "f32.neg \0"
  /* 8197 */ "f64.neg \0"
  /* 8206 */ "i32.shl \0"
  /* 8215 */ "i64.shl \0"
  /* 8224 */ "f32.mul \0"
  /* 8233 */ "i32.mul \0"
  /* 8242 */ "f64.mul \0"
  /* 8251 */ "i64.mul \0"
  /* 8260 */ "f32.min \0"
  /* 8269 */ "f64.min \0"
  /* 8278 */ "i32.xor \0"
  /* 8287 */ "i64.xor \0"
  /* 8296 */ "f32.abs \0"
  /* 8305 */ "f64.abs \0"
  /* 8314 */ "f32.div \0"
  /* 8323 */ "f64.div \0"
  /* 8332 */ "f32.max \0"
  /* 8341 */ "f64.max \0"
  /* 8350 */ "i32.clz \0"
  /* 8359 */ "i64.clz \0"
  /* 8368 */ "i32.ctz \0"
  /* 8377 */ "i64.ctz \0"
  /* 8386 */ "# XRay Function Patchable RET.\0"
  /* 8417 */ "# XRay Typed Event Log.\0"
  /* 8441 */ "# XRay Custom Event Log.\0"
  /* 8466 */ "# XRay Function Enter.\0"
  /* 8489 */ "# XRay Tail Call Exit.\0"
  /* 8512 */ "# XRay Function Exit.\0"
  /* 8534 */ "f64.promote_f32\0"
  /* 8550 */ "i32.reinterpret_f32\0"
  /* 8570 */ "f32.reinterpret_i32\0"
  /* 8590 */ "f32x4.demote_zero_f64x2\0"
  /* 8614 */ "f32.demote_f64\0"
  /* 8629 */ "i64.reinterpret_f64\0"
  /* 8649 */ "i32.wrap_i64\0"
  /* 8662 */ "f64.reinterpret_i64\0"
  /* 8682 */ "f64x2.promote_low_f32x4\0"
  /* 8706 */ "LIFETIME_END\0"
  /* 8719 */ "PSEUDO_PROBE\0"
  /* 8732 */ "BUNDLE\0"
  /* 8739 */ "DBG_VALUE\0"
  /* 8749 */ "DBG_INSTR_REF\0"
  /* 8763 */ "DBG_LABEL\0"
  /* 8773 */ "LIFETIME_START\0"
  /* 8788 */ "f64x2.qfma\0"
  /* 8799 */ "f32x4.qfma\0"
  /* 8810 */ "f64x2.sub\0"
  /* 8820 */ "i64x2.sub\0"
  /* 8830 */ "f32x4.sub\0"
  /* 8840 */ "i32x4.sub\0"
  /* 8850 */ "i8x16.sub\0"
  /* 8860 */ "i16x8.sub\0"
  /* 8870 */ "f32.trunc\0"
  /* 8880 */ "f64x2.trunc\0"
  /* 8892 */ "f64.trunc\0"
  /* 8902 */ "f32x4.trunc\0"
  /* 8914 */ "f64x2.add\0"
  /* 8924 */ "i64x2.add\0"
  /* 8934 */ "f32x4.add\0"
  /* 8944 */ "i32x4.add\0"
  /* 8954 */ "i8x16.add\0"
  /* 8964 */ "i16x8.add\0"
  /* 8974 */ "v128.and\0"
  /* 8983 */ "end\0"
  /* 8987 */ "atomic.fence\0"
  /* 9000 */ "compiler_fence\0"
  /* 9015 */ "local.tee\0"
  /* 9025 */ "f64x2.ge\0"
  /* 9034 */ "f32x4.ge\0"
  /* 9043 */ "f64x2.le\0"
  /* 9052 */ "f32x4.le\0"
  /* 9061 */ "unreachable\0"
  /* 9073 */ "i8x16.swizzle\0"
  /* 9087 */ "f64x2.ne\0"
  /* 9096 */ "f32x4.ne\0"
  /* 9105 */ "i32x4.ne\0"
  /* 9114 */ "i8x16.ne\0"
  /* 9123 */ "i16x8.ne\0"
  /* 9132 */ "else\0"
  /* 9137 */ "i64x2.all_true\0"
  /* 9152 */ "i32x4.all_true\0"
  /* 9167 */ "i8x16.all_true\0"
  /* 9182 */ "i16x8.all_true\0"
  /* 9197 */ "i64x2.any_true\0"
  /* 9212 */ "i32x4.any_true\0"
  /* 9227 */ "i8x16.any_true\0"
  /* 9242 */ "i16x8.any_true\0"
  /* 9257 */ "end_if\0"
  /* 9264 */ "f64x2.neg\0"
  /* 9274 */ "i64x2.neg\0"
  /* 9284 */ "f32x4.neg\0"
  /* 9294 */ "i32x4.neg\0"
  /* 9304 */ "i8x16.neg\0"
  /* 9314 */ "i16x8.neg\0"
  /* 9324 */ "end_block\0"
  /* 9334 */ "i64x2.bitmask\0"
  /* 9348 */ "i32x4.bitmask\0"
  /* 9362 */ "i8x16.bitmask\0"
  /* 9376 */ "i16x8.bitmask\0"
  /* 9390 */ "i64x2.shl\0"
  /* 9400 */ "i32x4.shl\0"
  /* 9410 */ "i8x16.shl\0"
  /* 9420 */ "i16x8.shl\0"
  /* 9430 */ "f32.ceil\0"
  /* 9439 */ "f64x2.ceil\0"
  /* 9450 */ "f64.ceil\0"
  /* 9459 */ "f32x4.ceil\0"
  /* 9470 */ "catch_all\0"
  /* 9480 */ "# FEntry call\0"
  /* 9494 */ "i32.rotl\0"
  /* 9503 */ "i64.rotl\0"
  /* 9512 */ "f64x2.mul\0"
  /* 9522 */ "i64x2.mul\0"
  /* 9532 */ "f32x4.mul\0"
  /* 9542 */ "i32x4.mul\0"
  /* 9552 */ "i16x8.mul\0"
  /* 9562 */ "f32.copysign\0"
  /* 9575 */ "f64.copysign\0"
  /* 9588 */ "f64x2.min\0"
  /* 9598 */ "f32x4.min\0"
  /* 9608 */ "f64x2.pmin\0"
  /* 9619 */ "f32x4.pmin\0"
  /* 9630 */ "end_function\0"
  /* 9643 */ "return\0"
  /* 9650 */ "nop\0"
  /* 9654 */ "end_loop\0"
  /* 9663 */ "drop\0"
  /* 9668 */ "f64x2.eq\0"
  /* 9677 */ "i64x2.eq\0"
  /* 9686 */ "f32x4.eq\0"
  /* 9695 */ "i32x4.eq\0"
  /* 9704 */ "i8x16.eq\0"
  /* 9713 */ "i16x8.eq\0"
  /* 9722 */ "v128.or\0"
  /* 9730 */ "f32.floor\0"
  /* 9740 */ "f64x2.floor\0"
  /* 9752 */ "f64.floor\0"
  /* 9762 */ "f32x4.floor\0"
  /* 9774 */ "v128.xor\0"
  /* 9783 */ "i32.rotr\0"
  /* 9792 */ "i64.rotr\0"
  /* 9801 */ "i64.extend32_s\0"
  /* 9816 */ "i32.trunc_f32_s\0"
  /* 9832 */ "i64.trunc_f32_s\0"
  /* 9848 */ "i32.trunc_sat_f32_s\0"
  /* 9868 */ "i64.trunc_sat_f32_s\0"
  /* 9888 */ "i64.extend_i32_s\0"
  /* 9905 */ "f32.convert_i32_s\0"
  /* 9923 */ "f64.convert_i32_s\0"
  /* 9941 */ "i32x4.trunc_sat_zero_f64x2_s\0"
  /* 9970 */ "i32.trunc_f64_s\0"
  /* 9986 */ "i64.trunc_f64_s\0"
  /* 10002 */ "i32.trunc_sat_f64_s\0"
  /* 10022 */ "i64.trunc_sat_f64_s\0"
  /* 10042 */ "f32.convert_i64_s\0"
  /* 10060 */ "f64.convert_i64_s\0"
  /* 10078 */ "i32x4.trunc_sat_f32x4_s\0"
  /* 10102 */ "i64x2.extmul_high_i32x4_s\0"
  /* 10128 */ "i64x2.widen_high_i32x4_s\0"
  /* 10153 */ "f32x4.convert_i32x4_s\0"
  /* 10175 */ "i64x2.extmul_low_i32x4_s\0"
  /* 10200 */ "i64x2.widen_low_i32x4_s\0"
  /* 10224 */ "f64x2.convert_low_i32x4_s\0"
  /* 10250 */ "i16x8.narrow_i32x4_s\0"
  /* 10271 */ "i32.extend16_s\0"
  /* 10286 */ "i64.extend16_s\0"
  /* 10301 */ "i16x8.extadd_pairwise_i8x16_s\0"
  /* 10331 */ "i16x8.extmul_high_i8x16_s\0"
  /* 10357 */ "i16x8.widen_high_i8x16_s\0"
  /* 10382 */ "i16x8.extmul_low_i8x16_s\0"
  /* 10407 */ "i16x8.widen_low_i8x16_s\0"
  /* 10431 */ "i32.extend8_s\0"
  /* 10445 */ "i64.extend8_s\0"
  /* 10459 */ "i32x4.extadd_pairwise_i16x8_s\0"
  /* 10489 */ "i32x4.extmul_high_i16x8_s\0"
  /* 10515 */ "i32x4.widen_high_i16x8_s\0"
  /* 10540 */ "i32x4.dot_i16x8_s\0"
  /* 10558 */ "i32x4.extmul_low_i16x8_s\0"
  /* 10583 */ "i32x4.widen_low_i16x8_s\0"
  /* 10607 */ "i8x16.narrow_i16x8_s\0"
  /* 10628 */ "i32.ge_s\0"
  /* 10637 */ "i64.ge_s\0"
  /* 10646 */ "i32x4.ge_s\0"
  /* 10657 */ "i8x16.ge_s\0"
  /* 10668 */ "i16x8.ge_s\0"
  /* 10679 */ "i32.le_s\0"
  /* 10688 */ "i64.le_s\0"
  /* 10697 */ "i32x4.le_s\0"
  /* 10708 */ "i8x16.le_s\0"
  /* 10719 */ "i16x8.le_s\0"
  /* 10730 */ "i8x16.sub_saturate_s\0"
  /* 10751 */ "i16x8.sub_saturate_s\0"
  /* 10772 */ "i8x16.add_saturate_s\0"
  /* 10793 */ "i16x8.add_saturate_s\0"
  /* 10814 */ "i32.rem_s\0"
  /* 10824 */ "i64.rem_s\0"
  /* 10834 */ "i32x4.min_s\0"
  /* 10846 */ "i8x16.min_s\0"
  /* 10858 */ "i16x8.min_s\0"
  /* 10870 */ "i32.shr_s\0"
  /* 10880 */ "i64x2.shr_s\0"
  /* 10892 */ "i64.shr_s\0"
  /* 10902 */ "i32x4.shr_s\0"
  /* 10914 */ "i8x16.shr_s\0"
  /* 10926 */ "i16x8.shr_s\0"
  /* 10938 */ "i16x8.q15mulr_sat_s\0"
  /* 10958 */ "i32.gt_s\0"
  /* 10967 */ "i64.gt_s\0"
  /* 10976 */ "i32x4.gt_s\0"
  /* 10987 */ "i8x16.gt_s\0"
  /* 10998 */ "i16x8.gt_s\0"
  /* 11009 */ "i32.lt_s\0"
  /* 11018 */ "i64.lt_s\0"
  /* 11027 */ "i32x4.lt_s\0"
  /* 11038 */ "i8x16.lt_s\0"
  /* 11049 */ "i16x8.lt_s\0"
  /* 11060 */ "i32.div_s\0"
  /* 11070 */ "i64.div_s\0"
  /* 11080 */ "i32x4.max_s\0"
  /* 11092 */ "i8x16.max_s\0"
  /* 11104 */ "i16x8.max_s\0"
  /* 11116 */ "f64x2.abs\0"
  /* 11126 */ "i64x2.abs\0"
  /* 11136 */ "f32x4.abs\0"
  /* 11146 */ "i32x4.abs\0"
  /* 11156 */ "i8x16.abs\0"
  /* 11166 */ "i16x8.abs\0"
  /* 11176 */ "f64x2.qfms\0"
  /* 11187 */ "f32x4.qfms\0"
  /* 11198 */ "return_call_results\0"
  /* 11218 */ "f64x2.splat\0"
  /* 11230 */ "i64x2.splat\0"
  /* 11242 */ "f32x4.splat\0"
  /* 11254 */ "i32x4.splat\0"
  /* 11266 */ "i8x16.splat\0"
  /* 11278 */ "i16x8.splat\0"
  /* 11290 */ "f32.select\0"
  /* 11301 */ "i32.select\0"
  /* 11312 */ "f64.select\0"
  /* 11323 */ "i64.select\0"
  /* 11334 */ "v128.select\0"
  /* 11346 */ "funcref.select\0"
  /* 11361 */ "externref.select\0"
  /* 11378 */ "i64x2.signselect\0"
  /* 11395 */ "i32x4.signselect\0"
  /* 11412 */ "i8x16.signselect\0"
  /* 11429 */ "i16x8.signselect\0"
  /* 11446 */ "v128.bitselect\0"
  /* 11461 */ "call_indirect\0"
  /* 11475 */ "catchret\0"
  /* 11484 */ "cleanupret\0"
  /* 11495 */ "f64x2.gt\0"
  /* 11504 */ "f32x4.gt\0"
  /* 11513 */ "f64x2.lt\0"
  /* 11522 */ "f32x4.lt\0"
  /* 11531 */ "i32.popcnt\0"
  /* 11542 */ "i64.popcnt\0"
  /* 11553 */ "i8x16.popcnt\0"
  /* 11566 */ "v128.not\0"
  /* 11575 */ "v128.andnot\0"
  /* 11587 */ "f32.sqrt\0"
  /* 11596 */ "f64x2.sqrt\0"
  /* 11607 */ "f64.sqrt\0"
  /* 11616 */ "f32x4.sqrt\0"
  /* 11627 */ "f32.nearest\0"
  /* 11639 */ "f64x2.nearest\0"
  /* 11653 */ "f64.nearest\0"
  /* 11665 */ "f32x4.nearest\0"
  /* 11679 */ "i32.trunc_f32_u\0"
  /* 11695 */ "i64.trunc_f32_u\0"
  /* 11711 */ "i32.trunc_sat_f32_u\0"
  /* 11731 */ "i64.trunc_sat_f32_u\0"
  /* 11751 */ "i64.extend_i32_u\0"
  /* 11768 */ "f32.convert_i32_u\0"
  /* 11786 */ "f64.convert_i32_u\0"
  /* 11804 */ "i32x4.trunc_sat_zero_f64x2_u\0"
  /* 11833 */ "i32.trunc_f64_u\0"
  /* 11849 */ "i64.trunc_f64_u\0"
  /* 11865 */ "i32.trunc_sat_f64_u\0"
  /* 11885 */ "i64.trunc_sat_f64_u\0"
  /* 11905 */ "f32.convert_i64_u\0"
  /* 11923 */ "f64.convert_i64_u\0"
  /* 11941 */ "i32x4.trunc_sat_f32x4_u\0"
  /* 11965 */ "i64x2.extmul_high_i32x4_u\0"
  /* 11991 */ "i64x2.widen_high_i32x4_u\0"
  /* 12016 */ "f32x4.convert_i32x4_u\0"
  /* 12038 */ "i64x2.extmul_low_i32x4_u\0"
  /* 12063 */ "i64x2.widen_low_i32x4_u\0"
  /* 12087 */ "f64x2.convert_low_i32x4_u\0"
  /* 12113 */ "i16x8.narrow_i32x4_u\0"
  /* 12134 */ "i16x8.extadd_pairwise_i8x16_u\0"
  /* 12164 */ "i16x8.extmul_high_i8x16_u\0"
  /* 12190 */ "i16x8.widen_high_i8x16_u\0"
  /* 12215 */ "i16x8.extmul_low_i8x16_u\0"
  /* 12240 */ "i16x8.widen_low_i8x16_u\0"
  /* 12264 */ "i32x4.extadd_pairwise_i16x8_u\0"
  /* 12294 */ "i32x4.extmul_high_i16x8_u\0"
  /* 12320 */ "i32x4.widen_high_i16x8_u\0"
  /* 12345 */ "i32x4.extmul_low_i16x8_u\0"
  /* 12370 */ "i32x4.widen_low_i16x8_u\0"
  /* 12394 */ "i8x16.narrow_i16x8_u\0"
  /* 12415 */ "i32.ge_u\0"
  /* 12424 */ "i64.ge_u\0"
  /* 12433 */ "i32x4.ge_u\0"
  /* 12444 */ "i8x16.ge_u\0"
  /* 12455 */ "i16x8.ge_u\0"
  /* 12466 */ "i32.le_u\0"
  /* 12475 */ "i64.le_u\0"
  /* 12484 */ "i32x4.le_u\0"
  /* 12495 */ "i8x16.le_u\0"
  /* 12506 */ "i16x8.le_u\0"
  /* 12517 */ "i8x16.sub_saturate_u\0"
  /* 12538 */ "i16x8.sub_saturate_u\0"
  /* 12559 */ "i8x16.add_saturate_u\0"
  /* 12580 */ "i16x8.add_saturate_u\0"
  /* 12601 */ "i32.rem_u\0"
  /* 12611 */ "i64.rem_u\0"
  /* 12621 */ "i32x4.min_u\0"
  /* 12633 */ "i8x16.min_u\0"
  /* 12645 */ "i16x8.min_u\0"
  /* 12657 */ "i8x16.avgr_u\0"
  /* 12670 */ "i16x8.avgr_u\0"
  /* 12683 */ "i32.shr_u\0"
  /* 12693 */ "i64x2.shr_u\0"
  /* 12705 */ "i64.shr_u\0"
  /* 12715 */ "i32x4.shr_u\0"
  /* 12727 */ "i8x16.shr_u\0"
  /* 12739 */ "i16x8.shr_u\0"
  /* 12751 */ "i32.gt_u\0"
  /* 12760 */ "i64.gt_u\0"
  /* 12769 */ "i32x4.gt_u\0"
  /* 12780 */ "i8x16.gt_u\0"
  /* 12791 */ "i16x8.gt_u\0"
  /* 12802 */ "i32.lt_u\0"
  /* 12811 */ "i64.lt_u\0"
  /* 12820 */ "i32x4.lt_u\0"
  /* 12831 */ "i8x16.lt_u\0"
  /* 12842 */ "i16x8.lt_u\0"
  /* 12853 */ "i32.div_u\0"
  /* 12863 */ "i64.div_u\0"
  /* 12873 */ "i32x4.max_u\0"
  /* 12885 */ "i8x16.max_u\0"
  /* 12897 */ "i16x8.max_u\0"
  /* 12909 */ "f64x2.div\0"
  /* 12919 */ "f32x4.div\0"
  /* 12929 */ "f64x2.max\0"
  /* 12939 */ "f32x4.max\0"
  /* 12949 */ "f64x2.pmax\0"
  /* 12960 */ "f32x4.pmax\0"
  /* 12971 */ "local.copy\0"
  /* 12982 */ "end_try\0"
  /* 12990 */ "i32.eqz\0"
  /* 12998 */ "i64.eqz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    8740U,	// DBG_VALUE
    8750U,	// DBG_INSTR_REF
    8764U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    8733U,	// BUNDLE
    8774U,	// LIFETIME_START
    8707U,	// LIFETIME_END
    8720U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    9481U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    8467U,	// PATCHABLE_FUNCTION_ENTER
    8387U,	// PATCHABLE_RET
    8513U,	// PATCHABLE_FUNCTION_EXIT
    8490U,	// PATCHABLE_TAIL_CALL
    8442U,	// PATCHABLE_EVENT_CALL
    8418U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    20993U,	// CALL_PARAMS
    20993U,	// CALL_PARAMS_S
    11206U,	// CALL_RESULTS
    11206U,	// CALL_RESULTS_S
    11476U,	// CATCHRET
    11476U,	// CATCHRET_S
    11485U,	// CLEANUPRET
    11485U,	// CLEANUPRET_S
    9001U,	// COMPILER_FENCE
    9001U,	// COMPILER_FENCE_S
    11199U,	// RET_CALL_RESULTS
    11199U,	// RET_CALL_RESULTS_S
    148009U,	// ABS_F32
    8297U,	// ABS_F32_S
    152021U,	// ABS_F32x4
    11137U,	// ABS_F32x4_S
    148019U,	// ABS_F64
    8306U,	// ABS_F64_S
    151999U,	// ABS_F64x2
    11117U,	// ABS_F64x2_S
    152054U,	// ABS_I16x8
    11167U,	// ABS_I16x8_S
    152032U,	// ABS_I32x4
    11147U,	// ABS_I32x4_S
    152010U,	// ABS_I64x2
    11127U,	// ABS_I64x2_S
    152043U,	// ABS_I8x16
    11157U,	// ABS_I8x16_S
    4342122U,	// ADD_F32
    8135U,	// ADD_F32_S
    4343093U,	// ADD_F32x4
    8935U,	// ADD_F32x4_S
    4342142U,	// ADD_F64
    8153U,	// ADD_F64_S
    4343071U,	// ADD_F64x2
    8915U,	// ADD_F64x2_S
    4343126U,	// ADD_I16x8
    8965U,	// ADD_I16x8_S
    4342132U,	// ADD_I32
    8144U,	// ADD_I32_S
    4343104U,	// ADD_I32x4
    8945U,	// ADD_I32x4_S
    4342152U,	// ADD_I64
    8162U,	// ADD_I64_S
    4343082U,	// ADD_I64x2
    8925U,	// ADD_I64x2_S
    4343115U,	// ADD_I8x16
    8955U,	// ADD_I8x16_S
    4345952U,	// ADD_SAT_S_I16x8
    10794U,	// ADD_SAT_S_I16x8_S
    4345930U,	// ADD_SAT_S_I8x16
    10773U,	// ADD_SAT_S_I8x16_S
    4348717U,	// ADD_SAT_U_I16x8
    12581U,	// ADD_SAT_U_I16x8_S
    4348695U,	// ADD_SAT_U_I8x16
    12560U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    149540U,	// ALLTRUE_I16x8
    9183U,	// ALLTRUE_I16x8_S
    149508U,	// ALLTRUE_I32x4
    9153U,	// ALLTRUE_I32x4_S
    149492U,	// ALLTRUE_I64x2
    9138U,	// ALLTRUE_I64x2_S
    149524U,	// ALLTRUE_I8x16
    9168U,	// ALLTRUE_I8x16_S
    4343177U,	// AND
    4346958U,	// ANDNOT
    11576U,	// ANDNOT_S
    4342162U,	// AND_I32
    8171U,	// AND_I32_S
    4342172U,	// AND_I64
    8180U,	// AND_I64_S
    8975U,	// AND_S
    149604U,	// ANYTRUE_I16x8
    9243U,	// ANYTRUE_I16x8_S
    149572U,	// ANYTRUE_I32x4
    9213U,	// ANYTRUE_I32x4_S
    149556U,	// ANYTRUE_I64x2
    9198U,	// ANYTRUE_I64x2_S
    149588U,	// ANYTRUE_I8x16
    9228U,	// ANYTRUE_I8x16_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    8988U,	// ATOMIC_FENCE
    8988U,	// ATOMIC_FENCE_S
    25843511U,	// ATOMIC_LOAD16_U_I32_A32
    1349431U,	// ATOMIC_LOAD16_U_I32_A32_S
    25843511U,	// ATOMIC_LOAD16_U_I32_A64
    1349431U,	// ATOMIC_LOAD16_U_I32_A64_S
    25843532U,	// ATOMIC_LOAD16_U_I64_A32
    1349452U,	// ATOMIC_LOAD16_U_I64_A32_S
    25843532U,	// ATOMIC_LOAD16_U_I64_A64
    1349452U,	// ATOMIC_LOAD16_U_I64_A64_S
    25842949U,	// ATOMIC_LOAD32_U_I64_A32
    1348869U,	// ATOMIC_LOAD32_U_I64_A32_S
    25842949U,	// ATOMIC_LOAD32_U_I64_A64
    1348869U,	// ATOMIC_LOAD32_U_I64_A64_S
    25843735U,	// ATOMIC_LOAD8_U_I32_A32
    1349655U,	// ATOMIC_LOAD8_U_I32_A32_S
    25843735U,	// ATOMIC_LOAD8_U_I32_A64
    1349655U,	// ATOMIC_LOAD8_U_I32_A64_S
    25843755U,	// ATOMIC_LOAD8_U_I64_A32
    1349675U,	// ATOMIC_LOAD8_U_I64_A32_S
    25843755U,	// ATOMIC_LOAD8_U_I64_A64
    1349675U,	// ATOMIC_LOAD8_U_I64_A64_S
    25838845U,	// ATOMIC_LOAD_I32_A32
    1344765U,	// ATOMIC_LOAD_I32_A32_S
    25838845U,	// ATOMIC_LOAD_I32_A64
    1344765U,	// ATOMIC_LOAD_I32_A64_S
    25838862U,	// ATOMIC_LOAD_I64_A32
    1344782U,	// ATOMIC_LOAD_I64_A32_S
    25838862U,	// ATOMIC_LOAD_I64_A64
    1344782U,	// ATOMIC_LOAD_I64_A64_S
    92952955U,	// ATOMIC_RMW16_U_ADD_I32_A32
    1350011U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    92952955U,	// ATOMIC_RMW16_U_ADD_I32_A64
    1350011U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    92952979U,	// ATOMIC_RMW16_U_ADD_I64_A32
    1350035U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    92952979U,	// ATOMIC_RMW16_U_ADD_I64_A64
    1350035U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    92953073U,	// ATOMIC_RMW16_U_AND_I32_A32
    1350129U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    92953073U,	// ATOMIC_RMW16_U_AND_I32_A64
    1350129U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    92953097U,	// ATOMIC_RMW16_U_AND_I64_A32
    1350153U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    92953097U,	// ATOMIC_RMW16_U_AND_I64_A64
    1350153U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    227171290U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    1350618U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    227171290U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    1350618U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    227171318U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    1350646U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    227171318U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    1350646U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    92953858U,	// ATOMIC_RMW16_U_OR_I32_A32
    1350914U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    92953858U,	// ATOMIC_RMW16_U_OR_I32_A64
    1350914U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    92953881U,	// ATOMIC_RMW16_U_OR_I64_A32
    1350937U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    92953881U,	// ATOMIC_RMW16_U_OR_I64_A64
    1350937U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    92952837U,	// ATOMIC_RMW16_U_SUB_I32_A32
    1349893U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    92952837U,	// ATOMIC_RMW16_U_SUB_I32_A64
    1349893U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    92952861U,	// ATOMIC_RMW16_U_SUB_I64_A32
    1349917U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    92952861U,	// ATOMIC_RMW16_U_SUB_I64_A64
    1349917U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    92953436U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    1350492U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    92953436U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    1350492U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    92953461U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    1350517U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    92953461U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    1350517U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    92953972U,	// ATOMIC_RMW16_U_XOR_I32_A32
    1351028U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    92953972U,	// ATOMIC_RMW16_U_XOR_I32_A64
    1351028U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    92953996U,	// ATOMIC_RMW16_U_XOR_I64_A32
    1351052U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    92953996U,	// ATOMIC_RMW16_U_XOR_I64_A64
    1351052U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    92952931U,	// ATOMIC_RMW32_U_ADD_I64_A32
    1349987U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    92952931U,	// ATOMIC_RMW32_U_ADD_I64_A64
    1349987U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    92953049U,	// ATOMIC_RMW32_U_AND_I64_A32
    1350105U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    92953049U,	// ATOMIC_RMW32_U_AND_I64_A64
    1350105U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    227171262U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    1350590U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    227171262U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    1350590U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    92953835U,	// ATOMIC_RMW32_U_OR_I64_A32
    1350891U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    92953835U,	// ATOMIC_RMW32_U_OR_I64_A64
    1350891U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    92952813U,	// ATOMIC_RMW32_U_SUB_I64_A32
    1349869U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    92952813U,	// ATOMIC_RMW32_U_SUB_I64_A64
    1349869U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    92953411U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    1350467U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    92953411U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    1350467U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    92953948U,	// ATOMIC_RMW32_U_XOR_I64_A32
    1351004U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    92953948U,	// ATOMIC_RMW32_U_XOR_I64_A64
    1351004U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    92953003U,	// ATOMIC_RMW8_U_ADD_I32_A32
    1350059U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    92953003U,	// ATOMIC_RMW8_U_ADD_I32_A64
    1350059U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    92953026U,	// ATOMIC_RMW8_U_ADD_I64_A32
    1350082U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    92953026U,	// ATOMIC_RMW8_U_ADD_I64_A64
    1350082U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    92953121U,	// ATOMIC_RMW8_U_AND_I32_A32
    1350177U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    92953121U,	// ATOMIC_RMW8_U_AND_I32_A64
    1350177U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    92953144U,	// ATOMIC_RMW8_U_AND_I64_A32
    1350200U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    92953144U,	// ATOMIC_RMW8_U_AND_I64_A64
    1350200U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    227171346U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    1350674U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    227171346U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    1350674U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    227171373U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    1350701U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    227171373U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    1350701U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    92953904U,	// ATOMIC_RMW8_U_OR_I32_A32
    1350960U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    92953904U,	// ATOMIC_RMW8_U_OR_I32_A64
    1350960U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    92953926U,	// ATOMIC_RMW8_U_OR_I64_A32
    1350982U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    92953926U,	// ATOMIC_RMW8_U_OR_I64_A64
    1350982U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    92952885U,	// ATOMIC_RMW8_U_SUB_I32_A32
    1349941U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    92952885U,	// ATOMIC_RMW8_U_SUB_I32_A64
    1349941U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    92952908U,	// ATOMIC_RMW8_U_SUB_I64_A32
    1349964U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    92952908U,	// ATOMIC_RMW8_U_SUB_I64_A64
    1349964U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    92953486U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    1350542U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    92953486U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    1350542U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    92953510U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    1350566U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    92953510U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    1350566U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    92954020U,	// ATOMIC_RMW8_U_XOR_I32_A32
    1351076U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    92954020U,	// ATOMIC_RMW8_U_XOR_I32_A64
    1351076U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    92954043U,	// ATOMIC_RMW8_U_XOR_I64_A32
    1351099U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    92954043U,	// ATOMIC_RMW8_U_XOR_I64_A64
    1351099U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    92947809U,	// ATOMIC_RMW_ADD_I32_A32
    1344865U,	// ATOMIC_RMW_ADD_I32_A32_S
    92947809U,	// ATOMIC_RMW_ADD_I32_A64
    1344865U,	// ATOMIC_RMW_ADD_I32_A64_S
    92947829U,	// ATOMIC_RMW_ADD_I64_A32
    1344885U,	// ATOMIC_RMW_ADD_I64_A32_S
    92947829U,	// ATOMIC_RMW_ADD_I64_A64
    1344885U,	// ATOMIC_RMW_ADD_I64_A64_S
    92947859U,	// ATOMIC_RMW_AND_I32_A32
    1344915U,	// ATOMIC_RMW_AND_I32_A32_S
    92947859U,	// ATOMIC_RMW_AND_I32_A64
    1344915U,	// ATOMIC_RMW_AND_I32_A64_S
    92947879U,	// ATOMIC_RMW_AND_I64_A32
    1344935U,	// ATOMIC_RMW_AND_I64_A32_S
    92947879U,	// ATOMIC_RMW_AND_I64_A64
    1344935U,	// ATOMIC_RMW_AND_I64_A64_S
    227166457U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    1345785U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    227166457U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    1345785U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    227166481U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    1345809U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    227166481U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    1345809U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    92949238U,	// ATOMIC_RMW_OR_I32_A32
    1346294U,	// ATOMIC_RMW_OR_I32_A32_S
    92949238U,	// ATOMIC_RMW_OR_I32_A64
    1346294U,	// ATOMIC_RMW_OR_I32_A64_S
    92949257U,	// ATOMIC_RMW_OR_I64_A32
    1346313U,	// ATOMIC_RMW_OR_I64_A32_S
    92949257U,	// ATOMIC_RMW_OR_I64_A64
    1346313U,	// ATOMIC_RMW_OR_I64_A64_S
    92947570U,	// ATOMIC_RMW_SUB_I32_A32
    1344626U,	// ATOMIC_RMW_SUB_I32_A32_S
    92947570U,	// ATOMIC_RMW_SUB_I32_A64
    1344626U,	// ATOMIC_RMW_SUB_I32_A64_S
    92947590U,	// ATOMIC_RMW_SUB_I64_A32
    1344646U,	// ATOMIC_RMW_SUB_I64_A32_S
    92947590U,	// ATOMIC_RMW_SUB_I64_A64
    1344646U,	// ATOMIC_RMW_SUB_I64_A64_S
    92948687U,	// ATOMIC_RMW_XCHG_I32_A32
    1345743U,	// ATOMIC_RMW_XCHG_I32_A32_S
    92948687U,	// ATOMIC_RMW_XCHG_I32_A64
    1345743U,	// ATOMIC_RMW_XCHG_I32_A64_S
    92948708U,	// ATOMIC_RMW_XCHG_I64_A32
    1345764U,	// ATOMIC_RMW_XCHG_I64_A32_S
    92948708U,	// ATOMIC_RMW_XCHG_I64_A64
    1345764U,	// ATOMIC_RMW_XCHG_I64_A64_S
    92949334U,	// ATOMIC_RMW_XOR_I32_A32
    1346390U,	// ATOMIC_RMW_XOR_I32_A32_S
    92949334U,	// ATOMIC_RMW_XOR_I32_A64
    1346390U,	// ATOMIC_RMW_XOR_I32_A64_S
    92949354U,	// ATOMIC_RMW_XOR_I64_A32
    1346410U,	// ATOMIC_RMW_XOR_I64_A32_S
    92949354U,	// ATOMIC_RMW_XOR_I64_A64
    1346410U,	// ATOMIC_RMW_XOR_I64_A64_S
    47088562U,	// ATOMIC_STORE16_I32_A32
    1344434U,	// ATOMIC_STORE16_I32_A32_S
    47088562U,	// ATOMIC_STORE16_I32_A64
    1344434U,	// ATOMIC_STORE16_I32_A64_S
    47088582U,	// ATOMIC_STORE16_I64_A32
    1344454U,	// ATOMIC_STORE16_I64_A32_S
    47088582U,	// ATOMIC_STORE16_I64_A64
    1344454U,	// ATOMIC_STORE16_I64_A64_S
    47088335U,	// ATOMIC_STORE32_I64_A32
    1344207U,	// ATOMIC_STORE32_I64_A32_S
    47088335U,	// ATOMIC_STORE32_I64_A64
    1344207U,	// ATOMIC_STORE32_I64_A64_S
    47088626U,	// ATOMIC_STORE8_I32_A32
    1344498U,	// ATOMIC_STORE8_I32_A32_S
    47088626U,	// ATOMIC_STORE8_I32_A64
    1344498U,	// ATOMIC_STORE8_I32_A64_S
    47088645U,	// ATOMIC_STORE8_I64_A32
    1344517U,	// ATOMIC_STORE8_I64_A32_S
    47088645U,	// ATOMIC_STORE8_I64_A64
    1344517U,	// ATOMIC_STORE8_I64_A64_S
    47089616U,	// ATOMIC_STORE_I32_A32
    1345488U,	// ATOMIC_STORE_I32_A32_S
    47089616U,	// ATOMIC_STORE_I32_A64
    1345488U,	// ATOMIC_STORE_I32_A64_S
    47089634U,	// ATOMIC_STORE_I64_A32
    1345506U,	// ATOMIC_STORE_I64_A32_S
    47089634U,	// ATOMIC_STORE_I64_A64
    1345506U,	// ATOMIC_STORE_I64_A64_S
    4349075U,	// AVGR_U_I16x8
    12671U,	// AVGR_U_I16x8_S
    4349061U,	// AVGR_U_I8x16
    12658U,	// AVGR_U_I8x16_S
    149846U,	// BITMASK_I16x8
    9377U,	// BITMASK_I16x8_S
    149816U,	// BITMASK_I32x4
    9349U,	// BITMASK_I32x4_S
    149801U,	// BITMASK_I64x2
    9335U,	// BITMASK_I64x2_S
    149831U,	// BITMASK_I8x16
    9363U,	// BITMASK_I8x16_S
    37901170U,	// BITSELECT
    11447U,	// BITSELECT_S
    49228U,	// BLOCK
    49228U,	// BLOCK_S
    16385U,	// BR
    147512U,	// BR_IF
    16440U,	// BR_IF_S
    16385U,	// BR_S
    16806U,	// BR_TABLE_I32
    65958U,	// BR_TABLE_I32_S
    16806U,	// BR_TABLE_I64
    65958U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    9490U,	// CALL
    11462U,	// CALL_INDIRECT
    21385U,	// CALL_INDIRECT_S
    18884U,	// CALL_S
    147522U,	// CATCH
    9471U,	// CATCH_ALL
    9471U,	// CATCH_ALL_S
    16450U,	// CATCH_S
    149905U,	// CEIL_F32
    9431U,	// CEIL_F32_S
    149937U,	// CEIL_F32x4
    9460U,	// CEIL_F32x4_S
    149927U,	// CEIL_F64
    9451U,	// CEIL_F64_S
    149915U,	// CEIL_F64x2
    9440U,	// CEIL_F64x2_S
    148102U,	// CLZ_I32
    8351U,	// CLZ_I32_S
    148112U,	// CLZ_I64
    8360U,	// CLZ_I64_S
    152767U,	// CONST_F32
    21695U,	// CONST_F32_S
    152789U,	// CONST_F64
    21717U,	// CONST_F64_S
    152778U,	// CONST_I32
    21706U,	// CONST_I32_S
    152800U,	// CONST_I64
    21728U,	// CONST_I64_S
    105010411U,	// CONST_V128_F32x4
    37901547U,	// CONST_V128_F32x4_S
    4347115U,	// CONST_V128_F64x2
    152811U,	// CONST_V128_F64x2_S
    507663595U,	// CONST_V128_I16x8
    1044534507U,	// CONST_V128_I16x8_S
    105010411U,	// CONST_V128_I32x4
    37901547U,	// CONST_V128_I32x4_S
    4347115U,	// CONST_V128_I64x2
    152811U,	// CONST_V128_I64x2_S
    1581405419U,	// CONST_V128_I8x16
    3728889067U,	// CONST_V128_I8x16_S
    4344376U,	// COPYSIGN_F32
    9563U,	// COPYSIGN_F32_S
    4344390U,	// COPYSIGN_F64
    9576U,	// COPYSIGN_F64_S
    155368U,	// COPY_EXTERNREF
    12972U,	// COPY_EXTERNREF_S
    155368U,	// COPY_F32
    12972U,	// COPY_F32_S
    155368U,	// COPY_F64
    12972U,	// COPY_F64_S
    155368U,	// COPY_FUNCREF
    12972U,	// COPY_FUNCREF_S
    155368U,	// COPY_I32
    12972U,	// COPY_I32_S
    155368U,	// COPY_I64
    12972U,	// COPY_I64_S
    155368U,	// COPY_V128
    12972U,	// COPY_V128_S
    148142U,	// CTZ_I32
    8369U,	// CTZ_I32_S
    148152U,	// CTZ_I64
    8378U,	// CTZ_I64_S
    9062U,	// DEBUG_UNREACHABLE
    9062U,	// DEBUG_UNREACHABLE_S
    4342333U,	// DIV_F32
    8315U,	// DIV_F32_S
    4349578U,	// DIV_F32x4
    12920U,	// DIV_F32x4_S
    4342343U,	// DIV_F64
    8324U,	// DIV_F64_S
    4349567U,	// DIV_F64x2
    12910U,	// DIV_F64x2_S
    4346242U,	// DIV_S_I32
    11061U,	// DIV_S_I32_S
    4346253U,	// DIV_S_I64
    11071U,	// DIV_S_I64_S
    4349506U,	// DIV_U_I32
    12854U,	// DIV_U_I32_S
    4349517U,	// DIV_U_I64
    12864U,	// DIV_U_I64_S
    4345621U,	// DOT
    10541U,	// DOT_S
    19115U,	// DROP_EXTERNREF
    9664U,	// DROP_EXTERNREF_S
    19115U,	// DROP_F32
    9664U,	// DROP_F32_S
    19115U,	// DROP_F64
    9664U,	// DROP_F64_S
    19115U,	// DROP_FUNCREF
    9664U,	// DROP_FUNCREF_S
    19115U,	// DROP_I32
    9664U,	// DROP_I32_S
    19115U,	// DROP_I64
    9664U,	// DROP_I64_S
    19115U,	// DROP_V128
    9664U,	// DROP_V128_S
    9133U,	// ELSE
    9133U,	// ELSE_S
    8984U,	// END
    9325U,	// END_BLOCK
    9325U,	// END_BLOCK_S
    9631U,	// END_FUNCTION
    9631U,	// END_FUNCTION_S
    9258U,	// END_IF
    9258U,	// END_IF_S
    9655U,	// END_LOOP
    9655U,	// END_LOOP_S
    8984U,	// END_S
    12983U,	// END_TRY
    12983U,	// END_TRY_S
    148122U,	// EQZ_I32
    12991U,	// EQZ_I32_S
    148132U,	// EQZ_I64
    12999U,	// EQZ_I64_S
    4341936U,	// EQ_F32
    8009U,	// EQ_F32_S
    4344517U,	// EQ_F32x4
    9687U,	// EQ_F32x4_S
    4341956U,	// EQ_F64
    8027U,	// EQ_F64_S
    4344497U,	// EQ_F64x2
    9669U,	// EQ_F64x2_S
    4344547U,	// EQ_I16x8
    9714U,	// EQ_I16x8_S
    4341946U,	// EQ_I32
    8018U,	// EQ_I32_S
    4344527U,	// EQ_I32x4
    9696U,	// EQ_I32x4_S
    4341966U,	// EQ_I64
    8036U,	// EQ_I64_S
    4344537U,	// EQ_I8x16
    9705U,	// EQ_I8x16_S
    4344507U,	// EQ_v2i64
    9678U,	// EQ_v2i64_S
    4345356U,	// EXTMUL_HIGH_S_I16x8
    10332U,	// EXTMUL_HIGH_S_I16x8_S
    4345568U,	// EXTMUL_HIGH_S_I32x4
    10490U,	// EXTMUL_HIGH_S_I32x4_S
    4345071U,	// EXTMUL_HIGH_S_I64x2
    10103U,	// EXTMUL_HIGH_S_I64x2_S
    4347776U,	// EXTMUL_HIGH_U_I16x8
    12165U,	// EXTMUL_HIGH_U_I16x8_S
    4347998U,	// EXTMUL_HIGH_U_I32x4
    12295U,	// EXTMUL_HIGH_U_I32x4_S
    4347481U,	// EXTMUL_HIGH_U_I64x2
    11966U,	// EXTMUL_HIGH_U_I64x2_S
    4345430U,	// EXTMUL_LOW_S_I16x8
    10383U,	// EXTMUL_LOW_S_I16x8_S
    4345640U,	// EXTMUL_LOW_S_I32x4
    10559U,	// EXTMUL_LOW_S_I32x4_S
    4345147U,	// EXTMUL_LOW_S_I64x2
    10176U,	// EXTMUL_LOW_S_I64x2_S
    4347850U,	// EXTMUL_LOW_U_I16x8
    12216U,	// EXTMUL_LOW_U_I16x8_S
    4348051U,	// EXTMUL_LOW_U_I32x4
    12346U,	// EXTMUL_LOW_U_I32x4_S
    4347557U,	// EXTMUL_LOW_U_I64x2
    12039U,	// EXTMUL_LOW_U_I64x2_S
    4343664U,	// EXTRACT_LANE_F32x4
    18288U,	// EXTRACT_LANE_F32x4_S
    4343624U,	// EXTRACT_LANE_F64x2
    18248U,	// EXTRACT_LANE_F64x2_S
    4345864U,	// EXTRACT_LANE_I16x8_s
    20488U,	// EXTRACT_LANE_I16x8_s_S
    4348629U,	// EXTRACT_LANE_I16x8_u
    23253U,	// EXTRACT_LANE_I16x8_u_S
    4343684U,	// EXTRACT_LANE_I32x4
    18308U,	// EXTRACT_LANE_I32x4_S
    4343644U,	// EXTRACT_LANE_I64x2
    18268U,	// EXTRACT_LANE_I64x2_S
    4345842U,	// EXTRACT_LANE_I8x16_s
    20466U,	// EXTRACT_LANE_I8x16_s_S
    4348607U,	// EXTRACT_LANE_I8x16_u
    23231U,	// EXTRACT_LANE_I8x16_u_S
    150542U,	// F32_CONVERT_S_I32
    9906U,	// F32_CONVERT_S_I32_S
    150704U,	// F32_CONVERT_S_I64
    10043U,	// F32_CONVERT_S_I64_S
    152952U,	// F32_CONVERT_U_I32
    11769U,	// F32_CONVERT_U_I32_S
    153114U,	// F32_CONVERT_U_I64
    11906U,	// F32_CONVERT_U_I64_S
    148279U,	// F32_DEMOTE_F64
    8615U,	// F32_DEMOTE_F64_S
    148233U,	// F32_REINTERPRET_I32
    8571U,	// F32_REINTERPRET_I32_S
    150561U,	// F64_CONVERT_S_I32
    9924U,	// F64_CONVERT_S_I32_S
    150723U,	// F64_CONVERT_S_I64
    10061U,	// F64_CONVERT_S_I64_S
    152971U,	// F64_CONVERT_U_I32
    11787U,	// F64_CONVERT_U_I32_S
    153133U,	// F64_CONVERT_U_I64
    11924U,	// F64_CONVERT_U_I64_S
    148195U,	// F64_PROMOTE_F32
    8535U,	// F64_PROMOTE_F32_S
    148330U,	// F64_REINTERPRET_I64
    8663U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    150300U,	// FLOOR_F32
    9731U,	// FLOOR_F32_S
    150335U,	// FLOOR_F32x4
    9763U,	// FLOOR_F32x4_S
    150324U,	// FLOOR_F64
    9753U,	// FLOOR_F64_S
    150311U,	// FLOOR_F64x2
    9741U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    4341856U,	// GE_F32
    7937U,	// GE_F32_S
    4343248U,	// GE_F32x4
    9035U,	// GE_F32x4_S
    4341866U,	// GE_F64
    7946U,	// GE_F64_S
    4343238U,	// GE_F64x2
    9026U,	// GE_F64x2_S
    4345774U,	// GE_S_I16x8
    10669U,	// GE_S_I16x8_S
    4345730U,	// GE_S_I32
    10629U,	// GE_S_I32_S
    4345750U,	// GE_S_I32x4
    10647U,	// GE_S_I32x4_S
    4345740U,	// GE_S_I64
    10638U,	// GE_S_I64_S
    4345762U,	// GE_S_I8x16
    10658U,	// GE_S_I8x16_S
    4348539U,	// GE_U_I16x8
    12456U,	// GE_U_I16x8_S
    4348495U,	// GE_U_I32
    12416U,	// GE_U_I32_S
    4348515U,	// GE_U_I32x4
    12434U,	// GE_U_I32x4_S
    4348505U,	// GE_U_I64
    12425U,	// GE_U_I64_S
    4348527U,	// GE_U_I8x16
    12445U,	// GE_U_I8x16_S
    152483U,	// GLOBAL_GET_EXTERNREF
    21411U,	// GLOBAL_GET_EXTERNREF_S
    152483U,	// GLOBAL_GET_F32
    21411U,	// GLOBAL_GET_F32_S
    152483U,	// GLOBAL_GET_F64
    21411U,	// GLOBAL_GET_F64_S
    152483U,	// GLOBAL_GET_FUNCREF
    21411U,	// GLOBAL_GET_FUNCREF_S
    152483U,	// GLOBAL_GET_I32
    21411U,	// GLOBAL_GET_I32_S
    152483U,	// GLOBAL_GET_I64
    21411U,	// GLOBAL_GET_I64_S
    152483U,	// GLOBAL_GET_V128
    21411U,	// GLOBAL_GET_V128_S
    152517U,	// GLOBAL_SET_EXTERNREF
    21445U,	// GLOBAL_SET_EXTERNREF_S
    152517U,	// GLOBAL_SET_F32
    21445U,	// GLOBAL_SET_F32_S
    152517U,	// GLOBAL_SET_F64
    21445U,	// GLOBAL_SET_F64_S
    152517U,	// GLOBAL_SET_FUNCREF
    21445U,	// GLOBAL_SET_FUNCREF_S
    152517U,	// GLOBAL_SET_I32
    21445U,	// GLOBAL_SET_I32_S
    152517U,	// GLOBAL_SET_I64
    21445U,	// GLOBAL_SET_I64_S
    152517U,	// GLOBAL_SET_V128
    21445U,	// GLOBAL_SET_V128_S
    4341996U,	// GT_F32
    8063U,	// GT_F32_S
    4346854U,	// GT_F32x4
    11505U,	// GT_F32x4_S
    4342006U,	// GT_F64
    8072U,	// GT_F64_S
    4346844U,	// GT_F64x2
    11496U,	// GT_F64x2_S
    4346174U,	// GT_S_I16x8
    10999U,	// GT_S_I16x8_S
    4346130U,	// GT_S_I32
    10959U,	// GT_S_I32_S
    4346150U,	// GT_S_I32x4
    10977U,	// GT_S_I32x4_S
    4346140U,	// GT_S_I64
    10968U,	// GT_S_I64_S
    4346162U,	// GT_S_I8x16
    10988U,	// GT_S_I8x16_S
    4349438U,	// GT_U_I16x8
    12792U,	// GT_U_I16x8_S
    4349394U,	// GT_U_I32
    12752U,	// GT_U_I32_S
    4349414U,	// GT_U_I32x4
    12770U,	// GT_U_I32x4_S
    4349404U,	// GT_U_I64
    12761U,	// GT_U_I64_S
    4349426U,	// GT_U_I8x16
    12781U,	// GT_U_I8x16_S
    150989U,	// I32_EXTEND16_S_I32
    10272U,	// I32_EXTEND16_S_I32_S
    151203U,	// I32_EXTEND8_S_I32
    10432U,	// I32_EXTEND8_S_I32_S
    148212U,	// I32_REINTERPRET_F32
    8551U,	// I32_REINTERPRET_F32_S
    150448U,	// I32_TRUNC_S_F32
    9817U,	// I32_TRUNC_S_F32_S
    150628U,	// I32_TRUNC_S_F64
    9971U,	// I32_TRUNC_S_F64_S
    150482U,	// I32_TRUNC_S_SAT_F32
    9849U,	// I32_TRUNC_S_SAT_F32_S
    150662U,	// I32_TRUNC_S_SAT_F64
    10003U,	// I32_TRUNC_S_SAT_F64_S
    152858U,	// I32_TRUNC_U_F32
    11680U,	// I32_TRUNC_U_F32_S
    153038U,	// I32_TRUNC_U_F64
    11834U,	// I32_TRUNC_U_F64_S
    152892U,	// I32_TRUNC_U_SAT_F32
    11712U,	// I32_TRUNC_U_SAT_F32_S
    153072U,	// I32_TRUNC_U_SAT_F64
    11866U,	// I32_TRUNC_U_SAT_F64_S
    148316U,	// I32_WRAP_I64
    8650U,	// I32_WRAP_I64_S
    151005U,	// I64_EXTEND16_S_I64
    10287U,	// I64_EXTEND16_S_I64_S
    150432U,	// I64_EXTEND32_S_I64
    9802U,	// I64_EXTEND32_S_I64_S
    151218U,	// I64_EXTEND8_S_I64
    10446U,	// I64_EXTEND8_S_I64_S
    150524U,	// I64_EXTEND_S_I32
    9889U,	// I64_EXTEND_S_I32_S
    152934U,	// I64_EXTEND_U_I32
    11752U,	// I64_EXTEND_U_I32_S
    148295U,	// I64_REINTERPRET_F64
    8630U,	// I64_REINTERPRET_F64_S
    150465U,	// I64_TRUNC_S_F32
    9833U,	// I64_TRUNC_S_F32_S
    150645U,	// I64_TRUNC_S_F64
    9987U,	// I64_TRUNC_S_F64_S
    150503U,	// I64_TRUNC_S_SAT_F32
    9869U,	// I64_TRUNC_S_SAT_F32_S
    150683U,	// I64_TRUNC_S_SAT_F64
    10023U,	// I64_TRUNC_S_SAT_F64_S
    152875U,	// I64_TRUNC_U_F32
    11696U,	// I64_TRUNC_U_F32_S
    153055U,	// I64_TRUNC_U_F64
    11850U,	// I64_TRUNC_U_F64_S
    152913U,	// I64_TRUNC_U_SAT_F32
    11732U,	// I64_TRUNC_U_SAT_F32_S
    153093U,	// I64_TRUNC_U_SAT_F64
    11886U,	// I64_TRUNC_U_SAT_F64_S
    180245U,	// IF
    49173U,	// IF_S
    4341876U,	// LE_F32
    7955U,	// LE_F32_S
    4343268U,	// LE_F32x4
    9053U,	// LE_F32x4_S
    4341886U,	// LE_F64
    7964U,	// LE_F64_S
    4343258U,	// LE_F64x2
    9044U,	// LE_F64x2_S
    4345830U,	// LE_S_I16x8
    10720U,	// LE_S_I16x8_S
    4345786U,	// LE_S_I32
    10680U,	// LE_S_I32_S
    4345806U,	// LE_S_I32x4
    10698U,	// LE_S_I32x4_S
    4345796U,	// LE_S_I64
    10689U,	// LE_S_I64_S
    4345818U,	// LE_S_I8x16
    10709U,	// LE_S_I8x16_S
    4348595U,	// LE_U_I16x8
    12507U,	// LE_U_I16x8_S
    4348551U,	// LE_U_I32
    12467U,	// LE_U_I32_S
    4348571U,	// LE_U_I32x4
    12485U,	// LE_U_I32x4_S
    4348561U,	// LE_U_I64
    12476U,	// LE_U_I64_S
    4348583U,	// LE_U_I8x16
    12496U,	// LE_U_I8x16_S
    25842342U,	// LOAD16_SPLAT_A32
    1348262U,	// LOAD16_SPLAT_A32_S
    25842342U,	// LOAD16_SPLAT_A64
    1348262U,	// LOAD16_SPLAT_A64_S
    25841073U,	// LOAD16_S_I32_A32
    1346993U,	// LOAD16_S_I32_A32_S
    25841073U,	// LOAD16_S_I32_A64
    1346993U,	// LOAD16_S_I32_A64_S
    25841087U,	// LOAD16_S_I64_A32
    1347007U,	// LOAD16_S_I64_A32_S
    25841087U,	// LOAD16_S_I64_A64
    1347007U,	// LOAD16_S_I64_A64_S
    25843483U,	// LOAD16_U_I32_A32
    1349403U,	// LOAD16_U_I32_A32_S
    25843483U,	// LOAD16_U_I32_A64
    1349403U,	// LOAD16_U_I32_A64_S
    25843497U,	// LOAD16_U_I64_A32
    1349417U,	// LOAD16_U_I64_A32_S
    25843497U,	// LOAD16_U_I64_A64
    1349417U,	// LOAD16_U_I64_A64_S
    25842304U,	// LOAD32_SPLAT_A32
    1348224U,	// LOAD32_SPLAT_A32_S
    25842304U,	// LOAD32_SPLAT_A64
    1348224U,	// LOAD32_SPLAT_A64_S
    25840530U,	// LOAD32_S_I64_A32
    1346450U,	// LOAD32_S_I64_A32_S
    25840530U,	// LOAD32_S_I64_A64
    1346450U,	// LOAD32_S_I64_A64_S
    25842935U,	// LOAD32_U_I64_A32
    1348855U,	// LOAD32_U_I64_A32_S
    25842935U,	// LOAD32_U_I64_A64
    1348855U,	// LOAD32_U_I64_A64_S
    25842323U,	// LOAD64_SPLAT_A32
    1348243U,	// LOAD64_SPLAT_A32_S
    25842323U,	// LOAD64_SPLAT_A64
    1348243U,	// LOAD64_SPLAT_A64_S
    25842361U,	// LOAD8_SPLAT_A32
    1348281U,	// LOAD8_SPLAT_A32_S
    25842361U,	// LOAD8_SPLAT_A64
    1348281U,	// LOAD8_SPLAT_A64_S
    25841289U,	// LOAD8_S_I32_A32
    1347209U,	// LOAD8_S_I32_A32_S
    25841289U,	// LOAD8_S_I32_A64
    1347209U,	// LOAD8_S_I32_A64_S
    25841302U,	// LOAD8_S_I64_A32
    1347222U,	// LOAD8_S_I64_A32_S
    25841302U,	// LOAD8_S_I64_A64
    1347222U,	// LOAD8_S_I64_A64_S
    25843709U,	// LOAD8_U_I32_A32
    1349629U,	// LOAD8_U_I32_A32_S
    25843709U,	// LOAD8_U_I32_A64
    1349629U,	// LOAD8_U_I32_A64_S
    25843722U,	// LOAD8_U_I64_A32
    1349642U,	// LOAD8_U_I64_A32_S
    25843722U,	// LOAD8_U_I64_A64
    1349642U,	// LOAD8_U_I64_A64_S
    25841521U,	// LOAD_EXTEND_S_I16x8_A32
    1347441U,	// LOAD_EXTEND_S_I16x8_A32_S
    25841521U,	// LOAD_EXTEND_S_I16x8_A64
    1347441U,	// LOAD_EXTEND_S_I16x8_A64_S
    25841055U,	// LOAD_EXTEND_S_I32x4_A32
    1346975U,	// LOAD_EXTEND_S_I32x4_A32_S
    25841055U,	// LOAD_EXTEND_S_I32x4_A64
    1346975U,	// LOAD_EXTEND_S_I32x4_A64_S
    25840692U,	// LOAD_EXTEND_S_I64x2_A32
    1346612U,	// LOAD_EXTEND_S_I64x2_A32_S
    25840692U,	// LOAD_EXTEND_S_I64x2_A64
    1346612U,	// LOAD_EXTEND_S_I64x2_A64_S
    25843932U,	// LOAD_EXTEND_U_I16x8_A32
    1349852U,	// LOAD_EXTEND_U_I16x8_A32_S
    25843932U,	// LOAD_EXTEND_U_I16x8_A64
    1349852U,	// LOAD_EXTEND_U_I16x8_A64_S
    25843465U,	// LOAD_EXTEND_U_I32x4_A32
    1349385U,	// LOAD_EXTEND_U_I32x4_A32_S
    25843465U,	// LOAD_EXTEND_U_I32x4_A64
    1349385U,	// LOAD_EXTEND_U_I32x4_A64_S
    25843102U,	// LOAD_EXTEND_U_I64x2_A32
    1349022U,	// LOAD_EXTEND_U_I64x2_A32_S
    25843102U,	// LOAD_EXTEND_U_I64x2_A64
    1349022U,	// LOAD_EXTEND_U_I64x2_A64_S
    25838794U,	// LOAD_F32_A32
    1344714U,	// LOAD_F32_A32_S
    25838794U,	// LOAD_F32_A64
    1344714U,	// LOAD_F32_A64_S
    25838814U,	// LOAD_F64_A32
    1344734U,	// LOAD_F64_A32_S
    25838814U,	// LOAD_F64_A64
    1344734U,	// LOAD_F64_A64_S
    25838804U,	// LOAD_I32_A32
    1344724U,	// LOAD_I32_A32_S
    25838804U,	// LOAD_I32_A64
    1344724U,	// LOAD_I32_A64_S
    25838824U,	// LOAD_I64_A32
    1344744U,	// LOAD_I64_A32_S
    25838824U,	// LOAD_I64_A64
    1344744U,	// LOAD_I64_A64_S
    59393672U,	// LOAD_LANE_I16x8_A32
    1869448U,	// LOAD_LANE_I16x8_A32_S
    59393672U,	// LOAD_LANE_I16x8_A64
    1869448U,	// LOAD_LANE_I16x8_A64_S
    59393598U,	// LOAD_LANE_I32x4_A32
    1869374U,	// LOAD_LANE_I32x4_A32_S
    59393598U,	// LOAD_LANE_I32x4_A64
    1869374U,	// LOAD_LANE_I32x4_A64_S
    59393635U,	// LOAD_LANE_I64x2_A32
    1869411U,	// LOAD_LANE_I64x2_A32_S
    59393635U,	// LOAD_LANE_I64x2_A64
    1869411U,	// LOAD_LANE_I64x2_A64_S
    59393709U,	// LOAD_LANE_I8x16_A32
    1869485U,	// LOAD_LANE_I8x16_A32_S
    59393709U,	// LOAD_LANE_I8x16_A64
    1869485U,	// LOAD_LANE_I8x16_A64_S
    25838834U,	// LOAD_V128_A32
    1344754U,	// LOAD_V128_A32_S
    25838834U,	// LOAD_V128_A64
    1344754U,	// LOAD_V128_A64_S
    25840258U,	// LOAD_ZERO_I32x4_A32
    1346178U,	// LOAD_ZERO_I32x4_A32_S
    25840258U,	// LOAD_ZERO_I32x4_A64
    1346178U,	// LOAD_ZERO_I32x4_A64_S
    25840276U,	// LOAD_ZERO_I64x2_A32
    1346196U,	// LOAD_ZERO_I64x2_A32_S
    25840276U,	// LOAD_ZERO_I64x2_A64
    1346196U,	// LOAD_ZERO_I64x2_A64_S
    152495U,	// LOCAL_GET_EXTERNREF
    21423U,	// LOCAL_GET_EXTERNREF_S
    152495U,	// LOCAL_GET_F32
    21423U,	// LOCAL_GET_F32_S
    152495U,	// LOCAL_GET_F64
    21423U,	// LOCAL_GET_F64_S
    152495U,	// LOCAL_GET_FUNCREF
    21423U,	// LOCAL_GET_FUNCREF_S
    152495U,	// LOCAL_GET_I32
    21423U,	// LOCAL_GET_I32_S
    152495U,	// LOCAL_GET_I64
    21423U,	// LOCAL_GET_I64_S
    152495U,	// LOCAL_GET_V128
    21423U,	// LOCAL_GET_V128_S
    152529U,	// LOCAL_SET_EXTERNREF
    21457U,	// LOCAL_SET_EXTERNREF_S
    152529U,	// LOCAL_SET_F32
    21457U,	// LOCAL_SET_F32_S
    152529U,	// LOCAL_SET_F64
    21457U,	// LOCAL_SET_F64_S
    152529U,	// LOCAL_SET_FUNCREF
    21457U,	// LOCAL_SET_FUNCREF_S
    152529U,	// LOCAL_SET_I32
    21457U,	// LOCAL_SET_I32_S
    152529U,	// LOCAL_SET_I64
    21457U,	// LOCAL_SET_I64_S
    152529U,	// LOCAL_SET_V128
    21457U,	// LOCAL_SET_V128_S
    4343227U,	// LOCAL_TEE_EXTERNREF
    17851U,	// LOCAL_TEE_EXTERNREF_S
    4343227U,	// LOCAL_TEE_F32
    17851U,	// LOCAL_TEE_F32_S
    4343227U,	// LOCAL_TEE_F64
    17851U,	// LOCAL_TEE_F64_S
    4343227U,	// LOCAL_TEE_FUNCREF
    17851U,	// LOCAL_TEE_FUNCREF_S
    4343227U,	// LOCAL_TEE_I32
    17851U,	// LOCAL_TEE_I32_S
    4343227U,	// LOCAL_TEE_I64
    17851U,	// LOCAL_TEE_I64_S
    4343227U,	// LOCAL_TEE_V128
    17851U,	// LOCAL_TEE_V128_S
    49198U,	// LOOP
    49198U,	// LOOP_S
    4342016U,	// LT_F32
    8081U,	// LT_F32_S
    4346887U,	// LT_F32x4
    11523U,	// LT_F32x4_S
    4342026U,	// LT_F64
    8090U,	// LT_F64_S
    4346877U,	// LT_F64x2
    11514U,	// LT_F64x2_S
    4346230U,	// LT_S_I16x8
    11050U,	// LT_S_I16x8_S
    4346186U,	// LT_S_I32
    11010U,	// LT_S_I32_S
    4346206U,	// LT_S_I32x4
    11028U,	// LT_S_I32x4_S
    4346196U,	// LT_S_I64
    11019U,	// LT_S_I64_S
    4346218U,	// LT_S_I8x16
    11039U,	// LT_S_I8x16_S
    4349494U,	// LT_U_I16x8
    12843U,	// LT_U_I16x8_S
    4349450U,	// LT_U_I32
    12803U,	// LT_U_I32_S
    4349470U,	// LT_U_I32x4
    12821U,	// LT_U_I32x4_S
    4349460U,	// LT_U_I64
    12812U,	// LT_U_I64_S
    4349482U,	// LT_U_I8x16
    12832U,	// LT_U_I8x16_S
    4342363U,	// MAX_F32
    8333U,	// MAX_F32_S
    4349625U,	// MAX_F32x4
    12940U,	// MAX_F32x4_S
    4342373U,	// MAX_F64
    8342U,	// MAX_F64_S
    4349614U,	// MAX_F64x2
    12930U,	// MAX_F64x2_S
    4346290U,	// MAX_S_I16x8
    11105U,	// MAX_S_I16x8_S
    4346264U,	// MAX_S_I32x4
    11081U,	// MAX_S_I32x4_S
    4346277U,	// MAX_S_I8x16
    11093U,	// MAX_S_I8x16_S
    4349554U,	// MAX_U_I16x8
    12898U,	// MAX_U_I16x8_S
    4349528U,	// MAX_U_I32x4
    12874U,	// MAX_U_I32x4_S
    4349541U,	// MAX_U_I8x16
    12886U,	// MAX_U_I8x16_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A32
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    92947055U,	// MEMORY_ATOMIC_NOTIFY_A64
    1344111U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A32
    1343764U,	// MEMORY_ATOMIC_WAIT32_A32_S
    227164436U,	// MEMORY_ATOMIC_WAIT32_A64
    1343764U,	// MEMORY_ATOMIC_WAIT32_A64_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A32
    1343787U,	// MEMORY_ATOMIC_WAIT64_A32_S
    227164459U,	// MEMORY_ATOMIC_WAIT64_A64
    1343787U,	// MEMORY_ATOMIC_WAIT64_A64_S
    4342273U,	// MIN_F32
    8261U,	// MIN_F32_S
    4344415U,	// MIN_F32x4
    9599U,	// MIN_F32x4_S
    4342283U,	// MIN_F64
    8270U,	// MIN_F64_S
    4344404U,	// MIN_F64x2
    9589U,	// MIN_F64x2_S
    4346022U,	// MIN_S_I16x8
    10859U,	// MIN_S_I16x8_S
    4345996U,	// MIN_S_I32x4
    10835U,	// MIN_S_I32x4_S
    4346009U,	// MIN_S_I8x16
    10847U,	// MIN_S_I8x16_S
    4349048U,	// MIN_U_I16x8
    12646U,	// MIN_U_I16x8_S
    4349022U,	// MIN_U_I32x4
    12622U,	// MIN_U_I32x4_S
    4349035U,	// MIN_U_I8x16
    12634U,	// MIN_U_I8x16_S
    4342233U,	// MUL_F32
    8225U,	// MUL_F32_S
    4344343U,	// MUL_F32x4
    9533U,	// MUL_F32x4_S
    4342253U,	// MUL_F64
    8243U,	// MUL_F64_S
    4344321U,	// MUL_F64x2
    9513U,	// MUL_F64x2_S
    4344365U,	// MUL_I16x8
    9553U,	// MUL_I16x8_S
    4342243U,	// MUL_I32
    8234U,	// MUL_I32_S
    4344354U,	// MUL_I32x4
    9543U,	// MUL_I32x4_S
    4342263U,	// MUL_I64
    8252U,	// MUL_I64_S
    4344332U,	// MUL_I64x2
    9523U,	// MUL_I64x2_S
    4345225U,	// NARROW_S_I16x8
    10251U,	// NARROW_S_I16x8_S
    4345691U,	// NARROW_S_I8x16
    10608U,	// NARROW_S_I8x16_S
    4347635U,	// NARROW_U_I16x8
    12114U,	// NARROW_U_I16x8_S
    4348102U,	// NARROW_U_I8x16
    12395U,	// NARROW_U_I8x16_S
    152711U,	// NEAREST_F32
    11628U,	// NEAREST_F32_S
    152752U,	// NEAREST_F32x4
    11666U,	// NEAREST_F32x4_S
    152739U,	// NEAREST_F64
    11654U,	// NEAREST_F64_S
    152724U,	// NEAREST_F64x2
    11640U,	// NEAREST_F64x2_S
    147889U,	// NEG_F32
    8189U,	// NEG_F32_S
    149667U,	// NEG_F32x4
    9285U,	// NEG_F32x4_S
    147899U,	// NEG_F64
    8198U,	// NEG_F64_S
    149645U,	// NEG_F64x2
    9265U,	// NEG_F64x2_S
    149700U,	// NEG_I16x8
    9315U,	// NEG_I16x8_S
    149678U,	// NEG_I32x4
    9295U,	// NEG_I32x4_S
    149656U,	// NEG_I64x2
    9275U,	// NEG_I64x2_S
    149689U,	// NEG_I8x16
    9305U,	// NEG_I8x16_S
    4341896U,	// NE_F32
    7973U,	// NE_F32_S
    4343318U,	// NE_F32x4
    9097U,	// NE_F32x4_S
    4341916U,	// NE_F64
    7991U,	// NE_F64_S
    4343308U,	// NE_F64x2
    9088U,	// NE_F64x2_S
    4343348U,	// NE_I16x8
    9124U,	// NE_I16x8_S
    4341906U,	// NE_I32
    7982U,	// NE_I32_S
    4343328U,	// NE_I32x4
    9106U,	// NE_I32x4_S
    4341926U,	// NE_I64
    8000U,	// NE_I64_S
    4343338U,	// NE_I8x16
    9115U,	// NE_I8x16_S
    9651U,	// NOP
    9651U,	// NOP_S
    152644U,	// NOT
    11567U,	// NOT_S
    4344557U,	// OR
    4341976U,	// OR_I32
    8045U,	// OR_I32_S
    4341986U,	// OR_I64
    8054U,	// OR_I64_S
    9723U,	// OR_S
    4349648U,	// PMAX_F32x4
    12961U,	// PMAX_F32x4_S
    4349636U,	// PMAX_F64x2
    12950U,	// PMAX_F64x2_S
    4344438U,	// PMIN_F32x4
    9620U,	// PMIN_F32x4_S
    4344426U,	// PMIN_F64x2
    9609U,	// PMIN_F64x2_S
    152606U,	// POPCNT_I32
    11532U,	// POPCNT_I32_S
    152618U,	// POPCNT_I64
    11543U,	// POPCNT_I64_S
    152630U,	// POPCNT_I8x16
    11554U,	// POPCNT_I8x16_S
    13538321U,	// PREFETCH_NT_A32
    1348625U,	// PREFETCH_NT_A32_S
    13538321U,	// PREFETCH_NT_A64
    1348625U,	// PREFETCH_NT_A64_S
    13537830U,	// PREFETCH_T_A32
    1348134U,	// PREFETCH_T_A32_S
    13537830U,	// PREFETCH_T_A64
    1348134U,	// PREFETCH_T_A64_S
    4346109U,	// Q15MULR_SAT_S_I16x8
    10939U,	// Q15MULR_SAT_S_I16x8_S
    37897252U,	// QFMA_F32x4
    8800U,	// QFMA_F32x4_S
    37897240U,	// QFMA_F64x2
    8789U,	// QFMA_F64x2_S
    37900826U,	// QFMS_F32x4
    11188U,	// QFMS_F32x4_S
    37900814U,	// QFMS_F64x2
    11177U,	// QFMS_F64x2_S
    2247139U,	// REF_NULL_EXTERNREF
    84451U,	// REF_NULL_EXTERNREF_S
    2247139U,	// REF_NULL_FUNCREF
    84451U,	// REF_NULL_FUNCREF_S
    4345974U,	// REM_S_I32
    10815U,	// REM_S_I32_S
    4345985U,	// REM_S_I64
    10825U,	// REM_S_I64_S
    4349000U,	// REM_U_I32
    12602U,	// REM_U_I32_S
    4349011U,	// REM_U_I64
    12612U,	// REM_U_I64_S
    37897976U,	// REPLACE_LANE_F32x4
    18168U,	// REPLACE_LANE_F32x4_S
    37897936U,	// REPLACE_LANE_F64x2
    18128U,	// REPLACE_LANE_F64x2_S
    37898036U,	// REPLACE_LANE_I16x8
    18228U,	// REPLACE_LANE_I16x8_S
    37897996U,	// REPLACE_LANE_I32x4
    18188U,	// REPLACE_LANE_I32x4_S
    37897956U,	// REPLACE_LANE_I64x2
    18148U,	// REPLACE_LANE_I64x2_S
    37898016U,	// REPLACE_LANE_I8x16
    18208U,	// REPLACE_LANE_I8x16_S
    16977U,	// RETHROW
    16977U,	// RETHROW_S
    9644U,	// RETURN
    9644U,	// RETURN_S
    16413U,	// RET_CALL
    4994U,	// RET_CALL_INDIRECT
    21378U,	// RET_CALL_INDIRECT_S
    18877U,	// RET_CALL_S
    4344301U,	// ROTL_I32
    9495U,	// ROTL_I32_S
    4344311U,	// ROTL_I64
    9504U,	// ROTL_I64_S
    4344702U,	// ROTR_I32
    9784U,	// ROTR_I32_S
    4344712U,	// ROTR_I64
    9793U,	// ROTR_I64_S
    37901080U,	// SELECT_EXTERNREF
    11362U,	// SELECT_EXTERNREF_S
    37901003U,	// SELECT_F32
    11291U,	// SELECT_F32_S
    37901027U,	// SELECT_F64
    11313U,	// SELECT_F64_S
    37901064U,	// SELECT_FUNCREF
    11347U,	// SELECT_FUNCREF_S
    37901015U,	// SELECT_I32
    11302U,	// SELECT_I32_S
    37901039U,	// SELECT_I64
    11324U,	// SELECT_I64_S
    37901051U,	// SELECT_V128
    11335U,	// SELECT_V128_S
    4344198U,	// SHL_I16x8
    9421U,	// SHL_I16x8_S
    4342213U,	// SHL_I32
    8207U,	// SHL_I32_S
    4344176U,	// SHL_I32x4
    9401U,	// SHL_I32x4_S
    4342223U,	// SHL_I64
    8216U,	// SHL_I64_S
    4344165U,	// SHL_I64x2
    9391U,	// SHL_I64x2_S
    4344187U,	// SHL_I8x16
    9411U,	// SHL_I8x16_S
    4346096U,	// SHR_S_I16x8
    10927U,	// SHR_S_I16x8_S
    4346035U,	// SHR_S_I32
    10871U,	// SHR_S_I32_S
    4346070U,	// SHR_S_I32x4
    10903U,	// SHR_S_I32x4_S
    4346059U,	// SHR_S_I64
    10893U,	// SHR_S_I64_S
    4346046U,	// SHR_S_I64x2
    10881U,	// SHR_S_I64x2_S
    4346083U,	// SHR_S_I8x16
    10915U,	// SHR_S_I8x16_S
    4349150U,	// SHR_U_I16x8
    12740U,	// SHR_U_I16x8_S
    4349089U,	// SHR_U_I32
    12684U,	// SHR_U_I32_S
    4349124U,	// SHR_U_I32x4
    12716U,	// SHR_U_I32x4_S
    4349113U,	// SHR_U_I64
    12706U,	// SHR_U_I64_S
    4349100U,	// SHR_U_I64x2
    12694U,	// SHR_U_I64x2_S
    4349137U,	// SHR_U_I8x16
    12728U,	// SHR_U_I8x16_S
    1581401582U,	// SHUFFLE
    3728885230U,	// SHUFFLE_S
    152140U,	// SPLAT_F32x4
    11243U,	// SPLAT_F32x4_S
    152114U,	// SPLAT_F64x2
    11219U,	// SPLAT_F64x2_S
    152179U,	// SPLAT_I16x8
    11279U,	// SPLAT_I16x8_S
    152153U,	// SPLAT_I32x4
    11255U,	// SPLAT_I32x4_S
    152127U,	// SPLAT_I64x2
    11231U,	// SPLAT_I64x2_S
    152166U,	// SPLAT_I8x16
    11267U,	// SPLAT_I8x16_S
    152667U,	// SQRT_F32
    11588U,	// SQRT_F32_S
    152699U,	// SQRT_F32x4
    11617U,	// SQRT_F32x4_S
    152689U,	// SQRT_F64
    11608U,	// SQRT_F64_S
    152677U,	// SQRT_F64x2
    11597U,	// SQRT_F64x2_S
    47088536U,	// STORE16_I32_A32
    1344408U,	// STORE16_I32_A32_S
    47088536U,	// STORE16_I32_A64
    1344408U,	// STORE16_I32_A64_S
    47088549U,	// STORE16_I64_A32
    1344421U,	// STORE16_I64_A32_S
    47088549U,	// STORE16_I64_A64
    1344421U,	// STORE16_I64_A64_S
    47088322U,	// STORE32_I64_A32
    1344194U,	// STORE32_I64_A32_S
    47088322U,	// STORE32_I64_A64
    1344194U,	// STORE32_I64_A64_S
    47088602U,	// STORE8_I32_A32
    1344474U,	// STORE8_I32_A32_S
    47088602U,	// STORE8_I32_A64
    1344474U,	// STORE8_I32_A64_S
    47088614U,	// STORE8_I64_A32
    1344486U,	// STORE8_I64_A32_S
    47088614U,	// STORE8_I64_A64
    1344486U,	// STORE8_I64_A64_S
    47089560U,	// STORE_F32_A32
    1345432U,	// STORE_F32_A32_S
    47089560U,	// STORE_F32_A64
    1345432U,	// STORE_F32_A64_S
    47089582U,	// STORE_F64_A32
    1345454U,	// STORE_F64_A32_S
    47089582U,	// STORE_F64_A64
    1345454U,	// STORE_F64_A64_S
    47089571U,	// STORE_I32_A32
    1345443U,	// STORE_I32_A32_S
    47089571U,	// STORE_I32_A64
    1345443U,	// STORE_I32_A64_S
    47089593U,	// STORE_I64_A32
    1345465U,	// STORE_I64_A32_S
    47089593U,	// STORE_I64_A64
    1345465U,	// STORE_I64_A64_S
    3049114U,	// STORE_LANE_I16x8_A32
    1869466U,	// STORE_LANE_I16x8_A32_S
    99994U,	// STORE_LANE_I16x8_A64
    1869466U,	// STORE_LANE_I16x8_A64_S
    3049040U,	// STORE_LANE_I32x4_A32
    1869392U,	// STORE_LANE_I32x4_A32_S
    99920U,	// STORE_LANE_I32x4_A64
    1869392U,	// STORE_LANE_I32x4_A64_S
    3049077U,	// STORE_LANE_I64x2_A32
    1869429U,	// STORE_LANE_I64x2_A32_S
    99957U,	// STORE_LANE_I64x2_A64
    1869429U,	// STORE_LANE_I64x2_A64_S
    3049150U,	// STORE_LANE_I8x16_A32
    1869502U,	// STORE_LANE_I8x16_A32_S
    100030U,	// STORE_LANE_I8x16_A64
    1869502U,	// STORE_LANE_I8x16_A64_S
    47089604U,	// STORE_V128_A32
    1345476U,	// STORE_V128_A32_S
    47089604U,	// STORE_V128_A64
    1345476U,	// STORE_V128_A64_S
    4342082U,	// SUB_F32
    8099U,	// SUB_F32_S
    4342854U,	// SUB_F32x4
    8831U,	// SUB_F32x4_S
    4342102U,	// SUB_F64
    8117U,	// SUB_F64_S
    4342832U,	// SUB_F64x2
    8811U,	// SUB_F64x2_S
    4342887U,	// SUB_I16x8
    8861U,	// SUB_I16x8_S
    4342092U,	// SUB_I32
    8108U,	// SUB_I32_S
    4342865U,	// SUB_I32x4
    8841U,	// SUB_I32x4_S
    4342112U,	// SUB_I64
    8126U,	// SUB_I64_S
    4342843U,	// SUB_I64x2
    8821U,	// SUB_I64x2_S
    4342876U,	// SUB_I8x16
    8851U,	// SUB_I8x16_S
    4345908U,	// SUB_SAT_S_I16x8
    10752U,	// SUB_SAT_S_I16x8_S
    4345886U,	// SUB_SAT_S_I8x16
    10731U,	// SUB_SAT_S_I8x16_S
    4348673U,	// SUB_SAT_U_I16x8
    12539U,	// SUB_SAT_U_I16x8_S
    4348651U,	// SUB_SAT_U_I8x16
    12518U,	// SUB_SAT_U_I8x16_S
    4343293U,	// SWIZZLE
    9074U,	// SWIZZLE_S
    105012956U,	// TABLE_COPY
    155356U,	// TABLE_COPY_S
    37898698U,	// TABLE_FILL_EXTERNREF
    18890U,	// TABLE_FILL_EXTERNREF_S
    37898698U,	// TABLE_FILL_FUNCREF
    18890U,	// TABLE_FILL_FUNCREF_S
    152472U,	// TABLE_GET_EXTERNREF
    21400U,	// TABLE_GET_EXTERNREF_S
    152472U,	// TABLE_GET_FUNCREF
    21400U,	// TABLE_GET_FUNCREF_S
    37904021U,	// TABLE_GROW_EXTERNREF
    24213U,	// TABLE_GROW_EXTERNREF_S
    37904021U,	// TABLE_GROW_FUNCREF
    24213U,	// TABLE_GROW_FUNCREF_S
    4346810U,	// TABLE_SET_EXTERNREF
    21434U,	// TABLE_SET_EXTERNREF_S
    4346810U,	// TABLE_SET_FUNCREF
    21434U,	// TABLE_SET_FUNCREF_S
    149620U,	// TABLE_SIZE
    18548U,	// TABLE_SIZE_S
    4343227U,	// TEE_EXTERNREF
    9016U,	// TEE_EXTERNREF_S
    4343227U,	// TEE_F32
    9016U,	// TEE_F32_S
    4343227U,	// TEE_F64
    9016U,	// TEE_F64_S
    4343227U,	// TEE_FUNCREF
    9016U,	// TEE_FUNCREF_S
    4343227U,	// TEE_I32
    9016U,	// TEE_I32_S
    4343227U,	// TEE_I64
    9016U,	// TEE_I64_S
    4343227U,	// TEE_V128
    9016U,	// TEE_V128_S
    16470U,	// THROW
    16470U,	// THROW_S
    148634U,	// TRUNC_F32
    8871U,	// TRUNC_F32_S
    148669U,	// TRUNC_F32x4
    8903U,	// TRUNC_F32x4_S
    148658U,	// TRUNC_F64
    8893U,	// TRUNC_F64_S
    148645U,	// TRUNC_F64x2
    8881U,	// TRUNC_F64x2_S
    49163U,	// TRY
    49163U,	// TRY_S
    9062U,	// UNREACHABLE
    9062U,	// UNREACHABLE_S
    4345409U,	// WIDEN_I8x16_TO_I32x4_S
    20033U,	// WIDEN_I8x16_TO_I32x4_S_S
    4347829U,	// WIDEN_I8x16_TO_I32x4_U
    22453U,	// WIDEN_I8x16_TO_I32x4_U_S
    4344652U,	// XOR
    4342293U,	// XOR_I32
    8279U,	// XOR_I32_S
    4342303U,	// XOR_I64
    8288U,	// XOR_I64_S
    9775U,	// XOR_S
    4349601U,	// anonymous_2718MEMORY_GROW_A32
    24225U,	// anonymous_2718MEMORY_GROW_A32_S
    149632U,	// anonymous_2718MEMORY_SIZE_A32
    18560U,	// anonymous_2718MEMORY_SIZE_A32_S
    4349601U,	// anonymous_2719MEMORY_GROW_A64
    24225U,	// anonymous_2719MEMORY_GROW_A64_S
    149632U,	// anonymous_2719MEMORY_SIZE_A64
    18560U,	// anonymous_2719MEMORY_SIZE_A64_S
    37901134U,	// anonymous_4465SIGNSELECT_I8x16
    11413U,	// anonymous_4465SIGNSELECT_I8x16_S
    37901152U,	// anonymous_4466SIGNSELECT_I16x8
    11430U,	// anonymous_4466SIGNSELECT_I16x8_S
    37901116U,	// anonymous_4467SIGNSELECT_I32x4
    11396U,	// anonymous_4467SIGNSELECT_I32x4_S
    37901098U,	// anonymous_4468SIGNSELECT_I64x2
    11379U,	// anonymous_4468SIGNSELECT_I64x2_S
    19110U,	// anonymous_4568DATA_DROP
    19110U,	// anonymous_4568DATA_DROP_S
    105012980U,	// anonymous_4568MEMORY_COPY_A32
    155380U,	// anonymous_4568MEMORY_COPY_A32_S
    37898710U,	// anonymous_4568MEMORY_FILL_A32
    18902U,	// anonymous_4568MEMORY_FILL_A32_S
    105010160U,	// anonymous_4568MEMORY_INIT_A32
    152560U,	// anonymous_4568MEMORY_INIT_A32_S
    19110U,	// anonymous_4569DATA_DROP
    19110U,	// anonymous_4569DATA_DROP_S
    105012980U,	// anonymous_4569MEMORY_COPY_A64
    155380U,	// anonymous_4569MEMORY_COPY_A64_S
    37898710U,	// anonymous_4569MEMORY_FILL_A64
    18902U,	// anonymous_4569MEMORY_FILL_A64_S
    105010160U,	// anonymous_4569MEMORY_INIT_A64
    152560U,	// anonymous_4569MEMORY_INIT_A64_S
    150742U,	// fp_to_sint_I32x4
    10079U,	// fp_to_sint_I32x4_S
    153152U,	// fp_to_uint_I32x4
    11942U,	// fp_to_uint_I32x4_S
    150894U,	// int_wasm_convert_low_signed_F64x2
    10225U,	// int_wasm_convert_low_signed_F64x2_S
    153304U,	// int_wasm_convert_low_unsigned_F64x2
    12088U,	// int_wasm_convert_low_unsigned_F64x2_S
    148254U,	// int_wasm_demote_zero_F32x4
    8591U,	// int_wasm_demote_zero_F32x4_S
    151021U,	// int_wasm_extadd_pairwise_signed_I16x8
    10302U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    151233U,	// int_wasm_extadd_pairwise_signed_I32x4
    10460U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    153441U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    12135U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    153663U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    12265U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    148351U,	// int_wasm_promote_low_F64x2
    8683U,	// int_wasm_promote_low_F64x2_S
    150598U,	// int_wasm_trunc_saturate_zero_signed_I32x4
    9942U,	// int_wasm_trunc_saturate_zero_signed_I32x4_S
    153008U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4
    11805U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4_S
    150794U,	// int_wasm_widen_high_signed_I64x2
    10129U,	// int_wasm_widen_high_signed_I64x2_S
    153204U,	// int_wasm_widen_high_unsigned_I64x2
    11992U,	// int_wasm_widen_high_unsigned_I64x2_S
    150869U,	// int_wasm_widen_low_signed_I64x2
    10201U,	// int_wasm_widen_low_signed_I64x2_S
    153279U,	// int_wasm_widen_low_unsigned_I64x2
    12064U,	// int_wasm_widen_low_unsigned_I64x2_S
    150820U,	// sint_to_fp_F32x4
    10154U,	// sint_to_fp_F32x4_S
    153230U,	// uint_to_fp_F32x4
    12017U,	// uint_to_fp_F32x4_S
    151079U,	// widen_high_s_I16x8
    10358U,	// widen_high_s_I16x8_S
    151291U,	// widen_high_s_I32x4
    10516U,	// widen_high_s_I32x4_S
    153499U,	// widen_high_u_I16x8
    12191U,	// widen_high_u_I16x8_S
    153721U,	// widen_high_u_I32x4
    12321U,	// widen_high_u_I32x4_S
    151152U,	// widen_low_s_I16x8
    10408U,	// widen_low_s_I16x8_S
    151362U,	// widen_low_s_I32x4
    10584U,	// widen_low_s_I32x4_S
    153572U,	// widen_low_u_I16x8
    12241U,	// widen_low_u_I16x8_S
    153773U,	// widen_low_u_I32x4
    12371U,	// widen_low_u_I32x4_S
  };

  static const uint8_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// CALL_PARAMS
    0U,	// CALL_PARAMS_S
    0U,	// CALL_RESULTS
    0U,	// CALL_RESULTS_S
    0U,	// CATCHRET
    0U,	// CATCHRET_S
    0U,	// CLEANUPRET
    0U,	// CLEANUPRET_S
    0U,	// COMPILER_FENCE
    0U,	// COMPILER_FENCE_S
    0U,	// RET_CALL_RESULTS
    0U,	// RET_CALL_RESULTS_S
    0U,	// ABS_F32
    0U,	// ABS_F32_S
    0U,	// ABS_F32x4
    0U,	// ABS_F32x4_S
    0U,	// ABS_F64
    0U,	// ABS_F64_S
    0U,	// ABS_F64x2
    0U,	// ABS_F64x2_S
    0U,	// ABS_I16x8
    0U,	// ABS_I16x8_S
    0U,	// ABS_I32x4
    0U,	// ABS_I32x4_S
    0U,	// ABS_I64x2
    0U,	// ABS_I64x2_S
    0U,	// ABS_I8x16
    0U,	// ABS_I8x16_S
    0U,	// ADD_F32
    0U,	// ADD_F32_S
    0U,	// ADD_F32x4
    0U,	// ADD_F32x4_S
    0U,	// ADD_F64
    0U,	// ADD_F64_S
    0U,	// ADD_F64x2
    0U,	// ADD_F64x2_S
    0U,	// ADD_I16x8
    0U,	// ADD_I16x8_S
    0U,	// ADD_I32
    0U,	// ADD_I32_S
    0U,	// ADD_I32x4
    0U,	// ADD_I32x4_S
    0U,	// ADD_I64
    0U,	// ADD_I64_S
    0U,	// ADD_I64x2
    0U,	// ADD_I64x2_S
    0U,	// ADD_I8x16
    0U,	// ADD_I8x16_S
    0U,	// ADD_SAT_S_I16x8
    0U,	// ADD_SAT_S_I16x8_S
    0U,	// ADD_SAT_S_I8x16
    0U,	// ADD_SAT_S_I8x16_S
    0U,	// ADD_SAT_U_I16x8
    0U,	// ADD_SAT_U_I16x8_S
    0U,	// ADD_SAT_U_I8x16
    0U,	// ADD_SAT_U_I8x16_S
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKDOWN_S
    0U,	// ADJCALLSTACKUP
    0U,	// ADJCALLSTACKUP_S
    0U,	// ALLTRUE_I16x8
    0U,	// ALLTRUE_I16x8_S
    0U,	// ALLTRUE_I32x4
    0U,	// ALLTRUE_I32x4_S
    0U,	// ALLTRUE_I64x2
    0U,	// ALLTRUE_I64x2_S
    0U,	// ALLTRUE_I8x16
    0U,	// ALLTRUE_I8x16_S
    0U,	// AND
    0U,	// ANDNOT
    0U,	// ANDNOT_S
    0U,	// AND_I32
    0U,	// AND_I32_S
    0U,	// AND_I64
    0U,	// AND_I64_S
    0U,	// AND_S
    0U,	// ANYTRUE_I16x8
    0U,	// ANYTRUE_I16x8_S
    0U,	// ANYTRUE_I32x4
    0U,	// ANYTRUE_I32x4_S
    0U,	// ANYTRUE_I64x2
    0U,	// ANYTRUE_I64x2_S
    0U,	// ANYTRUE_I8x16
    0U,	// ANYTRUE_I8x16_S
    0U,	// ARGUMENT_externref
    0U,	// ARGUMENT_externref_S
    0U,	// ARGUMENT_f32
    0U,	// ARGUMENT_f32_S
    0U,	// ARGUMENT_f64
    0U,	// ARGUMENT_f64_S
    0U,	// ARGUMENT_funcref
    0U,	// ARGUMENT_funcref_S
    0U,	// ARGUMENT_i32
    0U,	// ARGUMENT_i32_S
    0U,	// ARGUMENT_i64
    0U,	// ARGUMENT_i64_S
    0U,	// ARGUMENT_v16i8
    0U,	// ARGUMENT_v16i8_S
    0U,	// ARGUMENT_v2f64
    0U,	// ARGUMENT_v2f64_S
    0U,	// ARGUMENT_v2i64
    0U,	// ARGUMENT_v2i64_S
    0U,	// ARGUMENT_v4f32
    0U,	// ARGUMENT_v4f32_S
    0U,	// ARGUMENT_v4i32
    0U,	// ARGUMENT_v4i32_S
    0U,	// ARGUMENT_v8i16
    0U,	// ARGUMENT_v8i16_S
    0U,	// ATOMIC_FENCE
    0U,	// ATOMIC_FENCE_S
    0U,	// ATOMIC_LOAD16_U_I32_A32
    0U,	// ATOMIC_LOAD16_U_I32_A32_S
    0U,	// ATOMIC_LOAD16_U_I32_A64
    0U,	// ATOMIC_LOAD16_U_I32_A64_S
    0U,	// ATOMIC_LOAD16_U_I64_A32
    0U,	// ATOMIC_LOAD16_U_I64_A32_S
    0U,	// ATOMIC_LOAD16_U_I64_A64
    0U,	// ATOMIC_LOAD16_U_I64_A64_S
    0U,	// ATOMIC_LOAD32_U_I64_A32
    0U,	// ATOMIC_LOAD32_U_I64_A32_S
    0U,	// ATOMIC_LOAD32_U_I64_A64
    0U,	// ATOMIC_LOAD32_U_I64_A64_S
    0U,	// ATOMIC_LOAD8_U_I32_A32
    0U,	// ATOMIC_LOAD8_U_I32_A32_S
    0U,	// ATOMIC_LOAD8_U_I32_A64
    0U,	// ATOMIC_LOAD8_U_I32_A64_S
    0U,	// ATOMIC_LOAD8_U_I64_A32
    0U,	// ATOMIC_LOAD8_U_I64_A32_S
    0U,	// ATOMIC_LOAD8_U_I64_A64
    0U,	// ATOMIC_LOAD8_U_I64_A64_S
    0U,	// ATOMIC_LOAD_I32_A32
    0U,	// ATOMIC_LOAD_I32_A32_S
    0U,	// ATOMIC_LOAD_I32_A64
    0U,	// ATOMIC_LOAD_I32_A64_S
    0U,	// ATOMIC_LOAD_I64_A32
    0U,	// ATOMIC_LOAD_I64_A32_S
    0U,	// ATOMIC_LOAD_I64_A64
    0U,	// ATOMIC_LOAD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32
    0U,	// ATOMIC_RMW16_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64
    0U,	// ATOMIC_RMW16_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32
    0U,	// ATOMIC_RMW16_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64
    0U,	// ATOMIC_RMW16_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A32
    0U,	// ATOMIC_RMW16_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I32_A64
    0U,	// ATOMIC_RMW16_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A32
    0U,	// ATOMIC_RMW16_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW16_U_AND_I64_A64
    0U,	// ATOMIC_RMW16_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A32
    0U,	// ATOMIC_RMW16_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I32_A64
    0U,	// ATOMIC_RMW16_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A32
    0U,	// ATOMIC_RMW16_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_OR_I64_A64
    0U,	// ATOMIC_RMW16_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32
    0U,	// ATOMIC_RMW16_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64
    0U,	// ATOMIC_RMW16_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32
    0U,	// ATOMIC_RMW16_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64
    0U,	// ATOMIC_RMW16_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW16_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32
    0U,	// ATOMIC_RMW16_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64
    0U,	// ATOMIC_RMW16_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32
    0U,	// ATOMIC_RMW16_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64
    0U,	// ATOMIC_RMW16_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32
    0U,	// ATOMIC_RMW32_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64
    0U,	// ATOMIC_RMW32_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A32
    0U,	// ATOMIC_RMW32_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW32_U_AND_I64_A64
    0U,	// ATOMIC_RMW32_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A32
    0U,	// ATOMIC_RMW32_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_OR_I64_A64
    0U,	// ATOMIC_RMW32_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32
    0U,	// ATOMIC_RMW32_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64
    0U,	// ATOMIC_RMW32_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW32_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32
    0U,	// ATOMIC_RMW32_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64
    0U,	// ATOMIC_RMW32_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32
    0U,	// ATOMIC_RMW8_U_ADD_I32_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64
    0U,	// ATOMIC_RMW8_U_ADD_I32_A64_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32
    0U,	// ATOMIC_RMW8_U_ADD_I64_A32_S
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64
    0U,	// ATOMIC_RMW8_U_ADD_I64_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A32
    0U,	// ATOMIC_RMW8_U_AND_I32_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I32_A64
    0U,	// ATOMIC_RMW8_U_AND_I32_A64_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A32
    0U,	// ATOMIC_RMW8_U_AND_I64_A32_S
    0U,	// ATOMIC_RMW8_U_AND_I64_A64
    0U,	// ATOMIC_RMW8_U_AND_I64_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A32
    0U,	// ATOMIC_RMW8_U_OR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I32_A64
    0U,	// ATOMIC_RMW8_U_OR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A32
    0U,	// ATOMIC_RMW8_U_OR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_OR_I64_A64
    0U,	// ATOMIC_RMW8_U_OR_I64_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32
    0U,	// ATOMIC_RMW8_U_SUB_I32_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64
    0U,	// ATOMIC_RMW8_U_SUB_I32_A64_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32
    0U,	// ATOMIC_RMW8_U_SUB_I64_A32_S
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64
    0U,	// ATOMIC_RMW8_U_SUB_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64
    0U,	// ATOMIC_RMW8_U_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32
    0U,	// ATOMIC_RMW8_U_XOR_I32_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64
    0U,	// ATOMIC_RMW8_U_XOR_I32_A64_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32
    0U,	// ATOMIC_RMW8_U_XOR_I64_A32_S
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64
    0U,	// ATOMIC_RMW8_U_XOR_I64_A64_S
    0U,	// ATOMIC_RMW_ADD_I32_A32
    0U,	// ATOMIC_RMW_ADD_I32_A32_S
    0U,	// ATOMIC_RMW_ADD_I32_A64
    0U,	// ATOMIC_RMW_ADD_I32_A64_S
    0U,	// ATOMIC_RMW_ADD_I64_A32
    0U,	// ATOMIC_RMW_ADD_I64_A32_S
    0U,	// ATOMIC_RMW_ADD_I64_A64
    0U,	// ATOMIC_RMW_ADD_I64_A64_S
    0U,	// ATOMIC_RMW_AND_I32_A32
    0U,	// ATOMIC_RMW_AND_I32_A32_S
    0U,	// ATOMIC_RMW_AND_I32_A64
    0U,	// ATOMIC_RMW_AND_I32_A64_S
    0U,	// ATOMIC_RMW_AND_I64_A32
    0U,	// ATOMIC_RMW_AND_I64_A32_S
    0U,	// ATOMIC_RMW_AND_I64_A64
    0U,	// ATOMIC_RMW_AND_I64_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I32_A64_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A32_S
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64
    0U,	// ATOMIC_RMW_CMPXCHG_I64_A64_S
    0U,	// ATOMIC_RMW_OR_I32_A32
    0U,	// ATOMIC_RMW_OR_I32_A32_S
    0U,	// ATOMIC_RMW_OR_I32_A64
    0U,	// ATOMIC_RMW_OR_I32_A64_S
    0U,	// ATOMIC_RMW_OR_I64_A32
    0U,	// ATOMIC_RMW_OR_I64_A32_S
    0U,	// ATOMIC_RMW_OR_I64_A64
    0U,	// ATOMIC_RMW_OR_I64_A64_S
    0U,	// ATOMIC_RMW_SUB_I32_A32
    0U,	// ATOMIC_RMW_SUB_I32_A32_S
    0U,	// ATOMIC_RMW_SUB_I32_A64
    0U,	// ATOMIC_RMW_SUB_I32_A64_S
    0U,	// ATOMIC_RMW_SUB_I64_A32
    0U,	// ATOMIC_RMW_SUB_I64_A32_S
    0U,	// ATOMIC_RMW_SUB_I64_A64
    0U,	// ATOMIC_RMW_SUB_I64_A64_S
    0U,	// ATOMIC_RMW_XCHG_I32_A32
    0U,	// ATOMIC_RMW_XCHG_I32_A32_S
    0U,	// ATOMIC_RMW_XCHG_I32_A64
    0U,	// ATOMIC_RMW_XCHG_I32_A64_S
    0U,	// ATOMIC_RMW_XCHG_I64_A32
    0U,	// ATOMIC_RMW_XCHG_I64_A32_S
    0U,	// ATOMIC_RMW_XCHG_I64_A64
    0U,	// ATOMIC_RMW_XCHG_I64_A64_S
    0U,	// ATOMIC_RMW_XOR_I32_A32
    0U,	// ATOMIC_RMW_XOR_I32_A32_S
    0U,	// ATOMIC_RMW_XOR_I32_A64
    0U,	// ATOMIC_RMW_XOR_I32_A64_S
    0U,	// ATOMIC_RMW_XOR_I64_A32
    0U,	// ATOMIC_RMW_XOR_I64_A32_S
    0U,	// ATOMIC_RMW_XOR_I64_A64
    0U,	// ATOMIC_RMW_XOR_I64_A64_S
    0U,	// ATOMIC_STORE16_I32_A32
    0U,	// ATOMIC_STORE16_I32_A32_S
    0U,	// ATOMIC_STORE16_I32_A64
    0U,	// ATOMIC_STORE16_I32_A64_S
    0U,	// ATOMIC_STORE16_I64_A32
    0U,	// ATOMIC_STORE16_I64_A32_S
    0U,	// ATOMIC_STORE16_I64_A64
    0U,	// ATOMIC_STORE16_I64_A64_S
    0U,	// ATOMIC_STORE32_I64_A32
    0U,	// ATOMIC_STORE32_I64_A32_S
    0U,	// ATOMIC_STORE32_I64_A64
    0U,	// ATOMIC_STORE32_I64_A64_S
    0U,	// ATOMIC_STORE8_I32_A32
    0U,	// ATOMIC_STORE8_I32_A32_S
    0U,	// ATOMIC_STORE8_I32_A64
    0U,	// ATOMIC_STORE8_I32_A64_S
    0U,	// ATOMIC_STORE8_I64_A32
    0U,	// ATOMIC_STORE8_I64_A32_S
    0U,	// ATOMIC_STORE8_I64_A64
    0U,	// ATOMIC_STORE8_I64_A64_S
    0U,	// ATOMIC_STORE_I32_A32
    0U,	// ATOMIC_STORE_I32_A32_S
    0U,	// ATOMIC_STORE_I32_A64
    0U,	// ATOMIC_STORE_I32_A64_S
    0U,	// ATOMIC_STORE_I64_A32
    0U,	// ATOMIC_STORE_I64_A32_S
    0U,	// ATOMIC_STORE_I64_A64
    0U,	// ATOMIC_STORE_I64_A64_S
    0U,	// AVGR_U_I16x8
    0U,	// AVGR_U_I16x8_S
    0U,	// AVGR_U_I8x16
    0U,	// AVGR_U_I8x16_S
    0U,	// BITMASK_I16x8
    0U,	// BITMASK_I16x8_S
    0U,	// BITMASK_I32x4
    0U,	// BITMASK_I32x4_S
    0U,	// BITMASK_I64x2
    0U,	// BITMASK_I64x2_S
    0U,	// BITMASK_I8x16
    0U,	// BITMASK_I8x16_S
    0U,	// BITSELECT
    0U,	// BITSELECT_S
    0U,	// BLOCK
    0U,	// BLOCK_S
    0U,	// BR
    0U,	// BR_IF
    0U,	// BR_IF_S
    0U,	// BR_S
    0U,	// BR_TABLE_I32
    0U,	// BR_TABLE_I32_S
    0U,	// BR_TABLE_I64
    0U,	// BR_TABLE_I64_S
    0U,	// BR_UNLESS
    0U,	// BR_UNLESS_S
    0U,	// CALL
    0U,	// CALL_INDIRECT
    0U,	// CALL_INDIRECT_S
    0U,	// CALL_S
    0U,	// CATCH
    0U,	// CATCH_ALL
    0U,	// CATCH_ALL_S
    0U,	// CATCH_S
    0U,	// CEIL_F32
    0U,	// CEIL_F32_S
    0U,	// CEIL_F32x4
    0U,	// CEIL_F32x4_S
    0U,	// CEIL_F64
    0U,	// CEIL_F64_S
    0U,	// CEIL_F64x2
    0U,	// CEIL_F64x2_S
    0U,	// CLZ_I32
    0U,	// CLZ_I32_S
    0U,	// CLZ_I64
    0U,	// CLZ_I64_S
    0U,	// CONST_F32
    0U,	// CONST_F32_S
    0U,	// CONST_F64
    0U,	// CONST_F64_S
    0U,	// CONST_I32
    0U,	// CONST_I32_S
    0U,	// CONST_I64
    0U,	// CONST_I64_S
    0U,	// CONST_V128_F32x4
    0U,	// CONST_V128_F32x4_S
    0U,	// CONST_V128_F64x2
    0U,	// CONST_V128_F64x2_S
    0U,	// CONST_V128_I16x8
    0U,	// CONST_V128_I16x8_S
    0U,	// CONST_V128_I32x4
    0U,	// CONST_V128_I32x4_S
    0U,	// CONST_V128_I64x2
    0U,	// CONST_V128_I64x2_S
    0U,	// CONST_V128_I8x16
    0U,	// CONST_V128_I8x16_S
    0U,	// COPYSIGN_F32
    0U,	// COPYSIGN_F32_S
    0U,	// COPYSIGN_F64
    0U,	// COPYSIGN_F64_S
    0U,	// COPY_EXTERNREF
    0U,	// COPY_EXTERNREF_S
    0U,	// COPY_F32
    0U,	// COPY_F32_S
    0U,	// COPY_F64
    0U,	// COPY_F64_S
    0U,	// COPY_FUNCREF
    0U,	// COPY_FUNCREF_S
    0U,	// COPY_I32
    0U,	// COPY_I32_S
    0U,	// COPY_I64
    0U,	// COPY_I64_S
    0U,	// COPY_V128
    0U,	// COPY_V128_S
    0U,	// CTZ_I32
    0U,	// CTZ_I32_S
    0U,	// CTZ_I64
    0U,	// CTZ_I64_S
    0U,	// DEBUG_UNREACHABLE
    0U,	// DEBUG_UNREACHABLE_S
    0U,	// DIV_F32
    0U,	// DIV_F32_S
    0U,	// DIV_F32x4
    0U,	// DIV_F32x4_S
    0U,	// DIV_F64
    0U,	// DIV_F64_S
    0U,	// DIV_F64x2
    0U,	// DIV_F64x2_S
    0U,	// DIV_S_I32
    0U,	// DIV_S_I32_S
    0U,	// DIV_S_I64
    0U,	// DIV_S_I64_S
    0U,	// DIV_U_I32
    0U,	// DIV_U_I32_S
    0U,	// DIV_U_I64
    0U,	// DIV_U_I64_S
    0U,	// DOT
    0U,	// DOT_S
    0U,	// DROP_EXTERNREF
    0U,	// DROP_EXTERNREF_S
    0U,	// DROP_F32
    0U,	// DROP_F32_S
    0U,	// DROP_F64
    0U,	// DROP_F64_S
    0U,	// DROP_FUNCREF
    0U,	// DROP_FUNCREF_S
    0U,	// DROP_I32
    0U,	// DROP_I32_S
    0U,	// DROP_I64
    0U,	// DROP_I64_S
    0U,	// DROP_V128
    0U,	// DROP_V128_S
    0U,	// ELSE
    0U,	// ELSE_S
    0U,	// END
    0U,	// END_BLOCK
    0U,	// END_BLOCK_S
    0U,	// END_FUNCTION
    0U,	// END_FUNCTION_S
    0U,	// END_IF
    0U,	// END_IF_S
    0U,	// END_LOOP
    0U,	// END_LOOP_S
    0U,	// END_S
    0U,	// END_TRY
    0U,	// END_TRY_S
    0U,	// EQZ_I32
    0U,	// EQZ_I32_S
    0U,	// EQZ_I64
    0U,	// EQZ_I64_S
    0U,	// EQ_F32
    0U,	// EQ_F32_S
    0U,	// EQ_F32x4
    0U,	// EQ_F32x4_S
    0U,	// EQ_F64
    0U,	// EQ_F64_S
    0U,	// EQ_F64x2
    0U,	// EQ_F64x2_S
    0U,	// EQ_I16x8
    0U,	// EQ_I16x8_S
    0U,	// EQ_I32
    0U,	// EQ_I32_S
    0U,	// EQ_I32x4
    0U,	// EQ_I32x4_S
    0U,	// EQ_I64
    0U,	// EQ_I64_S
    0U,	// EQ_I8x16
    0U,	// EQ_I8x16_S
    0U,	// EQ_v2i64
    0U,	// EQ_v2i64_S
    0U,	// EXTMUL_HIGH_S_I16x8
    0U,	// EXTMUL_HIGH_S_I16x8_S
    0U,	// EXTMUL_HIGH_S_I32x4
    0U,	// EXTMUL_HIGH_S_I32x4_S
    0U,	// EXTMUL_HIGH_S_I64x2
    0U,	// EXTMUL_HIGH_S_I64x2_S
    0U,	// EXTMUL_HIGH_U_I16x8
    0U,	// EXTMUL_HIGH_U_I16x8_S
    0U,	// EXTMUL_HIGH_U_I32x4
    0U,	// EXTMUL_HIGH_U_I32x4_S
    0U,	// EXTMUL_HIGH_U_I64x2
    0U,	// EXTMUL_HIGH_U_I64x2_S
    0U,	// EXTMUL_LOW_S_I16x8
    0U,	// EXTMUL_LOW_S_I16x8_S
    0U,	// EXTMUL_LOW_S_I32x4
    0U,	// EXTMUL_LOW_S_I32x4_S
    0U,	// EXTMUL_LOW_S_I64x2
    0U,	// EXTMUL_LOW_S_I64x2_S
    0U,	// EXTMUL_LOW_U_I16x8
    0U,	// EXTMUL_LOW_U_I16x8_S
    0U,	// EXTMUL_LOW_U_I32x4
    0U,	// EXTMUL_LOW_U_I32x4_S
    0U,	// EXTMUL_LOW_U_I64x2
    0U,	// EXTMUL_LOW_U_I64x2_S
    0U,	// EXTRACT_LANE_F32x4
    0U,	// EXTRACT_LANE_F32x4_S
    0U,	// EXTRACT_LANE_F64x2
    0U,	// EXTRACT_LANE_F64x2_S
    0U,	// EXTRACT_LANE_I16x8_s
    0U,	// EXTRACT_LANE_I16x8_s_S
    0U,	// EXTRACT_LANE_I16x8_u
    0U,	// EXTRACT_LANE_I16x8_u_S
    0U,	// EXTRACT_LANE_I32x4
    0U,	// EXTRACT_LANE_I32x4_S
    0U,	// EXTRACT_LANE_I64x2
    0U,	// EXTRACT_LANE_I64x2_S
    0U,	// EXTRACT_LANE_I8x16_s
    0U,	// EXTRACT_LANE_I8x16_s_S
    0U,	// EXTRACT_LANE_I8x16_u
    0U,	// EXTRACT_LANE_I8x16_u_S
    0U,	// F32_CONVERT_S_I32
    0U,	// F32_CONVERT_S_I32_S
    0U,	// F32_CONVERT_S_I64
    0U,	// F32_CONVERT_S_I64_S
    0U,	// F32_CONVERT_U_I32
    0U,	// F32_CONVERT_U_I32_S
    0U,	// F32_CONVERT_U_I64
    0U,	// F32_CONVERT_U_I64_S
    0U,	// F32_DEMOTE_F64
    0U,	// F32_DEMOTE_F64_S
    0U,	// F32_REINTERPRET_I32
    0U,	// F32_REINTERPRET_I32_S
    0U,	// F64_CONVERT_S_I32
    0U,	// F64_CONVERT_S_I32_S
    0U,	// F64_CONVERT_S_I64
    0U,	// F64_CONVERT_S_I64_S
    0U,	// F64_CONVERT_U_I32
    0U,	// F64_CONVERT_U_I32_S
    0U,	// F64_CONVERT_U_I64
    0U,	// F64_CONVERT_U_I64_S
    0U,	// F64_PROMOTE_F32
    0U,	// F64_PROMOTE_F32_S
    0U,	// F64_REINTERPRET_I64
    0U,	// F64_REINTERPRET_I64_S
    0U,	// FALLTHROUGH_RETURN
    0U,	// FALLTHROUGH_RETURN_S
    0U,	// FLOOR_F32
    0U,	// FLOOR_F32_S
    0U,	// FLOOR_F32x4
    0U,	// FLOOR_F32x4_S
    0U,	// FLOOR_F64
    0U,	// FLOOR_F64_S
    0U,	// FLOOR_F64x2
    0U,	// FLOOR_F64x2_S
    0U,	// FP_TO_SINT_I32_F32
    0U,	// FP_TO_SINT_I32_F32_S
    0U,	// FP_TO_SINT_I32_F64
    0U,	// FP_TO_SINT_I32_F64_S
    0U,	// FP_TO_SINT_I64_F32
    0U,	// FP_TO_SINT_I64_F32_S
    0U,	// FP_TO_SINT_I64_F64
    0U,	// FP_TO_SINT_I64_F64_S
    0U,	// FP_TO_UINT_I32_F32
    0U,	// FP_TO_UINT_I32_F32_S
    0U,	// FP_TO_UINT_I32_F64
    0U,	// FP_TO_UINT_I32_F64_S
    0U,	// FP_TO_UINT_I64_F32
    0U,	// FP_TO_UINT_I64_F32_S
    0U,	// FP_TO_UINT_I64_F64
    0U,	// FP_TO_UINT_I64_F64_S
    0U,	// GE_F32
    0U,	// GE_F32_S
    0U,	// GE_F32x4
    0U,	// GE_F32x4_S
    0U,	// GE_F64
    0U,	// GE_F64_S
    0U,	// GE_F64x2
    0U,	// GE_F64x2_S
    0U,	// GE_S_I16x8
    0U,	// GE_S_I16x8_S
    0U,	// GE_S_I32
    0U,	// GE_S_I32_S
    0U,	// GE_S_I32x4
    0U,	// GE_S_I32x4_S
    0U,	// GE_S_I64
    0U,	// GE_S_I64_S
    0U,	// GE_S_I8x16
    0U,	// GE_S_I8x16_S
    0U,	// GE_U_I16x8
    0U,	// GE_U_I16x8_S
    0U,	// GE_U_I32
    0U,	// GE_U_I32_S
    0U,	// GE_U_I32x4
    0U,	// GE_U_I32x4_S
    0U,	// GE_U_I64
    0U,	// GE_U_I64_S
    0U,	// GE_U_I8x16
    0U,	// GE_U_I8x16_S
    0U,	// GLOBAL_GET_EXTERNREF
    0U,	// GLOBAL_GET_EXTERNREF_S
    0U,	// GLOBAL_GET_F32
    0U,	// GLOBAL_GET_F32_S
    0U,	// GLOBAL_GET_F64
    0U,	// GLOBAL_GET_F64_S
    0U,	// GLOBAL_GET_FUNCREF
    0U,	// GLOBAL_GET_FUNCREF_S
    0U,	// GLOBAL_GET_I32
    0U,	// GLOBAL_GET_I32_S
    0U,	// GLOBAL_GET_I64
    0U,	// GLOBAL_GET_I64_S
    0U,	// GLOBAL_GET_V128
    0U,	// GLOBAL_GET_V128_S
    0U,	// GLOBAL_SET_EXTERNREF
    0U,	// GLOBAL_SET_EXTERNREF_S
    0U,	// GLOBAL_SET_F32
    0U,	// GLOBAL_SET_F32_S
    0U,	// GLOBAL_SET_F64
    0U,	// GLOBAL_SET_F64_S
    0U,	// GLOBAL_SET_FUNCREF
    0U,	// GLOBAL_SET_FUNCREF_S
    0U,	// GLOBAL_SET_I32
    0U,	// GLOBAL_SET_I32_S
    0U,	// GLOBAL_SET_I64
    0U,	// GLOBAL_SET_I64_S
    0U,	// GLOBAL_SET_V128
    0U,	// GLOBAL_SET_V128_S
    0U,	// GT_F32
    0U,	// GT_F32_S
    0U,	// GT_F32x4
    0U,	// GT_F32x4_S
    0U,	// GT_F64
    0U,	// GT_F64_S
    0U,	// GT_F64x2
    0U,	// GT_F64x2_S
    0U,	// GT_S_I16x8
    0U,	// GT_S_I16x8_S
    0U,	// GT_S_I32
    0U,	// GT_S_I32_S
    0U,	// GT_S_I32x4
    0U,	// GT_S_I32x4_S
    0U,	// GT_S_I64
    0U,	// GT_S_I64_S
    0U,	// GT_S_I8x16
    0U,	// GT_S_I8x16_S
    0U,	// GT_U_I16x8
    0U,	// GT_U_I16x8_S
    0U,	// GT_U_I32
    0U,	// GT_U_I32_S
    0U,	// GT_U_I32x4
    0U,	// GT_U_I32x4_S
    0U,	// GT_U_I64
    0U,	// GT_U_I64_S
    0U,	// GT_U_I8x16
    0U,	// GT_U_I8x16_S
    0U,	// I32_EXTEND16_S_I32
    0U,	// I32_EXTEND16_S_I32_S
    0U,	// I32_EXTEND8_S_I32
    0U,	// I32_EXTEND8_S_I32_S
    0U,	// I32_REINTERPRET_F32
    0U,	// I32_REINTERPRET_F32_S
    0U,	// I32_TRUNC_S_F32
    0U,	// I32_TRUNC_S_F32_S
    0U,	// I32_TRUNC_S_F64
    0U,	// I32_TRUNC_S_F64_S
    0U,	// I32_TRUNC_S_SAT_F32
    0U,	// I32_TRUNC_S_SAT_F32_S
    0U,	// I32_TRUNC_S_SAT_F64
    0U,	// I32_TRUNC_S_SAT_F64_S
    0U,	// I32_TRUNC_U_F32
    0U,	// I32_TRUNC_U_F32_S
    0U,	// I32_TRUNC_U_F64
    0U,	// I32_TRUNC_U_F64_S
    0U,	// I32_TRUNC_U_SAT_F32
    0U,	// I32_TRUNC_U_SAT_F32_S
    0U,	// I32_TRUNC_U_SAT_F64
    0U,	// I32_TRUNC_U_SAT_F64_S
    0U,	// I32_WRAP_I64
    0U,	// I32_WRAP_I64_S
    0U,	// I64_EXTEND16_S_I64
    0U,	// I64_EXTEND16_S_I64_S
    0U,	// I64_EXTEND32_S_I64
    0U,	// I64_EXTEND32_S_I64_S
    0U,	// I64_EXTEND8_S_I64
    0U,	// I64_EXTEND8_S_I64_S
    0U,	// I64_EXTEND_S_I32
    0U,	// I64_EXTEND_S_I32_S
    0U,	// I64_EXTEND_U_I32
    0U,	// I64_EXTEND_U_I32_S
    0U,	// I64_REINTERPRET_F64
    0U,	// I64_REINTERPRET_F64_S
    0U,	// I64_TRUNC_S_F32
    0U,	// I64_TRUNC_S_F32_S
    0U,	// I64_TRUNC_S_F64
    0U,	// I64_TRUNC_S_F64_S
    0U,	// I64_TRUNC_S_SAT_F32
    0U,	// I64_TRUNC_S_SAT_F32_S
    0U,	// I64_TRUNC_S_SAT_F64
    0U,	// I64_TRUNC_S_SAT_F64_S
    0U,	// I64_TRUNC_U_F32
    0U,	// I64_TRUNC_U_F32_S
    0U,	// I64_TRUNC_U_F64
    0U,	// I64_TRUNC_U_F64_S
    0U,	// I64_TRUNC_U_SAT_F32
    0U,	// I64_TRUNC_U_SAT_F32_S
    0U,	// I64_TRUNC_U_SAT_F64
    0U,	// I64_TRUNC_U_SAT_F64_S
    0U,	// IF
    0U,	// IF_S
    0U,	// LE_F32
    0U,	// LE_F32_S
    0U,	// LE_F32x4
    0U,	// LE_F32x4_S
    0U,	// LE_F64
    0U,	// LE_F64_S
    0U,	// LE_F64x2
    0U,	// LE_F64x2_S
    0U,	// LE_S_I16x8
    0U,	// LE_S_I16x8_S
    0U,	// LE_S_I32
    0U,	// LE_S_I32_S
    0U,	// LE_S_I32x4
    0U,	// LE_S_I32x4_S
    0U,	// LE_S_I64
    0U,	// LE_S_I64_S
    0U,	// LE_S_I8x16
    0U,	// LE_S_I8x16_S
    0U,	// LE_U_I16x8
    0U,	// LE_U_I16x8_S
    0U,	// LE_U_I32
    0U,	// LE_U_I32_S
    0U,	// LE_U_I32x4
    0U,	// LE_U_I32x4_S
    0U,	// LE_U_I64
    0U,	// LE_U_I64_S
    0U,	// LE_U_I8x16
    0U,	// LE_U_I8x16_S
    0U,	// LOAD16_SPLAT_A32
    0U,	// LOAD16_SPLAT_A32_S
    0U,	// LOAD16_SPLAT_A64
    0U,	// LOAD16_SPLAT_A64_S
    0U,	// LOAD16_S_I32_A32
    0U,	// LOAD16_S_I32_A32_S
    0U,	// LOAD16_S_I32_A64
    0U,	// LOAD16_S_I32_A64_S
    0U,	// LOAD16_S_I64_A32
    0U,	// LOAD16_S_I64_A32_S
    0U,	// LOAD16_S_I64_A64
    0U,	// LOAD16_S_I64_A64_S
    0U,	// LOAD16_U_I32_A32
    0U,	// LOAD16_U_I32_A32_S
    0U,	// LOAD16_U_I32_A64
    0U,	// LOAD16_U_I32_A64_S
    0U,	// LOAD16_U_I64_A32
    0U,	// LOAD16_U_I64_A32_S
    0U,	// LOAD16_U_I64_A64
    0U,	// LOAD16_U_I64_A64_S
    0U,	// LOAD32_SPLAT_A32
    0U,	// LOAD32_SPLAT_A32_S
    0U,	// LOAD32_SPLAT_A64
    0U,	// LOAD32_SPLAT_A64_S
    0U,	// LOAD32_S_I64_A32
    0U,	// LOAD32_S_I64_A32_S
    0U,	// LOAD32_S_I64_A64
    0U,	// LOAD32_S_I64_A64_S
    0U,	// LOAD32_U_I64_A32
    0U,	// LOAD32_U_I64_A32_S
    0U,	// LOAD32_U_I64_A64
    0U,	// LOAD32_U_I64_A64_S
    0U,	// LOAD64_SPLAT_A32
    0U,	// LOAD64_SPLAT_A32_S
    0U,	// LOAD64_SPLAT_A64
    0U,	// LOAD64_SPLAT_A64_S
    0U,	// LOAD8_SPLAT_A32
    0U,	// LOAD8_SPLAT_A32_S
    0U,	// LOAD8_SPLAT_A64
    0U,	// LOAD8_SPLAT_A64_S
    0U,	// LOAD8_S_I32_A32
    0U,	// LOAD8_S_I32_A32_S
    0U,	// LOAD8_S_I32_A64
    0U,	// LOAD8_S_I32_A64_S
    0U,	// LOAD8_S_I64_A32
    0U,	// LOAD8_S_I64_A32_S
    0U,	// LOAD8_S_I64_A64
    0U,	// LOAD8_S_I64_A64_S
    0U,	// LOAD8_U_I32_A32
    0U,	// LOAD8_U_I32_A32_S
    0U,	// LOAD8_U_I32_A64
    0U,	// LOAD8_U_I32_A64_S
    0U,	// LOAD8_U_I64_A32
    0U,	// LOAD8_U_I64_A32_S
    0U,	// LOAD8_U_I64_A64
    0U,	// LOAD8_U_I64_A64_S
    0U,	// LOAD_EXTEND_S_I16x8_A32
    0U,	// LOAD_EXTEND_S_I16x8_A32_S
    0U,	// LOAD_EXTEND_S_I16x8_A64
    0U,	// LOAD_EXTEND_S_I16x8_A64_S
    0U,	// LOAD_EXTEND_S_I32x4_A32
    0U,	// LOAD_EXTEND_S_I32x4_A32_S
    0U,	// LOAD_EXTEND_S_I32x4_A64
    0U,	// LOAD_EXTEND_S_I32x4_A64_S
    0U,	// LOAD_EXTEND_S_I64x2_A32
    0U,	// LOAD_EXTEND_S_I64x2_A32_S
    0U,	// LOAD_EXTEND_S_I64x2_A64
    0U,	// LOAD_EXTEND_S_I64x2_A64_S
    0U,	// LOAD_EXTEND_U_I16x8_A32
    0U,	// LOAD_EXTEND_U_I16x8_A32_S
    0U,	// LOAD_EXTEND_U_I16x8_A64
    0U,	// LOAD_EXTEND_U_I16x8_A64_S
    0U,	// LOAD_EXTEND_U_I32x4_A32
    0U,	// LOAD_EXTEND_U_I32x4_A32_S
    0U,	// LOAD_EXTEND_U_I32x4_A64
    0U,	// LOAD_EXTEND_U_I32x4_A64_S
    0U,	// LOAD_EXTEND_U_I64x2_A32
    0U,	// LOAD_EXTEND_U_I64x2_A32_S
    0U,	// LOAD_EXTEND_U_I64x2_A64
    0U,	// LOAD_EXTEND_U_I64x2_A64_S
    0U,	// LOAD_F32_A32
    0U,	// LOAD_F32_A32_S
    0U,	// LOAD_F32_A64
    0U,	// LOAD_F32_A64_S
    0U,	// LOAD_F64_A32
    0U,	// LOAD_F64_A32_S
    0U,	// LOAD_F64_A64
    0U,	// LOAD_F64_A64_S
    0U,	// LOAD_I32_A32
    0U,	// LOAD_I32_A32_S
    0U,	// LOAD_I32_A64
    0U,	// LOAD_I32_A64_S
    0U,	// LOAD_I64_A32
    0U,	// LOAD_I64_A32_S
    0U,	// LOAD_I64_A64
    0U,	// LOAD_I64_A64_S
    0U,	// LOAD_LANE_I16x8_A32
    0U,	// LOAD_LANE_I16x8_A32_S
    0U,	// LOAD_LANE_I16x8_A64
    0U,	// LOAD_LANE_I16x8_A64_S
    0U,	// LOAD_LANE_I32x4_A32
    0U,	// LOAD_LANE_I32x4_A32_S
    0U,	// LOAD_LANE_I32x4_A64
    0U,	// LOAD_LANE_I32x4_A64_S
    0U,	// LOAD_LANE_I64x2_A32
    0U,	// LOAD_LANE_I64x2_A32_S
    0U,	// LOAD_LANE_I64x2_A64
    0U,	// LOAD_LANE_I64x2_A64_S
    0U,	// LOAD_LANE_I8x16_A32
    0U,	// LOAD_LANE_I8x16_A32_S
    0U,	// LOAD_LANE_I8x16_A64
    0U,	// LOAD_LANE_I8x16_A64_S
    0U,	// LOAD_V128_A32
    0U,	// LOAD_V128_A32_S
    0U,	// LOAD_V128_A64
    0U,	// LOAD_V128_A64_S
    0U,	// LOAD_ZERO_I32x4_A32
    0U,	// LOAD_ZERO_I32x4_A32_S
    0U,	// LOAD_ZERO_I32x4_A64
    0U,	// LOAD_ZERO_I32x4_A64_S
    0U,	// LOAD_ZERO_I64x2_A32
    0U,	// LOAD_ZERO_I64x2_A32_S
    0U,	// LOAD_ZERO_I64x2_A64
    0U,	// LOAD_ZERO_I64x2_A64_S
    0U,	// LOCAL_GET_EXTERNREF
    0U,	// LOCAL_GET_EXTERNREF_S
    0U,	// LOCAL_GET_F32
    0U,	// LOCAL_GET_F32_S
    0U,	// LOCAL_GET_F64
    0U,	// LOCAL_GET_F64_S
    0U,	// LOCAL_GET_FUNCREF
    0U,	// LOCAL_GET_FUNCREF_S
    0U,	// LOCAL_GET_I32
    0U,	// LOCAL_GET_I32_S
    0U,	// LOCAL_GET_I64
    0U,	// LOCAL_GET_I64_S
    0U,	// LOCAL_GET_V128
    0U,	// LOCAL_GET_V128_S
    0U,	// LOCAL_SET_EXTERNREF
    0U,	// LOCAL_SET_EXTERNREF_S
    0U,	// LOCAL_SET_F32
    0U,	// LOCAL_SET_F32_S
    0U,	// LOCAL_SET_F64
    0U,	// LOCAL_SET_F64_S
    0U,	// LOCAL_SET_FUNCREF
    0U,	// LOCAL_SET_FUNCREF_S
    0U,	// LOCAL_SET_I32
    0U,	// LOCAL_SET_I32_S
    0U,	// LOCAL_SET_I64
    0U,	// LOCAL_SET_I64_S
    0U,	// LOCAL_SET_V128
    0U,	// LOCAL_SET_V128_S
    0U,	// LOCAL_TEE_EXTERNREF
    0U,	// LOCAL_TEE_EXTERNREF_S
    0U,	// LOCAL_TEE_F32
    0U,	// LOCAL_TEE_F32_S
    0U,	// LOCAL_TEE_F64
    0U,	// LOCAL_TEE_F64_S
    0U,	// LOCAL_TEE_FUNCREF
    0U,	// LOCAL_TEE_FUNCREF_S
    0U,	// LOCAL_TEE_I32
    0U,	// LOCAL_TEE_I32_S
    0U,	// LOCAL_TEE_I64
    0U,	// LOCAL_TEE_I64_S
    0U,	// LOCAL_TEE_V128
    0U,	// LOCAL_TEE_V128_S
    0U,	// LOOP
    0U,	// LOOP_S
    0U,	// LT_F32
    0U,	// LT_F32_S
    0U,	// LT_F32x4
    0U,	// LT_F32x4_S
    0U,	// LT_F64
    0U,	// LT_F64_S
    0U,	// LT_F64x2
    0U,	// LT_F64x2_S
    0U,	// LT_S_I16x8
    0U,	// LT_S_I16x8_S
    0U,	// LT_S_I32
    0U,	// LT_S_I32_S
    0U,	// LT_S_I32x4
    0U,	// LT_S_I32x4_S
    0U,	// LT_S_I64
    0U,	// LT_S_I64_S
    0U,	// LT_S_I8x16
    0U,	// LT_S_I8x16_S
    0U,	// LT_U_I16x8
    0U,	// LT_U_I16x8_S
    0U,	// LT_U_I32
    0U,	// LT_U_I32_S
    0U,	// LT_U_I32x4
    0U,	// LT_U_I32x4_S
    0U,	// LT_U_I64
    0U,	// LT_U_I64_S
    0U,	// LT_U_I8x16
    0U,	// LT_U_I8x16_S
    0U,	// MAX_F32
    0U,	// MAX_F32_S
    0U,	// MAX_F32x4
    0U,	// MAX_F32x4_S
    0U,	// MAX_F64
    0U,	// MAX_F64_S
    0U,	// MAX_F64x2
    0U,	// MAX_F64x2_S
    0U,	// MAX_S_I16x8
    0U,	// MAX_S_I16x8_S
    0U,	// MAX_S_I32x4
    0U,	// MAX_S_I32x4_S
    0U,	// MAX_S_I8x16
    0U,	// MAX_S_I8x16_S
    0U,	// MAX_U_I16x8
    0U,	// MAX_U_I16x8_S
    0U,	// MAX_U_I32x4
    0U,	// MAX_U_I32x4_S
    0U,	// MAX_U_I8x16
    0U,	// MAX_U_I8x16_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A32
    0U,	// MEMORY_ATOMIC_NOTIFY_A32_S
    0U,	// MEMORY_ATOMIC_NOTIFY_A64
    0U,	// MEMORY_ATOMIC_NOTIFY_A64_S
    0U,	// MEMORY_ATOMIC_WAIT32_A32
    0U,	// MEMORY_ATOMIC_WAIT32_A32_S
    0U,	// MEMORY_ATOMIC_WAIT32_A64
    0U,	// MEMORY_ATOMIC_WAIT32_A64_S
    0U,	// MEMORY_ATOMIC_WAIT64_A32
    0U,	// MEMORY_ATOMIC_WAIT64_A32_S
    0U,	// MEMORY_ATOMIC_WAIT64_A64
    0U,	// MEMORY_ATOMIC_WAIT64_A64_S
    0U,	// MIN_F32
    0U,	// MIN_F32_S
    0U,	// MIN_F32x4
    0U,	// MIN_F32x4_S
    0U,	// MIN_F64
    0U,	// MIN_F64_S
    0U,	// MIN_F64x2
    0U,	// MIN_F64x2_S
    0U,	// MIN_S_I16x8
    0U,	// MIN_S_I16x8_S
    0U,	// MIN_S_I32x4
    0U,	// MIN_S_I32x4_S
    0U,	// MIN_S_I8x16
    0U,	// MIN_S_I8x16_S
    0U,	// MIN_U_I16x8
    0U,	// MIN_U_I16x8_S
    0U,	// MIN_U_I32x4
    0U,	// MIN_U_I32x4_S
    0U,	// MIN_U_I8x16
    0U,	// MIN_U_I8x16_S
    0U,	// MUL_F32
    0U,	// MUL_F32_S
    0U,	// MUL_F32x4
    0U,	// MUL_F32x4_S
    0U,	// MUL_F64
    0U,	// MUL_F64_S
    0U,	// MUL_F64x2
    0U,	// MUL_F64x2_S
    0U,	// MUL_I16x8
    0U,	// MUL_I16x8_S
    0U,	// MUL_I32
    0U,	// MUL_I32_S
    0U,	// MUL_I32x4
    0U,	// MUL_I32x4_S
    0U,	// MUL_I64
    0U,	// MUL_I64_S
    0U,	// MUL_I64x2
    0U,	// MUL_I64x2_S
    0U,	// NARROW_S_I16x8
    0U,	// NARROW_S_I16x8_S
    0U,	// NARROW_S_I8x16
    0U,	// NARROW_S_I8x16_S
    0U,	// NARROW_U_I16x8
    0U,	// NARROW_U_I16x8_S
    0U,	// NARROW_U_I8x16
    0U,	// NARROW_U_I8x16_S
    0U,	// NEAREST_F32
    0U,	// NEAREST_F32_S
    0U,	// NEAREST_F32x4
    0U,	// NEAREST_F32x4_S
    0U,	// NEAREST_F64
    0U,	// NEAREST_F64_S
    0U,	// NEAREST_F64x2
    0U,	// NEAREST_F64x2_S
    0U,	// NEG_F32
    0U,	// NEG_F32_S
    0U,	// NEG_F32x4
    0U,	// NEG_F32x4_S
    0U,	// NEG_F64
    0U,	// NEG_F64_S
    0U,	// NEG_F64x2
    0U,	// NEG_F64x2_S
    0U,	// NEG_I16x8
    0U,	// NEG_I16x8_S
    0U,	// NEG_I32x4
    0U,	// NEG_I32x4_S
    0U,	// NEG_I64x2
    0U,	// NEG_I64x2_S
    0U,	// NEG_I8x16
    0U,	// NEG_I8x16_S
    0U,	// NE_F32
    0U,	// NE_F32_S
    0U,	// NE_F32x4
    0U,	// NE_F32x4_S
    0U,	// NE_F64
    0U,	// NE_F64_S
    0U,	// NE_F64x2
    0U,	// NE_F64x2_S
    0U,	// NE_I16x8
    0U,	// NE_I16x8_S
    0U,	// NE_I32
    0U,	// NE_I32_S
    0U,	// NE_I32x4
    0U,	// NE_I32x4_S
    0U,	// NE_I64
    0U,	// NE_I64_S
    0U,	// NE_I8x16
    0U,	// NE_I8x16_S
    0U,	// NOP
    0U,	// NOP_S
    0U,	// NOT
    0U,	// NOT_S
    0U,	// OR
    0U,	// OR_I32
    0U,	// OR_I32_S
    0U,	// OR_I64
    0U,	// OR_I64_S
    0U,	// OR_S
    0U,	// PMAX_F32x4
    0U,	// PMAX_F32x4_S
    0U,	// PMAX_F64x2
    0U,	// PMAX_F64x2_S
    0U,	// PMIN_F32x4
    0U,	// PMIN_F32x4_S
    0U,	// PMIN_F64x2
    0U,	// PMIN_F64x2_S
    0U,	// POPCNT_I32
    0U,	// POPCNT_I32_S
    0U,	// POPCNT_I64
    0U,	// POPCNT_I64_S
    0U,	// POPCNT_I8x16
    0U,	// POPCNT_I8x16_S
    0U,	// PREFETCH_NT_A32
    0U,	// PREFETCH_NT_A32_S
    0U,	// PREFETCH_NT_A64
    0U,	// PREFETCH_NT_A64_S
    0U,	// PREFETCH_T_A32
    0U,	// PREFETCH_T_A32_S
    0U,	// PREFETCH_T_A64
    0U,	// PREFETCH_T_A64_S
    0U,	// Q15MULR_SAT_S_I16x8
    0U,	// Q15MULR_SAT_S_I16x8_S
    0U,	// QFMA_F32x4
    0U,	// QFMA_F32x4_S
    0U,	// QFMA_F64x2
    0U,	// QFMA_F64x2_S
    0U,	// QFMS_F32x4
    0U,	// QFMS_F32x4_S
    0U,	// QFMS_F64x2
    0U,	// QFMS_F64x2_S
    0U,	// REF_NULL_EXTERNREF
    0U,	// REF_NULL_EXTERNREF_S
    0U,	// REF_NULL_FUNCREF
    0U,	// REF_NULL_FUNCREF_S
    0U,	// REM_S_I32
    0U,	// REM_S_I32_S
    0U,	// REM_S_I64
    0U,	// REM_S_I64_S
    0U,	// REM_U_I32
    0U,	// REM_U_I32_S
    0U,	// REM_U_I64
    0U,	// REM_U_I64_S
    0U,	// REPLACE_LANE_F32x4
    0U,	// REPLACE_LANE_F32x4_S
    0U,	// REPLACE_LANE_F64x2
    0U,	// REPLACE_LANE_F64x2_S
    0U,	// REPLACE_LANE_I16x8
    0U,	// REPLACE_LANE_I16x8_S
    0U,	// REPLACE_LANE_I32x4
    0U,	// REPLACE_LANE_I32x4_S
    0U,	// REPLACE_LANE_I64x2
    0U,	// REPLACE_LANE_I64x2_S
    0U,	// REPLACE_LANE_I8x16
    0U,	// REPLACE_LANE_I8x16_S
    0U,	// RETHROW
    0U,	// RETHROW_S
    0U,	// RETURN
    0U,	// RETURN_S
    0U,	// RET_CALL
    0U,	// RET_CALL_INDIRECT
    0U,	// RET_CALL_INDIRECT_S
    0U,	// RET_CALL_S
    0U,	// ROTL_I32
    0U,	// ROTL_I32_S
    0U,	// ROTL_I64
    0U,	// ROTL_I64_S
    0U,	// ROTR_I32
    0U,	// ROTR_I32_S
    0U,	// ROTR_I64
    0U,	// ROTR_I64_S
    0U,	// SELECT_EXTERNREF
    0U,	// SELECT_EXTERNREF_S
    0U,	// SELECT_F32
    0U,	// SELECT_F32_S
    0U,	// SELECT_F64
    0U,	// SELECT_F64_S
    0U,	// SELECT_FUNCREF
    0U,	// SELECT_FUNCREF_S
    0U,	// SELECT_I32
    0U,	// SELECT_I32_S
    0U,	// SELECT_I64
    0U,	// SELECT_I64_S
    0U,	// SELECT_V128
    0U,	// SELECT_V128_S
    0U,	// SHL_I16x8
    0U,	// SHL_I16x8_S
    0U,	// SHL_I32
    0U,	// SHL_I32_S
    0U,	// SHL_I32x4
    0U,	// SHL_I32x4_S
    0U,	// SHL_I64
    0U,	// SHL_I64_S
    0U,	// SHL_I64x2
    0U,	// SHL_I64x2_S
    0U,	// SHL_I8x16
    0U,	// SHL_I8x16_S
    0U,	// SHR_S_I16x8
    0U,	// SHR_S_I16x8_S
    0U,	// SHR_S_I32
    0U,	// SHR_S_I32_S
    0U,	// SHR_S_I32x4
    0U,	// SHR_S_I32x4_S
    0U,	// SHR_S_I64
    0U,	// SHR_S_I64_S
    0U,	// SHR_S_I64x2
    0U,	// SHR_S_I64x2_S
    0U,	// SHR_S_I8x16
    0U,	// SHR_S_I8x16_S
    0U,	// SHR_U_I16x8
    0U,	// SHR_U_I16x8_S
    0U,	// SHR_U_I32
    0U,	// SHR_U_I32_S
    0U,	// SHR_U_I32x4
    0U,	// SHR_U_I32x4_S
    0U,	// SHR_U_I64
    0U,	// SHR_U_I64_S
    0U,	// SHR_U_I64x2
    0U,	// SHR_U_I64x2_S
    0U,	// SHR_U_I8x16
    0U,	// SHR_U_I8x16_S
    1U,	// SHUFFLE
    0U,	// SHUFFLE_S
    0U,	// SPLAT_F32x4
    0U,	// SPLAT_F32x4_S
    0U,	// SPLAT_F64x2
    0U,	// SPLAT_F64x2_S
    0U,	// SPLAT_I16x8
    0U,	// SPLAT_I16x8_S
    0U,	// SPLAT_I32x4
    0U,	// SPLAT_I32x4_S
    0U,	// SPLAT_I64x2
    0U,	// SPLAT_I64x2_S
    0U,	// SPLAT_I8x16
    0U,	// SPLAT_I8x16_S
    0U,	// SQRT_F32
    0U,	// SQRT_F32_S
    0U,	// SQRT_F32x4
    0U,	// SQRT_F32x4_S
    0U,	// SQRT_F64
    0U,	// SQRT_F64_S
    0U,	// SQRT_F64x2
    0U,	// SQRT_F64x2_S
    0U,	// STORE16_I32_A32
    0U,	// STORE16_I32_A32_S
    0U,	// STORE16_I32_A64
    0U,	// STORE16_I32_A64_S
    0U,	// STORE16_I64_A32
    0U,	// STORE16_I64_A32_S
    0U,	// STORE16_I64_A64
    0U,	// STORE16_I64_A64_S
    0U,	// STORE32_I64_A32
    0U,	// STORE32_I64_A32_S
    0U,	// STORE32_I64_A64
    0U,	// STORE32_I64_A64_S
    0U,	// STORE8_I32_A32
    0U,	// STORE8_I32_A32_S
    0U,	// STORE8_I32_A64
    0U,	// STORE8_I32_A64_S
    0U,	// STORE8_I64_A32
    0U,	// STORE8_I64_A32_S
    0U,	// STORE8_I64_A64
    0U,	// STORE8_I64_A64_S
    0U,	// STORE_F32_A32
    0U,	// STORE_F32_A32_S
    0U,	// STORE_F32_A64
    0U,	// STORE_F32_A64_S
    0U,	// STORE_F64_A32
    0U,	// STORE_F64_A32_S
    0U,	// STORE_F64_A64
    0U,	// STORE_F64_A64_S
    0U,	// STORE_I32_A32
    0U,	// STORE_I32_A32_S
    0U,	// STORE_I32_A64
    0U,	// STORE_I32_A64_S
    0U,	// STORE_I64_A32
    0U,	// STORE_I64_A32_S
    0U,	// STORE_I64_A64
    0U,	// STORE_I64_A64_S
    0U,	// STORE_LANE_I16x8_A32
    0U,	// STORE_LANE_I16x8_A32_S
    0U,	// STORE_LANE_I16x8_A64
    0U,	// STORE_LANE_I16x8_A64_S
    0U,	// STORE_LANE_I32x4_A32
    0U,	// STORE_LANE_I32x4_A32_S
    0U,	// STORE_LANE_I32x4_A64
    0U,	// STORE_LANE_I32x4_A64_S
    0U,	// STORE_LANE_I64x2_A32
    0U,	// STORE_LANE_I64x2_A32_S
    0U,	// STORE_LANE_I64x2_A64
    0U,	// STORE_LANE_I64x2_A64_S
    0U,	// STORE_LANE_I8x16_A32
    0U,	// STORE_LANE_I8x16_A32_S
    0U,	// STORE_LANE_I8x16_A64
    0U,	// STORE_LANE_I8x16_A64_S
    0U,	// STORE_V128_A32
    0U,	// STORE_V128_A32_S
    0U,	// STORE_V128_A64
    0U,	// STORE_V128_A64_S
    0U,	// SUB_F32
    0U,	// SUB_F32_S
    0U,	// SUB_F32x4
    0U,	// SUB_F32x4_S
    0U,	// SUB_F64
    0U,	// SUB_F64_S
    0U,	// SUB_F64x2
    0U,	// SUB_F64x2_S
    0U,	// SUB_I16x8
    0U,	// SUB_I16x8_S
    0U,	// SUB_I32
    0U,	// SUB_I32_S
    0U,	// SUB_I32x4
    0U,	// SUB_I32x4_S
    0U,	// SUB_I64
    0U,	// SUB_I64_S
    0U,	// SUB_I64x2
    0U,	// SUB_I64x2_S
    0U,	// SUB_I8x16
    0U,	// SUB_I8x16_S
    0U,	// SUB_SAT_S_I16x8
    0U,	// SUB_SAT_S_I16x8_S
    0U,	// SUB_SAT_S_I8x16
    0U,	// SUB_SAT_S_I8x16_S
    0U,	// SUB_SAT_U_I16x8
    0U,	// SUB_SAT_U_I16x8_S
    0U,	// SUB_SAT_U_I8x16
    0U,	// SUB_SAT_U_I8x16_S
    0U,	// SWIZZLE
    0U,	// SWIZZLE_S
    0U,	// TABLE_COPY
    0U,	// TABLE_COPY_S
    0U,	// TABLE_FILL_EXTERNREF
    0U,	// TABLE_FILL_EXTERNREF_S
    0U,	// TABLE_FILL_FUNCREF
    0U,	// TABLE_FILL_FUNCREF_S
    0U,	// TABLE_GET_EXTERNREF
    0U,	// TABLE_GET_EXTERNREF_S
    0U,	// TABLE_GET_FUNCREF
    0U,	// TABLE_GET_FUNCREF_S
    0U,	// TABLE_GROW_EXTERNREF
    0U,	// TABLE_GROW_EXTERNREF_S
    0U,	// TABLE_GROW_FUNCREF
    0U,	// TABLE_GROW_FUNCREF_S
    0U,	// TABLE_SET_EXTERNREF
    0U,	// TABLE_SET_EXTERNREF_S
    0U,	// TABLE_SET_FUNCREF
    0U,	// TABLE_SET_FUNCREF_S
    0U,	// TABLE_SIZE
    0U,	// TABLE_SIZE_S
    0U,	// TEE_EXTERNREF
    0U,	// TEE_EXTERNREF_S
    0U,	// TEE_F32
    0U,	// TEE_F32_S
    0U,	// TEE_F64
    0U,	// TEE_F64_S
    0U,	// TEE_FUNCREF
    0U,	// TEE_FUNCREF_S
    0U,	// TEE_I32
    0U,	// TEE_I32_S
    0U,	// TEE_I64
    0U,	// TEE_I64_S
    0U,	// TEE_V128
    0U,	// TEE_V128_S
    0U,	// THROW
    0U,	// THROW_S
    0U,	// TRUNC_F32
    0U,	// TRUNC_F32_S
    0U,	// TRUNC_F32x4
    0U,	// TRUNC_F32x4_S
    0U,	// TRUNC_F64
    0U,	// TRUNC_F64_S
    0U,	// TRUNC_F64x2
    0U,	// TRUNC_F64x2_S
    0U,	// TRY
    0U,	// TRY_S
    0U,	// UNREACHABLE
    0U,	// UNREACHABLE_S
    0U,	// WIDEN_I8x16_TO_I32x4_S
    0U,	// WIDEN_I8x16_TO_I32x4_S_S
    0U,	// WIDEN_I8x16_TO_I32x4_U
    0U,	// WIDEN_I8x16_TO_I32x4_U_S
    0U,	// XOR
    0U,	// XOR_I32
    0U,	// XOR_I32_S
    0U,	// XOR_I64
    0U,	// XOR_I64_S
    0U,	// XOR_S
    0U,	// anonymous_2718MEMORY_GROW_A32
    0U,	// anonymous_2718MEMORY_GROW_A32_S
    0U,	// anonymous_2718MEMORY_SIZE_A32
    0U,	// anonymous_2718MEMORY_SIZE_A32_S
    0U,	// anonymous_2719MEMORY_GROW_A64
    0U,	// anonymous_2719MEMORY_GROW_A64_S
    0U,	// anonymous_2719MEMORY_SIZE_A64
    0U,	// anonymous_2719MEMORY_SIZE_A64_S
    0U,	// anonymous_4465SIGNSELECT_I8x16
    0U,	// anonymous_4465SIGNSELECT_I8x16_S
    0U,	// anonymous_4466SIGNSELECT_I16x8
    0U,	// anonymous_4466SIGNSELECT_I16x8_S
    0U,	// anonymous_4467SIGNSELECT_I32x4
    0U,	// anonymous_4467SIGNSELECT_I32x4_S
    0U,	// anonymous_4468SIGNSELECT_I64x2
    0U,	// anonymous_4468SIGNSELECT_I64x2_S
    0U,	// anonymous_4568DATA_DROP
    0U,	// anonymous_4568DATA_DROP_S
    0U,	// anonymous_4568MEMORY_COPY_A32
    0U,	// anonymous_4568MEMORY_COPY_A32_S
    0U,	// anonymous_4568MEMORY_FILL_A32
    0U,	// anonymous_4568MEMORY_FILL_A32_S
    0U,	// anonymous_4568MEMORY_INIT_A32
    0U,	// anonymous_4568MEMORY_INIT_A32_S
    0U,	// anonymous_4569DATA_DROP
    0U,	// anonymous_4569DATA_DROP_S
    0U,	// anonymous_4569MEMORY_COPY_A64
    0U,	// anonymous_4569MEMORY_COPY_A64_S
    0U,	// anonymous_4569MEMORY_FILL_A64
    0U,	// anonymous_4569MEMORY_FILL_A64_S
    0U,	// anonymous_4569MEMORY_INIT_A64
    0U,	// anonymous_4569MEMORY_INIT_A64_S
    0U,	// fp_to_sint_I32x4
    0U,	// fp_to_sint_I32x4_S
    0U,	// fp_to_uint_I32x4
    0U,	// fp_to_uint_I32x4_S
    0U,	// int_wasm_convert_low_signed_F64x2
    0U,	// int_wasm_convert_low_signed_F64x2_S
    0U,	// int_wasm_convert_low_unsigned_F64x2
    0U,	// int_wasm_convert_low_unsigned_F64x2_S
    0U,	// int_wasm_demote_zero_F32x4
    0U,	// int_wasm_demote_zero_F32x4_S
    0U,	// int_wasm_extadd_pairwise_signed_I16x8
    0U,	// int_wasm_extadd_pairwise_signed_I16x8_S
    0U,	// int_wasm_extadd_pairwise_signed_I32x4
    0U,	// int_wasm_extadd_pairwise_signed_I32x4_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8
    0U,	// int_wasm_extadd_pairwise_unsigned_I16x8_S
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4
    0U,	// int_wasm_extadd_pairwise_unsigned_I32x4_S
    0U,	// int_wasm_promote_low_F64x2
    0U,	// int_wasm_promote_low_F64x2_S
    0U,	// int_wasm_trunc_saturate_zero_signed_I32x4
    0U,	// int_wasm_trunc_saturate_zero_signed_I32x4_S
    0U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4
    0U,	// int_wasm_trunc_saturate_zero_unsigned_I32x4_S
    0U,	// int_wasm_widen_high_signed_I64x2
    0U,	// int_wasm_widen_high_signed_I64x2_S
    0U,	// int_wasm_widen_high_unsigned_I64x2
    0U,	// int_wasm_widen_high_unsigned_I64x2_S
    0U,	// int_wasm_widen_low_signed_I64x2
    0U,	// int_wasm_widen_low_signed_I64x2_S
    0U,	// int_wasm_widen_low_unsigned_I64x2
    0U,	// int_wasm_widen_low_unsigned_I64x2_S
    0U,	// sint_to_fp_F32x4
    0U,	// sint_to_fp_F32x4_S
    0U,	// uint_to_fp_F32x4
    0U,	// uint_to_fp_F32x4_S
    0U,	// widen_high_s_I16x8
    0U,	// widen_high_s_I16x8_S
    0U,	// widen_high_s_I32x4
    0U,	// widen_high_s_I32x4_S
    0U,	// widen_high_u_I16x8
    0U,	// widen_high_u_I16x8_S
    0U,	// widen_high_u_I32x4
    0U,	// widen_high_u_I32x4_S
    0U,	// widen_low_s_I16x8
    0U,	// widen_low_s_I16x8_S
    0U,	// widen_low_s_I32x4
    0U,	// widen_low_s_I32x4_S
    0U,	// widen_low_u_I16x8
    0U,	// widen_low_u_I16x8_S
    0U,	// widen_low_u_I32x4
    0U,	// widen_low_u_I32x4_S
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  return {AsmStrs+(Bits & 16383)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void WebAssemblyInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 14) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_INSTR_REF, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_...
    return;
    break;
  case 1:
    // CALL_PARAMS, CALL_PARAMS_S, ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, AB...
    printOperand(MI, 0, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printOperand(MI, 1, O);
    break;
  case 3:
    // BLOCK, BLOCK_S, IF, IF_S, LOOP, LOOP_S, TRY, TRY_S
    printWebAssemblySignatureOperand(MI, 0, O);
    break;
  case 4:
    // BR_TABLE_I32_S, BR_TABLE_I64_S
    printBrList(MI, 0, O);
    return;
    break;
  case 5:
    // REF_NULL_EXTERNREF_S, REF_NULL_FUNCREF_S
    printWebAssemblyHeapTypeOperand(MI, 0, O);
    return;
    break;
  case 6:
    // STORE_LANE_I16x8_A64, STORE_LANE_I32x4_A64, STORE_LANE_I64x2_A64, STOR...
    printOperand(MI, 2, O);
    O << '(';
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 1 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 17) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CALL_PARAMS, CALL_PARAMS_S, BLOCK, BLOCK_S, BR, BR_IF_S, BR_S, BR_TABL...
    return;
    break;
  case 1:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    O << ", ";
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    printWebAssemblyP2AlignOperand(MI, 0, O);
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << '(';
    break;
  }


  // Fragment 2 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 19) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    printOperand(MI, 1, O);
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32_S, ATOMIC_LOAD16_U_I32_A64_S, ATOMIC_LOAD16_U_...
    return;
    break;
  case 3:
    // LOAD_LANE_I16x8_A32_S, LOAD_LANE_I16x8_A64_S, LOAD_LANE_I32x4_A32_S, L...
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // REF_NULL_EXTERNREF, REF_NULL_FUNCREF
    printWebAssemblyHeapTypeOperand(MI, 1, O);
    return;
    break;
  case 5:
    // STORE_LANE_I16x8_A32, STORE_LANE_I32x4_A32, STORE_LANE_I64x2_A32, STOR...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    O << ", ";
    printOperand(MI, 4, O);
    O << ", ";
    printOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 22) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ABS_F32, ABS_F32x4, ABS_F64, ABS_F64x2, ABS_I16x8, ABS_I32x4, ABS_I64x...
    return;
    break;
  case 1:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    O << ", ";
    printOperand(MI, 2, O);
    break;
  case 2:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    O << '(';
    break;
  case 3:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 0, O);
    break;
  }


  // Fragment 4 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 24) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADD_F32, ADD_F32x4, ADD_F64, ADD_F64x2, ADD_I16x8, ADD_I32, ADD_I32x4,...
    return;
    break;
  case 1:
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    printOperand(MI, 3, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    break;
  case 2:
    // ATOMIC_STORE16_I32_A32, ATOMIC_STORE16_I32_A64, ATOMIC_STORE16_I64_A32...
    O << ", ";
    printOperand(MI, 3, O);
    break;
  case 3:
    // LOAD_LANE_I16x8_A32, LOAD_LANE_I16x8_A64, LOAD_LANE_I32x4_A32, LOAD_LA...
    printOperand(MI, 4, O);
    O << ')';
    printWebAssemblyP2AlignOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 5, O);
    O << ", ";
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 26) & 1) {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    O << ", ";
    printOperand(MI, 4, O);
  } else {
    // ATOMIC_LOAD16_U_I32_A32, ATOMIC_LOAD16_U_I32_A64, ATOMIC_LOAD16_U_I64_...
    return;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 27) & 1) {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    O << ", ";
    printOperand(MI, 5, O);
  } else {
    // ATOMIC_RMW16_U_ADD_I32_A32, ATOMIC_RMW16_U_ADD_I32_A64, ATOMIC_RMW16_U...
    return;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 28) & 1) {
    // CONST_V128_I16x8, CONST_V128_I16x8_S, CONST_V128_I8x16, CONST_V128_I8x...
    O << ", ";
    printOperand(MI, 6, O);
    O << ", ";
    printOperand(MI, 7, O);
  } else {
    // ATOMIC_RMW16_U_CMPXCHG_I32_A32, ATOMIC_RMW16_U_CMPXCHG_I32_A64, ATOMIC...
    return;
  }


  // Fragment 8 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 29) & 1) {
    // CONST_V128_I16x8_S
    return;
  } else {
    // CONST_V128_I16x8, CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFF...
    O << ", ";
    printOperand(MI, 8, O);
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 30) & 1) {
    // CONST_V128_I8x16, CONST_V128_I8x16_S, SHUFFLE, SHUFFLE_S
    O << ", ";
    printOperand(MI, 9, O);
    O << ", ";
    printOperand(MI, 10, O);
    O << ", ";
    printOperand(MI, 11, O);
    O << ", ";
    printOperand(MI, 12, O);
    O << ", ";
    printOperand(MI, 13, O);
    O << ", ";
    printOperand(MI, 14, O);
    O << ", ";
    printOperand(MI, 15, O);
  } else {
    // CONST_V128_I16x8
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 31) & 1) {
    // CONST_V128_I8x16_S, SHUFFLE_S
    return;
  } else {
    // CONST_V128_I8x16, SHUFFLE
    O << ", ";
    printOperand(MI, 16, O);
  }


  // Fragment 11 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 32) & 1) {
    // SHUFFLE
    O << ", ";
    printOperand(MI, 17, O);
    O << ", ";
    printOperand(MI, 18, O);
    return;
  } else {
    // CONST_V128_I8x16
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *WebAssemblyInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 14 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "%f32.0\0"
  /* 7 */ "%i32.0\0"
  /* 14 */ "%f64.0\0"
  /* 21 */ "%i64.0\0"
  /* 28 */ "%funcref.0\0"
  /* 39 */ "%externref.0\0"
  /* 52 */ "%FP32\0"
  /* 58 */ "%SP32\0"
  /* 64 */ "%FP64\0"
  /* 70 */ "%SP64\0"
  /* 76 */ "%v128\0"
  /* 82 */ "STACK\0"
  /* 88 */ "ARGUMENTS\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint8_t RegAsmOffset[] = {
    88, 82, 39, 52, 64, 28, 58, 70, 0, 14, 7, 21, 76, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool WebAssemblyInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
