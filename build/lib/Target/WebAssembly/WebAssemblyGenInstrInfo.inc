/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace WebAssembly {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_INSTR_REF	= 14,
    DBG_LABEL	= 15,
    REG_SEQUENCE	= 16,
    COPY	= 17,
    BUNDLE	= 18,
    LIFETIME_START	= 19,
    LIFETIME_END	= 20,
    PSEUDO_PROBE	= 21,
    STACKMAP	= 22,
    FENTRY_CALL	= 23,
    PATCHPOINT	= 24,
    LOAD_STACK_GUARD	= 25,
    PREALLOCATED_SETUP	= 26,
    PREALLOCATED_ARG	= 27,
    STATEPOINT	= 28,
    LOCAL_ESCAPE	= 29,
    FAULTING_OP	= 30,
    PATCHABLE_OP	= 31,
    PATCHABLE_FUNCTION_ENTER	= 32,
    PATCHABLE_RET	= 33,
    PATCHABLE_FUNCTION_EXIT	= 34,
    PATCHABLE_TAIL_CALL	= 35,
    PATCHABLE_EVENT_CALL	= 36,
    PATCHABLE_TYPED_EVENT_CALL	= 37,
    ICALL_BRANCH_FUNNEL	= 38,
    G_ASSERT_ZEXT	= 39,
    G_ADD	= 40,
    G_SUB	= 41,
    G_MUL	= 42,
    G_SDIV	= 43,
    G_UDIV	= 44,
    G_SREM	= 45,
    G_UREM	= 46,
    G_AND	= 47,
    G_OR	= 48,
    G_XOR	= 49,
    G_IMPLICIT_DEF	= 50,
    G_PHI	= 51,
    G_FRAME_INDEX	= 52,
    G_GLOBAL_VALUE	= 53,
    G_EXTRACT	= 54,
    G_UNMERGE_VALUES	= 55,
    G_INSERT	= 56,
    G_MERGE_VALUES	= 57,
    G_BUILD_VECTOR	= 58,
    G_BUILD_VECTOR_TRUNC	= 59,
    G_CONCAT_VECTORS	= 60,
    G_PTRTOINT	= 61,
    G_INTTOPTR	= 62,
    G_BITCAST	= 63,
    G_FREEZE	= 64,
    G_INTRINSIC_TRUNC	= 65,
    G_INTRINSIC_ROUND	= 66,
    G_INTRINSIC_LRINT	= 67,
    G_INTRINSIC_ROUNDEVEN	= 68,
    G_READCYCLECOUNTER	= 69,
    G_LOAD	= 70,
    G_SEXTLOAD	= 71,
    G_ZEXTLOAD	= 72,
    G_INDEXED_LOAD	= 73,
    G_INDEXED_SEXTLOAD	= 74,
    G_INDEXED_ZEXTLOAD	= 75,
    G_STORE	= 76,
    G_INDEXED_STORE	= 77,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 78,
    G_ATOMIC_CMPXCHG	= 79,
    G_ATOMICRMW_XCHG	= 80,
    G_ATOMICRMW_ADD	= 81,
    G_ATOMICRMW_SUB	= 82,
    G_ATOMICRMW_AND	= 83,
    G_ATOMICRMW_NAND	= 84,
    G_ATOMICRMW_OR	= 85,
    G_ATOMICRMW_XOR	= 86,
    G_ATOMICRMW_MAX	= 87,
    G_ATOMICRMW_MIN	= 88,
    G_ATOMICRMW_UMAX	= 89,
    G_ATOMICRMW_UMIN	= 90,
    G_ATOMICRMW_FADD	= 91,
    G_ATOMICRMW_FSUB	= 92,
    G_FENCE	= 93,
    G_BRCOND	= 94,
    G_BRINDIRECT	= 95,
    G_INTRINSIC	= 96,
    G_INTRINSIC_W_SIDE_EFFECTS	= 97,
    G_ANYEXT	= 98,
    G_TRUNC	= 99,
    G_CONSTANT	= 100,
    G_FCONSTANT	= 101,
    G_VASTART	= 102,
    G_VAARG	= 103,
    G_SEXT	= 104,
    G_SEXT_INREG	= 105,
    G_ZEXT	= 106,
    G_SHL	= 107,
    G_LSHR	= 108,
    G_ASHR	= 109,
    G_FSHL	= 110,
    G_FSHR	= 111,
    G_ICMP	= 112,
    G_FCMP	= 113,
    G_SELECT	= 114,
    G_UADDO	= 115,
    G_UADDE	= 116,
    G_USUBO	= 117,
    G_USUBE	= 118,
    G_SADDO	= 119,
    G_SADDE	= 120,
    G_SSUBO	= 121,
    G_SSUBE	= 122,
    G_UMULO	= 123,
    G_SMULO	= 124,
    G_UMULH	= 125,
    G_SMULH	= 126,
    G_UADDSAT	= 127,
    G_SADDSAT	= 128,
    G_USUBSAT	= 129,
    G_SSUBSAT	= 130,
    G_USHLSAT	= 131,
    G_SSHLSAT	= 132,
    G_SMULFIX	= 133,
    G_UMULFIX	= 134,
    G_SMULFIXSAT	= 135,
    G_UMULFIXSAT	= 136,
    G_SDIVFIX	= 137,
    G_UDIVFIX	= 138,
    G_SDIVFIXSAT	= 139,
    G_UDIVFIXSAT	= 140,
    G_FADD	= 141,
    G_FSUB	= 142,
    G_FMUL	= 143,
    G_FMA	= 144,
    G_FMAD	= 145,
    G_FDIV	= 146,
    G_FREM	= 147,
    G_FPOW	= 148,
    G_FPOWI	= 149,
    G_FEXP	= 150,
    G_FEXP2	= 151,
    G_FLOG	= 152,
    G_FLOG2	= 153,
    G_FLOG10	= 154,
    G_FNEG	= 155,
    G_FPEXT	= 156,
    G_FPTRUNC	= 157,
    G_FPTOSI	= 158,
    G_FPTOUI	= 159,
    G_SITOFP	= 160,
    G_UITOFP	= 161,
    G_FABS	= 162,
    G_FCOPYSIGN	= 163,
    G_FCANONICALIZE	= 164,
    G_FMINNUM	= 165,
    G_FMAXNUM	= 166,
    G_FMINNUM_IEEE	= 167,
    G_FMAXNUM_IEEE	= 168,
    G_FMINIMUM	= 169,
    G_FMAXIMUM	= 170,
    G_PTR_ADD	= 171,
    G_PTRMASK	= 172,
    G_SMIN	= 173,
    G_SMAX	= 174,
    G_UMIN	= 175,
    G_UMAX	= 176,
    G_ABS	= 177,
    G_BR	= 178,
    G_BRJT	= 179,
    G_INSERT_VECTOR_ELT	= 180,
    G_EXTRACT_VECTOR_ELT	= 181,
    G_SHUFFLE_VECTOR	= 182,
    G_CTTZ	= 183,
    G_CTTZ_ZERO_UNDEF	= 184,
    G_CTLZ	= 185,
    G_CTLZ_ZERO_UNDEF	= 186,
    G_CTPOP	= 187,
    G_BSWAP	= 188,
    G_BITREVERSE	= 189,
    G_FCEIL	= 190,
    G_FCOS	= 191,
    G_FSIN	= 192,
    G_FSQRT	= 193,
    G_FFLOOR	= 194,
    G_FRINT	= 195,
    G_FNEARBYINT	= 196,
    G_ADDRSPACE_CAST	= 197,
    G_BLOCK_ADDR	= 198,
    G_JUMP_TABLE	= 199,
    G_DYN_STACKALLOC	= 200,
    G_STRICT_FADD	= 201,
    G_STRICT_FSUB	= 202,
    G_STRICT_FMUL	= 203,
    G_STRICT_FDIV	= 204,
    G_STRICT_FREM	= 205,
    G_STRICT_FMA	= 206,
    G_STRICT_FSQRT	= 207,
    G_READ_REGISTER	= 208,
    G_WRITE_REGISTER	= 209,
    G_MEMCPY	= 210,
    G_MEMMOVE	= 211,
    G_MEMSET	= 212,
    G_VECREDUCE_SEQ_FADD	= 213,
    G_VECREDUCE_SEQ_FMUL	= 214,
    G_VECREDUCE_FADD	= 215,
    G_VECREDUCE_FMUL	= 216,
    G_VECREDUCE_FMAX	= 217,
    G_VECREDUCE_FMIN	= 218,
    G_VECREDUCE_ADD	= 219,
    G_VECREDUCE_MUL	= 220,
    G_VECREDUCE_AND	= 221,
    G_VECREDUCE_OR	= 222,
    G_VECREDUCE_XOR	= 223,
    G_VECREDUCE_SMAX	= 224,
    G_VECREDUCE_SMIN	= 225,
    G_VECREDUCE_UMAX	= 226,
    G_VECREDUCE_UMIN	= 227,
    CALL_PARAMS	= 228,
    CALL_PARAMS_S	= 229,
    CALL_RESULTS	= 230,
    CALL_RESULTS_S	= 231,
    CATCHRET	= 232,
    CATCHRET_S	= 233,
    CLEANUPRET	= 234,
    CLEANUPRET_S	= 235,
    COMPILER_FENCE	= 236,
    COMPILER_FENCE_S	= 237,
    RET_CALL_RESULTS	= 238,
    RET_CALL_RESULTS_S	= 239,
    ABS_F32	= 240,
    ABS_F32_S	= 241,
    ABS_F32x4	= 242,
    ABS_F32x4_S	= 243,
    ABS_F64	= 244,
    ABS_F64_S	= 245,
    ABS_F64x2	= 246,
    ABS_F64x2_S	= 247,
    ABS_I16x8	= 248,
    ABS_I16x8_S	= 249,
    ABS_I32x4	= 250,
    ABS_I32x4_S	= 251,
    ABS_I64x2	= 252,
    ABS_I64x2_S	= 253,
    ABS_I8x16	= 254,
    ABS_I8x16_S	= 255,
    ADD_F32	= 256,
    ADD_F32_S	= 257,
    ADD_F32x4	= 258,
    ADD_F32x4_S	= 259,
    ADD_F64	= 260,
    ADD_F64_S	= 261,
    ADD_F64x2	= 262,
    ADD_F64x2_S	= 263,
    ADD_I16x8	= 264,
    ADD_I16x8_S	= 265,
    ADD_I32	= 266,
    ADD_I32_S	= 267,
    ADD_I32x4	= 268,
    ADD_I32x4_S	= 269,
    ADD_I64	= 270,
    ADD_I64_S	= 271,
    ADD_I64x2	= 272,
    ADD_I64x2_S	= 273,
    ADD_I8x16	= 274,
    ADD_I8x16_S	= 275,
    ADD_SAT_S_I16x8	= 276,
    ADD_SAT_S_I16x8_S	= 277,
    ADD_SAT_S_I8x16	= 278,
    ADD_SAT_S_I8x16_S	= 279,
    ADD_SAT_U_I16x8	= 280,
    ADD_SAT_U_I16x8_S	= 281,
    ADD_SAT_U_I8x16	= 282,
    ADD_SAT_U_I8x16_S	= 283,
    ADJCALLSTACKDOWN	= 284,
    ADJCALLSTACKDOWN_S	= 285,
    ADJCALLSTACKUP	= 286,
    ADJCALLSTACKUP_S	= 287,
    ALLTRUE_I16x8	= 288,
    ALLTRUE_I16x8_S	= 289,
    ALLTRUE_I32x4	= 290,
    ALLTRUE_I32x4_S	= 291,
    ALLTRUE_I64x2	= 292,
    ALLTRUE_I64x2_S	= 293,
    ALLTRUE_I8x16	= 294,
    ALLTRUE_I8x16_S	= 295,
    AND	= 296,
    ANDNOT	= 297,
    ANDNOT_S	= 298,
    AND_I32	= 299,
    AND_I32_S	= 300,
    AND_I64	= 301,
    AND_I64_S	= 302,
    AND_S	= 303,
    ANYTRUE_I16x8	= 304,
    ANYTRUE_I16x8_S	= 305,
    ANYTRUE_I32x4	= 306,
    ANYTRUE_I32x4_S	= 307,
    ANYTRUE_I64x2	= 308,
    ANYTRUE_I64x2_S	= 309,
    ANYTRUE_I8x16	= 310,
    ANYTRUE_I8x16_S	= 311,
    ARGUMENT_externref	= 312,
    ARGUMENT_externref_S	= 313,
    ARGUMENT_f32	= 314,
    ARGUMENT_f32_S	= 315,
    ARGUMENT_f64	= 316,
    ARGUMENT_f64_S	= 317,
    ARGUMENT_funcref	= 318,
    ARGUMENT_funcref_S	= 319,
    ARGUMENT_i32	= 320,
    ARGUMENT_i32_S	= 321,
    ARGUMENT_i64	= 322,
    ARGUMENT_i64_S	= 323,
    ARGUMENT_v16i8	= 324,
    ARGUMENT_v16i8_S	= 325,
    ARGUMENT_v2f64	= 326,
    ARGUMENT_v2f64_S	= 327,
    ARGUMENT_v2i64	= 328,
    ARGUMENT_v2i64_S	= 329,
    ARGUMENT_v4f32	= 330,
    ARGUMENT_v4f32_S	= 331,
    ARGUMENT_v4i32	= 332,
    ARGUMENT_v4i32_S	= 333,
    ARGUMENT_v8i16	= 334,
    ARGUMENT_v8i16_S	= 335,
    ATOMIC_FENCE	= 336,
    ATOMIC_FENCE_S	= 337,
    ATOMIC_LOAD16_U_I32_A32	= 338,
    ATOMIC_LOAD16_U_I32_A32_S	= 339,
    ATOMIC_LOAD16_U_I32_A64	= 340,
    ATOMIC_LOAD16_U_I32_A64_S	= 341,
    ATOMIC_LOAD16_U_I64_A32	= 342,
    ATOMIC_LOAD16_U_I64_A32_S	= 343,
    ATOMIC_LOAD16_U_I64_A64	= 344,
    ATOMIC_LOAD16_U_I64_A64_S	= 345,
    ATOMIC_LOAD32_U_I64_A32	= 346,
    ATOMIC_LOAD32_U_I64_A32_S	= 347,
    ATOMIC_LOAD32_U_I64_A64	= 348,
    ATOMIC_LOAD32_U_I64_A64_S	= 349,
    ATOMIC_LOAD8_U_I32_A32	= 350,
    ATOMIC_LOAD8_U_I32_A32_S	= 351,
    ATOMIC_LOAD8_U_I32_A64	= 352,
    ATOMIC_LOAD8_U_I32_A64_S	= 353,
    ATOMIC_LOAD8_U_I64_A32	= 354,
    ATOMIC_LOAD8_U_I64_A32_S	= 355,
    ATOMIC_LOAD8_U_I64_A64	= 356,
    ATOMIC_LOAD8_U_I64_A64_S	= 357,
    ATOMIC_LOAD_I32_A32	= 358,
    ATOMIC_LOAD_I32_A32_S	= 359,
    ATOMIC_LOAD_I32_A64	= 360,
    ATOMIC_LOAD_I32_A64_S	= 361,
    ATOMIC_LOAD_I64_A32	= 362,
    ATOMIC_LOAD_I64_A32_S	= 363,
    ATOMIC_LOAD_I64_A64	= 364,
    ATOMIC_LOAD_I64_A64_S	= 365,
    ATOMIC_RMW16_U_ADD_I32_A32	= 366,
    ATOMIC_RMW16_U_ADD_I32_A32_S	= 367,
    ATOMIC_RMW16_U_ADD_I32_A64	= 368,
    ATOMIC_RMW16_U_ADD_I32_A64_S	= 369,
    ATOMIC_RMW16_U_ADD_I64_A32	= 370,
    ATOMIC_RMW16_U_ADD_I64_A32_S	= 371,
    ATOMIC_RMW16_U_ADD_I64_A64	= 372,
    ATOMIC_RMW16_U_ADD_I64_A64_S	= 373,
    ATOMIC_RMW16_U_AND_I32_A32	= 374,
    ATOMIC_RMW16_U_AND_I32_A32_S	= 375,
    ATOMIC_RMW16_U_AND_I32_A64	= 376,
    ATOMIC_RMW16_U_AND_I32_A64_S	= 377,
    ATOMIC_RMW16_U_AND_I64_A32	= 378,
    ATOMIC_RMW16_U_AND_I64_A32_S	= 379,
    ATOMIC_RMW16_U_AND_I64_A64	= 380,
    ATOMIC_RMW16_U_AND_I64_A64_S	= 381,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32	= 382,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32_S	= 383,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64	= 384,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64_S	= 385,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32	= 386,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32_S	= 387,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64	= 388,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64_S	= 389,
    ATOMIC_RMW16_U_OR_I32_A32	= 390,
    ATOMIC_RMW16_U_OR_I32_A32_S	= 391,
    ATOMIC_RMW16_U_OR_I32_A64	= 392,
    ATOMIC_RMW16_U_OR_I32_A64_S	= 393,
    ATOMIC_RMW16_U_OR_I64_A32	= 394,
    ATOMIC_RMW16_U_OR_I64_A32_S	= 395,
    ATOMIC_RMW16_U_OR_I64_A64	= 396,
    ATOMIC_RMW16_U_OR_I64_A64_S	= 397,
    ATOMIC_RMW16_U_SUB_I32_A32	= 398,
    ATOMIC_RMW16_U_SUB_I32_A32_S	= 399,
    ATOMIC_RMW16_U_SUB_I32_A64	= 400,
    ATOMIC_RMW16_U_SUB_I32_A64_S	= 401,
    ATOMIC_RMW16_U_SUB_I64_A32	= 402,
    ATOMIC_RMW16_U_SUB_I64_A32_S	= 403,
    ATOMIC_RMW16_U_SUB_I64_A64	= 404,
    ATOMIC_RMW16_U_SUB_I64_A64_S	= 405,
    ATOMIC_RMW16_U_XCHG_I32_A32	= 406,
    ATOMIC_RMW16_U_XCHG_I32_A32_S	= 407,
    ATOMIC_RMW16_U_XCHG_I32_A64	= 408,
    ATOMIC_RMW16_U_XCHG_I32_A64_S	= 409,
    ATOMIC_RMW16_U_XCHG_I64_A32	= 410,
    ATOMIC_RMW16_U_XCHG_I64_A32_S	= 411,
    ATOMIC_RMW16_U_XCHG_I64_A64	= 412,
    ATOMIC_RMW16_U_XCHG_I64_A64_S	= 413,
    ATOMIC_RMW16_U_XOR_I32_A32	= 414,
    ATOMIC_RMW16_U_XOR_I32_A32_S	= 415,
    ATOMIC_RMW16_U_XOR_I32_A64	= 416,
    ATOMIC_RMW16_U_XOR_I32_A64_S	= 417,
    ATOMIC_RMW16_U_XOR_I64_A32	= 418,
    ATOMIC_RMW16_U_XOR_I64_A32_S	= 419,
    ATOMIC_RMW16_U_XOR_I64_A64	= 420,
    ATOMIC_RMW16_U_XOR_I64_A64_S	= 421,
    ATOMIC_RMW32_U_ADD_I64_A32	= 422,
    ATOMIC_RMW32_U_ADD_I64_A32_S	= 423,
    ATOMIC_RMW32_U_ADD_I64_A64	= 424,
    ATOMIC_RMW32_U_ADD_I64_A64_S	= 425,
    ATOMIC_RMW32_U_AND_I64_A32	= 426,
    ATOMIC_RMW32_U_AND_I64_A32_S	= 427,
    ATOMIC_RMW32_U_AND_I64_A64	= 428,
    ATOMIC_RMW32_U_AND_I64_A64_S	= 429,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32	= 430,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32_S	= 431,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64	= 432,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64_S	= 433,
    ATOMIC_RMW32_U_OR_I64_A32	= 434,
    ATOMIC_RMW32_U_OR_I64_A32_S	= 435,
    ATOMIC_RMW32_U_OR_I64_A64	= 436,
    ATOMIC_RMW32_U_OR_I64_A64_S	= 437,
    ATOMIC_RMW32_U_SUB_I64_A32	= 438,
    ATOMIC_RMW32_U_SUB_I64_A32_S	= 439,
    ATOMIC_RMW32_U_SUB_I64_A64	= 440,
    ATOMIC_RMW32_U_SUB_I64_A64_S	= 441,
    ATOMIC_RMW32_U_XCHG_I64_A32	= 442,
    ATOMIC_RMW32_U_XCHG_I64_A32_S	= 443,
    ATOMIC_RMW32_U_XCHG_I64_A64	= 444,
    ATOMIC_RMW32_U_XCHG_I64_A64_S	= 445,
    ATOMIC_RMW32_U_XOR_I64_A32	= 446,
    ATOMIC_RMW32_U_XOR_I64_A32_S	= 447,
    ATOMIC_RMW32_U_XOR_I64_A64	= 448,
    ATOMIC_RMW32_U_XOR_I64_A64_S	= 449,
    ATOMIC_RMW8_U_ADD_I32_A32	= 450,
    ATOMIC_RMW8_U_ADD_I32_A32_S	= 451,
    ATOMIC_RMW8_U_ADD_I32_A64	= 452,
    ATOMIC_RMW8_U_ADD_I32_A64_S	= 453,
    ATOMIC_RMW8_U_ADD_I64_A32	= 454,
    ATOMIC_RMW8_U_ADD_I64_A32_S	= 455,
    ATOMIC_RMW8_U_ADD_I64_A64	= 456,
    ATOMIC_RMW8_U_ADD_I64_A64_S	= 457,
    ATOMIC_RMW8_U_AND_I32_A32	= 458,
    ATOMIC_RMW8_U_AND_I32_A32_S	= 459,
    ATOMIC_RMW8_U_AND_I32_A64	= 460,
    ATOMIC_RMW8_U_AND_I32_A64_S	= 461,
    ATOMIC_RMW8_U_AND_I64_A32	= 462,
    ATOMIC_RMW8_U_AND_I64_A32_S	= 463,
    ATOMIC_RMW8_U_AND_I64_A64	= 464,
    ATOMIC_RMW8_U_AND_I64_A64_S	= 465,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32	= 466,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32_S	= 467,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64	= 468,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64_S	= 469,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32	= 470,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32_S	= 471,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64	= 472,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64_S	= 473,
    ATOMIC_RMW8_U_OR_I32_A32	= 474,
    ATOMIC_RMW8_U_OR_I32_A32_S	= 475,
    ATOMIC_RMW8_U_OR_I32_A64	= 476,
    ATOMIC_RMW8_U_OR_I32_A64_S	= 477,
    ATOMIC_RMW8_U_OR_I64_A32	= 478,
    ATOMIC_RMW8_U_OR_I64_A32_S	= 479,
    ATOMIC_RMW8_U_OR_I64_A64	= 480,
    ATOMIC_RMW8_U_OR_I64_A64_S	= 481,
    ATOMIC_RMW8_U_SUB_I32_A32	= 482,
    ATOMIC_RMW8_U_SUB_I32_A32_S	= 483,
    ATOMIC_RMW8_U_SUB_I32_A64	= 484,
    ATOMIC_RMW8_U_SUB_I32_A64_S	= 485,
    ATOMIC_RMW8_U_SUB_I64_A32	= 486,
    ATOMIC_RMW8_U_SUB_I64_A32_S	= 487,
    ATOMIC_RMW8_U_SUB_I64_A64	= 488,
    ATOMIC_RMW8_U_SUB_I64_A64_S	= 489,
    ATOMIC_RMW8_U_XCHG_I32_A32	= 490,
    ATOMIC_RMW8_U_XCHG_I32_A32_S	= 491,
    ATOMIC_RMW8_U_XCHG_I32_A64	= 492,
    ATOMIC_RMW8_U_XCHG_I32_A64_S	= 493,
    ATOMIC_RMW8_U_XCHG_I64_A32	= 494,
    ATOMIC_RMW8_U_XCHG_I64_A32_S	= 495,
    ATOMIC_RMW8_U_XCHG_I64_A64	= 496,
    ATOMIC_RMW8_U_XCHG_I64_A64_S	= 497,
    ATOMIC_RMW8_U_XOR_I32_A32	= 498,
    ATOMIC_RMW8_U_XOR_I32_A32_S	= 499,
    ATOMIC_RMW8_U_XOR_I32_A64	= 500,
    ATOMIC_RMW8_U_XOR_I32_A64_S	= 501,
    ATOMIC_RMW8_U_XOR_I64_A32	= 502,
    ATOMIC_RMW8_U_XOR_I64_A32_S	= 503,
    ATOMIC_RMW8_U_XOR_I64_A64	= 504,
    ATOMIC_RMW8_U_XOR_I64_A64_S	= 505,
    ATOMIC_RMW_ADD_I32_A32	= 506,
    ATOMIC_RMW_ADD_I32_A32_S	= 507,
    ATOMIC_RMW_ADD_I32_A64	= 508,
    ATOMIC_RMW_ADD_I32_A64_S	= 509,
    ATOMIC_RMW_ADD_I64_A32	= 510,
    ATOMIC_RMW_ADD_I64_A32_S	= 511,
    ATOMIC_RMW_ADD_I64_A64	= 512,
    ATOMIC_RMW_ADD_I64_A64_S	= 513,
    ATOMIC_RMW_AND_I32_A32	= 514,
    ATOMIC_RMW_AND_I32_A32_S	= 515,
    ATOMIC_RMW_AND_I32_A64	= 516,
    ATOMIC_RMW_AND_I32_A64_S	= 517,
    ATOMIC_RMW_AND_I64_A32	= 518,
    ATOMIC_RMW_AND_I64_A32_S	= 519,
    ATOMIC_RMW_AND_I64_A64	= 520,
    ATOMIC_RMW_AND_I64_A64_S	= 521,
    ATOMIC_RMW_CMPXCHG_I32_A32	= 522,
    ATOMIC_RMW_CMPXCHG_I32_A32_S	= 523,
    ATOMIC_RMW_CMPXCHG_I32_A64	= 524,
    ATOMIC_RMW_CMPXCHG_I32_A64_S	= 525,
    ATOMIC_RMW_CMPXCHG_I64_A32	= 526,
    ATOMIC_RMW_CMPXCHG_I64_A32_S	= 527,
    ATOMIC_RMW_CMPXCHG_I64_A64	= 528,
    ATOMIC_RMW_CMPXCHG_I64_A64_S	= 529,
    ATOMIC_RMW_OR_I32_A32	= 530,
    ATOMIC_RMW_OR_I32_A32_S	= 531,
    ATOMIC_RMW_OR_I32_A64	= 532,
    ATOMIC_RMW_OR_I32_A64_S	= 533,
    ATOMIC_RMW_OR_I64_A32	= 534,
    ATOMIC_RMW_OR_I64_A32_S	= 535,
    ATOMIC_RMW_OR_I64_A64	= 536,
    ATOMIC_RMW_OR_I64_A64_S	= 537,
    ATOMIC_RMW_SUB_I32_A32	= 538,
    ATOMIC_RMW_SUB_I32_A32_S	= 539,
    ATOMIC_RMW_SUB_I32_A64	= 540,
    ATOMIC_RMW_SUB_I32_A64_S	= 541,
    ATOMIC_RMW_SUB_I64_A32	= 542,
    ATOMIC_RMW_SUB_I64_A32_S	= 543,
    ATOMIC_RMW_SUB_I64_A64	= 544,
    ATOMIC_RMW_SUB_I64_A64_S	= 545,
    ATOMIC_RMW_XCHG_I32_A32	= 546,
    ATOMIC_RMW_XCHG_I32_A32_S	= 547,
    ATOMIC_RMW_XCHG_I32_A64	= 548,
    ATOMIC_RMW_XCHG_I32_A64_S	= 549,
    ATOMIC_RMW_XCHG_I64_A32	= 550,
    ATOMIC_RMW_XCHG_I64_A32_S	= 551,
    ATOMIC_RMW_XCHG_I64_A64	= 552,
    ATOMIC_RMW_XCHG_I64_A64_S	= 553,
    ATOMIC_RMW_XOR_I32_A32	= 554,
    ATOMIC_RMW_XOR_I32_A32_S	= 555,
    ATOMIC_RMW_XOR_I32_A64	= 556,
    ATOMIC_RMW_XOR_I32_A64_S	= 557,
    ATOMIC_RMW_XOR_I64_A32	= 558,
    ATOMIC_RMW_XOR_I64_A32_S	= 559,
    ATOMIC_RMW_XOR_I64_A64	= 560,
    ATOMIC_RMW_XOR_I64_A64_S	= 561,
    ATOMIC_STORE16_I32_A32	= 562,
    ATOMIC_STORE16_I32_A32_S	= 563,
    ATOMIC_STORE16_I32_A64	= 564,
    ATOMIC_STORE16_I32_A64_S	= 565,
    ATOMIC_STORE16_I64_A32	= 566,
    ATOMIC_STORE16_I64_A32_S	= 567,
    ATOMIC_STORE16_I64_A64	= 568,
    ATOMIC_STORE16_I64_A64_S	= 569,
    ATOMIC_STORE32_I64_A32	= 570,
    ATOMIC_STORE32_I64_A32_S	= 571,
    ATOMIC_STORE32_I64_A64	= 572,
    ATOMIC_STORE32_I64_A64_S	= 573,
    ATOMIC_STORE8_I32_A32	= 574,
    ATOMIC_STORE8_I32_A32_S	= 575,
    ATOMIC_STORE8_I32_A64	= 576,
    ATOMIC_STORE8_I32_A64_S	= 577,
    ATOMIC_STORE8_I64_A32	= 578,
    ATOMIC_STORE8_I64_A32_S	= 579,
    ATOMIC_STORE8_I64_A64	= 580,
    ATOMIC_STORE8_I64_A64_S	= 581,
    ATOMIC_STORE_I32_A32	= 582,
    ATOMIC_STORE_I32_A32_S	= 583,
    ATOMIC_STORE_I32_A64	= 584,
    ATOMIC_STORE_I32_A64_S	= 585,
    ATOMIC_STORE_I64_A32	= 586,
    ATOMIC_STORE_I64_A32_S	= 587,
    ATOMIC_STORE_I64_A64	= 588,
    ATOMIC_STORE_I64_A64_S	= 589,
    AVGR_U_I16x8	= 590,
    AVGR_U_I16x8_S	= 591,
    AVGR_U_I8x16	= 592,
    AVGR_U_I8x16_S	= 593,
    BITMASK_I16x8	= 594,
    BITMASK_I16x8_S	= 595,
    BITMASK_I32x4	= 596,
    BITMASK_I32x4_S	= 597,
    BITMASK_I64x2	= 598,
    BITMASK_I64x2_S	= 599,
    BITMASK_I8x16	= 600,
    BITMASK_I8x16_S	= 601,
    BITSELECT	= 602,
    BITSELECT_S	= 603,
    BLOCK	= 604,
    BLOCK_S	= 605,
    BR	= 606,
    BR_IF	= 607,
    BR_IF_S	= 608,
    BR_S	= 609,
    BR_TABLE_I32	= 610,
    BR_TABLE_I32_S	= 611,
    BR_TABLE_I64	= 612,
    BR_TABLE_I64_S	= 613,
    BR_UNLESS	= 614,
    BR_UNLESS_S	= 615,
    CALL	= 616,
    CALL_INDIRECT	= 617,
    CALL_INDIRECT_S	= 618,
    CALL_S	= 619,
    CATCH	= 620,
    CATCH_ALL	= 621,
    CATCH_ALL_S	= 622,
    CATCH_S	= 623,
    CEIL_F32	= 624,
    CEIL_F32_S	= 625,
    CEIL_F32x4	= 626,
    CEIL_F32x4_S	= 627,
    CEIL_F64	= 628,
    CEIL_F64_S	= 629,
    CEIL_F64x2	= 630,
    CEIL_F64x2_S	= 631,
    CLZ_I32	= 632,
    CLZ_I32_S	= 633,
    CLZ_I64	= 634,
    CLZ_I64_S	= 635,
    CONST_F32	= 636,
    CONST_F32_S	= 637,
    CONST_F64	= 638,
    CONST_F64_S	= 639,
    CONST_I32	= 640,
    CONST_I32_S	= 641,
    CONST_I64	= 642,
    CONST_I64_S	= 643,
    CONST_V128_F32x4	= 644,
    CONST_V128_F32x4_S	= 645,
    CONST_V128_F64x2	= 646,
    CONST_V128_F64x2_S	= 647,
    CONST_V128_I16x8	= 648,
    CONST_V128_I16x8_S	= 649,
    CONST_V128_I32x4	= 650,
    CONST_V128_I32x4_S	= 651,
    CONST_V128_I64x2	= 652,
    CONST_V128_I64x2_S	= 653,
    CONST_V128_I8x16	= 654,
    CONST_V128_I8x16_S	= 655,
    COPYSIGN_F32	= 656,
    COPYSIGN_F32_S	= 657,
    COPYSIGN_F64	= 658,
    COPYSIGN_F64_S	= 659,
    COPY_EXTERNREF	= 660,
    COPY_EXTERNREF_S	= 661,
    COPY_F32	= 662,
    COPY_F32_S	= 663,
    COPY_F64	= 664,
    COPY_F64_S	= 665,
    COPY_FUNCREF	= 666,
    COPY_FUNCREF_S	= 667,
    COPY_I32	= 668,
    COPY_I32_S	= 669,
    COPY_I64	= 670,
    COPY_I64_S	= 671,
    COPY_V128	= 672,
    COPY_V128_S	= 673,
    CTZ_I32	= 674,
    CTZ_I32_S	= 675,
    CTZ_I64	= 676,
    CTZ_I64_S	= 677,
    DEBUG_UNREACHABLE	= 678,
    DEBUG_UNREACHABLE_S	= 679,
    DIV_F32	= 680,
    DIV_F32_S	= 681,
    DIV_F32x4	= 682,
    DIV_F32x4_S	= 683,
    DIV_F64	= 684,
    DIV_F64_S	= 685,
    DIV_F64x2	= 686,
    DIV_F64x2_S	= 687,
    DIV_S_I32	= 688,
    DIV_S_I32_S	= 689,
    DIV_S_I64	= 690,
    DIV_S_I64_S	= 691,
    DIV_U_I32	= 692,
    DIV_U_I32_S	= 693,
    DIV_U_I64	= 694,
    DIV_U_I64_S	= 695,
    DOT	= 696,
    DOT_S	= 697,
    DROP_EXTERNREF	= 698,
    DROP_EXTERNREF_S	= 699,
    DROP_F32	= 700,
    DROP_F32_S	= 701,
    DROP_F64	= 702,
    DROP_F64_S	= 703,
    DROP_FUNCREF	= 704,
    DROP_FUNCREF_S	= 705,
    DROP_I32	= 706,
    DROP_I32_S	= 707,
    DROP_I64	= 708,
    DROP_I64_S	= 709,
    DROP_V128	= 710,
    DROP_V128_S	= 711,
    ELSE	= 712,
    ELSE_S	= 713,
    END	= 714,
    END_BLOCK	= 715,
    END_BLOCK_S	= 716,
    END_FUNCTION	= 717,
    END_FUNCTION_S	= 718,
    END_IF	= 719,
    END_IF_S	= 720,
    END_LOOP	= 721,
    END_LOOP_S	= 722,
    END_S	= 723,
    END_TRY	= 724,
    END_TRY_S	= 725,
    EQZ_I32	= 726,
    EQZ_I32_S	= 727,
    EQZ_I64	= 728,
    EQZ_I64_S	= 729,
    EQ_F32	= 730,
    EQ_F32_S	= 731,
    EQ_F32x4	= 732,
    EQ_F32x4_S	= 733,
    EQ_F64	= 734,
    EQ_F64_S	= 735,
    EQ_F64x2	= 736,
    EQ_F64x2_S	= 737,
    EQ_I16x8	= 738,
    EQ_I16x8_S	= 739,
    EQ_I32	= 740,
    EQ_I32_S	= 741,
    EQ_I32x4	= 742,
    EQ_I32x4_S	= 743,
    EQ_I64	= 744,
    EQ_I64_S	= 745,
    EQ_I8x16	= 746,
    EQ_I8x16_S	= 747,
    EQ_v2i64	= 748,
    EQ_v2i64_S	= 749,
    EXTMUL_HIGH_S_I16x8	= 750,
    EXTMUL_HIGH_S_I16x8_S	= 751,
    EXTMUL_HIGH_S_I32x4	= 752,
    EXTMUL_HIGH_S_I32x4_S	= 753,
    EXTMUL_HIGH_S_I64x2	= 754,
    EXTMUL_HIGH_S_I64x2_S	= 755,
    EXTMUL_HIGH_U_I16x8	= 756,
    EXTMUL_HIGH_U_I16x8_S	= 757,
    EXTMUL_HIGH_U_I32x4	= 758,
    EXTMUL_HIGH_U_I32x4_S	= 759,
    EXTMUL_HIGH_U_I64x2	= 760,
    EXTMUL_HIGH_U_I64x2_S	= 761,
    EXTMUL_LOW_S_I16x8	= 762,
    EXTMUL_LOW_S_I16x8_S	= 763,
    EXTMUL_LOW_S_I32x4	= 764,
    EXTMUL_LOW_S_I32x4_S	= 765,
    EXTMUL_LOW_S_I64x2	= 766,
    EXTMUL_LOW_S_I64x2_S	= 767,
    EXTMUL_LOW_U_I16x8	= 768,
    EXTMUL_LOW_U_I16x8_S	= 769,
    EXTMUL_LOW_U_I32x4	= 770,
    EXTMUL_LOW_U_I32x4_S	= 771,
    EXTMUL_LOW_U_I64x2	= 772,
    EXTMUL_LOW_U_I64x2_S	= 773,
    EXTRACT_LANE_F32x4	= 774,
    EXTRACT_LANE_F32x4_S	= 775,
    EXTRACT_LANE_F64x2	= 776,
    EXTRACT_LANE_F64x2_S	= 777,
    EXTRACT_LANE_I16x8_s	= 778,
    EXTRACT_LANE_I16x8_s_S	= 779,
    EXTRACT_LANE_I16x8_u	= 780,
    EXTRACT_LANE_I16x8_u_S	= 781,
    EXTRACT_LANE_I32x4	= 782,
    EXTRACT_LANE_I32x4_S	= 783,
    EXTRACT_LANE_I64x2	= 784,
    EXTRACT_LANE_I64x2_S	= 785,
    EXTRACT_LANE_I8x16_s	= 786,
    EXTRACT_LANE_I8x16_s_S	= 787,
    EXTRACT_LANE_I8x16_u	= 788,
    EXTRACT_LANE_I8x16_u_S	= 789,
    F32_CONVERT_S_I32	= 790,
    F32_CONVERT_S_I32_S	= 791,
    F32_CONVERT_S_I64	= 792,
    F32_CONVERT_S_I64_S	= 793,
    F32_CONVERT_U_I32	= 794,
    F32_CONVERT_U_I32_S	= 795,
    F32_CONVERT_U_I64	= 796,
    F32_CONVERT_U_I64_S	= 797,
    F32_DEMOTE_F64	= 798,
    F32_DEMOTE_F64_S	= 799,
    F32_REINTERPRET_I32	= 800,
    F32_REINTERPRET_I32_S	= 801,
    F64_CONVERT_S_I32	= 802,
    F64_CONVERT_S_I32_S	= 803,
    F64_CONVERT_S_I64	= 804,
    F64_CONVERT_S_I64_S	= 805,
    F64_CONVERT_U_I32	= 806,
    F64_CONVERT_U_I32_S	= 807,
    F64_CONVERT_U_I64	= 808,
    F64_CONVERT_U_I64_S	= 809,
    F64_PROMOTE_F32	= 810,
    F64_PROMOTE_F32_S	= 811,
    F64_REINTERPRET_I64	= 812,
    F64_REINTERPRET_I64_S	= 813,
    FALLTHROUGH_RETURN	= 814,
    FALLTHROUGH_RETURN_S	= 815,
    FLOOR_F32	= 816,
    FLOOR_F32_S	= 817,
    FLOOR_F32x4	= 818,
    FLOOR_F32x4_S	= 819,
    FLOOR_F64	= 820,
    FLOOR_F64_S	= 821,
    FLOOR_F64x2	= 822,
    FLOOR_F64x2_S	= 823,
    FP_TO_SINT_I32_F32	= 824,
    FP_TO_SINT_I32_F32_S	= 825,
    FP_TO_SINT_I32_F64	= 826,
    FP_TO_SINT_I32_F64_S	= 827,
    FP_TO_SINT_I64_F32	= 828,
    FP_TO_SINT_I64_F32_S	= 829,
    FP_TO_SINT_I64_F64	= 830,
    FP_TO_SINT_I64_F64_S	= 831,
    FP_TO_UINT_I32_F32	= 832,
    FP_TO_UINT_I32_F32_S	= 833,
    FP_TO_UINT_I32_F64	= 834,
    FP_TO_UINT_I32_F64_S	= 835,
    FP_TO_UINT_I64_F32	= 836,
    FP_TO_UINT_I64_F32_S	= 837,
    FP_TO_UINT_I64_F64	= 838,
    FP_TO_UINT_I64_F64_S	= 839,
    GE_F32	= 840,
    GE_F32_S	= 841,
    GE_F32x4	= 842,
    GE_F32x4_S	= 843,
    GE_F64	= 844,
    GE_F64_S	= 845,
    GE_F64x2	= 846,
    GE_F64x2_S	= 847,
    GE_S_I16x8	= 848,
    GE_S_I16x8_S	= 849,
    GE_S_I32	= 850,
    GE_S_I32_S	= 851,
    GE_S_I32x4	= 852,
    GE_S_I32x4_S	= 853,
    GE_S_I64	= 854,
    GE_S_I64_S	= 855,
    GE_S_I8x16	= 856,
    GE_S_I8x16_S	= 857,
    GE_U_I16x8	= 858,
    GE_U_I16x8_S	= 859,
    GE_U_I32	= 860,
    GE_U_I32_S	= 861,
    GE_U_I32x4	= 862,
    GE_U_I32x4_S	= 863,
    GE_U_I64	= 864,
    GE_U_I64_S	= 865,
    GE_U_I8x16	= 866,
    GE_U_I8x16_S	= 867,
    GLOBAL_GET_EXTERNREF	= 868,
    GLOBAL_GET_EXTERNREF_S	= 869,
    GLOBAL_GET_F32	= 870,
    GLOBAL_GET_F32_S	= 871,
    GLOBAL_GET_F64	= 872,
    GLOBAL_GET_F64_S	= 873,
    GLOBAL_GET_FUNCREF	= 874,
    GLOBAL_GET_FUNCREF_S	= 875,
    GLOBAL_GET_I32	= 876,
    GLOBAL_GET_I32_S	= 877,
    GLOBAL_GET_I64	= 878,
    GLOBAL_GET_I64_S	= 879,
    GLOBAL_GET_V128	= 880,
    GLOBAL_GET_V128_S	= 881,
    GLOBAL_SET_EXTERNREF	= 882,
    GLOBAL_SET_EXTERNREF_S	= 883,
    GLOBAL_SET_F32	= 884,
    GLOBAL_SET_F32_S	= 885,
    GLOBAL_SET_F64	= 886,
    GLOBAL_SET_F64_S	= 887,
    GLOBAL_SET_FUNCREF	= 888,
    GLOBAL_SET_FUNCREF_S	= 889,
    GLOBAL_SET_I32	= 890,
    GLOBAL_SET_I32_S	= 891,
    GLOBAL_SET_I64	= 892,
    GLOBAL_SET_I64_S	= 893,
    GLOBAL_SET_V128	= 894,
    GLOBAL_SET_V128_S	= 895,
    GT_F32	= 896,
    GT_F32_S	= 897,
    GT_F32x4	= 898,
    GT_F32x4_S	= 899,
    GT_F64	= 900,
    GT_F64_S	= 901,
    GT_F64x2	= 902,
    GT_F64x2_S	= 903,
    GT_S_I16x8	= 904,
    GT_S_I16x8_S	= 905,
    GT_S_I32	= 906,
    GT_S_I32_S	= 907,
    GT_S_I32x4	= 908,
    GT_S_I32x4_S	= 909,
    GT_S_I64	= 910,
    GT_S_I64_S	= 911,
    GT_S_I8x16	= 912,
    GT_S_I8x16_S	= 913,
    GT_U_I16x8	= 914,
    GT_U_I16x8_S	= 915,
    GT_U_I32	= 916,
    GT_U_I32_S	= 917,
    GT_U_I32x4	= 918,
    GT_U_I32x4_S	= 919,
    GT_U_I64	= 920,
    GT_U_I64_S	= 921,
    GT_U_I8x16	= 922,
    GT_U_I8x16_S	= 923,
    I32_EXTEND16_S_I32	= 924,
    I32_EXTEND16_S_I32_S	= 925,
    I32_EXTEND8_S_I32	= 926,
    I32_EXTEND8_S_I32_S	= 927,
    I32_REINTERPRET_F32	= 928,
    I32_REINTERPRET_F32_S	= 929,
    I32_TRUNC_S_F32	= 930,
    I32_TRUNC_S_F32_S	= 931,
    I32_TRUNC_S_F64	= 932,
    I32_TRUNC_S_F64_S	= 933,
    I32_TRUNC_S_SAT_F32	= 934,
    I32_TRUNC_S_SAT_F32_S	= 935,
    I32_TRUNC_S_SAT_F64	= 936,
    I32_TRUNC_S_SAT_F64_S	= 937,
    I32_TRUNC_U_F32	= 938,
    I32_TRUNC_U_F32_S	= 939,
    I32_TRUNC_U_F64	= 940,
    I32_TRUNC_U_F64_S	= 941,
    I32_TRUNC_U_SAT_F32	= 942,
    I32_TRUNC_U_SAT_F32_S	= 943,
    I32_TRUNC_U_SAT_F64	= 944,
    I32_TRUNC_U_SAT_F64_S	= 945,
    I32_WRAP_I64	= 946,
    I32_WRAP_I64_S	= 947,
    I64_EXTEND16_S_I64	= 948,
    I64_EXTEND16_S_I64_S	= 949,
    I64_EXTEND32_S_I64	= 950,
    I64_EXTEND32_S_I64_S	= 951,
    I64_EXTEND8_S_I64	= 952,
    I64_EXTEND8_S_I64_S	= 953,
    I64_EXTEND_S_I32	= 954,
    I64_EXTEND_S_I32_S	= 955,
    I64_EXTEND_U_I32	= 956,
    I64_EXTEND_U_I32_S	= 957,
    I64_REINTERPRET_F64	= 958,
    I64_REINTERPRET_F64_S	= 959,
    I64_TRUNC_S_F32	= 960,
    I64_TRUNC_S_F32_S	= 961,
    I64_TRUNC_S_F64	= 962,
    I64_TRUNC_S_F64_S	= 963,
    I64_TRUNC_S_SAT_F32	= 964,
    I64_TRUNC_S_SAT_F32_S	= 965,
    I64_TRUNC_S_SAT_F64	= 966,
    I64_TRUNC_S_SAT_F64_S	= 967,
    I64_TRUNC_U_F32	= 968,
    I64_TRUNC_U_F32_S	= 969,
    I64_TRUNC_U_F64	= 970,
    I64_TRUNC_U_F64_S	= 971,
    I64_TRUNC_U_SAT_F32	= 972,
    I64_TRUNC_U_SAT_F32_S	= 973,
    I64_TRUNC_U_SAT_F64	= 974,
    I64_TRUNC_U_SAT_F64_S	= 975,
    IF	= 976,
    IF_S	= 977,
    LE_F32	= 978,
    LE_F32_S	= 979,
    LE_F32x4	= 980,
    LE_F32x4_S	= 981,
    LE_F64	= 982,
    LE_F64_S	= 983,
    LE_F64x2	= 984,
    LE_F64x2_S	= 985,
    LE_S_I16x8	= 986,
    LE_S_I16x8_S	= 987,
    LE_S_I32	= 988,
    LE_S_I32_S	= 989,
    LE_S_I32x4	= 990,
    LE_S_I32x4_S	= 991,
    LE_S_I64	= 992,
    LE_S_I64_S	= 993,
    LE_S_I8x16	= 994,
    LE_S_I8x16_S	= 995,
    LE_U_I16x8	= 996,
    LE_U_I16x8_S	= 997,
    LE_U_I32	= 998,
    LE_U_I32_S	= 999,
    LE_U_I32x4	= 1000,
    LE_U_I32x4_S	= 1001,
    LE_U_I64	= 1002,
    LE_U_I64_S	= 1003,
    LE_U_I8x16	= 1004,
    LE_U_I8x16_S	= 1005,
    LOAD16_SPLAT_A32	= 1006,
    LOAD16_SPLAT_A32_S	= 1007,
    LOAD16_SPLAT_A64	= 1008,
    LOAD16_SPLAT_A64_S	= 1009,
    LOAD16_S_I32_A32	= 1010,
    LOAD16_S_I32_A32_S	= 1011,
    LOAD16_S_I32_A64	= 1012,
    LOAD16_S_I32_A64_S	= 1013,
    LOAD16_S_I64_A32	= 1014,
    LOAD16_S_I64_A32_S	= 1015,
    LOAD16_S_I64_A64	= 1016,
    LOAD16_S_I64_A64_S	= 1017,
    LOAD16_U_I32_A32	= 1018,
    LOAD16_U_I32_A32_S	= 1019,
    LOAD16_U_I32_A64	= 1020,
    LOAD16_U_I32_A64_S	= 1021,
    LOAD16_U_I64_A32	= 1022,
    LOAD16_U_I64_A32_S	= 1023,
    LOAD16_U_I64_A64	= 1024,
    LOAD16_U_I64_A64_S	= 1025,
    LOAD32_SPLAT_A32	= 1026,
    LOAD32_SPLAT_A32_S	= 1027,
    LOAD32_SPLAT_A64	= 1028,
    LOAD32_SPLAT_A64_S	= 1029,
    LOAD32_S_I64_A32	= 1030,
    LOAD32_S_I64_A32_S	= 1031,
    LOAD32_S_I64_A64	= 1032,
    LOAD32_S_I64_A64_S	= 1033,
    LOAD32_U_I64_A32	= 1034,
    LOAD32_U_I64_A32_S	= 1035,
    LOAD32_U_I64_A64	= 1036,
    LOAD32_U_I64_A64_S	= 1037,
    LOAD64_SPLAT_A32	= 1038,
    LOAD64_SPLAT_A32_S	= 1039,
    LOAD64_SPLAT_A64	= 1040,
    LOAD64_SPLAT_A64_S	= 1041,
    LOAD8_SPLAT_A32	= 1042,
    LOAD8_SPLAT_A32_S	= 1043,
    LOAD8_SPLAT_A64	= 1044,
    LOAD8_SPLAT_A64_S	= 1045,
    LOAD8_S_I32_A32	= 1046,
    LOAD8_S_I32_A32_S	= 1047,
    LOAD8_S_I32_A64	= 1048,
    LOAD8_S_I32_A64_S	= 1049,
    LOAD8_S_I64_A32	= 1050,
    LOAD8_S_I64_A32_S	= 1051,
    LOAD8_S_I64_A64	= 1052,
    LOAD8_S_I64_A64_S	= 1053,
    LOAD8_U_I32_A32	= 1054,
    LOAD8_U_I32_A32_S	= 1055,
    LOAD8_U_I32_A64	= 1056,
    LOAD8_U_I32_A64_S	= 1057,
    LOAD8_U_I64_A32	= 1058,
    LOAD8_U_I64_A32_S	= 1059,
    LOAD8_U_I64_A64	= 1060,
    LOAD8_U_I64_A64_S	= 1061,
    LOAD_EXTEND_S_I16x8_A32	= 1062,
    LOAD_EXTEND_S_I16x8_A32_S	= 1063,
    LOAD_EXTEND_S_I16x8_A64	= 1064,
    LOAD_EXTEND_S_I16x8_A64_S	= 1065,
    LOAD_EXTEND_S_I32x4_A32	= 1066,
    LOAD_EXTEND_S_I32x4_A32_S	= 1067,
    LOAD_EXTEND_S_I32x4_A64	= 1068,
    LOAD_EXTEND_S_I32x4_A64_S	= 1069,
    LOAD_EXTEND_S_I64x2_A32	= 1070,
    LOAD_EXTEND_S_I64x2_A32_S	= 1071,
    LOAD_EXTEND_S_I64x2_A64	= 1072,
    LOAD_EXTEND_S_I64x2_A64_S	= 1073,
    LOAD_EXTEND_U_I16x8_A32	= 1074,
    LOAD_EXTEND_U_I16x8_A32_S	= 1075,
    LOAD_EXTEND_U_I16x8_A64	= 1076,
    LOAD_EXTEND_U_I16x8_A64_S	= 1077,
    LOAD_EXTEND_U_I32x4_A32	= 1078,
    LOAD_EXTEND_U_I32x4_A32_S	= 1079,
    LOAD_EXTEND_U_I32x4_A64	= 1080,
    LOAD_EXTEND_U_I32x4_A64_S	= 1081,
    LOAD_EXTEND_U_I64x2_A32	= 1082,
    LOAD_EXTEND_U_I64x2_A32_S	= 1083,
    LOAD_EXTEND_U_I64x2_A64	= 1084,
    LOAD_EXTEND_U_I64x2_A64_S	= 1085,
    LOAD_F32_A32	= 1086,
    LOAD_F32_A32_S	= 1087,
    LOAD_F32_A64	= 1088,
    LOAD_F32_A64_S	= 1089,
    LOAD_F64_A32	= 1090,
    LOAD_F64_A32_S	= 1091,
    LOAD_F64_A64	= 1092,
    LOAD_F64_A64_S	= 1093,
    LOAD_I32_A32	= 1094,
    LOAD_I32_A32_S	= 1095,
    LOAD_I32_A64	= 1096,
    LOAD_I32_A64_S	= 1097,
    LOAD_I64_A32	= 1098,
    LOAD_I64_A32_S	= 1099,
    LOAD_I64_A64	= 1100,
    LOAD_I64_A64_S	= 1101,
    LOAD_LANE_I16x8_A32	= 1102,
    LOAD_LANE_I16x8_A32_S	= 1103,
    LOAD_LANE_I16x8_A64	= 1104,
    LOAD_LANE_I16x8_A64_S	= 1105,
    LOAD_LANE_I32x4_A32	= 1106,
    LOAD_LANE_I32x4_A32_S	= 1107,
    LOAD_LANE_I32x4_A64	= 1108,
    LOAD_LANE_I32x4_A64_S	= 1109,
    LOAD_LANE_I64x2_A32	= 1110,
    LOAD_LANE_I64x2_A32_S	= 1111,
    LOAD_LANE_I64x2_A64	= 1112,
    LOAD_LANE_I64x2_A64_S	= 1113,
    LOAD_LANE_I8x16_A32	= 1114,
    LOAD_LANE_I8x16_A32_S	= 1115,
    LOAD_LANE_I8x16_A64	= 1116,
    LOAD_LANE_I8x16_A64_S	= 1117,
    LOAD_V128_A32	= 1118,
    LOAD_V128_A32_S	= 1119,
    LOAD_V128_A64	= 1120,
    LOAD_V128_A64_S	= 1121,
    LOAD_ZERO_I32x4_A32	= 1122,
    LOAD_ZERO_I32x4_A32_S	= 1123,
    LOAD_ZERO_I32x4_A64	= 1124,
    LOAD_ZERO_I32x4_A64_S	= 1125,
    LOAD_ZERO_I64x2_A32	= 1126,
    LOAD_ZERO_I64x2_A32_S	= 1127,
    LOAD_ZERO_I64x2_A64	= 1128,
    LOAD_ZERO_I64x2_A64_S	= 1129,
    LOCAL_GET_EXTERNREF	= 1130,
    LOCAL_GET_EXTERNREF_S	= 1131,
    LOCAL_GET_F32	= 1132,
    LOCAL_GET_F32_S	= 1133,
    LOCAL_GET_F64	= 1134,
    LOCAL_GET_F64_S	= 1135,
    LOCAL_GET_FUNCREF	= 1136,
    LOCAL_GET_FUNCREF_S	= 1137,
    LOCAL_GET_I32	= 1138,
    LOCAL_GET_I32_S	= 1139,
    LOCAL_GET_I64	= 1140,
    LOCAL_GET_I64_S	= 1141,
    LOCAL_GET_V128	= 1142,
    LOCAL_GET_V128_S	= 1143,
    LOCAL_SET_EXTERNREF	= 1144,
    LOCAL_SET_EXTERNREF_S	= 1145,
    LOCAL_SET_F32	= 1146,
    LOCAL_SET_F32_S	= 1147,
    LOCAL_SET_F64	= 1148,
    LOCAL_SET_F64_S	= 1149,
    LOCAL_SET_FUNCREF	= 1150,
    LOCAL_SET_FUNCREF_S	= 1151,
    LOCAL_SET_I32	= 1152,
    LOCAL_SET_I32_S	= 1153,
    LOCAL_SET_I64	= 1154,
    LOCAL_SET_I64_S	= 1155,
    LOCAL_SET_V128	= 1156,
    LOCAL_SET_V128_S	= 1157,
    LOCAL_TEE_EXTERNREF	= 1158,
    LOCAL_TEE_EXTERNREF_S	= 1159,
    LOCAL_TEE_F32	= 1160,
    LOCAL_TEE_F32_S	= 1161,
    LOCAL_TEE_F64	= 1162,
    LOCAL_TEE_F64_S	= 1163,
    LOCAL_TEE_FUNCREF	= 1164,
    LOCAL_TEE_FUNCREF_S	= 1165,
    LOCAL_TEE_I32	= 1166,
    LOCAL_TEE_I32_S	= 1167,
    LOCAL_TEE_I64	= 1168,
    LOCAL_TEE_I64_S	= 1169,
    LOCAL_TEE_V128	= 1170,
    LOCAL_TEE_V128_S	= 1171,
    LOOP	= 1172,
    LOOP_S	= 1173,
    LT_F32	= 1174,
    LT_F32_S	= 1175,
    LT_F32x4	= 1176,
    LT_F32x4_S	= 1177,
    LT_F64	= 1178,
    LT_F64_S	= 1179,
    LT_F64x2	= 1180,
    LT_F64x2_S	= 1181,
    LT_S_I16x8	= 1182,
    LT_S_I16x8_S	= 1183,
    LT_S_I32	= 1184,
    LT_S_I32_S	= 1185,
    LT_S_I32x4	= 1186,
    LT_S_I32x4_S	= 1187,
    LT_S_I64	= 1188,
    LT_S_I64_S	= 1189,
    LT_S_I8x16	= 1190,
    LT_S_I8x16_S	= 1191,
    LT_U_I16x8	= 1192,
    LT_U_I16x8_S	= 1193,
    LT_U_I32	= 1194,
    LT_U_I32_S	= 1195,
    LT_U_I32x4	= 1196,
    LT_U_I32x4_S	= 1197,
    LT_U_I64	= 1198,
    LT_U_I64_S	= 1199,
    LT_U_I8x16	= 1200,
    LT_U_I8x16_S	= 1201,
    MAX_F32	= 1202,
    MAX_F32_S	= 1203,
    MAX_F32x4	= 1204,
    MAX_F32x4_S	= 1205,
    MAX_F64	= 1206,
    MAX_F64_S	= 1207,
    MAX_F64x2	= 1208,
    MAX_F64x2_S	= 1209,
    MAX_S_I16x8	= 1210,
    MAX_S_I16x8_S	= 1211,
    MAX_S_I32x4	= 1212,
    MAX_S_I32x4_S	= 1213,
    MAX_S_I8x16	= 1214,
    MAX_S_I8x16_S	= 1215,
    MAX_U_I16x8	= 1216,
    MAX_U_I16x8_S	= 1217,
    MAX_U_I32x4	= 1218,
    MAX_U_I32x4_S	= 1219,
    MAX_U_I8x16	= 1220,
    MAX_U_I8x16_S	= 1221,
    MEMORY_ATOMIC_NOTIFY_A32	= 1222,
    MEMORY_ATOMIC_NOTIFY_A32_S	= 1223,
    MEMORY_ATOMIC_NOTIFY_A64	= 1224,
    MEMORY_ATOMIC_NOTIFY_A64_S	= 1225,
    MEMORY_ATOMIC_WAIT32_A32	= 1226,
    MEMORY_ATOMIC_WAIT32_A32_S	= 1227,
    MEMORY_ATOMIC_WAIT32_A64	= 1228,
    MEMORY_ATOMIC_WAIT32_A64_S	= 1229,
    MEMORY_ATOMIC_WAIT64_A32	= 1230,
    MEMORY_ATOMIC_WAIT64_A32_S	= 1231,
    MEMORY_ATOMIC_WAIT64_A64	= 1232,
    MEMORY_ATOMIC_WAIT64_A64_S	= 1233,
    MIN_F32	= 1234,
    MIN_F32_S	= 1235,
    MIN_F32x4	= 1236,
    MIN_F32x4_S	= 1237,
    MIN_F64	= 1238,
    MIN_F64_S	= 1239,
    MIN_F64x2	= 1240,
    MIN_F64x2_S	= 1241,
    MIN_S_I16x8	= 1242,
    MIN_S_I16x8_S	= 1243,
    MIN_S_I32x4	= 1244,
    MIN_S_I32x4_S	= 1245,
    MIN_S_I8x16	= 1246,
    MIN_S_I8x16_S	= 1247,
    MIN_U_I16x8	= 1248,
    MIN_U_I16x8_S	= 1249,
    MIN_U_I32x4	= 1250,
    MIN_U_I32x4_S	= 1251,
    MIN_U_I8x16	= 1252,
    MIN_U_I8x16_S	= 1253,
    MUL_F32	= 1254,
    MUL_F32_S	= 1255,
    MUL_F32x4	= 1256,
    MUL_F32x4_S	= 1257,
    MUL_F64	= 1258,
    MUL_F64_S	= 1259,
    MUL_F64x2	= 1260,
    MUL_F64x2_S	= 1261,
    MUL_I16x8	= 1262,
    MUL_I16x8_S	= 1263,
    MUL_I32	= 1264,
    MUL_I32_S	= 1265,
    MUL_I32x4	= 1266,
    MUL_I32x4_S	= 1267,
    MUL_I64	= 1268,
    MUL_I64_S	= 1269,
    MUL_I64x2	= 1270,
    MUL_I64x2_S	= 1271,
    NARROW_S_I16x8	= 1272,
    NARROW_S_I16x8_S	= 1273,
    NARROW_S_I8x16	= 1274,
    NARROW_S_I8x16_S	= 1275,
    NARROW_U_I16x8	= 1276,
    NARROW_U_I16x8_S	= 1277,
    NARROW_U_I8x16	= 1278,
    NARROW_U_I8x16_S	= 1279,
    NEAREST_F32	= 1280,
    NEAREST_F32_S	= 1281,
    NEAREST_F32x4	= 1282,
    NEAREST_F32x4_S	= 1283,
    NEAREST_F64	= 1284,
    NEAREST_F64_S	= 1285,
    NEAREST_F64x2	= 1286,
    NEAREST_F64x2_S	= 1287,
    NEG_F32	= 1288,
    NEG_F32_S	= 1289,
    NEG_F32x4	= 1290,
    NEG_F32x4_S	= 1291,
    NEG_F64	= 1292,
    NEG_F64_S	= 1293,
    NEG_F64x2	= 1294,
    NEG_F64x2_S	= 1295,
    NEG_I16x8	= 1296,
    NEG_I16x8_S	= 1297,
    NEG_I32x4	= 1298,
    NEG_I32x4_S	= 1299,
    NEG_I64x2	= 1300,
    NEG_I64x2_S	= 1301,
    NEG_I8x16	= 1302,
    NEG_I8x16_S	= 1303,
    NE_F32	= 1304,
    NE_F32_S	= 1305,
    NE_F32x4	= 1306,
    NE_F32x4_S	= 1307,
    NE_F64	= 1308,
    NE_F64_S	= 1309,
    NE_F64x2	= 1310,
    NE_F64x2_S	= 1311,
    NE_I16x8	= 1312,
    NE_I16x8_S	= 1313,
    NE_I32	= 1314,
    NE_I32_S	= 1315,
    NE_I32x4	= 1316,
    NE_I32x4_S	= 1317,
    NE_I64	= 1318,
    NE_I64_S	= 1319,
    NE_I8x16	= 1320,
    NE_I8x16_S	= 1321,
    NOP	= 1322,
    NOP_S	= 1323,
    NOT	= 1324,
    NOT_S	= 1325,
    OR	= 1326,
    OR_I32	= 1327,
    OR_I32_S	= 1328,
    OR_I64	= 1329,
    OR_I64_S	= 1330,
    OR_S	= 1331,
    PMAX_F32x4	= 1332,
    PMAX_F32x4_S	= 1333,
    PMAX_F64x2	= 1334,
    PMAX_F64x2_S	= 1335,
    PMIN_F32x4	= 1336,
    PMIN_F32x4_S	= 1337,
    PMIN_F64x2	= 1338,
    PMIN_F64x2_S	= 1339,
    POPCNT_I32	= 1340,
    POPCNT_I32_S	= 1341,
    POPCNT_I64	= 1342,
    POPCNT_I64_S	= 1343,
    POPCNT_I8x16	= 1344,
    POPCNT_I8x16_S	= 1345,
    PREFETCH_NT_A32	= 1346,
    PREFETCH_NT_A32_S	= 1347,
    PREFETCH_NT_A64	= 1348,
    PREFETCH_NT_A64_S	= 1349,
    PREFETCH_T_A32	= 1350,
    PREFETCH_T_A32_S	= 1351,
    PREFETCH_T_A64	= 1352,
    PREFETCH_T_A64_S	= 1353,
    Q15MULR_SAT_S_I16x8	= 1354,
    Q15MULR_SAT_S_I16x8_S	= 1355,
    QFMA_F32x4	= 1356,
    QFMA_F32x4_S	= 1357,
    QFMA_F64x2	= 1358,
    QFMA_F64x2_S	= 1359,
    QFMS_F32x4	= 1360,
    QFMS_F32x4_S	= 1361,
    QFMS_F64x2	= 1362,
    QFMS_F64x2_S	= 1363,
    REF_NULL_EXTERNREF	= 1364,
    REF_NULL_EXTERNREF_S	= 1365,
    REF_NULL_FUNCREF	= 1366,
    REF_NULL_FUNCREF_S	= 1367,
    REM_S_I32	= 1368,
    REM_S_I32_S	= 1369,
    REM_S_I64	= 1370,
    REM_S_I64_S	= 1371,
    REM_U_I32	= 1372,
    REM_U_I32_S	= 1373,
    REM_U_I64	= 1374,
    REM_U_I64_S	= 1375,
    REPLACE_LANE_F32x4	= 1376,
    REPLACE_LANE_F32x4_S	= 1377,
    REPLACE_LANE_F64x2	= 1378,
    REPLACE_LANE_F64x2_S	= 1379,
    REPLACE_LANE_I16x8	= 1380,
    REPLACE_LANE_I16x8_S	= 1381,
    REPLACE_LANE_I32x4	= 1382,
    REPLACE_LANE_I32x4_S	= 1383,
    REPLACE_LANE_I64x2	= 1384,
    REPLACE_LANE_I64x2_S	= 1385,
    REPLACE_LANE_I8x16	= 1386,
    REPLACE_LANE_I8x16_S	= 1387,
    RETHROW	= 1388,
    RETHROW_S	= 1389,
    RETURN	= 1390,
    RETURN_S	= 1391,
    RET_CALL	= 1392,
    RET_CALL_INDIRECT	= 1393,
    RET_CALL_INDIRECT_S	= 1394,
    RET_CALL_S	= 1395,
    ROTL_I32	= 1396,
    ROTL_I32_S	= 1397,
    ROTL_I64	= 1398,
    ROTL_I64_S	= 1399,
    ROTR_I32	= 1400,
    ROTR_I32_S	= 1401,
    ROTR_I64	= 1402,
    ROTR_I64_S	= 1403,
    SELECT_EXTERNREF	= 1404,
    SELECT_EXTERNREF_S	= 1405,
    SELECT_F32	= 1406,
    SELECT_F32_S	= 1407,
    SELECT_F64	= 1408,
    SELECT_F64_S	= 1409,
    SELECT_FUNCREF	= 1410,
    SELECT_FUNCREF_S	= 1411,
    SELECT_I32	= 1412,
    SELECT_I32_S	= 1413,
    SELECT_I64	= 1414,
    SELECT_I64_S	= 1415,
    SELECT_V128	= 1416,
    SELECT_V128_S	= 1417,
    SHL_I16x8	= 1418,
    SHL_I16x8_S	= 1419,
    SHL_I32	= 1420,
    SHL_I32_S	= 1421,
    SHL_I32x4	= 1422,
    SHL_I32x4_S	= 1423,
    SHL_I64	= 1424,
    SHL_I64_S	= 1425,
    SHL_I64x2	= 1426,
    SHL_I64x2_S	= 1427,
    SHL_I8x16	= 1428,
    SHL_I8x16_S	= 1429,
    SHR_S_I16x8	= 1430,
    SHR_S_I16x8_S	= 1431,
    SHR_S_I32	= 1432,
    SHR_S_I32_S	= 1433,
    SHR_S_I32x4	= 1434,
    SHR_S_I32x4_S	= 1435,
    SHR_S_I64	= 1436,
    SHR_S_I64_S	= 1437,
    SHR_S_I64x2	= 1438,
    SHR_S_I64x2_S	= 1439,
    SHR_S_I8x16	= 1440,
    SHR_S_I8x16_S	= 1441,
    SHR_U_I16x8	= 1442,
    SHR_U_I16x8_S	= 1443,
    SHR_U_I32	= 1444,
    SHR_U_I32_S	= 1445,
    SHR_U_I32x4	= 1446,
    SHR_U_I32x4_S	= 1447,
    SHR_U_I64	= 1448,
    SHR_U_I64_S	= 1449,
    SHR_U_I64x2	= 1450,
    SHR_U_I64x2_S	= 1451,
    SHR_U_I8x16	= 1452,
    SHR_U_I8x16_S	= 1453,
    SHUFFLE	= 1454,
    SHUFFLE_S	= 1455,
    SPLAT_F32x4	= 1456,
    SPLAT_F32x4_S	= 1457,
    SPLAT_F64x2	= 1458,
    SPLAT_F64x2_S	= 1459,
    SPLAT_I16x8	= 1460,
    SPLAT_I16x8_S	= 1461,
    SPLAT_I32x4	= 1462,
    SPLAT_I32x4_S	= 1463,
    SPLAT_I64x2	= 1464,
    SPLAT_I64x2_S	= 1465,
    SPLAT_I8x16	= 1466,
    SPLAT_I8x16_S	= 1467,
    SQRT_F32	= 1468,
    SQRT_F32_S	= 1469,
    SQRT_F32x4	= 1470,
    SQRT_F32x4_S	= 1471,
    SQRT_F64	= 1472,
    SQRT_F64_S	= 1473,
    SQRT_F64x2	= 1474,
    SQRT_F64x2_S	= 1475,
    STORE16_I32_A32	= 1476,
    STORE16_I32_A32_S	= 1477,
    STORE16_I32_A64	= 1478,
    STORE16_I32_A64_S	= 1479,
    STORE16_I64_A32	= 1480,
    STORE16_I64_A32_S	= 1481,
    STORE16_I64_A64	= 1482,
    STORE16_I64_A64_S	= 1483,
    STORE32_I64_A32	= 1484,
    STORE32_I64_A32_S	= 1485,
    STORE32_I64_A64	= 1486,
    STORE32_I64_A64_S	= 1487,
    STORE8_I32_A32	= 1488,
    STORE8_I32_A32_S	= 1489,
    STORE8_I32_A64	= 1490,
    STORE8_I32_A64_S	= 1491,
    STORE8_I64_A32	= 1492,
    STORE8_I64_A32_S	= 1493,
    STORE8_I64_A64	= 1494,
    STORE8_I64_A64_S	= 1495,
    STORE_F32_A32	= 1496,
    STORE_F32_A32_S	= 1497,
    STORE_F32_A64	= 1498,
    STORE_F32_A64_S	= 1499,
    STORE_F64_A32	= 1500,
    STORE_F64_A32_S	= 1501,
    STORE_F64_A64	= 1502,
    STORE_F64_A64_S	= 1503,
    STORE_I32_A32	= 1504,
    STORE_I32_A32_S	= 1505,
    STORE_I32_A64	= 1506,
    STORE_I32_A64_S	= 1507,
    STORE_I64_A32	= 1508,
    STORE_I64_A32_S	= 1509,
    STORE_I64_A64	= 1510,
    STORE_I64_A64_S	= 1511,
    STORE_LANE_I16x8_A32	= 1512,
    STORE_LANE_I16x8_A32_S	= 1513,
    STORE_LANE_I16x8_A64	= 1514,
    STORE_LANE_I16x8_A64_S	= 1515,
    STORE_LANE_I32x4_A32	= 1516,
    STORE_LANE_I32x4_A32_S	= 1517,
    STORE_LANE_I32x4_A64	= 1518,
    STORE_LANE_I32x4_A64_S	= 1519,
    STORE_LANE_I64x2_A32	= 1520,
    STORE_LANE_I64x2_A32_S	= 1521,
    STORE_LANE_I64x2_A64	= 1522,
    STORE_LANE_I64x2_A64_S	= 1523,
    STORE_LANE_I8x16_A32	= 1524,
    STORE_LANE_I8x16_A32_S	= 1525,
    STORE_LANE_I8x16_A64	= 1526,
    STORE_LANE_I8x16_A64_S	= 1527,
    STORE_V128_A32	= 1528,
    STORE_V128_A32_S	= 1529,
    STORE_V128_A64	= 1530,
    STORE_V128_A64_S	= 1531,
    SUB_F32	= 1532,
    SUB_F32_S	= 1533,
    SUB_F32x4	= 1534,
    SUB_F32x4_S	= 1535,
    SUB_F64	= 1536,
    SUB_F64_S	= 1537,
    SUB_F64x2	= 1538,
    SUB_F64x2_S	= 1539,
    SUB_I16x8	= 1540,
    SUB_I16x8_S	= 1541,
    SUB_I32	= 1542,
    SUB_I32_S	= 1543,
    SUB_I32x4	= 1544,
    SUB_I32x4_S	= 1545,
    SUB_I64	= 1546,
    SUB_I64_S	= 1547,
    SUB_I64x2	= 1548,
    SUB_I64x2_S	= 1549,
    SUB_I8x16	= 1550,
    SUB_I8x16_S	= 1551,
    SUB_SAT_S_I16x8	= 1552,
    SUB_SAT_S_I16x8_S	= 1553,
    SUB_SAT_S_I8x16	= 1554,
    SUB_SAT_S_I8x16_S	= 1555,
    SUB_SAT_U_I16x8	= 1556,
    SUB_SAT_U_I16x8_S	= 1557,
    SUB_SAT_U_I8x16	= 1558,
    SUB_SAT_U_I8x16_S	= 1559,
    SWIZZLE	= 1560,
    SWIZZLE_S	= 1561,
    TABLE_COPY	= 1562,
    TABLE_COPY_S	= 1563,
    TABLE_FILL_EXTERNREF	= 1564,
    TABLE_FILL_EXTERNREF_S	= 1565,
    TABLE_FILL_FUNCREF	= 1566,
    TABLE_FILL_FUNCREF_S	= 1567,
    TABLE_GET_EXTERNREF	= 1568,
    TABLE_GET_EXTERNREF_S	= 1569,
    TABLE_GET_FUNCREF	= 1570,
    TABLE_GET_FUNCREF_S	= 1571,
    TABLE_GROW_EXTERNREF	= 1572,
    TABLE_GROW_EXTERNREF_S	= 1573,
    TABLE_GROW_FUNCREF	= 1574,
    TABLE_GROW_FUNCREF_S	= 1575,
    TABLE_SET_EXTERNREF	= 1576,
    TABLE_SET_EXTERNREF_S	= 1577,
    TABLE_SET_FUNCREF	= 1578,
    TABLE_SET_FUNCREF_S	= 1579,
    TABLE_SIZE	= 1580,
    TABLE_SIZE_S	= 1581,
    TEE_EXTERNREF	= 1582,
    TEE_EXTERNREF_S	= 1583,
    TEE_F32	= 1584,
    TEE_F32_S	= 1585,
    TEE_F64	= 1586,
    TEE_F64_S	= 1587,
    TEE_FUNCREF	= 1588,
    TEE_FUNCREF_S	= 1589,
    TEE_I32	= 1590,
    TEE_I32_S	= 1591,
    TEE_I64	= 1592,
    TEE_I64_S	= 1593,
    TEE_V128	= 1594,
    TEE_V128_S	= 1595,
    THROW	= 1596,
    THROW_S	= 1597,
    TRUNC_F32	= 1598,
    TRUNC_F32_S	= 1599,
    TRUNC_F32x4	= 1600,
    TRUNC_F32x4_S	= 1601,
    TRUNC_F64	= 1602,
    TRUNC_F64_S	= 1603,
    TRUNC_F64x2	= 1604,
    TRUNC_F64x2_S	= 1605,
    TRY	= 1606,
    TRY_S	= 1607,
    UNREACHABLE	= 1608,
    UNREACHABLE_S	= 1609,
    WIDEN_I8x16_TO_I32x4_S	= 1610,
    WIDEN_I8x16_TO_I32x4_S_S	= 1611,
    WIDEN_I8x16_TO_I32x4_U	= 1612,
    WIDEN_I8x16_TO_I32x4_U_S	= 1613,
    XOR	= 1614,
    XOR_I32	= 1615,
    XOR_I32_S	= 1616,
    XOR_I64	= 1617,
    XOR_I64_S	= 1618,
    XOR_S	= 1619,
    anonymous_2718MEMORY_GROW_A32	= 1620,
    anonymous_2718MEMORY_GROW_A32_S	= 1621,
    anonymous_2718MEMORY_SIZE_A32	= 1622,
    anonymous_2718MEMORY_SIZE_A32_S	= 1623,
    anonymous_2719MEMORY_GROW_A64	= 1624,
    anonymous_2719MEMORY_GROW_A64_S	= 1625,
    anonymous_2719MEMORY_SIZE_A64	= 1626,
    anonymous_2719MEMORY_SIZE_A64_S	= 1627,
    anonymous_4465SIGNSELECT_I8x16	= 1628,
    anonymous_4465SIGNSELECT_I8x16_S	= 1629,
    anonymous_4466SIGNSELECT_I16x8	= 1630,
    anonymous_4466SIGNSELECT_I16x8_S	= 1631,
    anonymous_4467SIGNSELECT_I32x4	= 1632,
    anonymous_4467SIGNSELECT_I32x4_S	= 1633,
    anonymous_4468SIGNSELECT_I64x2	= 1634,
    anonymous_4468SIGNSELECT_I64x2_S	= 1635,
    anonymous_4568DATA_DROP	= 1636,
    anonymous_4568DATA_DROP_S	= 1637,
    anonymous_4568MEMORY_COPY_A32	= 1638,
    anonymous_4568MEMORY_COPY_A32_S	= 1639,
    anonymous_4568MEMORY_FILL_A32	= 1640,
    anonymous_4568MEMORY_FILL_A32_S	= 1641,
    anonymous_4568MEMORY_INIT_A32	= 1642,
    anonymous_4568MEMORY_INIT_A32_S	= 1643,
    anonymous_4569DATA_DROP	= 1644,
    anonymous_4569DATA_DROP_S	= 1645,
    anonymous_4569MEMORY_COPY_A64	= 1646,
    anonymous_4569MEMORY_COPY_A64_S	= 1647,
    anonymous_4569MEMORY_FILL_A64	= 1648,
    anonymous_4569MEMORY_FILL_A64_S	= 1649,
    anonymous_4569MEMORY_INIT_A64	= 1650,
    anonymous_4569MEMORY_INIT_A64_S	= 1651,
    fp_to_sint_I32x4	= 1652,
    fp_to_sint_I32x4_S	= 1653,
    fp_to_uint_I32x4	= 1654,
    fp_to_uint_I32x4_S	= 1655,
    int_wasm_convert_low_signed_F64x2	= 1656,
    int_wasm_convert_low_signed_F64x2_S	= 1657,
    int_wasm_convert_low_unsigned_F64x2	= 1658,
    int_wasm_convert_low_unsigned_F64x2_S	= 1659,
    int_wasm_demote_zero_F32x4	= 1660,
    int_wasm_demote_zero_F32x4_S	= 1661,
    int_wasm_extadd_pairwise_signed_I16x8	= 1662,
    int_wasm_extadd_pairwise_signed_I16x8_S	= 1663,
    int_wasm_extadd_pairwise_signed_I32x4	= 1664,
    int_wasm_extadd_pairwise_signed_I32x4_S	= 1665,
    int_wasm_extadd_pairwise_unsigned_I16x8	= 1666,
    int_wasm_extadd_pairwise_unsigned_I16x8_S	= 1667,
    int_wasm_extadd_pairwise_unsigned_I32x4	= 1668,
    int_wasm_extadd_pairwise_unsigned_I32x4_S	= 1669,
    int_wasm_promote_low_F64x2	= 1670,
    int_wasm_promote_low_F64x2_S	= 1671,
    int_wasm_trunc_saturate_zero_signed_I32x4	= 1672,
    int_wasm_trunc_saturate_zero_signed_I32x4_S	= 1673,
    int_wasm_trunc_saturate_zero_unsigned_I32x4	= 1674,
    int_wasm_trunc_saturate_zero_unsigned_I32x4_S	= 1675,
    int_wasm_widen_high_signed_I64x2	= 1676,
    int_wasm_widen_high_signed_I64x2_S	= 1677,
    int_wasm_widen_high_unsigned_I64x2	= 1678,
    int_wasm_widen_high_unsigned_I64x2_S	= 1679,
    int_wasm_widen_low_signed_I64x2	= 1680,
    int_wasm_widen_low_signed_I64x2_S	= 1681,
    int_wasm_widen_low_unsigned_I64x2	= 1682,
    int_wasm_widen_low_unsigned_I64x2_S	= 1683,
    sint_to_fp_F32x4	= 1684,
    sint_to_fp_F32x4_S	= 1685,
    uint_to_fp_F32x4	= 1686,
    uint_to_fp_F32x4_S	= 1687,
    widen_high_s_I16x8	= 1688,
    widen_high_s_I16x8_S	= 1689,
    widen_high_s_I32x4	= 1690,
    widen_high_s_I32x4_S	= 1691,
    widen_high_u_I16x8	= 1692,
    widen_high_u_I16x8_S	= 1693,
    widen_high_u_I32x4	= 1694,
    widen_high_u_I32x4_S	= 1695,
    widen_low_s_I16x8	= 1696,
    widen_low_s_I16x8_S	= 1697,
    widen_low_s_I32x4	= 1698,
    widen_low_s_I32x4_S	= 1699,
    widen_low_u_I16x8	= 1700,
    widen_low_u_I16x8_S	= 1701,
    widen_low_u_I32x4	= 1702,
    widen_low_u_I32x4_S	= 1703,
    INSTRUCTION_LIST_END = 1704
  };

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace WebAssembly {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
} // end namespace Sched
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { WebAssembly::SP32, WebAssembly::SP64, 0 };
static const MCPhysReg ImplicitList2[] = { WebAssembly::ARGUMENTS, 0 };
static const MCPhysReg ImplicitList3[] = { WebAssembly::VALUE_STACK, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { -1, 0, WebAssembly::OPERAND_BRLIST, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_EVENT, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { -1, 0, WebAssembly::OPERAND_EVENT, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_HEAPTYPE, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { -1, 0, WebAssembly::OPERAND_HEAPTYPE, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_HEAPTYPE, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc WebAssemblyInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #14 = DBG_INSTR_REF
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #15 = DBG_LABEL
  { 16,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #16 = REG_SEQUENCE
  { 17,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #17 = COPY
  { 18,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #18 = BUNDLE
  { 19,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #19 = LIFETIME_START
  { 20,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #20 = LIFETIME_END
  { 21,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo8 },  // Inst #21 = PSEUDO_PROBE
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #22 = STACKMAP
  { 23,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #23 = FENTRY_CALL
  { 24,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #24 = PATCHPOINT
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo11 },  // Inst #25 = LOAD_STACK_GUARD
  { 26,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #26 = PREALLOCATED_SETUP
  { 27,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo12 },  // Inst #27 = PREALLOCATED_ARG
  { 28,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #28 = STATEPOINT
  { 29,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13 },  // Inst #29 = LOCAL_ESCAPE
  { 30,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #30 = FAULTING_OP
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #31 = PATCHABLE_OP
  { 32,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #32 = PATCHABLE_FUNCTION_ENTER
  { 33,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #33 = PATCHABLE_RET
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #34 = PATCHABLE_FUNCTION_EXIT
  { 35,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #35 = PATCHABLE_TAIL_CALL
  { 36,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14 },  // Inst #36 = PATCHABLE_EVENT_CALL
  { 37,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15 },  // Inst #37 = PATCHABLE_TYPED_EVENT_CALL
  { 38,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #38 = ICALL_BRANCH_FUNNEL
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #39 = G_ASSERT_ZEXT
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #40 = G_ADD
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #41 = G_SUB
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #42 = G_MUL
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #43 = G_SDIV
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #44 = G_UDIV
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #45 = G_SREM
  { 46,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #46 = G_UREM
  { 47,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #47 = G_AND
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #48 = G_OR
  { 49,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #49 = G_XOR
  { 50,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #50 = G_IMPLICIT_DEF
  { 51,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #51 = G_PHI
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #52 = G_FRAME_INDEX
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #53 = G_GLOBAL_VALUE
  { 54,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #54 = G_EXTRACT
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #55 = G_UNMERGE_VALUES
  { 56,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #56 = G_INSERT
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #57 = G_MERGE_VALUES
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #58 = G_BUILD_VECTOR
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #59 = G_BUILD_VECTOR_TRUNC
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #60 = G_CONCAT_VECTORS
  { 61,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #61 = G_PTRTOINT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #62 = G_INTTOPTR
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #63 = G_BITCAST
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #64 = G_FREEZE
  { 65,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #65 = G_INTRINSIC_TRUNC
  { 66,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #66 = G_INTRINSIC_ROUND
  { 67,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #67 = G_INTRINSIC_LRINT
  { 68,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #68 = G_INTRINSIC_ROUNDEVEN
  { 69,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #69 = G_READCYCLECOUNTER
  { 70,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #70 = G_LOAD
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #71 = G_SEXTLOAD
  { 72,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #72 = G_ZEXTLOAD
  { 73,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #73 = G_INDEXED_LOAD
  { 74,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #74 = G_INDEXED_SEXTLOAD
  { 75,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #75 = G_INDEXED_ZEXTLOAD
  { 76,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #76 = G_STORE
  { 77,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #77 = G_INDEXED_STORE
  { 78,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #78 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 79,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #79 = G_ATOMIC_CMPXCHG
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #80 = G_ATOMICRMW_XCHG
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #81 = G_ATOMICRMW_ADD
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #82 = G_ATOMICRMW_SUB
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #83 = G_ATOMICRMW_AND
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #84 = G_ATOMICRMW_NAND
  { 85,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #85 = G_ATOMICRMW_OR
  { 86,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #86 = G_ATOMICRMW_XOR
  { 87,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #87 = G_ATOMICRMW_MAX
  { 88,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #88 = G_ATOMICRMW_MIN
  { 89,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #89 = G_ATOMICRMW_UMAX
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #90 = G_ATOMICRMW_UMIN
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #91 = G_ATOMICRMW_FADD
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #92 = G_ATOMICRMW_FSUB
  { 93,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #93 = G_FENCE
  { 94,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #94 = G_BRCOND
  { 95,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #95 = G_BRINDIRECT
  { 96,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #96 = G_INTRINSIC
  { 97,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #97 = G_INTRINSIC_W_SIDE_EFFECTS
  { 98,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #98 = G_ANYEXT
  { 99,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #99 = G_TRUNC
  { 100,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #100 = G_CONSTANT
  { 101,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #101 = G_FCONSTANT
  { 102,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #102 = G_VASTART
  { 103,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo29 },  // Inst #103 = G_VAARG
  { 104,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #104 = G_SEXT
  { 105,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #105 = G_SEXT_INREG
  { 106,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #106 = G_ZEXT
  { 107,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #107 = G_SHL
  { 108,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #108 = G_LSHR
  { 109,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #109 = G_ASHR
  { 110,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #110 = G_FSHL
  { 111,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #111 = G_FSHR
  { 112,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #112 = G_ICMP
  { 113,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #113 = G_FCMP
  { 114,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #114 = G_SELECT
  { 115,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #115 = G_UADDO
  { 116,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #116 = G_UADDE
  { 117,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #117 = G_USUBO
  { 118,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #118 = G_USUBE
  { 119,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #119 = G_SADDO
  { 120,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #120 = G_SADDE
  { 121,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #121 = G_SSUBO
  { 122,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #122 = G_SSUBE
  { 123,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #123 = G_UMULO
  { 124,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #124 = G_SMULO
  { 125,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #125 = G_UMULH
  { 126,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #126 = G_SMULH
  { 127,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #127 = G_UADDSAT
  { 128,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #128 = G_SADDSAT
  { 129,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #129 = G_USUBSAT
  { 130,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #130 = G_SSUBSAT
  { 131,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #131 = G_USHLSAT
  { 132,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #132 = G_SSHLSAT
  { 133,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #133 = G_SMULFIX
  { 134,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #134 = G_UMULFIX
  { 135,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #135 = G_SMULFIXSAT
  { 136,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #136 = G_UMULFIXSAT
  { 137,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #137 = G_SDIVFIX
  { 138,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #138 = G_UDIVFIX
  { 139,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #139 = G_SDIVFIXSAT
  { 140,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #140 = G_UDIVFIXSAT
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #141 = G_FADD
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #142 = G_FSUB
  { 143,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #143 = G_FMUL
  { 144,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #144 = G_FMA
  { 145,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #145 = G_FMAD
  { 146,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #146 = G_FDIV
  { 147,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #147 = G_FREM
  { 148,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #148 = G_FPOW
  { 149,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #149 = G_FPOWI
  { 150,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #150 = G_FEXP
  { 151,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #151 = G_FEXP2
  { 152,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #152 = G_FLOG
  { 153,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #153 = G_FLOG2
  { 154,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #154 = G_FLOG10
  { 155,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #155 = G_FNEG
  { 156,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #156 = G_FPEXT
  { 157,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #157 = G_FPTRUNC
  { 158,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #158 = G_FPTOSI
  { 159,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #159 = G_FPTOUI
  { 160,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #160 = G_SITOFP
  { 161,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #161 = G_UITOFP
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #162 = G_FABS
  { 163,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #163 = G_FCOPYSIGN
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #164 = G_FCANONICALIZE
  { 165,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #165 = G_FMINNUM
  { 166,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #166 = G_FMAXNUM
  { 167,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #167 = G_FMINNUM_IEEE
  { 168,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #168 = G_FMAXNUM_IEEE
  { 169,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #169 = G_FMINIMUM
  { 170,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #170 = G_FMAXIMUM
  { 171,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #171 = G_PTR_ADD
  { 172,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #172 = G_PTRMASK
  { 173,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #173 = G_SMIN
  { 174,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #174 = G_SMAX
  { 175,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #175 = G_UMIN
  { 176,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #176 = G_UMAX
  { 177,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #177 = G_ABS
  { 178,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #178 = G_BR
  { 179,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #179 = G_BRJT
  { 180,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #180 = G_INSERT_VECTOR_ELT
  { 181,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #181 = G_EXTRACT_VECTOR_ELT
  { 182,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo39 },  // Inst #182 = G_SHUFFLE_VECTOR
  { 183,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #183 = G_CTTZ
  { 184,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #184 = G_CTTZ_ZERO_UNDEF
  { 185,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #185 = G_CTLZ
  { 186,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #186 = G_CTLZ_ZERO_UNDEF
  { 187,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #187 = G_CTPOP
  { 188,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #188 = G_BSWAP
  { 189,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #189 = G_BITREVERSE
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #190 = G_FCEIL
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #191 = G_FCOS
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #192 = G_FSIN
  { 193,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #193 = G_FSQRT
  { 194,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #194 = G_FFLOOR
  { 195,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #195 = G_FRINT
  { 196,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #196 = G_FNEARBYINT
  { 197,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #197 = G_ADDRSPACE_CAST
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #198 = G_BLOCK_ADDR
  { 199,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #199 = G_JUMP_TABLE
  { 200,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #200 = G_DYN_STACKALLOC
  { 201,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #201 = G_STRICT_FADD
  { 202,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #202 = G_STRICT_FSUB
  { 203,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #203 = G_STRICT_FMUL
  { 204,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #204 = G_STRICT_FDIV
  { 205,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #205 = G_STRICT_FREM
  { 206,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #206 = G_STRICT_FMA
  { 207,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #207 = G_STRICT_FSQRT
  { 208,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #208 = G_READ_REGISTER
  { 209,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #209 = G_WRITE_REGISTER
  { 210,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #210 = G_MEMCPY
  { 211,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #211 = G_MEMMOVE
  { 212,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #212 = G_MEMSET
  { 213,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #213 = G_VECREDUCE_SEQ_FADD
  { 214,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #214 = G_VECREDUCE_SEQ_FMUL
  { 215,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #215 = G_VECREDUCE_FADD
  { 216,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #216 = G_VECREDUCE_FMUL
  { 217,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #217 = G_VECREDUCE_FMAX
  { 218,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #218 = G_VECREDUCE_FMIN
  { 219,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #219 = G_VECREDUCE_ADD
  { 220,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #220 = G_VECREDUCE_MUL
  { 221,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #221 = G_VECREDUCE_AND
  { 222,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #222 = G_VECREDUCE_OR
  { 223,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #223 = G_VECREDUCE_XOR
  { 224,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #224 = G_VECREDUCE_SMAX
  { 225,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #225 = G_VECREDUCE_SMIN
  { 226,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #226 = G_VECREDUCE_UMAX
  { 227,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #227 = G_VECREDUCE_UMIN
  { 228,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #228 = CALL_PARAMS
  { 229,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #229 = CALL_PARAMS_S
  { 230,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #230 = CALL_RESULTS
  { 231,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #231 = CALL_RESULTS_S
  { 232,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo44 },  // Inst #232 = CATCHRET
  { 233,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo44 },  // Inst #233 = CATCHRET_S
  { 234,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #234 = CLEANUPRET
  { 235,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #235 = CLEANUPRET_S
  { 236,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #236 = COMPILER_FENCE
  { 237,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #237 = COMPILER_FENCE_S
  { 238,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #238 = RET_CALL_RESULTS
  { 239,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, nullptr },  // Inst #239 = RET_CALL_RESULTS_S
  { 240,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #240 = ABS_F32
  { 241,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #241 = ABS_F32_S
  { 242,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #242 = ABS_F32x4
  { 243,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #243 = ABS_F32x4_S
  { 244,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #244 = ABS_F64
  { 245,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #245 = ABS_F64_S
  { 246,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #246 = ABS_F64x2
  { 247,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #247 = ABS_F64x2_S
  { 248,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #248 = ABS_I16x8
  { 249,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #249 = ABS_I16x8_S
  { 250,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #250 = ABS_I32x4
  { 251,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #251 = ABS_I32x4_S
  { 252,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #252 = ABS_I64x2
  { 253,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #253 = ABS_I64x2_S
  { 254,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #254 = ABS_I8x16
  { 255,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #255 = ABS_I8x16_S
  { 256,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #256 = ADD_F32
  { 257,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #257 = ADD_F32_S
  { 258,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #258 = ADD_F32x4
  { 259,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #259 = ADD_F32x4_S
  { 260,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #260 = ADD_F64
  { 261,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #261 = ADD_F64_S
  { 262,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #262 = ADD_F64x2
  { 263,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #263 = ADD_F64x2_S
  { 264,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #264 = ADD_I16x8
  { 265,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #265 = ADD_I16x8_S
  { 266,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #266 = ADD_I32
  { 267,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #267 = ADD_I32_S
  { 268,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #268 = ADD_I32x4
  { 269,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #269 = ADD_I32x4_S
  { 270,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #270 = ADD_I64
  { 271,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #271 = ADD_I64_S
  { 272,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #272 = ADD_I64x2
  { 273,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #273 = ADD_I64x2_S
  { 274,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #274 = ADD_I8x16
  { 275,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #275 = ADD_I8x16_S
  { 276,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #276 = ADD_SAT_S_I16x8
  { 277,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #277 = ADD_SAT_S_I16x8_S
  { 278,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #278 = ADD_SAT_S_I8x16
  { 279,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #279 = ADD_SAT_S_I8x16_S
  { 280,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #280 = ADD_SAT_U_I16x8
  { 281,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #281 = ADD_SAT_U_I16x8_S
  { 282,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #282 = ADD_SAT_U_I8x16
  { 283,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #283 = ADD_SAT_U_I8x16_S
  { 284,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #284 = ADJCALLSTACKDOWN
  { 285,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #285 = ADJCALLSTACKDOWN_S
  { 286,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #286 = ADJCALLSTACKUP
  { 287,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo9 },  // Inst #287 = ADJCALLSTACKUP_S
  { 288,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #288 = ALLTRUE_I16x8
  { 289,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #289 = ALLTRUE_I16x8_S
  { 290,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #290 = ALLTRUE_I32x4
  { 291,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #291 = ALLTRUE_I32x4_S
  { 292,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #292 = ALLTRUE_I64x2
  { 293,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #293 = ALLTRUE_I64x2_S
  { 294,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #294 = ALLTRUE_I8x16
  { 295,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #295 = ALLTRUE_I8x16_S
  { 296,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #296 = AND
  { 297,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #297 = ANDNOT
  { 298,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #298 = ANDNOT_S
  { 299,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #299 = AND_I32
  { 300,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #300 = AND_I32_S
  { 301,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #301 = AND_I64
  { 302,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #302 = AND_I64_S
  { 303,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #303 = AND_S
  { 304,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #304 = ANYTRUE_I16x8
  { 305,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #305 = ANYTRUE_I16x8_S
  { 306,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #306 = ANYTRUE_I32x4
  { 307,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #307 = ANYTRUE_I32x4_S
  { 308,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #308 = ANYTRUE_I64x2
  { 309,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #309 = ANYTRUE_I64x2_S
  { 310,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #310 = ANYTRUE_I8x16
  { 311,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #311 = ANYTRUE_I8x16_S
  { 312,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo54 },  // Inst #312 = ARGUMENT_externref
  { 313,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #313 = ARGUMENT_externref_S
  { 314,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo55 },  // Inst #314 = ARGUMENT_f32
  { 315,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #315 = ARGUMENT_f32_S
  { 316,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo56 },  // Inst #316 = ARGUMENT_f64
  { 317,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #317 = ARGUMENT_f64_S
  { 318,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo57 },  // Inst #318 = ARGUMENT_funcref
  { 319,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #319 = ARGUMENT_funcref_S
  { 320,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo58 },  // Inst #320 = ARGUMENT_i32
  { 321,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #321 = ARGUMENT_i32_S
  { 322,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo59 },  // Inst #322 = ARGUMENT_i64
  { 323,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #323 = ARGUMENT_i64_S
  { 324,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #324 = ARGUMENT_v16i8
  { 325,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #325 = ARGUMENT_v16i8_S
  { 326,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #326 = ARGUMENT_v2f64
  { 327,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #327 = ARGUMENT_v2f64_S
  { 328,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #328 = ARGUMENT_v2i64
  { 329,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #329 = ARGUMENT_v2i64_S
  { 330,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #330 = ARGUMENT_v4f32
  { 331,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #331 = ARGUMENT_v4f32_S
  { 332,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #332 = ARGUMENT_v4i32
  { 333,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #333 = ARGUMENT_v4i32_S
  { 334,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo60 },  // Inst #334 = ARGUMENT_v8i16
  { 335,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr, OperandInfo3 },  // Inst #335 = ARGUMENT_v8i16_S
  { 336,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #336 = ATOMIC_FENCE
  { 337,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #337 = ATOMIC_FENCE_S
  { 338,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #338 = ATOMIC_LOAD16_U_I32_A32
  { 339,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #339 = ATOMIC_LOAD16_U_I32_A32_S
  { 340,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #340 = ATOMIC_LOAD16_U_I32_A64
  { 341,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #341 = ATOMIC_LOAD16_U_I32_A64_S
  { 342,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #342 = ATOMIC_LOAD16_U_I64_A32
  { 343,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #343 = ATOMIC_LOAD16_U_I64_A32_S
  { 344,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #344 = ATOMIC_LOAD16_U_I64_A64
  { 345,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #345 = ATOMIC_LOAD16_U_I64_A64_S
  { 346,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #346 = ATOMIC_LOAD32_U_I64_A32
  { 347,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #347 = ATOMIC_LOAD32_U_I64_A32_S
  { 348,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #348 = ATOMIC_LOAD32_U_I64_A64
  { 349,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #349 = ATOMIC_LOAD32_U_I64_A64_S
  { 350,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #350 = ATOMIC_LOAD8_U_I32_A32
  { 351,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #351 = ATOMIC_LOAD8_U_I32_A32_S
  { 352,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #352 = ATOMIC_LOAD8_U_I32_A64
  { 353,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #353 = ATOMIC_LOAD8_U_I32_A64_S
  { 354,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #354 = ATOMIC_LOAD8_U_I64_A32
  { 355,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #355 = ATOMIC_LOAD8_U_I64_A32_S
  { 356,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #356 = ATOMIC_LOAD8_U_I64_A64
  { 357,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #357 = ATOMIC_LOAD8_U_I64_A64_S
  { 358,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #358 = ATOMIC_LOAD_I32_A32
  { 359,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #359 = ATOMIC_LOAD_I32_A32_S
  { 360,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #360 = ATOMIC_LOAD_I32_A64
  { 361,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #361 = ATOMIC_LOAD_I32_A64_S
  { 362,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #362 = ATOMIC_LOAD_I64_A32
  { 363,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #363 = ATOMIC_LOAD_I64_A32_S
  { 364,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #364 = ATOMIC_LOAD_I64_A64
  { 365,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #365 = ATOMIC_LOAD_I64_A64_S
  { 366,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #366 = ATOMIC_RMW16_U_ADD_I32_A32
  { 367,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #367 = ATOMIC_RMW16_U_ADD_I32_A32_S
  { 368,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #368 = ATOMIC_RMW16_U_ADD_I32_A64
  { 369,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #369 = ATOMIC_RMW16_U_ADD_I32_A64_S
  { 370,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #370 = ATOMIC_RMW16_U_ADD_I64_A32
  { 371,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #371 = ATOMIC_RMW16_U_ADD_I64_A32_S
  { 372,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #372 = ATOMIC_RMW16_U_ADD_I64_A64
  { 373,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #373 = ATOMIC_RMW16_U_ADD_I64_A64_S
  { 374,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #374 = ATOMIC_RMW16_U_AND_I32_A32
  { 375,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #375 = ATOMIC_RMW16_U_AND_I32_A32_S
  { 376,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #376 = ATOMIC_RMW16_U_AND_I32_A64
  { 377,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #377 = ATOMIC_RMW16_U_AND_I32_A64_S
  { 378,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #378 = ATOMIC_RMW16_U_AND_I64_A32
  { 379,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #379 = ATOMIC_RMW16_U_AND_I64_A32_S
  { 380,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #380 = ATOMIC_RMW16_U_AND_I64_A64
  { 381,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #381 = ATOMIC_RMW16_U_AND_I64_A64_S
  { 382,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #382 = ATOMIC_RMW16_U_CMPXCHG_I32_A32
  { 383,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #383 = ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
  { 384,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #384 = ATOMIC_RMW16_U_CMPXCHG_I32_A64
  { 385,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #385 = ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
  { 386,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #386 = ATOMIC_RMW16_U_CMPXCHG_I64_A32
  { 387,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #387 = ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
  { 388,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #388 = ATOMIC_RMW16_U_CMPXCHG_I64_A64
  { 389,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #389 = ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
  { 390,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #390 = ATOMIC_RMW16_U_OR_I32_A32
  { 391,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #391 = ATOMIC_RMW16_U_OR_I32_A32_S
  { 392,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #392 = ATOMIC_RMW16_U_OR_I32_A64
  { 393,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #393 = ATOMIC_RMW16_U_OR_I32_A64_S
  { 394,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #394 = ATOMIC_RMW16_U_OR_I64_A32
  { 395,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #395 = ATOMIC_RMW16_U_OR_I64_A32_S
  { 396,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #396 = ATOMIC_RMW16_U_OR_I64_A64
  { 397,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #397 = ATOMIC_RMW16_U_OR_I64_A64_S
  { 398,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #398 = ATOMIC_RMW16_U_SUB_I32_A32
  { 399,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #399 = ATOMIC_RMW16_U_SUB_I32_A32_S
  { 400,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #400 = ATOMIC_RMW16_U_SUB_I32_A64
  { 401,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #401 = ATOMIC_RMW16_U_SUB_I32_A64_S
  { 402,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #402 = ATOMIC_RMW16_U_SUB_I64_A32
  { 403,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #403 = ATOMIC_RMW16_U_SUB_I64_A32_S
  { 404,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #404 = ATOMIC_RMW16_U_SUB_I64_A64
  { 405,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #405 = ATOMIC_RMW16_U_SUB_I64_A64_S
  { 406,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #406 = ATOMIC_RMW16_U_XCHG_I32_A32
  { 407,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #407 = ATOMIC_RMW16_U_XCHG_I32_A32_S
  { 408,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #408 = ATOMIC_RMW16_U_XCHG_I32_A64
  { 409,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #409 = ATOMIC_RMW16_U_XCHG_I32_A64_S
  { 410,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #410 = ATOMIC_RMW16_U_XCHG_I64_A32
  { 411,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #411 = ATOMIC_RMW16_U_XCHG_I64_A32_S
  { 412,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #412 = ATOMIC_RMW16_U_XCHG_I64_A64
  { 413,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #413 = ATOMIC_RMW16_U_XCHG_I64_A64_S
  { 414,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #414 = ATOMIC_RMW16_U_XOR_I32_A32
  { 415,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #415 = ATOMIC_RMW16_U_XOR_I32_A32_S
  { 416,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #416 = ATOMIC_RMW16_U_XOR_I32_A64
  { 417,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #417 = ATOMIC_RMW16_U_XOR_I32_A64_S
  { 418,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #418 = ATOMIC_RMW16_U_XOR_I64_A32
  { 419,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #419 = ATOMIC_RMW16_U_XOR_I64_A32_S
  { 420,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #420 = ATOMIC_RMW16_U_XOR_I64_A64
  { 421,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #421 = ATOMIC_RMW16_U_XOR_I64_A64_S
  { 422,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #422 = ATOMIC_RMW32_U_ADD_I64_A32
  { 423,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #423 = ATOMIC_RMW32_U_ADD_I64_A32_S
  { 424,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #424 = ATOMIC_RMW32_U_ADD_I64_A64
  { 425,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #425 = ATOMIC_RMW32_U_ADD_I64_A64_S
  { 426,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #426 = ATOMIC_RMW32_U_AND_I64_A32
  { 427,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #427 = ATOMIC_RMW32_U_AND_I64_A32_S
  { 428,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #428 = ATOMIC_RMW32_U_AND_I64_A64
  { 429,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #429 = ATOMIC_RMW32_U_AND_I64_A64_S
  { 430,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #430 = ATOMIC_RMW32_U_CMPXCHG_I64_A32
  { 431,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #431 = ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
  { 432,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #432 = ATOMIC_RMW32_U_CMPXCHG_I64_A64
  { 433,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #433 = ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
  { 434,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #434 = ATOMIC_RMW32_U_OR_I64_A32
  { 435,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #435 = ATOMIC_RMW32_U_OR_I64_A32_S
  { 436,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #436 = ATOMIC_RMW32_U_OR_I64_A64
  { 437,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #437 = ATOMIC_RMW32_U_OR_I64_A64_S
  { 438,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #438 = ATOMIC_RMW32_U_SUB_I64_A32
  { 439,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #439 = ATOMIC_RMW32_U_SUB_I64_A32_S
  { 440,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #440 = ATOMIC_RMW32_U_SUB_I64_A64
  { 441,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #441 = ATOMIC_RMW32_U_SUB_I64_A64_S
  { 442,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #442 = ATOMIC_RMW32_U_XCHG_I64_A32
  { 443,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #443 = ATOMIC_RMW32_U_XCHG_I64_A32_S
  { 444,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #444 = ATOMIC_RMW32_U_XCHG_I64_A64
  { 445,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #445 = ATOMIC_RMW32_U_XCHG_I64_A64_S
  { 446,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #446 = ATOMIC_RMW32_U_XOR_I64_A32
  { 447,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #447 = ATOMIC_RMW32_U_XOR_I64_A32_S
  { 448,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #448 = ATOMIC_RMW32_U_XOR_I64_A64
  { 449,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #449 = ATOMIC_RMW32_U_XOR_I64_A64_S
  { 450,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #450 = ATOMIC_RMW8_U_ADD_I32_A32
  { 451,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #451 = ATOMIC_RMW8_U_ADD_I32_A32_S
  { 452,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #452 = ATOMIC_RMW8_U_ADD_I32_A64
  { 453,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #453 = ATOMIC_RMW8_U_ADD_I32_A64_S
  { 454,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #454 = ATOMIC_RMW8_U_ADD_I64_A32
  { 455,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #455 = ATOMIC_RMW8_U_ADD_I64_A32_S
  { 456,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #456 = ATOMIC_RMW8_U_ADD_I64_A64
  { 457,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #457 = ATOMIC_RMW8_U_ADD_I64_A64_S
  { 458,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #458 = ATOMIC_RMW8_U_AND_I32_A32
  { 459,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #459 = ATOMIC_RMW8_U_AND_I32_A32_S
  { 460,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #460 = ATOMIC_RMW8_U_AND_I32_A64
  { 461,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #461 = ATOMIC_RMW8_U_AND_I32_A64_S
  { 462,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #462 = ATOMIC_RMW8_U_AND_I64_A32
  { 463,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #463 = ATOMIC_RMW8_U_AND_I64_A32_S
  { 464,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #464 = ATOMIC_RMW8_U_AND_I64_A64
  { 465,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #465 = ATOMIC_RMW8_U_AND_I64_A64_S
  { 466,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #466 = ATOMIC_RMW8_U_CMPXCHG_I32_A32
  { 467,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #467 = ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
  { 468,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #468 = ATOMIC_RMW8_U_CMPXCHG_I32_A64
  { 469,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #469 = ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
  { 470,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #470 = ATOMIC_RMW8_U_CMPXCHG_I64_A32
  { 471,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #471 = ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
  { 472,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #472 = ATOMIC_RMW8_U_CMPXCHG_I64_A64
  { 473,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #473 = ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
  { 474,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #474 = ATOMIC_RMW8_U_OR_I32_A32
  { 475,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #475 = ATOMIC_RMW8_U_OR_I32_A32_S
  { 476,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #476 = ATOMIC_RMW8_U_OR_I32_A64
  { 477,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #477 = ATOMIC_RMW8_U_OR_I32_A64_S
  { 478,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #478 = ATOMIC_RMW8_U_OR_I64_A32
  { 479,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #479 = ATOMIC_RMW8_U_OR_I64_A32_S
  { 480,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #480 = ATOMIC_RMW8_U_OR_I64_A64
  { 481,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #481 = ATOMIC_RMW8_U_OR_I64_A64_S
  { 482,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #482 = ATOMIC_RMW8_U_SUB_I32_A32
  { 483,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #483 = ATOMIC_RMW8_U_SUB_I32_A32_S
  { 484,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #484 = ATOMIC_RMW8_U_SUB_I32_A64
  { 485,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #485 = ATOMIC_RMW8_U_SUB_I32_A64_S
  { 486,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #486 = ATOMIC_RMW8_U_SUB_I64_A32
  { 487,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #487 = ATOMIC_RMW8_U_SUB_I64_A32_S
  { 488,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #488 = ATOMIC_RMW8_U_SUB_I64_A64
  { 489,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #489 = ATOMIC_RMW8_U_SUB_I64_A64_S
  { 490,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #490 = ATOMIC_RMW8_U_XCHG_I32_A32
  { 491,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #491 = ATOMIC_RMW8_U_XCHG_I32_A32_S
  { 492,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #492 = ATOMIC_RMW8_U_XCHG_I32_A64
  { 493,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #493 = ATOMIC_RMW8_U_XCHG_I32_A64_S
  { 494,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #494 = ATOMIC_RMW8_U_XCHG_I64_A32
  { 495,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #495 = ATOMIC_RMW8_U_XCHG_I64_A32_S
  { 496,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #496 = ATOMIC_RMW8_U_XCHG_I64_A64
  { 497,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #497 = ATOMIC_RMW8_U_XCHG_I64_A64_S
  { 498,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #498 = ATOMIC_RMW8_U_XOR_I32_A32
  { 499,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #499 = ATOMIC_RMW8_U_XOR_I32_A32_S
  { 500,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #500 = ATOMIC_RMW8_U_XOR_I32_A64
  { 501,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #501 = ATOMIC_RMW8_U_XOR_I32_A64_S
  { 502,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #502 = ATOMIC_RMW8_U_XOR_I64_A32
  { 503,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #503 = ATOMIC_RMW8_U_XOR_I64_A32_S
  { 504,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #504 = ATOMIC_RMW8_U_XOR_I64_A64
  { 505,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #505 = ATOMIC_RMW8_U_XOR_I64_A64_S
  { 506,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #506 = ATOMIC_RMW_ADD_I32_A32
  { 507,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #507 = ATOMIC_RMW_ADD_I32_A32_S
  { 508,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #508 = ATOMIC_RMW_ADD_I32_A64
  { 509,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #509 = ATOMIC_RMW_ADD_I32_A64_S
  { 510,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #510 = ATOMIC_RMW_ADD_I64_A32
  { 511,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #511 = ATOMIC_RMW_ADD_I64_A32_S
  { 512,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #512 = ATOMIC_RMW_ADD_I64_A64
  { 513,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #513 = ATOMIC_RMW_ADD_I64_A64_S
  { 514,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #514 = ATOMIC_RMW_AND_I32_A32
  { 515,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #515 = ATOMIC_RMW_AND_I32_A32_S
  { 516,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #516 = ATOMIC_RMW_AND_I32_A64
  { 517,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #517 = ATOMIC_RMW_AND_I32_A64_S
  { 518,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #518 = ATOMIC_RMW_AND_I64_A32
  { 519,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #519 = ATOMIC_RMW_AND_I64_A32_S
  { 520,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #520 = ATOMIC_RMW_AND_I64_A64
  { 521,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #521 = ATOMIC_RMW_AND_I64_A64_S
  { 522,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo71 },  // Inst #522 = ATOMIC_RMW_CMPXCHG_I32_A32
  { 523,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #523 = ATOMIC_RMW_CMPXCHG_I32_A32_S
  { 524,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo72 },  // Inst #524 = ATOMIC_RMW_CMPXCHG_I32_A64
  { 525,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #525 = ATOMIC_RMW_CMPXCHG_I32_A64_S
  { 526,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo73 },  // Inst #526 = ATOMIC_RMW_CMPXCHG_I64_A32
  { 527,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #527 = ATOMIC_RMW_CMPXCHG_I64_A32_S
  { 528,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo74 },  // Inst #528 = ATOMIC_RMW_CMPXCHG_I64_A64
  { 529,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #529 = ATOMIC_RMW_CMPXCHG_I64_A64_S
  { 530,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #530 = ATOMIC_RMW_OR_I32_A32
  { 531,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #531 = ATOMIC_RMW_OR_I32_A32_S
  { 532,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #532 = ATOMIC_RMW_OR_I32_A64
  { 533,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #533 = ATOMIC_RMW_OR_I32_A64_S
  { 534,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #534 = ATOMIC_RMW_OR_I64_A32
  { 535,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #535 = ATOMIC_RMW_OR_I64_A32_S
  { 536,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #536 = ATOMIC_RMW_OR_I64_A64
  { 537,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #537 = ATOMIC_RMW_OR_I64_A64_S
  { 538,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #538 = ATOMIC_RMW_SUB_I32_A32
  { 539,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #539 = ATOMIC_RMW_SUB_I32_A32_S
  { 540,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #540 = ATOMIC_RMW_SUB_I32_A64
  { 541,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #541 = ATOMIC_RMW_SUB_I32_A64_S
  { 542,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #542 = ATOMIC_RMW_SUB_I64_A32
  { 543,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #543 = ATOMIC_RMW_SUB_I64_A32_S
  { 544,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #544 = ATOMIC_RMW_SUB_I64_A64
  { 545,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #545 = ATOMIC_RMW_SUB_I64_A64_S
  { 546,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #546 = ATOMIC_RMW_XCHG_I32_A32
  { 547,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #547 = ATOMIC_RMW_XCHG_I32_A32_S
  { 548,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #548 = ATOMIC_RMW_XCHG_I32_A64
  { 549,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #549 = ATOMIC_RMW_XCHG_I32_A64_S
  { 550,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #550 = ATOMIC_RMW_XCHG_I64_A32
  { 551,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #551 = ATOMIC_RMW_XCHG_I64_A32_S
  { 552,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #552 = ATOMIC_RMW_XCHG_I64_A64
  { 553,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #553 = ATOMIC_RMW_XCHG_I64_A64_S
  { 554,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #554 = ATOMIC_RMW_XOR_I32_A32
  { 555,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #555 = ATOMIC_RMW_XOR_I32_A32_S
  { 556,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #556 = ATOMIC_RMW_XOR_I32_A64
  { 557,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #557 = ATOMIC_RMW_XOR_I32_A64_S
  { 558,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo69 },  // Inst #558 = ATOMIC_RMW_XOR_I64_A32
  { 559,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #559 = ATOMIC_RMW_XOR_I64_A32_S
  { 560,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo70 },  // Inst #560 = ATOMIC_RMW_XOR_I64_A64
  { 561,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #561 = ATOMIC_RMW_XOR_I64_A64_S
  { 562,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #562 = ATOMIC_STORE16_I32_A32
  { 563,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #563 = ATOMIC_STORE16_I32_A32_S
  { 564,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #564 = ATOMIC_STORE16_I32_A64
  { 565,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #565 = ATOMIC_STORE16_I32_A64_S
  { 566,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #566 = ATOMIC_STORE16_I64_A32
  { 567,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #567 = ATOMIC_STORE16_I64_A32_S
  { 568,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #568 = ATOMIC_STORE16_I64_A64
  { 569,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #569 = ATOMIC_STORE16_I64_A64_S
  { 570,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #570 = ATOMIC_STORE32_I64_A32
  { 571,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #571 = ATOMIC_STORE32_I64_A32_S
  { 572,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #572 = ATOMIC_STORE32_I64_A64
  { 573,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #573 = ATOMIC_STORE32_I64_A64_S
  { 574,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #574 = ATOMIC_STORE8_I32_A32
  { 575,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #575 = ATOMIC_STORE8_I32_A32_S
  { 576,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #576 = ATOMIC_STORE8_I32_A64
  { 577,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #577 = ATOMIC_STORE8_I32_A64_S
  { 578,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #578 = ATOMIC_STORE8_I64_A32
  { 579,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #579 = ATOMIC_STORE8_I64_A32_S
  { 580,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #580 = ATOMIC_STORE8_I64_A64
  { 581,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #581 = ATOMIC_STORE8_I64_A64_S
  { 582,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #582 = ATOMIC_STORE_I32_A32
  { 583,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #583 = ATOMIC_STORE_I32_A32_S
  { 584,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #584 = ATOMIC_STORE_I32_A64
  { 585,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #585 = ATOMIC_STORE_I32_A64_S
  { 586,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #586 = ATOMIC_STORE_I64_A32
  { 587,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #587 = ATOMIC_STORE_I64_A32_S
  { 588,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #588 = ATOMIC_STORE_I64_A64
  { 589,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #589 = ATOMIC_STORE_I64_A64_S
  { 590,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #590 = AVGR_U_I16x8
  { 591,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #591 = AVGR_U_I16x8_S
  { 592,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #592 = AVGR_U_I8x16
  { 593,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #593 = AVGR_U_I8x16_S
  { 594,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #594 = BITMASK_I16x8
  { 595,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #595 = BITMASK_I16x8_S
  { 596,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #596 = BITMASK_I32x4
  { 597,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #597 = BITMASK_I32x4_S
  { 598,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #598 = BITMASK_I64x2
  { 599,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #599 = BITMASK_I64x2_S
  { 600,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo53 },  // Inst #600 = BITMASK_I8x16
  { 601,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #601 = BITMASK_I8x16_S
  { 602,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #602 = BITSELECT
  { 603,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #603 = BITSELECT_S
  { 604,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #604 = BLOCK
  { 605,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #605 = BLOCK_S
  { 606,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #606 = BR
  { 607,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo82 },  // Inst #607 = BR_IF
  { 608,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #608 = BR_IF_S
  { 609,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #609 = BR_S
  { 610,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #610 = BR_TABLE_I32
  { 611,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo84 },  // Inst #611 = BR_TABLE_I32_S
  { 612,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo85 },  // Inst #612 = BR_TABLE_I64
  { 613,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo84 },  // Inst #613 = BR_TABLE_I64_S
  { 614,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo82 },  // Inst #614 = BR_UNLESS
  { 615,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo81 },  // Inst #615 = BR_UNLESS_S
  { 616,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #616 = CALL
  { 617,	2,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo86 },  // Inst #617 = CALL_INDIRECT
  { 618,	2,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo86 },  // Inst #618 = CALL_INDIRECT_S
  { 619,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #619 = CALL_S
  { 620,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo87 },  // Inst #620 = CATCH
  { 621,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #621 = CATCH_ALL
  { 622,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #622 = CATCH_ALL_S
  { 623,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo88 },  // Inst #623 = CATCH_S
  { 624,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #624 = CEIL_F32
  { 625,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #625 = CEIL_F32_S
  { 626,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #626 = CEIL_F32x4
  { 627,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #627 = CEIL_F32x4_S
  { 628,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #628 = CEIL_F64
  { 629,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #629 = CEIL_F64_S
  { 630,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #630 = CEIL_F64x2
  { 631,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #631 = CEIL_F64x2_S
  { 632,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #632 = CLZ_I32
  { 633,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #633 = CLZ_I32_S
  { 634,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #634 = CLZ_I64
  { 635,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #635 = CLZ_I64_S
  { 636,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo91 },  // Inst #636 = CONST_F32
  { 637,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo92 },  // Inst #637 = CONST_F32_S
  { 638,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo93 },  // Inst #638 = CONST_F64
  { 639,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo94 },  // Inst #639 = CONST_F64_S
  { 640,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo95 },  // Inst #640 = CONST_I32
  { 641,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #641 = CONST_I32_S
  { 642,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo97 },  // Inst #642 = CONST_I64
  { 643,	1,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo98 },  // Inst #643 = CONST_I64_S
  { 644,	5,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo99 },  // Inst #644 = CONST_V128_F32x4
  { 645,	4,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo100 },  // Inst #645 = CONST_V128_F32x4_S
  { 646,	3,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo101 },  // Inst #646 = CONST_V128_F64x2
  { 647,	2,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo102 },  // Inst #647 = CONST_V128_F64x2_S
  { 648,	9,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo103 },  // Inst #648 = CONST_V128_I16x8
  { 649,	8,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo104 },  // Inst #649 = CONST_V128_I16x8_S
  { 650,	5,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo105 },  // Inst #650 = CONST_V128_I32x4
  { 651,	4,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo106 },  // Inst #651 = CONST_V128_I32x4_S
  { 652,	3,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo107 },  // Inst #652 = CONST_V128_I64x2
  { 653,	2,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo108 },  // Inst #653 = CONST_V128_I64x2_S
  { 654,	17,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo109 },  // Inst #654 = CONST_V128_I8x16
  { 655,	16,	0,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo110 },  // Inst #655 = CONST_V128_I8x16_S
  { 656,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #656 = COPYSIGN_F32
  { 657,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #657 = COPYSIGN_F32_S
  { 658,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #658 = COPYSIGN_F64
  { 659,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #659 = COPYSIGN_F64_S
  { 660,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo111 },  // Inst #660 = COPY_EXTERNREF
  { 661,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #661 = COPY_EXTERNREF_S
  { 662,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #662 = COPY_F32
  { 663,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #663 = COPY_F32_S
  { 664,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #664 = COPY_F64
  { 665,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #665 = COPY_F64_S
  { 666,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo112 },  // Inst #666 = COPY_FUNCREF
  { 667,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #667 = COPY_FUNCREF_S
  { 668,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #668 = COPY_I32
  { 669,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #669 = COPY_I32_S
  { 670,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #670 = COPY_I64
  { 671,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #671 = COPY_I64_S
  { 672,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #672 = COPY_V128
  { 673,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #673 = COPY_V128_S
  { 674,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #674 = CTZ_I32
  { 675,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #675 = CTZ_I32_S
  { 676,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #676 = CTZ_I64
  { 677,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #677 = CTZ_I64_S
  { 678,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #678 = DEBUG_UNREACHABLE
  { 679,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #679 = DEBUG_UNREACHABLE_S
  { 680,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #680 = DIV_F32
  { 681,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #681 = DIV_F32_S
  { 682,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #682 = DIV_F32x4
  { 683,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #683 = DIV_F32x4_S
  { 684,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #684 = DIV_F64
  { 685,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #685 = DIV_F64_S
  { 686,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #686 = DIV_F64x2
  { 687,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #687 = DIV_F64x2_S
  { 688,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #688 = DIV_S_I32
  { 689,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #689 = DIV_S_I32_S
  { 690,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #690 = DIV_S_I64
  { 691,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #691 = DIV_S_I64_S
  { 692,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #692 = DIV_U_I32
  { 693,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #693 = DIV_U_I32_S
  { 694,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #694 = DIV_U_I64
  { 695,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #695 = DIV_U_I64_S
  { 696,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #696 = DOT
  { 697,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #697 = DOT_S
  { 698,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo113 },  // Inst #698 = DROP_EXTERNREF
  { 699,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #699 = DROP_EXTERNREF_S
  { 700,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo114 },  // Inst #700 = DROP_F32
  { 701,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #701 = DROP_F32_S
  { 702,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo115 },  // Inst #702 = DROP_F64
  { 703,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #703 = DROP_F64_S
  { 704,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo116 },  // Inst #704 = DROP_FUNCREF
  { 705,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #705 = DROP_FUNCREF_S
  { 706,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo83 },  // Inst #706 = DROP_I32
  { 707,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #707 = DROP_I32_S
  { 708,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo85 },  // Inst #708 = DROP_I64
  { 709,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #709 = DROP_I64_S
  { 710,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo117 },  // Inst #710 = DROP_V128
  { 711,	0,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #711 = DROP_V128_S
  { 712,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #712 = ELSE
  { 713,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #713 = ELSE_S
  { 714,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #714 = END
  { 715,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #715 = END_BLOCK
  { 716,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #716 = END_BLOCK_S
  { 717,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #717 = END_FUNCTION
  { 718,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #718 = END_FUNCTION_S
  { 719,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #719 = END_IF
  { 720,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #720 = END_IF_S
  { 721,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #721 = END_LOOP
  { 722,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #722 = END_LOOP_S
  { 723,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #723 = END_S
  { 724,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #724 = END_TRY
  { 725,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr },  // Inst #725 = END_TRY_S
  { 726,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #726 = EQZ_I32
  { 727,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #727 = EQZ_I32_S
  { 728,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo118 },  // Inst #728 = EQZ_I64
  { 729,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #729 = EQZ_I64_S
  { 730,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #730 = EQ_F32
  { 731,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #731 = EQ_F32_S
  { 732,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #732 = EQ_F32x4
  { 733,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #733 = EQ_F32x4_S
  { 734,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #734 = EQ_F64
  { 735,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #735 = EQ_F64_S
  { 736,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #736 = EQ_F64x2
  { 737,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #737 = EQ_F64x2_S
  { 738,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #738 = EQ_I16x8
  { 739,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #739 = EQ_I16x8_S
  { 740,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #740 = EQ_I32
  { 741,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #741 = EQ_I32_S
  { 742,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #742 = EQ_I32x4
  { 743,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #743 = EQ_I32x4_S
  { 744,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #744 = EQ_I64
  { 745,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #745 = EQ_I64_S
  { 746,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #746 = EQ_I8x16
  { 747,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #747 = EQ_I8x16_S
  { 748,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #748 = EQ_v2i64
  { 749,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #749 = EQ_v2i64_S
  { 750,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #750 = EXTMUL_HIGH_S_I16x8
  { 751,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #751 = EXTMUL_HIGH_S_I16x8_S
  { 752,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #752 = EXTMUL_HIGH_S_I32x4
  { 753,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #753 = EXTMUL_HIGH_S_I32x4_S
  { 754,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #754 = EXTMUL_HIGH_S_I64x2
  { 755,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #755 = EXTMUL_HIGH_S_I64x2_S
  { 756,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #756 = EXTMUL_HIGH_U_I16x8
  { 757,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #757 = EXTMUL_HIGH_U_I16x8_S
  { 758,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #758 = EXTMUL_HIGH_U_I32x4
  { 759,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #759 = EXTMUL_HIGH_U_I32x4_S
  { 760,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #760 = EXTMUL_HIGH_U_I64x2
  { 761,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #761 = EXTMUL_HIGH_U_I64x2_S
  { 762,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #762 = EXTMUL_LOW_S_I16x8
  { 763,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #763 = EXTMUL_LOW_S_I16x8_S
  { 764,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #764 = EXTMUL_LOW_S_I32x4
  { 765,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #765 = EXTMUL_LOW_S_I32x4_S
  { 766,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #766 = EXTMUL_LOW_S_I64x2
  { 767,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #767 = EXTMUL_LOW_S_I64x2_S
  { 768,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #768 = EXTMUL_LOW_U_I16x8
  { 769,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #769 = EXTMUL_LOW_U_I16x8_S
  { 770,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #770 = EXTMUL_LOW_U_I32x4
  { 771,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #771 = EXTMUL_LOW_U_I32x4_S
  { 772,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #772 = EXTMUL_LOW_U_I64x2
  { 773,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #773 = EXTMUL_LOW_U_I64x2_S
  { 774,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo122 },  // Inst #774 = EXTRACT_LANE_F32x4
  { 775,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #775 = EXTRACT_LANE_F32x4_S
  { 776,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo124 },  // Inst #776 = EXTRACT_LANE_F64x2
  { 777,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #777 = EXTRACT_LANE_F64x2_S
  { 778,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #778 = EXTRACT_LANE_I16x8_s
  { 779,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #779 = EXTRACT_LANE_I16x8_s_S
  { 780,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #780 = EXTRACT_LANE_I16x8_u
  { 781,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #781 = EXTRACT_LANE_I16x8_u_S
  { 782,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #782 = EXTRACT_LANE_I32x4
  { 783,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #783 = EXTRACT_LANE_I32x4_S
  { 784,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo126 },  // Inst #784 = EXTRACT_LANE_I64x2
  { 785,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #785 = EXTRACT_LANE_I64x2_S
  { 786,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #786 = EXTRACT_LANE_I8x16_s
  { 787,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #787 = EXTRACT_LANE_I8x16_s_S
  { 788,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo125 },  // Inst #788 = EXTRACT_LANE_I8x16_u
  { 789,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #789 = EXTRACT_LANE_I8x16_u_S
  { 790,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo127 },  // Inst #790 = F32_CONVERT_S_I32
  { 791,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #791 = F32_CONVERT_S_I32_S
  { 792,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo128 },  // Inst #792 = F32_CONVERT_S_I64
  { 793,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #793 = F32_CONVERT_S_I64_S
  { 794,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo127 },  // Inst #794 = F32_CONVERT_U_I32
  { 795,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #795 = F32_CONVERT_U_I32_S
  { 796,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo128 },  // Inst #796 = F32_CONVERT_U_I64
  { 797,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #797 = F32_CONVERT_U_I64_S
  { 798,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo129 },  // Inst #798 = F32_DEMOTE_F64
  { 799,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #799 = F32_DEMOTE_F64_S
  { 800,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo127 },  // Inst #800 = F32_REINTERPRET_I32
  { 801,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #801 = F32_REINTERPRET_I32_S
  { 802,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo130 },  // Inst #802 = F64_CONVERT_S_I32
  { 803,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #803 = F64_CONVERT_S_I32_S
  { 804,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo131 },  // Inst #804 = F64_CONVERT_S_I64
  { 805,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #805 = F64_CONVERT_S_I64_S
  { 806,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo130 },  // Inst #806 = F64_CONVERT_U_I32
  { 807,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #807 = F64_CONVERT_U_I32_S
  { 808,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo131 },  // Inst #808 = F64_CONVERT_U_I64
  { 809,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #809 = F64_CONVERT_U_I64_S
  { 810,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo132 },  // Inst #810 = F64_PROMOTE_F32
  { 811,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #811 = F64_PROMOTE_F32_S
  { 812,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo131 },  // Inst #812 = F64_REINTERPRET_I64
  { 813,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #813 = F64_REINTERPRET_I64_S
  { 814,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #814 = FALLTHROUGH_RETURN
  { 815,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #815 = FALLTHROUGH_RETURN_S
  { 816,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #816 = FLOOR_F32
  { 817,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #817 = FLOOR_F32_S
  { 818,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #818 = FLOOR_F32x4
  { 819,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #819 = FLOOR_F32x4_S
  { 820,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #820 = FLOOR_F64
  { 821,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #821 = FLOOR_F64_S
  { 822,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #822 = FLOOR_F64x2
  { 823,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #823 = FLOOR_F64x2_S
  { 824,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #824 = FP_TO_SINT_I32_F32
  { 825,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #825 = FP_TO_SINT_I32_F32_S
  { 826,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #826 = FP_TO_SINT_I32_F64
  { 827,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #827 = FP_TO_SINT_I32_F64_S
  { 828,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #828 = FP_TO_SINT_I64_F32
  { 829,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #829 = FP_TO_SINT_I64_F32_S
  { 830,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #830 = FP_TO_SINT_I64_F64
  { 831,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #831 = FP_TO_SINT_I64_F64_S
  { 832,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #832 = FP_TO_UINT_I32_F32
  { 833,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #833 = FP_TO_UINT_I32_F32_S
  { 834,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #834 = FP_TO_UINT_I32_F64
  { 835,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #835 = FP_TO_UINT_I32_F64_S
  { 836,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #836 = FP_TO_UINT_I64_F32
  { 837,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #837 = FP_TO_UINT_I64_F32_S
  { 838,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #838 = FP_TO_UINT_I64_F64
  { 839,	0,	0,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #839 = FP_TO_UINT_I64_F64_S
  { 840,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #840 = GE_F32
  { 841,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #841 = GE_F32_S
  { 842,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #842 = GE_F32x4
  { 843,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #843 = GE_F32x4_S
  { 844,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #844 = GE_F64
  { 845,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #845 = GE_F64_S
  { 846,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #846 = GE_F64x2
  { 847,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #847 = GE_F64x2_S
  { 848,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #848 = GE_S_I16x8
  { 849,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #849 = GE_S_I16x8_S
  { 850,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #850 = GE_S_I32
  { 851,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #851 = GE_S_I32_S
  { 852,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #852 = GE_S_I32x4
  { 853,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #853 = GE_S_I32x4_S
  { 854,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #854 = GE_S_I64
  { 855,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #855 = GE_S_I64_S
  { 856,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #856 = GE_S_I8x16
  { 857,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #857 = GE_S_I8x16_S
  { 858,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #858 = GE_U_I16x8
  { 859,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #859 = GE_U_I16x8_S
  { 860,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #860 = GE_U_I32
  { 861,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #861 = GE_U_I32_S
  { 862,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #862 = GE_U_I32x4
  { 863,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #863 = GE_U_I32x4_S
  { 864,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #864 = GE_U_I64
  { 865,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #865 = GE_U_I64_S
  { 866,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #866 = GE_U_I8x16
  { 867,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #867 = GE_U_I8x16_S
  { 868,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo137 },  // Inst #868 = GLOBAL_GET_EXTERNREF
  { 869,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #869 = GLOBAL_GET_EXTERNREF_S
  { 870,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo139 },  // Inst #870 = GLOBAL_GET_F32
  { 871,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #871 = GLOBAL_GET_F32_S
  { 872,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo140 },  // Inst #872 = GLOBAL_GET_F64
  { 873,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #873 = GLOBAL_GET_F64_S
  { 874,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo141 },  // Inst #874 = GLOBAL_GET_FUNCREF
  { 875,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #875 = GLOBAL_GET_FUNCREF_S
  { 876,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo142 },  // Inst #876 = GLOBAL_GET_I32
  { 877,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #877 = GLOBAL_GET_I32_S
  { 878,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo143 },  // Inst #878 = GLOBAL_GET_I64
  { 879,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #879 = GLOBAL_GET_I64_S
  { 880,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo144 },  // Inst #880 = GLOBAL_GET_V128
  { 881,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #881 = GLOBAL_GET_V128_S
  { 882,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo145 },  // Inst #882 = GLOBAL_SET_EXTERNREF
  { 883,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #883 = GLOBAL_SET_EXTERNREF_S
  { 884,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo146 },  // Inst #884 = GLOBAL_SET_F32
  { 885,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #885 = GLOBAL_SET_F32_S
  { 886,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo147 },  // Inst #886 = GLOBAL_SET_F64
  { 887,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #887 = GLOBAL_SET_F64_S
  { 888,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo148 },  // Inst #888 = GLOBAL_SET_FUNCREF
  { 889,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #889 = GLOBAL_SET_FUNCREF_S
  { 890,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo149 },  // Inst #890 = GLOBAL_SET_I32
  { 891,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #891 = GLOBAL_SET_I32_S
  { 892,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo150 },  // Inst #892 = GLOBAL_SET_I64
  { 893,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #893 = GLOBAL_SET_I64_S
  { 894,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo151 },  // Inst #894 = GLOBAL_SET_V128
  { 895,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo138 },  // Inst #895 = GLOBAL_SET_V128_S
  { 896,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #896 = GT_F32
  { 897,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #897 = GT_F32_S
  { 898,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #898 = GT_F32x4
  { 899,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #899 = GT_F32x4_S
  { 900,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #900 = GT_F64
  { 901,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #901 = GT_F64_S
  { 902,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #902 = GT_F64x2
  { 903,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #903 = GT_F64x2_S
  { 904,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #904 = GT_S_I16x8
  { 905,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #905 = GT_S_I16x8_S
  { 906,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #906 = GT_S_I32
  { 907,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #907 = GT_S_I32_S
  { 908,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #908 = GT_S_I32x4
  { 909,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #909 = GT_S_I32x4_S
  { 910,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #910 = GT_S_I64
  { 911,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #911 = GT_S_I64_S
  { 912,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #912 = GT_S_I8x16
  { 913,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #913 = GT_S_I8x16_S
  { 914,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #914 = GT_U_I16x8
  { 915,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #915 = GT_U_I16x8_S
  { 916,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #916 = GT_U_I32
  { 917,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #917 = GT_U_I32_S
  { 918,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #918 = GT_U_I32x4
  { 919,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #919 = GT_U_I32x4_S
  { 920,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #920 = GT_U_I64
  { 921,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #921 = GT_U_I64_S
  { 922,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #922 = GT_U_I8x16
  { 923,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #923 = GT_U_I8x16_S
  { 924,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #924 = I32_EXTEND16_S_I32
  { 925,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #925 = I32_EXTEND16_S_I32_S
  { 926,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #926 = I32_EXTEND8_S_I32
  { 927,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #927 = I32_EXTEND8_S_I32_S
  { 928,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #928 = I32_REINTERPRET_F32
  { 929,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #929 = I32_REINTERPRET_F32_S
  { 930,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #930 = I32_TRUNC_S_F32
  { 931,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #931 = I32_TRUNC_S_F32_S
  { 932,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #932 = I32_TRUNC_S_F64
  { 933,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #933 = I32_TRUNC_S_F64_S
  { 934,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #934 = I32_TRUNC_S_SAT_F32
  { 935,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #935 = I32_TRUNC_S_SAT_F32_S
  { 936,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #936 = I32_TRUNC_S_SAT_F64
  { 937,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #937 = I32_TRUNC_S_SAT_F64_S
  { 938,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #938 = I32_TRUNC_U_F32
  { 939,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #939 = I32_TRUNC_U_F32_S
  { 940,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #940 = I32_TRUNC_U_F64
  { 941,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #941 = I32_TRUNC_U_F64_S
  { 942,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo133 },  // Inst #942 = I32_TRUNC_U_SAT_F32
  { 943,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #943 = I32_TRUNC_U_SAT_F32_S
  { 944,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo134 },  // Inst #944 = I32_TRUNC_U_SAT_F64
  { 945,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #945 = I32_TRUNC_U_SAT_F64_S
  { 946,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo118 },  // Inst #946 = I32_WRAP_I64
  { 947,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #947 = I32_WRAP_I64_S
  { 948,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #948 = I64_EXTEND16_S_I64
  { 949,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #949 = I64_EXTEND16_S_I64_S
  { 950,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #950 = I64_EXTEND32_S_I64
  { 951,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #951 = I64_EXTEND32_S_I64_S
  { 952,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #952 = I64_EXTEND8_S_I64
  { 953,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #953 = I64_EXTEND8_S_I64_S
  { 954,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo152 },  // Inst #954 = I64_EXTEND_S_I32
  { 955,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #955 = I64_EXTEND_S_I32_S
  { 956,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo152 },  // Inst #956 = I64_EXTEND_U_I32
  { 957,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #957 = I64_EXTEND_U_I32_S
  { 958,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #958 = I64_REINTERPRET_F64
  { 959,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #959 = I64_REINTERPRET_F64_S
  { 960,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #960 = I64_TRUNC_S_F32
  { 961,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #961 = I64_TRUNC_S_F32_S
  { 962,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #962 = I64_TRUNC_S_F64
  { 963,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #963 = I64_TRUNC_S_F64_S
  { 964,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #964 = I64_TRUNC_S_SAT_F32
  { 965,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #965 = I64_TRUNC_S_SAT_F32_S
  { 966,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #966 = I64_TRUNC_S_SAT_F64
  { 967,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #967 = I64_TRUNC_S_SAT_F64_S
  { 968,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #968 = I64_TRUNC_U_F32
  { 969,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #969 = I64_TRUNC_U_F32_S
  { 970,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #970 = I64_TRUNC_U_F64
  { 971,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #971 = I64_TRUNC_U_F64_S
  { 972,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo135 },  // Inst #972 = I64_TRUNC_U_SAT_F32
  { 973,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #973 = I64_TRUNC_U_SAT_F32_S
  { 974,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo136 },  // Inst #974 = I64_TRUNC_U_SAT_F64
  { 975,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #975 = I64_TRUNC_U_SAT_F64_S
  { 976,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo153 },  // Inst #976 = IF
  { 977,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #977 = IF_S
  { 978,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #978 = LE_F32
  { 979,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #979 = LE_F32_S
  { 980,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #980 = LE_F32x4
  { 981,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #981 = LE_F32x4_S
  { 982,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #982 = LE_F64
  { 983,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #983 = LE_F64_S
  { 984,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #984 = LE_F64x2
  { 985,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #985 = LE_F64x2_S
  { 986,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #986 = LE_S_I16x8
  { 987,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #987 = LE_S_I16x8_S
  { 988,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #988 = LE_S_I32
  { 989,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #989 = LE_S_I32_S
  { 990,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #990 = LE_S_I32x4
  { 991,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #991 = LE_S_I32x4_S
  { 992,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #992 = LE_S_I64
  { 993,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #993 = LE_S_I64_S
  { 994,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #994 = LE_S_I8x16
  { 995,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #995 = LE_S_I8x16_S
  { 996,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #996 = LE_U_I16x8
  { 997,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #997 = LE_U_I16x8_S
  { 998,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #998 = LE_U_I32
  { 999,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #999 = LE_U_I32_S
  { 1000,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1000 = LE_U_I32x4
  { 1001,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1001 = LE_U_I32x4_S
  { 1002,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1002 = LE_U_I64
  { 1003,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1003 = LE_U_I64_S
  { 1004,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1004 = LE_U_I8x16
  { 1005,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1005 = LE_U_I8x16_S
  { 1006,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1006 = LOAD16_SPLAT_A32
  { 1007,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1007 = LOAD16_SPLAT_A32_S
  { 1008,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1008 = LOAD16_SPLAT_A64
  { 1009,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1009 = LOAD16_SPLAT_A64_S
  { 1010,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1010 = LOAD16_S_I32_A32
  { 1011,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1011 = LOAD16_S_I32_A32_S
  { 1012,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1012 = LOAD16_S_I32_A64
  { 1013,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1013 = LOAD16_S_I32_A64_S
  { 1014,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1014 = LOAD16_S_I64_A32
  { 1015,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1015 = LOAD16_S_I64_A32_S
  { 1016,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1016 = LOAD16_S_I64_A64
  { 1017,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1017 = LOAD16_S_I64_A64_S
  { 1018,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1018 = LOAD16_U_I32_A32
  { 1019,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1019 = LOAD16_U_I32_A32_S
  { 1020,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1020 = LOAD16_U_I32_A64
  { 1021,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1021 = LOAD16_U_I32_A64_S
  { 1022,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1022 = LOAD16_U_I64_A32
  { 1023,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1023 = LOAD16_U_I64_A32_S
  { 1024,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1024 = LOAD16_U_I64_A64
  { 1025,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1025 = LOAD16_U_I64_A64_S
  { 1026,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1026 = LOAD32_SPLAT_A32
  { 1027,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1027 = LOAD32_SPLAT_A32_S
  { 1028,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1028 = LOAD32_SPLAT_A64
  { 1029,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1029 = LOAD32_SPLAT_A64_S
  { 1030,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1030 = LOAD32_S_I64_A32
  { 1031,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1031 = LOAD32_S_I64_A32_S
  { 1032,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1032 = LOAD32_S_I64_A64
  { 1033,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1033 = LOAD32_S_I64_A64_S
  { 1034,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1034 = LOAD32_U_I64_A32
  { 1035,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1035 = LOAD32_U_I64_A32_S
  { 1036,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1036 = LOAD32_U_I64_A64
  { 1037,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1037 = LOAD32_U_I64_A64_S
  { 1038,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1038 = LOAD64_SPLAT_A32
  { 1039,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1039 = LOAD64_SPLAT_A32_S
  { 1040,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1040 = LOAD64_SPLAT_A64
  { 1041,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1041 = LOAD64_SPLAT_A64_S
  { 1042,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1042 = LOAD8_SPLAT_A32
  { 1043,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1043 = LOAD8_SPLAT_A32_S
  { 1044,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1044 = LOAD8_SPLAT_A64
  { 1045,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1045 = LOAD8_SPLAT_A64_S
  { 1046,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1046 = LOAD8_S_I32_A32
  { 1047,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1047 = LOAD8_S_I32_A32_S
  { 1048,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1048 = LOAD8_S_I32_A64
  { 1049,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1049 = LOAD8_S_I32_A64_S
  { 1050,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1050 = LOAD8_S_I64_A32
  { 1051,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1051 = LOAD8_S_I64_A32_S
  { 1052,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1052 = LOAD8_S_I64_A64
  { 1053,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1053 = LOAD8_S_I64_A64_S
  { 1054,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1054 = LOAD8_U_I32_A32
  { 1055,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1055 = LOAD8_U_I32_A32_S
  { 1056,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1056 = LOAD8_U_I32_A64
  { 1057,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1057 = LOAD8_U_I32_A64_S
  { 1058,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1058 = LOAD8_U_I64_A32
  { 1059,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1059 = LOAD8_U_I64_A32_S
  { 1060,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1060 = LOAD8_U_I64_A64
  { 1061,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1061 = LOAD8_U_I64_A64_S
  { 1062,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1062 = LOAD_EXTEND_S_I16x8_A32
  { 1063,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1063 = LOAD_EXTEND_S_I16x8_A32_S
  { 1064,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1064 = LOAD_EXTEND_S_I16x8_A64
  { 1065,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1065 = LOAD_EXTEND_S_I16x8_A64_S
  { 1066,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1066 = LOAD_EXTEND_S_I32x4_A32
  { 1067,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1067 = LOAD_EXTEND_S_I32x4_A32_S
  { 1068,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1068 = LOAD_EXTEND_S_I32x4_A64
  { 1069,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1069 = LOAD_EXTEND_S_I32x4_A64_S
  { 1070,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1070 = LOAD_EXTEND_S_I64x2_A32
  { 1071,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1071 = LOAD_EXTEND_S_I64x2_A32_S
  { 1072,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1072 = LOAD_EXTEND_S_I64x2_A64
  { 1073,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1073 = LOAD_EXTEND_S_I64x2_A64_S
  { 1074,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1074 = LOAD_EXTEND_U_I16x8_A32
  { 1075,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1075 = LOAD_EXTEND_U_I16x8_A32_S
  { 1076,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1076 = LOAD_EXTEND_U_I16x8_A64
  { 1077,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1077 = LOAD_EXTEND_U_I16x8_A64_S
  { 1078,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1078 = LOAD_EXTEND_U_I32x4_A32
  { 1079,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1079 = LOAD_EXTEND_U_I32x4_A32_S
  { 1080,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1080 = LOAD_EXTEND_U_I32x4_A64
  { 1081,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1081 = LOAD_EXTEND_U_I32x4_A64_S
  { 1082,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1082 = LOAD_EXTEND_U_I64x2_A32
  { 1083,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1083 = LOAD_EXTEND_U_I64x2_A32_S
  { 1084,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1084 = LOAD_EXTEND_U_I64x2_A64
  { 1085,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1085 = LOAD_EXTEND_U_I64x2_A64_S
  { 1086,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo156 },  // Inst #1086 = LOAD_F32_A32
  { 1087,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1087 = LOAD_F32_A32_S
  { 1088,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo157 },  // Inst #1088 = LOAD_F32_A64
  { 1089,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1089 = LOAD_F32_A64_S
  { 1090,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo158 },  // Inst #1090 = LOAD_F64_A32
  { 1091,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1091 = LOAD_F64_A32_S
  { 1092,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo159 },  // Inst #1092 = LOAD_F64_A64
  { 1093,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1093 = LOAD_F64_A64_S
  { 1094,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo61 },  // Inst #1094 = LOAD_I32_A32
  { 1095,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1095 = LOAD_I32_A32_S
  { 1096,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo63 },  // Inst #1096 = LOAD_I32_A64
  { 1097,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1097 = LOAD_I32_A64_S
  { 1098,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo65 },  // Inst #1098 = LOAD_I64_A32
  { 1099,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1099 = LOAD_I64_A32_S
  { 1100,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo66 },  // Inst #1100 = LOAD_I64_A64
  { 1101,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1101 = LOAD_I64_A64_S
  { 1102,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo160 },  // Inst #1102 = LOAD_LANE_I16x8_A32
  { 1103,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1103 = LOAD_LANE_I16x8_A32_S
  { 1104,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1104 = LOAD_LANE_I16x8_A64
  { 1105,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1105 = LOAD_LANE_I16x8_A64_S
  { 1106,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo160 },  // Inst #1106 = LOAD_LANE_I32x4_A32
  { 1107,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1107 = LOAD_LANE_I32x4_A32_S
  { 1108,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1108 = LOAD_LANE_I32x4_A64
  { 1109,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1109 = LOAD_LANE_I32x4_A64_S
  { 1110,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo160 },  // Inst #1110 = LOAD_LANE_I64x2_A32
  { 1111,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1111 = LOAD_LANE_I64x2_A32_S
  { 1112,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1112 = LOAD_LANE_I64x2_A64
  { 1113,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1113 = LOAD_LANE_I64x2_A64_S
  { 1114,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo160 },  // Inst #1114 = LOAD_LANE_I8x16_A32
  { 1115,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1115 = LOAD_LANE_I8x16_A32_S
  { 1116,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1116 = LOAD_LANE_I8x16_A64
  { 1117,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1117 = LOAD_LANE_I8x16_A64_S
  { 1118,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1118 = LOAD_V128_A32
  { 1119,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1119 = LOAD_V128_A32_S
  { 1120,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1120 = LOAD_V128_A64
  { 1121,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1121 = LOAD_V128_A64_S
  { 1122,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1122 = LOAD_ZERO_I32x4_A32
  { 1123,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1123 = LOAD_ZERO_I32x4_A32_S
  { 1124,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1124 = LOAD_ZERO_I32x4_A64
  { 1125,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1125 = LOAD_ZERO_I32x4_A64_S
  { 1126,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo154 },  // Inst #1126 = LOAD_ZERO_I64x2_A32
  { 1127,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1127 = LOAD_ZERO_I64x2_A32_S
  { 1128,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo155 },  // Inst #1128 = LOAD_ZERO_I64x2_A64
  { 1129,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1129 = LOAD_ZERO_I64x2_A64_S
  { 1130,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo164 },  // Inst #1130 = LOCAL_GET_EXTERNREF
  { 1131,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1131 = LOCAL_GET_EXTERNREF_S
  { 1132,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo166 },  // Inst #1132 = LOCAL_GET_F32
  { 1133,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1133 = LOCAL_GET_F32_S
  { 1134,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo167 },  // Inst #1134 = LOCAL_GET_F64
  { 1135,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1135 = LOCAL_GET_F64_S
  { 1136,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo168 },  // Inst #1136 = LOCAL_GET_FUNCREF
  { 1137,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1137 = LOCAL_GET_FUNCREF_S
  { 1138,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo169 },  // Inst #1138 = LOCAL_GET_I32
  { 1139,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1139 = LOCAL_GET_I32_S
  { 1140,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo170 },  // Inst #1140 = LOCAL_GET_I64
  { 1141,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1141 = LOCAL_GET_I64_S
  { 1142,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo171 },  // Inst #1142 = LOCAL_GET_V128
  { 1143,	1,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1143 = LOCAL_GET_V128_S
  { 1144,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo172 },  // Inst #1144 = LOCAL_SET_EXTERNREF
  { 1145,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1145 = LOCAL_SET_EXTERNREF_S
  { 1146,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo173 },  // Inst #1146 = LOCAL_SET_F32
  { 1147,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1147 = LOCAL_SET_F32_S
  { 1148,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo174 },  // Inst #1148 = LOCAL_SET_F64
  { 1149,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1149 = LOCAL_SET_F64_S
  { 1150,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo175 },  // Inst #1150 = LOCAL_SET_FUNCREF
  { 1151,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1151 = LOCAL_SET_FUNCREF_S
  { 1152,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo176 },  // Inst #1152 = LOCAL_SET_I32
  { 1153,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1153 = LOCAL_SET_I32_S
  { 1154,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo177 },  // Inst #1154 = LOCAL_SET_I64
  { 1155,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1155 = LOCAL_SET_I64_S
  { 1156,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo178 },  // Inst #1156 = LOCAL_SET_V128
  { 1157,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1157 = LOCAL_SET_V128_S
  { 1158,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo179 },  // Inst #1158 = LOCAL_TEE_EXTERNREF
  { 1159,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1159 = LOCAL_TEE_EXTERNREF_S
  { 1160,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo180 },  // Inst #1160 = LOCAL_TEE_F32
  { 1161,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1161 = LOCAL_TEE_F32_S
  { 1162,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo181 },  // Inst #1162 = LOCAL_TEE_F64
  { 1163,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1163 = LOCAL_TEE_F64_S
  { 1164,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo182 },  // Inst #1164 = LOCAL_TEE_FUNCREF
  { 1165,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1165 = LOCAL_TEE_FUNCREF_S
  { 1166,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo183 },  // Inst #1166 = LOCAL_TEE_I32
  { 1167,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1167 = LOCAL_TEE_I32_S
  { 1168,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo184 },  // Inst #1168 = LOCAL_TEE_I64
  { 1169,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1169 = LOCAL_TEE_I64_S
  { 1170,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo185 },  // Inst #1170 = LOCAL_TEE_V128
  { 1171,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo165 },  // Inst #1171 = LOCAL_TEE_V128_S
  { 1172,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #1172 = LOOP
  { 1173,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #1173 = LOOP_S
  { 1174,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #1174 = LT_F32
  { 1175,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1175 = LT_F32_S
  { 1176,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1176 = LT_F32x4
  { 1177,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1177 = LT_F32x4_S
  { 1178,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #1178 = LT_F64
  { 1179,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1179 = LT_F64_S
  { 1180,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1180 = LT_F64x2
  { 1181,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1181 = LT_F64x2_S
  { 1182,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1182 = LT_S_I16x8
  { 1183,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1183 = LT_S_I16x8_S
  { 1184,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1184 = LT_S_I32
  { 1185,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1185 = LT_S_I32_S
  { 1186,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1186 = LT_S_I32x4
  { 1187,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1187 = LT_S_I32x4_S
  { 1188,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1188 = LT_S_I64
  { 1189,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1189 = LT_S_I64_S
  { 1190,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1190 = LT_S_I8x16
  { 1191,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1191 = LT_S_I8x16_S
  { 1192,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1192 = LT_U_I16x8
  { 1193,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1193 = LT_U_I16x8_S
  { 1194,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1194 = LT_U_I32
  { 1195,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1195 = LT_U_I32_S
  { 1196,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1196 = LT_U_I32x4
  { 1197,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1197 = LT_U_I32x4_S
  { 1198,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1198 = LT_U_I64
  { 1199,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1199 = LT_U_I64_S
  { 1200,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1200 = LT_U_I8x16
  { 1201,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1201 = LT_U_I8x16_S
  { 1202,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1202 = MAX_F32
  { 1203,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1203 = MAX_F32_S
  { 1204,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1204 = MAX_F32x4
  { 1205,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1205 = MAX_F32x4_S
  { 1206,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1206 = MAX_F64
  { 1207,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1207 = MAX_F64_S
  { 1208,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1208 = MAX_F64x2
  { 1209,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1209 = MAX_F64x2_S
  { 1210,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1210 = MAX_S_I16x8
  { 1211,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1211 = MAX_S_I16x8_S
  { 1212,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1212 = MAX_S_I32x4
  { 1213,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1213 = MAX_S_I32x4_S
  { 1214,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1214 = MAX_S_I8x16
  { 1215,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1215 = MAX_S_I8x16_S
  { 1216,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1216 = MAX_U_I16x8
  { 1217,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1217 = MAX_U_I16x8_S
  { 1218,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1218 = MAX_U_I32x4
  { 1219,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1219 = MAX_U_I32x4_S
  { 1220,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1220 = MAX_U_I8x16
  { 1221,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1221 = MAX_U_I8x16_S
  { 1222,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo67 },  // Inst #1222 = MEMORY_ATOMIC_NOTIFY_A32
  { 1223,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1223 = MEMORY_ATOMIC_NOTIFY_A32_S
  { 1224,	5,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo68 },  // Inst #1224 = MEMORY_ATOMIC_NOTIFY_A64
  { 1225,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1225 = MEMORY_ATOMIC_NOTIFY_A64_S
  { 1226,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo186 },  // Inst #1226 = MEMORY_ATOMIC_WAIT32_A32
  { 1227,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1227 = MEMORY_ATOMIC_WAIT32_A32_S
  { 1228,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo187 },  // Inst #1228 = MEMORY_ATOMIC_WAIT32_A64
  { 1229,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1229 = MEMORY_ATOMIC_WAIT32_A64_S
  { 1230,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo188 },  // Inst #1230 = MEMORY_ATOMIC_WAIT64_A32
  { 1231,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1231 = MEMORY_ATOMIC_WAIT64_A32_S
  { 1232,	6,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo189 },  // Inst #1232 = MEMORY_ATOMIC_WAIT64_A64
  { 1233,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1233 = MEMORY_ATOMIC_WAIT64_A64_S
  { 1234,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1234 = MIN_F32
  { 1235,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1235 = MIN_F32_S
  { 1236,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1236 = MIN_F32x4
  { 1237,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1237 = MIN_F32x4_S
  { 1238,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1238 = MIN_F64
  { 1239,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1239 = MIN_F64_S
  { 1240,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1240 = MIN_F64x2
  { 1241,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1241 = MIN_F64x2_S
  { 1242,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1242 = MIN_S_I16x8
  { 1243,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1243 = MIN_S_I16x8_S
  { 1244,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1244 = MIN_S_I32x4
  { 1245,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1245 = MIN_S_I32x4_S
  { 1246,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1246 = MIN_S_I8x16
  { 1247,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1247 = MIN_S_I8x16_S
  { 1248,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1248 = MIN_U_I16x8
  { 1249,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1249 = MIN_U_I16x8_S
  { 1250,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1250 = MIN_U_I32x4
  { 1251,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1251 = MIN_U_I32x4_S
  { 1252,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1252 = MIN_U_I8x16
  { 1253,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1253 = MIN_U_I8x16_S
  { 1254,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1254 = MUL_F32
  { 1255,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1255 = MUL_F32_S
  { 1256,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1256 = MUL_F32x4
  { 1257,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1257 = MUL_F32x4_S
  { 1258,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1258 = MUL_F64
  { 1259,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1259 = MUL_F64_S
  { 1260,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1260 = MUL_F64x2
  { 1261,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1261 = MUL_F64x2_S
  { 1262,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1262 = MUL_I16x8
  { 1263,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1263 = MUL_I16x8_S
  { 1264,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1264 = MUL_I32
  { 1265,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1265 = MUL_I32_S
  { 1266,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1266 = MUL_I32x4
  { 1267,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1267 = MUL_I32x4_S
  { 1268,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1268 = MUL_I64
  { 1269,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1269 = MUL_I64_S
  { 1270,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1270 = MUL_I64x2
  { 1271,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1271 = MUL_I64x2_S
  { 1272,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1272 = NARROW_S_I16x8
  { 1273,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1273 = NARROW_S_I16x8_S
  { 1274,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1274 = NARROW_S_I8x16
  { 1275,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1275 = NARROW_S_I8x16_S
  { 1276,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1276 = NARROW_U_I16x8
  { 1277,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1277 = NARROW_U_I16x8_S
  { 1278,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1278 = NARROW_U_I8x16
  { 1279,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1279 = NARROW_U_I8x16_S
  { 1280,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #1280 = NEAREST_F32
  { 1281,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1281 = NEAREST_F32_S
  { 1282,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1282 = NEAREST_F32x4
  { 1283,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1283 = NEAREST_F32x4_S
  { 1284,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1284 = NEAREST_F64
  { 1285,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1285 = NEAREST_F64_S
  { 1286,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1286 = NEAREST_F64x2
  { 1287,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1287 = NEAREST_F64x2_S
  { 1288,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #1288 = NEG_F32
  { 1289,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1289 = NEG_F32_S
  { 1290,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1290 = NEG_F32x4
  { 1291,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1291 = NEG_F32x4_S
  { 1292,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1292 = NEG_F64
  { 1293,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1293 = NEG_F64_S
  { 1294,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1294 = NEG_F64x2
  { 1295,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1295 = NEG_F64x2_S
  { 1296,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1296 = NEG_I16x8
  { 1297,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1297 = NEG_I16x8_S
  { 1298,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1298 = NEG_I32x4
  { 1299,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1299 = NEG_I32x4_S
  { 1300,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1300 = NEG_I64x2
  { 1301,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1301 = NEG_I64x2_S
  { 1302,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1302 = NEG_I8x16
  { 1303,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1303 = NEG_I8x16_S
  { 1304,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo119 },  // Inst #1304 = NE_F32
  { 1305,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1305 = NE_F32_S
  { 1306,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1306 = NE_F32x4
  { 1307,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1307 = NE_F32x4_S
  { 1308,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo120 },  // Inst #1308 = NE_F64
  { 1309,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1309 = NE_F64_S
  { 1310,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1310 = NE_F64x2
  { 1311,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1311 = NE_F64x2_S
  { 1312,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1312 = NE_I16x8
  { 1313,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1313 = NE_I16x8_S
  { 1314,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1314 = NE_I32
  { 1315,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1315 = NE_I32_S
  { 1316,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1316 = NE_I32x4
  { 1317,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1317 = NE_I32x4_S
  { 1318,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo121 },  // Inst #1318 = NE_I64
  { 1319,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1319 = NE_I64_S
  { 1320,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1320 = NE_I8x16
  { 1321,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1321 = NE_I8x16_S
  { 1322,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1322 = NOP
  { 1323,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1323 = NOP_S
  { 1324,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1324 = NOT
  { 1325,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1325 = NOT_S
  { 1326,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1326 = OR
  { 1327,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1327 = OR_I32
  { 1328,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1328 = OR_I32_S
  { 1329,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1329 = OR_I64
  { 1330,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1330 = OR_I64_S
  { 1331,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1331 = OR_S
  { 1332,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1332 = PMAX_F32x4
  { 1333,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1333 = PMAX_F32x4_S
  { 1334,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1334 = PMAX_F64x2
  { 1335,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1335 = PMAX_F64x2_S
  { 1336,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1336 = PMIN_F32x4
  { 1337,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1337 = PMIN_F32x4_S
  { 1338,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1338 = PMIN_F64x2
  { 1339,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1339 = PMIN_F64x2_S
  { 1340,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo89 },  // Inst #1340 = POPCNT_I32
  { 1341,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1341 = POPCNT_I32_S
  { 1342,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo90 },  // Inst #1342 = POPCNT_I64
  { 1343,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1343 = POPCNT_I64_S
  { 1344,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1344 = POPCNT_I8x16
  { 1345,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1345 = POPCNT_I8x16_S
  { 1346,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo190 },  // Inst #1346 = PREFETCH_NT_A32
  { 1347,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1347 = PREFETCH_NT_A32_S
  { 1348,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo191 },  // Inst #1348 = PREFETCH_NT_A64
  { 1349,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1349 = PREFETCH_NT_A64_S
  { 1350,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo190 },  // Inst #1350 = PREFETCH_T_A32
  { 1351,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1351 = PREFETCH_T_A32_S
  { 1352,	3,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo191 },  // Inst #1352 = PREFETCH_T_A64
  { 1353,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1353 = PREFETCH_T_A64_S
  { 1354,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1354 = Q15MULR_SAT_S_I16x8
  { 1355,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1355 = Q15MULR_SAT_S_I16x8_S
  { 1356,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1356 = QFMA_F32x4
  { 1357,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1357 = QFMA_F32x4_S
  { 1358,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1358 = QFMA_F64x2
  { 1359,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1359 = QFMA_F64x2_S
  { 1360,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1360 = QFMS_F32x4
  { 1361,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1361 = QFMS_F32x4_S
  { 1362,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1362 = QFMS_F64x2
  { 1363,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1363 = QFMS_F64x2_S
  { 1364,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo192 },  // Inst #1364 = REF_NULL_EXTERNREF
  { 1365,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo193 },  // Inst #1365 = REF_NULL_EXTERNREF_S
  { 1366,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo194 },  // Inst #1366 = REF_NULL_FUNCREF
  { 1367,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo193 },  // Inst #1367 = REF_NULL_FUNCREF_S
  { 1368,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1368 = REM_S_I32
  { 1369,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1369 = REM_S_I32_S
  { 1370,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1370 = REM_S_I64
  { 1371,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1371 = REM_S_I64_S
  { 1372,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1372 = REM_U_I32
  { 1373,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1373 = REM_U_I32_S
  { 1374,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1374 = REM_U_I64
  { 1375,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1375 = REM_U_I64_S
  { 1376,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo195 },  // Inst #1376 = REPLACE_LANE_F32x4
  { 1377,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1377 = REPLACE_LANE_F32x4_S
  { 1378,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo196 },  // Inst #1378 = REPLACE_LANE_F64x2
  { 1379,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1379 = REPLACE_LANE_F64x2_S
  { 1380,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo197 },  // Inst #1380 = REPLACE_LANE_I16x8
  { 1381,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1381 = REPLACE_LANE_I16x8_S
  { 1382,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo197 },  // Inst #1382 = REPLACE_LANE_I32x4
  { 1383,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1383 = REPLACE_LANE_I32x4_S
  { 1384,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo198 },  // Inst #1384 = REPLACE_LANE_I64x2
  { 1385,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1385 = REPLACE_LANE_I64x2_S
  { 1386,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo197 },  // Inst #1386 = REPLACE_LANE_I8x16
  { 1387,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1387 = REPLACE_LANE_I8x16_S
  { 1388,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1388 = RETHROW
  { 1389,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1389 = RETHROW_S
  { 1390,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1390 = RETURN
  { 1391,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1391 = RETURN_S
  { 1392,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #1392 = RET_CALL
  { 1393,	2,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo86 },  // Inst #1393 = RET_CALL_INDIRECT
  { 1394,	2,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo86 },  // Inst #1394 = RET_CALL_INDIRECT_S
  { 1395,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo43 },  // Inst #1395 = RET_CALL_S
  { 1396,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1396 = ROTL_I32
  { 1397,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1397 = ROTL_I32_S
  { 1398,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1398 = ROTL_I64
  { 1399,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1399 = ROTL_I64_S
  { 1400,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1400 = ROTR_I32
  { 1401,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1401 = ROTR_I32_S
  { 1402,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1402 = ROTR_I64
  { 1403,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1403 = ROTR_I64_S
  { 1404,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo199 },  // Inst #1404 = SELECT_EXTERNREF
  { 1405,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1405 = SELECT_EXTERNREF_S
  { 1406,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo200 },  // Inst #1406 = SELECT_F32
  { 1407,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1407 = SELECT_F32_S
  { 1408,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo201 },  // Inst #1408 = SELECT_F64
  { 1409,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1409 = SELECT_F64_S
  { 1410,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo202 },  // Inst #1410 = SELECT_FUNCREF
  { 1411,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1411 = SELECT_FUNCREF_S
  { 1412,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo203 },  // Inst #1412 = SELECT_I32
  { 1413,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1413 = SELECT_I32_S
  { 1414,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo204 },  // Inst #1414 = SELECT_I64
  { 1415,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1415 = SELECT_I64_S
  { 1416,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo205 },  // Inst #1416 = SELECT_V128
  { 1417,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1417 = SELECT_V128_S
  { 1418,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1418 = SHL_I16x8
  { 1419,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1419 = SHL_I16x8_S
  { 1420,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1420 = SHL_I32
  { 1421,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1421 = SHL_I32_S
  { 1422,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1422 = SHL_I32x4
  { 1423,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1423 = SHL_I32x4_S
  { 1424,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1424 = SHL_I64
  { 1425,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1425 = SHL_I64_S
  { 1426,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1426 = SHL_I64x2
  { 1427,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1427 = SHL_I64x2_S
  { 1428,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1428 = SHL_I8x16
  { 1429,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1429 = SHL_I8x16_S
  { 1430,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1430 = SHR_S_I16x8
  { 1431,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1431 = SHR_S_I16x8_S
  { 1432,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1432 = SHR_S_I32
  { 1433,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1433 = SHR_S_I32_S
  { 1434,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1434 = SHR_S_I32x4
  { 1435,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1435 = SHR_S_I32x4_S
  { 1436,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1436 = SHR_S_I64
  { 1437,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1437 = SHR_S_I64_S
  { 1438,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1438 = SHR_S_I64x2
  { 1439,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1439 = SHR_S_I64x2_S
  { 1440,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1440 = SHR_S_I8x16
  { 1441,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1441 = SHR_S_I8x16_S
  { 1442,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1442 = SHR_U_I16x8
  { 1443,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1443 = SHR_U_I16x8_S
  { 1444,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1444 = SHR_U_I32
  { 1445,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1445 = SHR_U_I32_S
  { 1446,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1446 = SHR_U_I32x4
  { 1447,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1447 = SHR_U_I32x4_S
  { 1448,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1448 = SHR_U_I64
  { 1449,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1449 = SHR_U_I64_S
  { 1450,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1450 = SHR_U_I64x2
  { 1451,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1451 = SHR_U_I64x2_S
  { 1452,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo206 },  // Inst #1452 = SHR_U_I8x16
  { 1453,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1453 = SHR_U_I8x16_S
  { 1454,	19,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo207 },  // Inst #1454 = SHUFFLE
  { 1455,	16,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo110 },  // Inst #1455 = SHUFFLE_S
  { 1456,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo208 },  // Inst #1456 = SPLAT_F32x4
  { 1457,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1457 = SPLAT_F32x4_S
  { 1458,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo209 },  // Inst #1458 = SPLAT_F64x2
  { 1459,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1459 = SPLAT_F64x2_S
  { 1460,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo210 },  // Inst #1460 = SPLAT_I16x8
  { 1461,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1461 = SPLAT_I16x8_S
  { 1462,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo210 },  // Inst #1462 = SPLAT_I32x4
  { 1463,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1463 = SPLAT_I32x4_S
  { 1464,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo211 },  // Inst #1464 = SPLAT_I64x2
  { 1465,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1465 = SPLAT_I64x2_S
  { 1466,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo210 },  // Inst #1466 = SPLAT_I8x16
  { 1467,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1467 = SPLAT_I8x16_S
  { 1468,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #1468 = SQRT_F32
  { 1469,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1469 = SQRT_F32_S
  { 1470,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1470 = SQRT_F32x4
  { 1471,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1471 = SQRT_F32x4_S
  { 1472,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1472 = SQRT_F64
  { 1473,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1473 = SQRT_F64_S
  { 1474,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1474 = SQRT_F64x2
  { 1475,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1475 = SQRT_F64x2_S
  { 1476,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #1476 = STORE16_I32_A32
  { 1477,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1477 = STORE16_I32_A32_S
  { 1478,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #1478 = STORE16_I32_A64
  { 1479,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1479 = STORE16_I32_A64_S
  { 1480,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1480 = STORE16_I64_A32
  { 1481,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1481 = STORE16_I64_A32_S
  { 1482,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1482 = STORE16_I64_A64
  { 1483,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1483 = STORE16_I64_A64_S
  { 1484,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1484 = STORE32_I64_A32
  { 1485,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1485 = STORE32_I64_A32_S
  { 1486,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1486 = STORE32_I64_A64
  { 1487,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1487 = STORE32_I64_A64_S
  { 1488,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #1488 = STORE8_I32_A32
  { 1489,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1489 = STORE8_I32_A32_S
  { 1490,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #1490 = STORE8_I32_A64
  { 1491,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1491 = STORE8_I32_A64_S
  { 1492,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1492 = STORE8_I64_A32
  { 1493,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1493 = STORE8_I64_A32_S
  { 1494,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1494 = STORE8_I64_A64
  { 1495,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1495 = STORE8_I64_A64_S
  { 1496,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo212 },  // Inst #1496 = STORE_F32_A32
  { 1497,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1497 = STORE_F32_A32_S
  { 1498,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo213 },  // Inst #1498 = STORE_F32_A64
  { 1499,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1499 = STORE_F32_A64_S
  { 1500,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo214 },  // Inst #1500 = STORE_F64_A32
  { 1501,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1501 = STORE_F64_A32_S
  { 1502,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo215 },  // Inst #1502 = STORE_F64_A64
  { 1503,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1503 = STORE_F64_A64_S
  { 1504,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo75 },  // Inst #1504 = STORE_I32_A32
  { 1505,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1505 = STORE_I32_A32_S
  { 1506,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo76 },  // Inst #1506 = STORE_I32_A64
  { 1507,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1507 = STORE_I32_A64_S
  { 1508,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo77 },  // Inst #1508 = STORE_I64_A32
  { 1509,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1509 = STORE_I64_A32_S
  { 1510,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo78 },  // Inst #1510 = STORE_I64_A64
  { 1511,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1511 = STORE_I64_A64_S
  { 1512,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo216 },  // Inst #1512 = STORE_LANE_I16x8_A32
  { 1513,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1513 = STORE_LANE_I16x8_A32_S
  { 1514,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1514 = STORE_LANE_I16x8_A64
  { 1515,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1515 = STORE_LANE_I16x8_A64_S
  { 1516,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo216 },  // Inst #1516 = STORE_LANE_I32x4_A32
  { 1517,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1517 = STORE_LANE_I32x4_A32_S
  { 1518,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1518 = STORE_LANE_I32x4_A64
  { 1519,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1519 = STORE_LANE_I32x4_A64_S
  { 1520,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo216 },  // Inst #1520 = STORE_LANE_I64x2_A32
  { 1521,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1521 = STORE_LANE_I64x2_A32_S
  { 1522,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1522 = STORE_LANE_I64x2_A64
  { 1523,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1523 = STORE_LANE_I64x2_A64_S
  { 1524,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo216 },  // Inst #1524 = STORE_LANE_I8x16_A32
  { 1525,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo161 },  // Inst #1525 = STORE_LANE_I8x16_A32_S
  { 1526,	6,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo162 },  // Inst #1526 = STORE_LANE_I8x16_A64
  { 1527,	3,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo163 },  // Inst #1527 = STORE_LANE_I8x16_A64_S
  { 1528,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo217 },  // Inst #1528 = STORE_V128_A32
  { 1529,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo62 },  // Inst #1529 = STORE_V128_A32_S
  { 1530,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo218 },  // Inst #1530 = STORE_V128_A64
  { 1531,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo64 },  // Inst #1531 = STORE_V128_A64_S
  { 1532,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1532 = SUB_F32
  { 1533,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1533 = SUB_F32_S
  { 1534,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1534 = SUB_F32x4
  { 1535,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1535 = SUB_F32x4_S
  { 1536,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1536 = SUB_F64
  { 1537,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1537 = SUB_F64_S
  { 1538,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1538 = SUB_F64x2
  { 1539,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1539 = SUB_F64x2_S
  { 1540,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1540 = SUB_I16x8
  { 1541,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1541 = SUB_I16x8_S
  { 1542,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1542 = SUB_I32
  { 1543,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1543 = SUB_I32_S
  { 1544,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1544 = SUB_I32x4
  { 1545,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1545 = SUB_I32x4_S
  { 1546,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1546 = SUB_I64
  { 1547,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1547 = SUB_I64_S
  { 1548,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1548 = SUB_I64x2
  { 1549,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1549 = SUB_I64x2_S
  { 1550,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1550 = SUB_I8x16
  { 1551,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1551 = SUB_I8x16_S
  { 1552,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1552 = SUB_SAT_S_I16x8
  { 1553,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1553 = SUB_SAT_S_I16x8_S
  { 1554,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1554 = SUB_SAT_S_I8x16
  { 1555,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1555 = SUB_SAT_S_I8x16_S
  { 1556,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1556 = SUB_SAT_U_I16x8
  { 1557,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1557 = SUB_SAT_U_I16x8_S
  { 1558,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1558 = SUB_SAT_U_I8x16
  { 1559,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1559 = SUB_SAT_U_I8x16_S
  { 1560,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1560 = SWIZZLE
  { 1561,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1561 = SWIZZLE_S
  { 1562,	5,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo219 },  // Inst #1562 = TABLE_COPY
  { 1563,	2,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo220 },  // Inst #1563 = TABLE_COPY_S
  { 1564,	4,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo221 },  // Inst #1564 = TABLE_FILL_EXTERNREF
  { 1565,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1565 = TABLE_FILL_EXTERNREF_S
  { 1566,	4,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo223 },  // Inst #1566 = TABLE_FILL_FUNCREF
  { 1567,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1567 = TABLE_FILL_FUNCREF_S
  { 1568,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo224 },  // Inst #1568 = TABLE_GET_EXTERNREF
  { 1569,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1569 = TABLE_GET_EXTERNREF_S
  { 1570,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo225 },  // Inst #1570 = TABLE_GET_FUNCREF
  { 1571,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1571 = TABLE_GET_FUNCREF_S
  { 1572,	4,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo226 },  // Inst #1572 = TABLE_GROW_EXTERNREF
  { 1573,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1573 = TABLE_GROW_EXTERNREF_S
  { 1574,	4,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo227 },  // Inst #1574 = TABLE_GROW_FUNCREF
  { 1575,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1575 = TABLE_GROW_FUNCREF_S
  { 1576,	3,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo228 },  // Inst #1576 = TABLE_SET_EXTERNREF
  { 1577,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1577 = TABLE_SET_EXTERNREF_S
  { 1578,	3,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo229 },  // Inst #1578 = TABLE_SET_FUNCREF
  { 1579,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1579 = TABLE_SET_FUNCREF_S
  { 1580,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo230 },  // Inst #1580 = TABLE_SIZE
  { 1581,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo222 },  // Inst #1581 = TABLE_SIZE_S
  { 1582,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo231 },  // Inst #1582 = TEE_EXTERNREF
  { 1583,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1583 = TEE_EXTERNREF_S
  { 1584,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo48 },  // Inst #1584 = TEE_F32
  { 1585,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1585 = TEE_F32_S
  { 1586,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #1586 = TEE_F64
  { 1587,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1587 = TEE_F64_S
  { 1588,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo232 },  // Inst #1588 = TEE_FUNCREF
  { 1589,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1589 = TEE_FUNCREF_S
  { 1590,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1590 = TEE_I32
  { 1591,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1591 = TEE_I32_S
  { 1592,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1592 = TEE_I64
  { 1593,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1593 = TEE_I64_S
  { 1594,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1594 = TEE_V128
  { 1595,	0,	0,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1595 = TEE_V128_S
  { 1596,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo88 },  // Inst #1596 = THROW
  { 1597,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo88 },  // Inst #1597 = THROW_S
  { 1598,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo45 },  // Inst #1598 = TRUNC_F32
  { 1599,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1599 = TRUNC_F32_S
  { 1600,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1600 = TRUNC_F32x4
  { 1601,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1601 = TRUNC_F32x4_S
  { 1602,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo47 },  // Inst #1602 = TRUNC_F64
  { 1603,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1603 = TRUNC_F64_S
  { 1604,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1604 = TRUNC_F64x2
  { 1605,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1605 = TRUNC_F64x2_S
  { 1606,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #1606 = TRY
  { 1607,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo80 },  // Inst #1607 = TRY_S
  { 1608,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1608 = UNREACHABLE
  { 1609,	0,	0,	0,	0,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1609 = UNREACHABLE_S
  { 1610,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo233 },  // Inst #1610 = WIDEN_I8x16_TO_I32x4_S
  { 1611,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1611 = WIDEN_I8x16_TO_I32x4_S_S
  { 1612,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo233 },  // Inst #1612 = WIDEN_I8x16_TO_I32x4_U
  { 1613,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo123 },  // Inst #1613 = WIDEN_I8x16_TO_I32x4_U_S
  { 1614,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo49 },  // Inst #1614 = XOR
  { 1615,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo51 },  // Inst #1615 = XOR_I32
  { 1616,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1616 = XOR_I32_S
  { 1617,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo52 },  // Inst #1617 = XOR_I64
  { 1618,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1618 = XOR_I64_S
  { 1619,	0,	0,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1619 = XOR_S
  { 1620,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo234 },  // Inst #1620 = anonymous_2718MEMORY_GROW_A32
  { 1621,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1621 = anonymous_2718MEMORY_GROW_A32_S
  { 1622,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo58 },  // Inst #1622 = anonymous_2718MEMORY_SIZE_A32
  { 1623,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1623 = anonymous_2718MEMORY_SIZE_A32_S
  { 1624,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo235 },  // Inst #1624 = anonymous_2719MEMORY_GROW_A64
  { 1625,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1625 = anonymous_2719MEMORY_GROW_A64_S
  { 1626,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo59 },  // Inst #1626 = anonymous_2719MEMORY_SIZE_A64
  { 1627,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo3 },  // Inst #1627 = anonymous_2719MEMORY_SIZE_A64_S
  { 1628,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1628 = anonymous_4465SIGNSELECT_I8x16
  { 1629,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1629 = anonymous_4465SIGNSELECT_I8x16_S
  { 1630,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1630 = anonymous_4466SIGNSELECT_I16x8
  { 1631,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1631 = anonymous_4466SIGNSELECT_I16x8_S
  { 1632,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1632 = anonymous_4467SIGNSELECT_I32x4
  { 1633,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1633 = anonymous_4467SIGNSELECT_I32x4_S
  { 1634,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo79 },  // Inst #1634 = anonymous_4468SIGNSELECT_I64x2
  { 1635,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1635 = anonymous_4468SIGNSELECT_I64x2_S
  { 1636,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1636 = anonymous_4568DATA_DROP
  { 1637,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1637 = anonymous_4568DATA_DROP_S
  { 1638,	5,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo236 },  // Inst #1638 = anonymous_4568MEMORY_COPY_A32
  { 1639,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo237 },  // Inst #1639 = anonymous_4568MEMORY_COPY_A32_S
  { 1640,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo238 },  // Inst #1640 = anonymous_4568MEMORY_FILL_A32
  { 1641,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1641 = anonymous_4568MEMORY_FILL_A32_S
  { 1642,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo236 },  // Inst #1642 = anonymous_4568MEMORY_INIT_A32
  { 1643,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo237 },  // Inst #1643 = anonymous_4568MEMORY_INIT_A32_S
  { 1644,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1644 = anonymous_4569DATA_DROP
  { 1645,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1645 = anonymous_4569DATA_DROP_S
  { 1646,	5,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo239 },  // Inst #1646 = anonymous_4569MEMORY_COPY_A64
  { 1647,	2,	0,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo237 },  // Inst #1647 = anonymous_4569MEMORY_COPY_A64_S
  { 1648,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo240 },  // Inst #1648 = anonymous_4569MEMORY_FILL_A64
  { 1649,	1,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo96 },  // Inst #1649 = anonymous_4569MEMORY_FILL_A64_S
  { 1650,	5,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo241 },  // Inst #1650 = anonymous_4569MEMORY_INIT_A64
  { 1651,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo237 },  // Inst #1651 = anonymous_4569MEMORY_INIT_A64_S
  { 1652,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1652 = fp_to_sint_I32x4
  { 1653,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1653 = fp_to_sint_I32x4_S
  { 1654,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1654 = fp_to_uint_I32x4
  { 1655,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1655 = fp_to_uint_I32x4_S
  { 1656,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1656 = int_wasm_convert_low_signed_F64x2
  { 1657,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1657 = int_wasm_convert_low_signed_F64x2_S
  { 1658,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1658 = int_wasm_convert_low_unsigned_F64x2
  { 1659,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1659 = int_wasm_convert_low_unsigned_F64x2_S
  { 1660,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1660 = int_wasm_demote_zero_F32x4
  { 1661,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1661 = int_wasm_demote_zero_F32x4_S
  { 1662,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1662 = int_wasm_extadd_pairwise_signed_I16x8
  { 1663,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1663 = int_wasm_extadd_pairwise_signed_I16x8_S
  { 1664,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1664 = int_wasm_extadd_pairwise_signed_I32x4
  { 1665,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1665 = int_wasm_extadd_pairwise_signed_I32x4_S
  { 1666,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1666 = int_wasm_extadd_pairwise_unsigned_I16x8
  { 1667,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1667 = int_wasm_extadd_pairwise_unsigned_I16x8_S
  { 1668,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1668 = int_wasm_extadd_pairwise_unsigned_I32x4
  { 1669,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1669 = int_wasm_extadd_pairwise_unsigned_I32x4_S
  { 1670,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1670 = int_wasm_promote_low_F64x2
  { 1671,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1671 = int_wasm_promote_low_F64x2_S
  { 1672,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1672 = int_wasm_trunc_saturate_zero_signed_I32x4
  { 1673,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1673 = int_wasm_trunc_saturate_zero_signed_I32x4_S
  { 1674,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1674 = int_wasm_trunc_saturate_zero_unsigned_I32x4
  { 1675,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1675 = int_wasm_trunc_saturate_zero_unsigned_I32x4_S
  { 1676,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1676 = int_wasm_widen_high_signed_I64x2
  { 1677,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1677 = int_wasm_widen_high_signed_I64x2_S
  { 1678,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1678 = int_wasm_widen_high_unsigned_I64x2
  { 1679,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1679 = int_wasm_widen_high_unsigned_I64x2_S
  { 1680,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1680 = int_wasm_widen_low_signed_I64x2
  { 1681,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1681 = int_wasm_widen_low_signed_I64x2_S
  { 1682,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1682 = int_wasm_widen_low_unsigned_I64x2
  { 1683,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1683 = int_wasm_widen_low_unsigned_I64x2_S
  { 1684,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1684 = sint_to_fp_F32x4
  { 1685,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1685 = sint_to_fp_F32x4_S
  { 1686,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1686 = uint_to_fp_F32x4
  { 1687,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1687 = uint_to_fp_F32x4_S
  { 1688,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1688 = widen_high_s_I16x8
  { 1689,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1689 = widen_high_s_I16x8_S
  { 1690,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1690 = widen_high_s_I32x4
  { 1691,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1691 = widen_high_s_I32x4_S
  { 1692,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1692 = widen_high_u_I16x8
  { 1693,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1693 = widen_high_u_I16x8_S
  { 1694,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1694 = widen_high_u_I32x4
  { 1695,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1695 = widen_high_u_I32x4_S
  { 1696,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1696 = widen_low_s_I16x8
  { 1697,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1697 = widen_low_s_I16x8_S
  { 1698,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1698 = widen_low_s_I32x4
  { 1699,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1699 = widen_low_s_I32x4_S
  { 1700,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1700 = widen_low_u_I16x8
  { 1701,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1701 = widen_low_u_I16x8_S
  { 1702,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, OperandInfo46 },  // Inst #1702 = widen_low_u_I32x4
  { 1703,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList2, nullptr },  // Inst #1703 = widen_low_u_I32x4_S
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char WebAssemblyInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "LOAD_F32_A32\0"
  /* 22 */ "STORE_F32_A32\0"
  /* 36 */ "ATOMIC_STORE16_I32_A32\0"
  /* 59 */ "ATOMIC_STORE8_I32_A32\0"
  /* 81 */ "ATOMIC_RMW16_U_SUB_I32_A32\0"
  /* 108 */ "ATOMIC_RMW8_U_SUB_I32_A32\0"
  /* 134 */ "ATOMIC_RMW_SUB_I32_A32\0"
  /* 157 */ "ATOMIC_LOAD_I32_A32\0"
  /* 177 */ "ATOMIC_RMW16_U_ADD_I32_A32\0"
  /* 204 */ "ATOMIC_RMW8_U_ADD_I32_A32\0"
  /* 230 */ "ATOMIC_RMW_ADD_I32_A32\0"
  /* 253 */ "ATOMIC_RMW16_U_AND_I32_A32\0"
  /* 280 */ "ATOMIC_RMW8_U_AND_I32_A32\0"
  /* 306 */ "ATOMIC_RMW_AND_I32_A32\0"
  /* 329 */ "ATOMIC_STORE_I32_A32\0"
  /* 350 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32\0"
  /* 381 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32\0"
  /* 411 */ "ATOMIC_RMW_CMPXCHG_I32_A32\0"
  /* 438 */ "ATOMIC_RMW16_U_XCHG_I32_A32\0"
  /* 466 */ "ATOMIC_RMW8_U_XCHG_I32_A32\0"
  /* 493 */ "ATOMIC_RMW_XCHG_I32_A32\0"
  /* 517 */ "ATOMIC_RMW16_U_XOR_I32_A32\0"
  /* 544 */ "ATOMIC_RMW8_U_XOR_I32_A32\0"
  /* 570 */ "ATOMIC_RMW_XOR_I32_A32\0"
  /* 593 */ "ATOMIC_RMW16_U_OR_I32_A32\0"
  /* 619 */ "ATOMIC_RMW8_U_OR_I32_A32\0"
  /* 644 */ "ATOMIC_RMW_OR_I32_A32\0"
  /* 666 */ "LOAD16_S_I32_A32\0"
  /* 683 */ "LOAD8_S_I32_A32\0"
  /* 699 */ "ATOMIC_LOAD16_U_I32_A32\0"
  /* 723 */ "ATOMIC_LOAD8_U_I32_A32\0"
  /* 746 */ "MEMORY_ATOMIC_WAIT32_A32\0"
  /* 771 */ "LOAD_LANE_I64x2_A32\0"
  /* 791 */ "STORE_LANE_I64x2_A32\0"
  /* 812 */ "LOAD_ZERO_I64x2_A32\0"
  /* 832 */ "LOAD_EXTEND_S_I64x2_A32\0"
  /* 856 */ "LOAD_EXTEND_U_I64x2_A32\0"
  /* 880 */ "LOAD_F64_A32\0"
  /* 893 */ "STORE_F64_A32\0"
  /* 907 */ "ATOMIC_STORE32_I64_A32\0"
  /* 930 */ "ATOMIC_STORE16_I64_A32\0"
  /* 953 */ "ATOMIC_STORE8_I64_A32\0"
  /* 975 */ "ATOMIC_RMW32_U_SUB_I64_A32\0"
  /* 1002 */ "ATOMIC_RMW16_U_SUB_I64_A32\0"
  /* 1029 */ "ATOMIC_RMW8_U_SUB_I64_A32\0"
  /* 1055 */ "ATOMIC_RMW_SUB_I64_A32\0"
  /* 1078 */ "ATOMIC_LOAD_I64_A32\0"
  /* 1098 */ "ATOMIC_RMW32_U_ADD_I64_A32\0"
  /* 1125 */ "ATOMIC_RMW16_U_ADD_I64_A32\0"
  /* 1152 */ "ATOMIC_RMW8_U_ADD_I64_A32\0"
  /* 1178 */ "ATOMIC_RMW_ADD_I64_A32\0"
  /* 1201 */ "ATOMIC_RMW32_U_AND_I64_A32\0"
  /* 1228 */ "ATOMIC_RMW16_U_AND_I64_A32\0"
  /* 1255 */ "ATOMIC_RMW8_U_AND_I64_A32\0"
  /* 1281 */ "ATOMIC_RMW_AND_I64_A32\0"
  /* 1304 */ "ATOMIC_STORE_I64_A32\0"
  /* 1325 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32\0"
  /* 1356 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32\0"
  /* 1387 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32\0"
  /* 1417 */ "ATOMIC_RMW_CMPXCHG_I64_A32\0"
  /* 1444 */ "ATOMIC_RMW32_U_XCHG_I64_A32\0"
  /* 1472 */ "ATOMIC_RMW16_U_XCHG_I64_A32\0"
  /* 1500 */ "ATOMIC_RMW8_U_XCHG_I64_A32\0"
  /* 1527 */ "ATOMIC_RMW_XCHG_I64_A32\0"
  /* 1551 */ "ATOMIC_RMW32_U_XOR_I64_A32\0"
  /* 1578 */ "ATOMIC_RMW16_U_XOR_I64_A32\0"
  /* 1605 */ "ATOMIC_RMW8_U_XOR_I64_A32\0"
  /* 1631 */ "ATOMIC_RMW_XOR_I64_A32\0"
  /* 1654 */ "ATOMIC_RMW32_U_OR_I64_A32\0"
  /* 1680 */ "ATOMIC_RMW16_U_OR_I64_A32\0"
  /* 1706 */ "ATOMIC_RMW8_U_OR_I64_A32\0"
  /* 1731 */ "ATOMIC_RMW_OR_I64_A32\0"
  /* 1753 */ "LOAD32_S_I64_A32\0"
  /* 1770 */ "LOAD16_S_I64_A32\0"
  /* 1787 */ "LOAD8_S_I64_A32\0"
  /* 1803 */ "ATOMIC_LOAD32_U_I64_A32\0"
  /* 1827 */ "ATOMIC_LOAD16_U_I64_A32\0"
  /* 1851 */ "ATOMIC_LOAD8_U_I64_A32\0"
  /* 1874 */ "MEMORY_ATOMIC_WAIT64_A32\0"
  /* 1899 */ "LOAD_LANE_I32x4_A32\0"
  /* 1919 */ "STORE_LANE_I32x4_A32\0"
  /* 1940 */ "LOAD_ZERO_I32x4_A32\0"
  /* 1960 */ "LOAD_EXTEND_S_I32x4_A32\0"
  /* 1984 */ "LOAD_EXTEND_U_I32x4_A32\0"
  /* 2008 */ "LOAD_LANE_I8x16_A32\0"
  /* 2028 */ "STORE_LANE_I8x16_A32\0"
  /* 2049 */ "LOAD_V128_A32\0"
  /* 2063 */ "STORE_V128_A32\0"
  /* 2078 */ "LOAD_LANE_I16x8_A32\0"
  /* 2098 */ "STORE_LANE_I16x8_A32\0"
  /* 2119 */ "LOAD_EXTEND_S_I16x8_A32\0"
  /* 2143 */ "LOAD_EXTEND_U_I16x8_A32\0"
  /* 2167 */ "anonymous_2718MEMORY_SIZE_A32\0"
  /* 2197 */ "anonymous_4568MEMORY_FILL_A32\0"
  /* 2227 */ "LOAD32_SPLAT_A32\0"
  /* 2244 */ "LOAD64_SPLAT_A32\0"
  /* 2261 */ "LOAD16_SPLAT_A32\0"
  /* 2278 */ "LOAD8_SPLAT_A32\0"
  /* 2294 */ "anonymous_4568MEMORY_INIT_A32\0"
  /* 2324 */ "PREFETCH_NT_A32\0"
  /* 2340 */ "PREFETCH_T_A32\0"
  /* 2355 */ "anonymous_2718MEMORY_GROW_A32\0"
  /* 2385 */ "MEMORY_ATOMIC_NOTIFY_A32\0"
  /* 2410 */ "anonymous_4568MEMORY_COPY_A32\0"
  /* 2440 */ "FP_TO_SINT_I32_F32\0"
  /* 2459 */ "FP_TO_UINT_I32_F32\0"
  /* 2478 */ "FP_TO_SINT_I64_F32\0"
  /* 2497 */ "FP_TO_UINT_I64_F32\0"
  /* 2516 */ "SUB_F32\0"
  /* 2524 */ "TRUNC_F32\0"
  /* 2534 */ "ADD_F32\0"
  /* 2542 */ "LOCAL_TEE_F32\0"
  /* 2556 */ "GE_F32\0"
  /* 2563 */ "LE_F32\0"
  /* 2570 */ "NE_F32\0"
  /* 2577 */ "F64_PROMOTE_F32\0"
  /* 2593 */ "NEG_F32\0"
  /* 2601 */ "CEIL_F32\0"
  /* 2610 */ "MUL_F32\0"
  /* 2618 */ "COPYSIGN_F32\0"
  /* 2631 */ "MIN_F32\0"
  /* 2639 */ "DROP_F32\0"
  /* 2648 */ "EQ_F32\0"
  /* 2655 */ "FLOOR_F32\0"
  /* 2665 */ "ABS_F32\0"
  /* 2673 */ "I32_TRUNC_S_F32\0"
  /* 2689 */ "I64_TRUNC_S_F32\0"
  /* 2705 */ "I32_TRUNC_S_SAT_F32\0"
  /* 2725 */ "I64_TRUNC_S_SAT_F32\0"
  /* 2745 */ "I32_TRUNC_U_SAT_F32\0"
  /* 2765 */ "I64_TRUNC_U_SAT_F32\0"
  /* 2785 */ "SELECT_F32\0"
  /* 2796 */ "GLOBAL_GET_F32\0"
  /* 2811 */ "LOCAL_GET_F32\0"
  /* 2825 */ "I32_REINTERPRET_F32\0"
  /* 2845 */ "GLOBAL_SET_F32\0"
  /* 2860 */ "LOCAL_SET_F32\0"
  /* 2874 */ "GT_F32\0"
  /* 2881 */ "LT_F32\0"
  /* 2888 */ "SQRT_F32\0"
  /* 2897 */ "NEAREST_F32\0"
  /* 2909 */ "CONST_F32\0"
  /* 2919 */ "I32_TRUNC_U_F32\0"
  /* 2935 */ "I64_TRUNC_U_F32\0"
  /* 2951 */ "DIV_F32\0"
  /* 2959 */ "MAX_F32\0"
  /* 2967 */ "COPY_F32\0"
  /* 2976 */ "SUB_I32\0"
  /* 2984 */ "ADD_I32\0"
  /* 2992 */ "AND_I32\0"
  /* 3000 */ "LOCAL_TEE_I32\0"
  /* 3014 */ "BR_TABLE_I32\0"
  /* 3027 */ "NE_I32\0"
  /* 3034 */ "SHL_I32\0"
  /* 3042 */ "ROTL_I32\0"
  /* 3051 */ "MUL_I32\0"
  /* 3059 */ "DROP_I32\0"
  /* 3068 */ "EQ_I32\0"
  /* 3075 */ "XOR_I32\0"
  /* 3083 */ "ROTR_I32\0"
  /* 3092 */ "I32_EXTEND16_S_I32\0"
  /* 3111 */ "I32_EXTEND8_S_I32\0"
  /* 3129 */ "I64_EXTEND_S_I32\0"
  /* 3146 */ "GE_S_I32\0"
  /* 3155 */ "LE_S_I32\0"
  /* 3164 */ "REM_S_I32\0"
  /* 3174 */ "SHR_S_I32\0"
  /* 3184 */ "GT_S_I32\0"
  /* 3193 */ "LT_S_I32\0"
  /* 3202 */ "F32_CONVERT_S_I32\0"
  /* 3220 */ "F64_CONVERT_S_I32\0"
  /* 3238 */ "DIV_S_I32\0"
  /* 3248 */ "SELECT_I32\0"
  /* 3259 */ "GLOBAL_GET_I32\0"
  /* 3274 */ "LOCAL_GET_I32\0"
  /* 3288 */ "F32_REINTERPRET_I32\0"
  /* 3308 */ "GLOBAL_SET_I32\0"
  /* 3323 */ "LOCAL_SET_I32\0"
  /* 3337 */ "POPCNT_I32\0"
  /* 3348 */ "CONST_I32\0"
  /* 3358 */ "I64_EXTEND_U_I32\0"
  /* 3375 */ "GE_U_I32\0"
  /* 3384 */ "LE_U_I32\0"
  /* 3393 */ "REM_U_I32\0"
  /* 3403 */ "SHR_U_I32\0"
  /* 3413 */ "GT_U_I32\0"
  /* 3422 */ "LT_U_I32\0"
  /* 3431 */ "F32_CONVERT_U_I32\0"
  /* 3449 */ "F64_CONVERT_U_I32\0"
  /* 3467 */ "DIV_U_I32\0"
  /* 3477 */ "COPY_I32\0"
  /* 3486 */ "CLZ_I32\0"
  /* 3494 */ "EQZ_I32\0"
  /* 3502 */ "CTZ_I32\0"
  /* 3510 */ "ARGUMENT_v4f32\0"
  /* 3525 */ "ARGUMENT_f32\0"
  /* 3538 */ "ARGUMENT_v4i32\0"
  /* 3553 */ "ARGUMENT_i32\0"
  /* 3566 */ "G_FLOG2\0"
  /* 3574 */ "G_FEXP2\0"
  /* 3582 */ "CONST_V128_F64x2\0"
  /* 3599 */ "QFMA_F64x2\0"
  /* 3610 */ "SUB_F64x2\0"
  /* 3620 */ "TRUNC_F64x2\0"
  /* 3632 */ "ADD_F64x2\0"
  /* 3642 */ "GE_F64x2\0"
  /* 3651 */ "LE_F64x2\0"
  /* 3660 */ "REPLACE_LANE_F64x2\0"
  /* 3679 */ "EXTRACT_LANE_F64x2\0"
  /* 3698 */ "NEG_F64x2\0"
  /* 3708 */ "CEIL_F64x2\0"
  /* 3719 */ "MUL_F64x2\0"
  /* 3729 */ "PMIN_F64x2\0"
  /* 3740 */ "EQ_F64x2\0"
  /* 3749 */ "FLOOR_F64x2\0"
  /* 3761 */ "ABS_F64x2\0"
  /* 3771 */ "QFMS_F64x2\0"
  /* 3782 */ "SPLAT_F64x2\0"
  /* 3794 */ "GT_F64x2\0"
  /* 3803 */ "LT_F64x2\0"
  /* 3812 */ "SQRT_F64x2\0"
  /* 3823 */ "NEAREST_F64x2\0"
  /* 3837 */ "DIV_F64x2\0"
  /* 3847 */ "PMAX_F64x2\0"
  /* 3858 */ "int_wasm_convert_low_signed_F64x2\0"
  /* 3892 */ "int_wasm_convert_low_unsigned_F64x2\0"
  /* 3928 */ "int_wasm_promote_low_F64x2\0"
  /* 3955 */ "CONST_V128_I64x2\0"
  /* 3972 */ "SUB_I64x2\0"
  /* 3982 */ "ADD_I64x2\0"
  /* 3992 */ "REPLACE_LANE_I64x2\0"
  /* 4011 */ "EXTRACT_LANE_I64x2\0"
  /* 4030 */ "ALLTRUE_I64x2\0"
  /* 4044 */ "ANYTRUE_I64x2\0"
  /* 4058 */ "NEG_I64x2\0"
  /* 4068 */ "BITMASK_I64x2\0"
  /* 4082 */ "SHL_I64x2\0"
  /* 4092 */ "MUL_I64x2\0"
  /* 4102 */ "ABS_I64x2\0"
  /* 4112 */ "EXTMUL_HIGH_S_I64x2\0"
  /* 4132 */ "SHR_S_I64x2\0"
  /* 4144 */ "EXTMUL_LOW_S_I64x2\0"
  /* 4163 */ "SPLAT_I64x2\0"
  /* 4175 */ "anonymous_4468SIGNSELECT_I64x2\0"
  /* 4206 */ "EXTMUL_HIGH_U_I64x2\0"
  /* 4226 */ "SHR_U_I64x2\0"
  /* 4238 */ "EXTMUL_LOW_U_I64x2\0"
  /* 4257 */ "int_wasm_widen_high_signed_I64x2\0"
  /* 4290 */ "int_wasm_widen_low_signed_I64x2\0"
  /* 4322 */ "int_wasm_widen_high_unsigned_I64x2\0"
  /* 4357 */ "int_wasm_widen_low_unsigned_I64x2\0"
  /* 4391 */ "LOAD_F32_A64\0"
  /* 4404 */ "STORE_F32_A64\0"
  /* 4418 */ "ATOMIC_STORE16_I32_A64\0"
  /* 4441 */ "ATOMIC_STORE8_I32_A64\0"
  /* 4463 */ "ATOMIC_RMW16_U_SUB_I32_A64\0"
  /* 4490 */ "ATOMIC_RMW8_U_SUB_I32_A64\0"
  /* 4516 */ "ATOMIC_RMW_SUB_I32_A64\0"
  /* 4539 */ "ATOMIC_LOAD_I32_A64\0"
  /* 4559 */ "ATOMIC_RMW16_U_ADD_I32_A64\0"
  /* 4586 */ "ATOMIC_RMW8_U_ADD_I32_A64\0"
  /* 4612 */ "ATOMIC_RMW_ADD_I32_A64\0"
  /* 4635 */ "ATOMIC_RMW16_U_AND_I32_A64\0"
  /* 4662 */ "ATOMIC_RMW8_U_AND_I32_A64\0"
  /* 4688 */ "ATOMIC_RMW_AND_I32_A64\0"
  /* 4711 */ "ATOMIC_STORE_I32_A64\0"
  /* 4732 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64\0"
  /* 4763 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64\0"
  /* 4793 */ "ATOMIC_RMW_CMPXCHG_I32_A64\0"
  /* 4820 */ "ATOMIC_RMW16_U_XCHG_I32_A64\0"
  /* 4848 */ "ATOMIC_RMW8_U_XCHG_I32_A64\0"
  /* 4875 */ "ATOMIC_RMW_XCHG_I32_A64\0"
  /* 4899 */ "ATOMIC_RMW16_U_XOR_I32_A64\0"
  /* 4926 */ "ATOMIC_RMW8_U_XOR_I32_A64\0"
  /* 4952 */ "ATOMIC_RMW_XOR_I32_A64\0"
  /* 4975 */ "ATOMIC_RMW16_U_OR_I32_A64\0"
  /* 5001 */ "ATOMIC_RMW8_U_OR_I32_A64\0"
  /* 5026 */ "ATOMIC_RMW_OR_I32_A64\0"
  /* 5048 */ "LOAD16_S_I32_A64\0"
  /* 5065 */ "LOAD8_S_I32_A64\0"
  /* 5081 */ "ATOMIC_LOAD16_U_I32_A64\0"
  /* 5105 */ "ATOMIC_LOAD8_U_I32_A64\0"
  /* 5128 */ "MEMORY_ATOMIC_WAIT32_A64\0"
  /* 5153 */ "LOAD_LANE_I64x2_A64\0"
  /* 5173 */ "STORE_LANE_I64x2_A64\0"
  /* 5194 */ "LOAD_ZERO_I64x2_A64\0"
  /* 5214 */ "LOAD_EXTEND_S_I64x2_A64\0"
  /* 5238 */ "LOAD_EXTEND_U_I64x2_A64\0"
  /* 5262 */ "LOAD_F64_A64\0"
  /* 5275 */ "STORE_F64_A64\0"
  /* 5289 */ "ATOMIC_STORE32_I64_A64\0"
  /* 5312 */ "ATOMIC_STORE16_I64_A64\0"
  /* 5335 */ "ATOMIC_STORE8_I64_A64\0"
  /* 5357 */ "ATOMIC_RMW32_U_SUB_I64_A64\0"
  /* 5384 */ "ATOMIC_RMW16_U_SUB_I64_A64\0"
  /* 5411 */ "ATOMIC_RMW8_U_SUB_I64_A64\0"
  /* 5437 */ "ATOMIC_RMW_SUB_I64_A64\0"
  /* 5460 */ "ATOMIC_LOAD_I64_A64\0"
  /* 5480 */ "ATOMIC_RMW32_U_ADD_I64_A64\0"
  /* 5507 */ "ATOMIC_RMW16_U_ADD_I64_A64\0"
  /* 5534 */ "ATOMIC_RMW8_U_ADD_I64_A64\0"
  /* 5560 */ "ATOMIC_RMW_ADD_I64_A64\0"
  /* 5583 */ "ATOMIC_RMW32_U_AND_I64_A64\0"
  /* 5610 */ "ATOMIC_RMW16_U_AND_I64_A64\0"
  /* 5637 */ "ATOMIC_RMW8_U_AND_I64_A64\0"
  /* 5663 */ "ATOMIC_RMW_AND_I64_A64\0"
  /* 5686 */ "ATOMIC_STORE_I64_A64\0"
  /* 5707 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64\0"
  /* 5738 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64\0"
  /* 5769 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64\0"
  /* 5799 */ "ATOMIC_RMW_CMPXCHG_I64_A64\0"
  /* 5826 */ "ATOMIC_RMW32_U_XCHG_I64_A64\0"
  /* 5854 */ "ATOMIC_RMW16_U_XCHG_I64_A64\0"
  /* 5882 */ "ATOMIC_RMW8_U_XCHG_I64_A64\0"
  /* 5909 */ "ATOMIC_RMW_XCHG_I64_A64\0"
  /* 5933 */ "ATOMIC_RMW32_U_XOR_I64_A64\0"
  /* 5960 */ "ATOMIC_RMW16_U_XOR_I64_A64\0"
  /* 5987 */ "ATOMIC_RMW8_U_XOR_I64_A64\0"
  /* 6013 */ "ATOMIC_RMW_XOR_I64_A64\0"
  /* 6036 */ "ATOMIC_RMW32_U_OR_I64_A64\0"
  /* 6062 */ "ATOMIC_RMW16_U_OR_I64_A64\0"
  /* 6088 */ "ATOMIC_RMW8_U_OR_I64_A64\0"
  /* 6113 */ "ATOMIC_RMW_OR_I64_A64\0"
  /* 6135 */ "LOAD32_S_I64_A64\0"
  /* 6152 */ "LOAD16_S_I64_A64\0"
  /* 6169 */ "LOAD8_S_I64_A64\0"
  /* 6185 */ "ATOMIC_LOAD32_U_I64_A64\0"
  /* 6209 */ "ATOMIC_LOAD16_U_I64_A64\0"
  /* 6233 */ "ATOMIC_LOAD8_U_I64_A64\0"
  /* 6256 */ "MEMORY_ATOMIC_WAIT64_A64\0"
  /* 6281 */ "LOAD_LANE_I32x4_A64\0"
  /* 6301 */ "STORE_LANE_I32x4_A64\0"
  /* 6322 */ "LOAD_ZERO_I32x4_A64\0"
  /* 6342 */ "LOAD_EXTEND_S_I32x4_A64\0"
  /* 6366 */ "LOAD_EXTEND_U_I32x4_A64\0"
  /* 6390 */ "LOAD_LANE_I8x16_A64\0"
  /* 6410 */ "STORE_LANE_I8x16_A64\0"
  /* 6431 */ "LOAD_V128_A64\0"
  /* 6445 */ "STORE_V128_A64\0"
  /* 6460 */ "LOAD_LANE_I16x8_A64\0"
  /* 6480 */ "STORE_LANE_I16x8_A64\0"
  /* 6501 */ "LOAD_EXTEND_S_I16x8_A64\0"
  /* 6525 */ "LOAD_EXTEND_U_I16x8_A64\0"
  /* 6549 */ "anonymous_2719MEMORY_SIZE_A64\0"
  /* 6579 */ "anonymous_4569MEMORY_FILL_A64\0"
  /* 6609 */ "LOAD32_SPLAT_A64\0"
  /* 6626 */ "LOAD64_SPLAT_A64\0"
  /* 6643 */ "LOAD16_SPLAT_A64\0"
  /* 6660 */ "LOAD8_SPLAT_A64\0"
  /* 6676 */ "anonymous_4569MEMORY_INIT_A64\0"
  /* 6706 */ "PREFETCH_NT_A64\0"
  /* 6722 */ "PREFETCH_T_A64\0"
  /* 6737 */ "anonymous_2719MEMORY_GROW_A64\0"
  /* 6767 */ "MEMORY_ATOMIC_NOTIFY_A64\0"
  /* 6792 */ "anonymous_4569MEMORY_COPY_A64\0"
  /* 6822 */ "FP_TO_SINT_I32_F64\0"
  /* 6841 */ "FP_TO_UINT_I32_F64\0"
  /* 6860 */ "FP_TO_SINT_I64_F64\0"
  /* 6879 */ "FP_TO_UINT_I64_F64\0"
  /* 6898 */ "SUB_F64\0"
  /* 6906 */ "TRUNC_F64\0"
  /* 6916 */ "ADD_F64\0"
  /* 6924 */ "LOCAL_TEE_F64\0"
  /* 6938 */ "GE_F64\0"
  /* 6945 */ "LE_F64\0"
  /* 6952 */ "NE_F64\0"
  /* 6959 */ "F32_DEMOTE_F64\0"
  /* 6974 */ "NEG_F64\0"
  /* 6982 */ "CEIL_F64\0"
  /* 6991 */ "MUL_F64\0"
  /* 6999 */ "COPYSIGN_F64\0"
  /* 7012 */ "MIN_F64\0"
  /* 7020 */ "DROP_F64\0"
  /* 7029 */ "EQ_F64\0"
  /* 7036 */ "FLOOR_F64\0"
  /* 7046 */ "ABS_F64\0"
  /* 7054 */ "I32_TRUNC_S_F64\0"
  /* 7070 */ "I64_TRUNC_S_F64\0"
  /* 7086 */ "I32_TRUNC_S_SAT_F64\0"
  /* 7106 */ "I64_TRUNC_S_SAT_F64\0"
  /* 7126 */ "I32_TRUNC_U_SAT_F64\0"
  /* 7146 */ "I64_TRUNC_U_SAT_F64\0"
  /* 7166 */ "SELECT_F64\0"
  /* 7177 */ "GLOBAL_GET_F64\0"
  /* 7192 */ "LOCAL_GET_F64\0"
  /* 7206 */ "I64_REINTERPRET_F64\0"
  /* 7226 */ "GLOBAL_SET_F64\0"
  /* 7241 */ "LOCAL_SET_F64\0"
  /* 7255 */ "GT_F64\0"
  /* 7262 */ "LT_F64\0"
  /* 7269 */ "SQRT_F64\0"
  /* 7278 */ "NEAREST_F64\0"
  /* 7290 */ "CONST_F64\0"
  /* 7300 */ "I32_TRUNC_U_F64\0"
  /* 7316 */ "I64_TRUNC_U_F64\0"
  /* 7332 */ "DIV_F64\0"
  /* 7340 */ "MAX_F64\0"
  /* 7348 */ "COPY_F64\0"
  /* 7357 */ "SUB_I64\0"
  /* 7365 */ "ADD_I64\0"
  /* 7373 */ "AND_I64\0"
  /* 7381 */ "LOCAL_TEE_I64\0"
  /* 7395 */ "BR_TABLE_I64\0"
  /* 7408 */ "NE_I64\0"
  /* 7415 */ "SHL_I64\0"
  /* 7423 */ "ROTL_I64\0"
  /* 7432 */ "MUL_I64\0"
  /* 7440 */ "I32_WRAP_I64\0"
  /* 7453 */ "DROP_I64\0"
  /* 7462 */ "EQ_I64\0"
  /* 7469 */ "XOR_I64\0"
  /* 7477 */ "ROTR_I64\0"
  /* 7486 */ "I64_EXTEND32_S_I64\0"
  /* 7505 */ "I64_EXTEND16_S_I64\0"
  /* 7524 */ "I64_EXTEND8_S_I64\0"
  /* 7542 */ "GE_S_I64\0"
  /* 7551 */ "LE_S_I64\0"
  /* 7560 */ "REM_S_I64\0"
  /* 7570 */ "SHR_S_I64\0"
  /* 7580 */ "GT_S_I64\0"
  /* 7589 */ "LT_S_I64\0"
  /* 7598 */ "F32_CONVERT_S_I64\0"
  /* 7616 */ "F64_CONVERT_S_I64\0"
  /* 7634 */ "DIV_S_I64\0"
  /* 7644 */ "SELECT_I64\0"
  /* 7655 */ "GLOBAL_GET_I64\0"
  /* 7670 */ "LOCAL_GET_I64\0"
  /* 7684 */ "F64_REINTERPRET_I64\0"
  /* 7704 */ "GLOBAL_SET_I64\0"
  /* 7719 */ "LOCAL_SET_I64\0"
  /* 7733 */ "POPCNT_I64\0"
  /* 7744 */ "CONST_I64\0"
  /* 7754 */ "GE_U_I64\0"
  /* 7763 */ "LE_U_I64\0"
  /* 7772 */ "REM_U_I64\0"
  /* 7782 */ "SHR_U_I64\0"
  /* 7792 */ "GT_U_I64\0"
  /* 7801 */ "LT_U_I64\0"
  /* 7810 */ "F32_CONVERT_U_I64\0"
  /* 7828 */ "F64_CONVERT_U_I64\0"
  /* 7846 */ "DIV_U_I64\0"
  /* 7856 */ "COPY_I64\0"
  /* 7865 */ "CLZ_I64\0"
  /* 7873 */ "EQZ_I64\0"
  /* 7881 */ "CTZ_I64\0"
  /* 7889 */ "ARGUMENT_v2f64\0"
  /* 7904 */ "ARGUMENT_f64\0"
  /* 7917 */ "EQ_v2i64\0"
  /* 7926 */ "ARGUMENT_v2i64\0"
  /* 7941 */ "ARGUMENT_i64\0"
  /* 7954 */ "CONST_V128_F32x4\0"
  /* 7971 */ "QFMA_F32x4\0"
  /* 7982 */ "SUB_F32x4\0"
  /* 7992 */ "TRUNC_F32x4\0"
  /* 8004 */ "ADD_F32x4\0"
  /* 8014 */ "GE_F32x4\0"
  /* 8023 */ "LE_F32x4\0"
  /* 8032 */ "REPLACE_LANE_F32x4\0"
  /* 8051 */ "EXTRACT_LANE_F32x4\0"
  /* 8070 */ "NEG_F32x4\0"
  /* 8080 */ "CEIL_F32x4\0"
  /* 8091 */ "MUL_F32x4\0"
  /* 8101 */ "PMIN_F32x4\0"
  /* 8112 */ "EQ_F32x4\0"
  /* 8121 */ "FLOOR_F32x4\0"
  /* 8133 */ "ABS_F32x4\0"
  /* 8143 */ "QFMS_F32x4\0"
  /* 8154 */ "SPLAT_F32x4\0"
  /* 8166 */ "GT_F32x4\0"
  /* 8175 */ "LT_F32x4\0"
  /* 8184 */ "SQRT_F32x4\0"
  /* 8195 */ "NEAREST_F32x4\0"
  /* 8209 */ "DIV_F32x4\0"
  /* 8219 */ "PMAX_F32x4\0"
  /* 8230 */ "int_wasm_demote_zero_F32x4\0"
  /* 8257 */ "sint_to_fp_F32x4\0"
  /* 8274 */ "uint_to_fp_F32x4\0"
  /* 8291 */ "CONST_V128_I32x4\0"
  /* 8308 */ "SUB_I32x4\0"
  /* 8318 */ "ADD_I32x4\0"
  /* 8328 */ "REPLACE_LANE_I32x4\0"
  /* 8347 */ "EXTRACT_LANE_I32x4\0"
  /* 8366 */ "ALLTRUE_I32x4\0"
  /* 8380 */ "ANYTRUE_I32x4\0"
  /* 8394 */ "NEG_I32x4\0"
  /* 8404 */ "BITMASK_I32x4\0"
  /* 8418 */ "SHL_I32x4\0"
  /* 8428 */ "MUL_I32x4\0"
  /* 8438 */ "EQ_I32x4\0"
  /* 8447 */ "ABS_I32x4\0"
  /* 8457 */ "GE_S_I32x4\0"
  /* 8468 */ "LE_S_I32x4\0"
  /* 8479 */ "EXTMUL_HIGH_S_I32x4\0"
  /* 8499 */ "MIN_S_I32x4\0"
  /* 8511 */ "SHR_S_I32x4\0"
  /* 8523 */ "GT_S_I32x4\0"
  /* 8534 */ "LT_S_I32x4\0"
  /* 8545 */ "EXTMUL_LOW_S_I32x4\0"
  /* 8564 */ "MAX_S_I32x4\0"
  /* 8576 */ "SPLAT_I32x4\0"
  /* 8588 */ "anonymous_4467SIGNSELECT_I32x4\0"
  /* 8619 */ "GE_U_I32x4\0"
  /* 8630 */ "LE_U_I32x4\0"
  /* 8641 */ "EXTMUL_HIGH_U_I32x4\0"
  /* 8661 */ "MIN_U_I32x4\0"
  /* 8673 */ "SHR_U_I32x4\0"
  /* 8685 */ "GT_U_I32x4\0"
  /* 8696 */ "LT_U_I32x4\0"
  /* 8707 */ "EXTMUL_LOW_U_I32x4\0"
  /* 8726 */ "MAX_U_I32x4\0"
  /* 8738 */ "int_wasm_extadd_pairwise_signed_I32x4\0"
  /* 8776 */ "int_wasm_trunc_saturate_zero_signed_I32x4\0"
  /* 8818 */ "int_wasm_extadd_pairwise_unsigned_I32x4\0"
  /* 8858 */ "int_wasm_trunc_saturate_zero_unsigned_I32x4\0"
  /* 8902 */ "widen_high_s_I32x4\0"
  /* 8921 */ "widen_low_s_I32x4\0"
  /* 8939 */ "fp_to_sint_I32x4\0"
  /* 8956 */ "fp_to_uint_I32x4\0"
  /* 8973 */ "widen_high_u_I32x4\0"
  /* 8992 */ "widen_low_u_I32x4\0"
  /* 9010 */ "ARGUMENT_v8i16\0"
  /* 9025 */ "CONST_V128_I8x16\0"
  /* 9042 */ "SUB_I8x16\0"
  /* 9052 */ "ADD_I8x16\0"
  /* 9062 */ "REPLACE_LANE_I8x16\0"
  /* 9081 */ "ALLTRUE_I8x16\0"
  /* 9095 */ "ANYTRUE_I8x16\0"
  /* 9109 */ "NEG_I8x16\0"
  /* 9119 */ "BITMASK_I8x16\0"
  /* 9133 */ "SHL_I8x16\0"
  /* 9143 */ "EQ_I8x16\0"
  /* 9152 */ "ABS_I8x16\0"
  /* 9162 */ "GE_S_I8x16\0"
  /* 9173 */ "LE_S_I8x16\0"
  /* 9184 */ "MIN_S_I8x16\0"
  /* 9196 */ "SHR_S_I8x16\0"
  /* 9208 */ "SUB_SAT_S_I8x16\0"
  /* 9224 */ "ADD_SAT_S_I8x16\0"
  /* 9240 */ "GT_S_I8x16\0"
  /* 9251 */ "LT_S_I8x16\0"
  /* 9262 */ "NARROW_S_I8x16\0"
  /* 9277 */ "MAX_S_I8x16\0"
  /* 9289 */ "SPLAT_I8x16\0"
  /* 9301 */ "anonymous_4465SIGNSELECT_I8x16\0"
  /* 9332 */ "POPCNT_I8x16\0"
  /* 9345 */ "GE_U_I8x16\0"
  /* 9356 */ "LE_U_I8x16\0"
  /* 9367 */ "MIN_U_I8x16\0"
  /* 9379 */ "AVGR_U_I8x16\0"
  /* 9392 */ "SHR_U_I8x16\0"
  /* 9404 */ "SUB_SAT_U_I8x16\0"
  /* 9420 */ "ADD_SAT_U_I8x16\0"
  /* 9436 */ "GT_U_I8x16\0"
  /* 9447 */ "LT_U_I8x16\0"
  /* 9458 */ "NARROW_U_I8x16\0"
  /* 9473 */ "MAX_U_I8x16\0"
  /* 9485 */ "LOCAL_TEE_V128\0"
  /* 9500 */ "DROP_V128\0"
  /* 9510 */ "SELECT_V128\0"
  /* 9522 */ "GLOBAL_GET_V128\0"
  /* 9538 */ "LOCAL_GET_V128\0"
  /* 9553 */ "GLOBAL_SET_V128\0"
  /* 9569 */ "LOCAL_SET_V128\0"
  /* 9584 */ "COPY_V128\0"
  /* 9594 */ "ARGUMENT_v16i8\0"
  /* 9609 */ "CONST_V128_I16x8\0"
  /* 9626 */ "SUB_I16x8\0"
  /* 9636 */ "ADD_I16x8\0"
  /* 9646 */ "REPLACE_LANE_I16x8\0"
  /* 9665 */ "ALLTRUE_I16x8\0"
  /* 9679 */ "ANYTRUE_I16x8\0"
  /* 9693 */ "NEG_I16x8\0"
  /* 9703 */ "BITMASK_I16x8\0"
  /* 9717 */ "SHL_I16x8\0"
  /* 9727 */ "MUL_I16x8\0"
  /* 9737 */ "EQ_I16x8\0"
  /* 9746 */ "ABS_I16x8\0"
  /* 9756 */ "GE_S_I16x8\0"
  /* 9767 */ "LE_S_I16x8\0"
  /* 9778 */ "EXTMUL_HIGH_S_I16x8\0"
  /* 9798 */ "MIN_S_I16x8\0"
  /* 9810 */ "SHR_S_I16x8\0"
  /* 9822 */ "SUB_SAT_S_I16x8\0"
  /* 9838 */ "ADD_SAT_S_I16x8\0"
  /* 9854 */ "Q15MULR_SAT_S_I16x8\0"
  /* 9874 */ "GT_S_I16x8\0"
  /* 9885 */ "LT_S_I16x8\0"
  /* 9896 */ "EXTMUL_LOW_S_I16x8\0"
  /* 9915 */ "NARROW_S_I16x8\0"
  /* 9930 */ "MAX_S_I16x8\0"
  /* 9942 */ "SPLAT_I16x8\0"
  /* 9954 */ "anonymous_4466SIGNSELECT_I16x8\0"
  /* 9985 */ "GE_U_I16x8\0"
  /* 9996 */ "LE_U_I16x8\0"
  /* 10007 */ "EXTMUL_HIGH_U_I16x8\0"
  /* 10027 */ "MIN_U_I16x8\0"
  /* 10039 */ "AVGR_U_I16x8\0"
  /* 10052 */ "SHR_U_I16x8\0"
  /* 10064 */ "SUB_SAT_U_I16x8\0"
  /* 10080 */ "ADD_SAT_U_I16x8\0"
  /* 10096 */ "GT_U_I16x8\0"
  /* 10107 */ "LT_U_I16x8\0"
  /* 10118 */ "EXTMUL_LOW_U_I16x8\0"
  /* 10137 */ "NARROW_U_I16x8\0"
  /* 10152 */ "MAX_U_I16x8\0"
  /* 10164 */ "int_wasm_extadd_pairwise_signed_I16x8\0"
  /* 10202 */ "int_wasm_extadd_pairwise_unsigned_I16x8\0"
  /* 10242 */ "widen_high_s_I16x8\0"
  /* 10261 */ "widen_low_s_I16x8\0"
  /* 10279 */ "widen_high_u_I16x8\0"
  /* 10298 */ "widen_low_u_I16x8\0"
  /* 10316 */ "G_FMA\0"
  /* 10322 */ "G_STRICT_FMA\0"
  /* 10335 */ "G_FSUB\0"
  /* 10342 */ "G_STRICT_FSUB\0"
  /* 10356 */ "G_ATOMICRMW_FSUB\0"
  /* 10373 */ "G_SUB\0"
  /* 10379 */ "G_ATOMICRMW_SUB\0"
  /* 10395 */ "G_INTRINSIC\0"
  /* 10407 */ "G_FPTRUNC\0"
  /* 10417 */ "G_INTRINSIC_TRUNC\0"
  /* 10435 */ "G_TRUNC\0"
  /* 10443 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 10464 */ "G_DYN_STACKALLOC\0"
  /* 10481 */ "G_FMAD\0"
  /* 10488 */ "G_INDEXED_SEXTLOAD\0"
  /* 10507 */ "G_SEXTLOAD\0"
  /* 10518 */ "G_INDEXED_ZEXTLOAD\0"
  /* 10537 */ "G_ZEXTLOAD\0"
  /* 10548 */ "G_INDEXED_LOAD\0"
  /* 10563 */ "G_LOAD\0"
  /* 10570 */ "G_VECREDUCE_FADD\0"
  /* 10587 */ "G_FADD\0"
  /* 10594 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 10615 */ "G_STRICT_FADD\0"
  /* 10629 */ "G_ATOMICRMW_FADD\0"
  /* 10646 */ "G_VECREDUCE_ADD\0"
  /* 10662 */ "G_ADD\0"
  /* 10668 */ "G_PTR_ADD\0"
  /* 10678 */ "G_ATOMICRMW_ADD\0"
  /* 10694 */ "G_ATOMICRMW_NAND\0"
  /* 10711 */ "G_VECREDUCE_AND\0"
  /* 10727 */ "G_AND\0"
  /* 10733 */ "G_ATOMICRMW_AND\0"
  /* 10749 */ "LIFETIME_END\0"
  /* 10762 */ "G_BRCOND\0"
  /* 10771 */ "G_INTRINSIC_ROUND\0"
  /* 10789 */ "LOAD_STACK_GUARD\0"
  /* 10806 */ "PSEUDO_PROBE\0"
  /* 10819 */ "G_SSUBE\0"
  /* 10827 */ "G_USUBE\0"
  /* 10835 */ "ATOMIC_FENCE\0"
  /* 10848 */ "G_FENCE\0"
  /* 10856 */ "COMPILER_FENCE\0"
  /* 10871 */ "REG_SEQUENCE\0"
  /* 10884 */ "G_SADDE\0"
  /* 10892 */ "G_UADDE\0"
  /* 10900 */ "G_FMINNUM_IEEE\0"
  /* 10915 */ "G_FMAXNUM_IEEE\0"
  /* 10930 */ "DEBUG_UNREACHABLE\0"
  /* 10948 */ "G_JUMP_TABLE\0"
  /* 10961 */ "BUNDLE\0"
  /* 10968 */ "SHUFFLE\0"
  /* 10976 */ "SWIZZLE\0"
  /* 10984 */ "LOCAL_ESCAPE\0"
  /* 10997 */ "G_INDEXED_STORE\0"
  /* 11013 */ "G_STORE\0"
  /* 11021 */ "ELSE\0"
  /* 11026 */ "G_BITREVERSE\0"
  /* 11039 */ "DBG_VALUE\0"
  /* 11049 */ "G_GLOBAL_VALUE\0"
  /* 11064 */ "G_MEMMOVE\0"
  /* 11074 */ "G_FREEZE\0"
  /* 11083 */ "G_FCANONICALIZE\0"
  /* 11099 */ "TABLE_SIZE\0"
  /* 11110 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 11128 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 11146 */ "G_IMPLICIT_DEF\0"
  /* 11161 */ "LOCAL_TEE_FUNCREF\0"
  /* 11179 */ "TABLE_FILL_FUNCREF\0"
  /* 11198 */ "REF_NULL_FUNCREF\0"
  /* 11215 */ "DROP_FUNCREF\0"
  /* 11228 */ "SELECT_FUNCREF\0"
  /* 11243 */ "TABLE_GET_FUNCREF\0"
  /* 11261 */ "GLOBAL_GET_FUNCREF\0"
  /* 11280 */ "LOCAL_GET_FUNCREF\0"
  /* 11298 */ "TABLE_SET_FUNCREF\0"
  /* 11316 */ "GLOBAL_SET_FUNCREF\0"
  /* 11335 */ "LOCAL_SET_FUNCREF\0"
  /* 11353 */ "TABLE_GROW_FUNCREF\0"
  /* 11372 */ "COPY_FUNCREF\0"
  /* 11385 */ "LOCAL_TEE_EXTERNREF\0"
  /* 11405 */ "TABLE_FILL_EXTERNREF\0"
  /* 11426 */ "REF_NULL_EXTERNREF\0"
  /* 11445 */ "DROP_EXTERNREF\0"
  /* 11460 */ "SELECT_EXTERNREF\0"
  /* 11477 */ "TABLE_GET_EXTERNREF\0"
  /* 11497 */ "GLOBAL_GET_EXTERNREF\0"
  /* 11518 */ "LOCAL_GET_EXTERNREF\0"
  /* 11538 */ "TABLE_SET_EXTERNREF\0"
  /* 11558 */ "GLOBAL_SET_EXTERNREF\0"
  /* 11579 */ "LOCAL_SET_EXTERNREF\0"
  /* 11599 */ "TABLE_GROW_EXTERNREF\0"
  /* 11620 */ "COPY_EXTERNREF\0"
  /* 11635 */ "DBG_INSTR_REF\0"
  /* 11649 */ "END_IF\0"
  /* 11656 */ "BR_IF\0"
  /* 11662 */ "G_FNEG\0"
  /* 11669 */ "EXTRACT_SUBREG\0"
  /* 11684 */ "INSERT_SUBREG\0"
  /* 11698 */ "G_SEXT_INREG\0"
  /* 11711 */ "SUBREG_TO_REG\0"
  /* 11725 */ "G_ATOMIC_CMPXCHG\0"
  /* 11742 */ "G_ATOMICRMW_XCHG\0"
  /* 11759 */ "G_FLOG\0"
  /* 11766 */ "G_VAARG\0"
  /* 11774 */ "PREALLOCATED_ARG\0"
  /* 11791 */ "CATCH\0"
  /* 11797 */ "G_SMULH\0"
  /* 11805 */ "G_UMULH\0"
  /* 11813 */ "G_PHI\0"
  /* 11819 */ "G_FPTOSI\0"
  /* 11828 */ "G_FPTOUI\0"
  /* 11837 */ "G_FPOWI\0"
  /* 11845 */ "END_BLOCK\0"
  /* 11855 */ "G_PTRMASK\0"
  /* 11865 */ "GC_LABEL\0"
  /* 11874 */ "DBG_LABEL\0"
  /* 11884 */ "EH_LABEL\0"
  /* 11893 */ "ANNOTATION_LABEL\0"
  /* 11910 */ "ICALL_BRANCH_FUNNEL\0"
  /* 11930 */ "G_FSHL\0"
  /* 11937 */ "G_SHL\0"
  /* 11943 */ "G_FCEIL\0"
  /* 11951 */ "PATCHABLE_TAIL_CALL\0"
  /* 11971 */ "RET_CALL\0"
  /* 11980 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 12007 */ "PATCHABLE_EVENT_CALL\0"
  /* 12028 */ "FENTRY_CALL\0"
  /* 12040 */ "CATCH_ALL\0"
  /* 12050 */ "KILL\0"
  /* 12055 */ "G_VECREDUCE_FMUL\0"
  /* 12072 */ "G_FMUL\0"
  /* 12079 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 12100 */ "G_STRICT_FMUL\0"
  /* 12114 */ "G_VECREDUCE_MUL\0"
  /* 12130 */ "G_MUL\0"
  /* 12136 */ "G_FREM\0"
  /* 12143 */ "G_STRICT_FREM\0"
  /* 12157 */ "G_SREM\0"
  /* 12164 */ "G_UREM\0"
  /* 12171 */ "INLINEASM\0"
  /* 12181 */ "G_FMINIMUM\0"
  /* 12192 */ "G_FMAXIMUM\0"
  /* 12203 */ "G_FMINNUM\0"
  /* 12213 */ "G_FMAXNUM\0"
  /* 12223 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 12245 */ "G_FCOPYSIGN\0"
  /* 12257 */ "G_VECREDUCE_FMIN\0"
  /* 12274 */ "G_VECREDUCE_SMIN\0"
  /* 12291 */ "G_SMIN\0"
  /* 12298 */ "G_VECREDUCE_UMIN\0"
  /* 12315 */ "G_UMIN\0"
  /* 12322 */ "G_ATOMICRMW_UMIN\0"
  /* 12339 */ "G_ATOMICRMW_MIN\0"
  /* 12355 */ "G_FSIN\0"
  /* 12362 */ "END_FUNCTION\0"
  /* 12375 */ "CFI_INSTRUCTION\0"
  /* 12391 */ "FALLTHROUGH_RETURN\0"
  /* 12410 */ "ADJCALLSTACKDOWN\0"
  /* 12427 */ "G_SSUBO\0"
  /* 12435 */ "G_USUBO\0"
  /* 12443 */ "G_SADDO\0"
  /* 12451 */ "G_UADDO\0"
  /* 12459 */ "G_SMULO\0"
  /* 12467 */ "G_UMULO\0"
  /* 12475 */ "STACKMAP\0"
  /* 12484 */ "G_BSWAP\0"
  /* 12492 */ "G_SITOFP\0"
  /* 12501 */ "G_UITOFP\0"
  /* 12510 */ "G_FCMP\0"
  /* 12517 */ "G_ICMP\0"
  /* 12524 */ "NOP\0"
  /* 12528 */ "END_LOOP\0"
  /* 12537 */ "G_CTPOP\0"
  /* 12545 */ "anonymous_4568DATA_DROP\0"
  /* 12569 */ "anonymous_4569DATA_DROP\0"
  /* 12593 */ "PATCHABLE_OP\0"
  /* 12606 */ "FAULTING_OP\0"
  /* 12618 */ "ADJCALLSTACKUP\0"
  /* 12633 */ "PREALLOCATED_SETUP\0"
  /* 12652 */ "G_FEXP\0"
  /* 12659 */ "G_BR\0"
  /* 12664 */ "INLINEASM_BR\0"
  /* 12677 */ "G_BLOCK_ADDR\0"
  /* 12690 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 12715 */ "G_READCYCLECOUNTER\0"
  /* 12734 */ "G_READ_REGISTER\0"
  /* 12750 */ "G_WRITE_REGISTER\0"
  /* 12767 */ "G_ASHR\0"
  /* 12774 */ "G_FSHR\0"
  /* 12781 */ "G_LSHR\0"
  /* 12788 */ "G_FFLOOR\0"
  /* 12797 */ "G_BUILD_VECTOR\0"
  /* 12812 */ "G_SHUFFLE_VECTOR\0"
  /* 12829 */ "G_VECREDUCE_XOR\0"
  /* 12845 */ "G_XOR\0"
  /* 12851 */ "G_ATOMICRMW_XOR\0"
  /* 12867 */ "G_VECREDUCE_OR\0"
  /* 12882 */ "G_OR\0"
  /* 12887 */ "G_ATOMICRMW_OR\0"
  /* 12902 */ "G_INTTOPTR\0"
  /* 12913 */ "G_FABS\0"
  /* 12920 */ "G_ABS\0"
  /* 12926 */ "G_UNMERGE_VALUES\0"
  /* 12943 */ "G_MERGE_VALUES\0"
  /* 12958 */ "CALL_PARAMS\0"
  /* 12970 */ "G_FCOS\0"
  /* 12977 */ "G_CONCAT_VECTORS\0"
  /* 12994 */ "COPY_TO_REGCLASS\0"
  /* 13011 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 13041 */ "BR_UNLESS\0"
  /* 13051 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 13078 */ "RET_CALL_RESULTS\0"
  /* 13095 */ "LOAD_F32_A32_S\0"
  /* 13110 */ "STORE_F32_A32_S\0"
  /* 13126 */ "ATOMIC_STORE16_I32_A32_S\0"
  /* 13151 */ "ATOMIC_STORE8_I32_A32_S\0"
  /* 13175 */ "ATOMIC_RMW16_U_SUB_I32_A32_S\0"
  /* 13204 */ "ATOMIC_RMW8_U_SUB_I32_A32_S\0"
  /* 13232 */ "ATOMIC_RMW_SUB_I32_A32_S\0"
  /* 13257 */ "ATOMIC_LOAD_I32_A32_S\0"
  /* 13279 */ "ATOMIC_RMW16_U_ADD_I32_A32_S\0"
  /* 13308 */ "ATOMIC_RMW8_U_ADD_I32_A32_S\0"
  /* 13336 */ "ATOMIC_RMW_ADD_I32_A32_S\0"
  /* 13361 */ "ATOMIC_RMW16_U_AND_I32_A32_S\0"
  /* 13390 */ "ATOMIC_RMW8_U_AND_I32_A32_S\0"
  /* 13418 */ "ATOMIC_RMW_AND_I32_A32_S\0"
  /* 13443 */ "ATOMIC_STORE_I32_A32_S\0"
  /* 13466 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32_S\0"
  /* 13499 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32_S\0"
  /* 13531 */ "ATOMIC_RMW_CMPXCHG_I32_A32_S\0"
  /* 13560 */ "ATOMIC_RMW16_U_XCHG_I32_A32_S\0"
  /* 13590 */ "ATOMIC_RMW8_U_XCHG_I32_A32_S\0"
  /* 13619 */ "ATOMIC_RMW_XCHG_I32_A32_S\0"
  /* 13645 */ "ATOMIC_RMW16_U_XOR_I32_A32_S\0"
  /* 13674 */ "ATOMIC_RMW8_U_XOR_I32_A32_S\0"
  /* 13702 */ "ATOMIC_RMW_XOR_I32_A32_S\0"
  /* 13727 */ "ATOMIC_RMW16_U_OR_I32_A32_S\0"
  /* 13755 */ "ATOMIC_RMW8_U_OR_I32_A32_S\0"
  /* 13782 */ "ATOMIC_RMW_OR_I32_A32_S\0"
  /* 13806 */ "LOAD16_S_I32_A32_S\0"
  /* 13825 */ "LOAD8_S_I32_A32_S\0"
  /* 13843 */ "ATOMIC_LOAD16_U_I32_A32_S\0"
  /* 13869 */ "ATOMIC_LOAD8_U_I32_A32_S\0"
  /* 13894 */ "MEMORY_ATOMIC_WAIT32_A32_S\0"
  /* 13921 */ "LOAD_LANE_I64x2_A32_S\0"
  /* 13943 */ "STORE_LANE_I64x2_A32_S\0"
  /* 13966 */ "LOAD_ZERO_I64x2_A32_S\0"
  /* 13988 */ "LOAD_EXTEND_S_I64x2_A32_S\0"
  /* 14014 */ "LOAD_EXTEND_U_I64x2_A32_S\0"
  /* 14040 */ "LOAD_F64_A32_S\0"
  /* 14055 */ "STORE_F64_A32_S\0"
  /* 14071 */ "ATOMIC_STORE32_I64_A32_S\0"
  /* 14096 */ "ATOMIC_STORE16_I64_A32_S\0"
  /* 14121 */ "ATOMIC_STORE8_I64_A32_S\0"
  /* 14145 */ "ATOMIC_RMW32_U_SUB_I64_A32_S\0"
  /* 14174 */ "ATOMIC_RMW16_U_SUB_I64_A32_S\0"
  /* 14203 */ "ATOMIC_RMW8_U_SUB_I64_A32_S\0"
  /* 14231 */ "ATOMIC_RMW_SUB_I64_A32_S\0"
  /* 14256 */ "ATOMIC_LOAD_I64_A32_S\0"
  /* 14278 */ "ATOMIC_RMW32_U_ADD_I64_A32_S\0"
  /* 14307 */ "ATOMIC_RMW16_U_ADD_I64_A32_S\0"
  /* 14336 */ "ATOMIC_RMW8_U_ADD_I64_A32_S\0"
  /* 14364 */ "ATOMIC_RMW_ADD_I64_A32_S\0"
  /* 14389 */ "ATOMIC_RMW32_U_AND_I64_A32_S\0"
  /* 14418 */ "ATOMIC_RMW16_U_AND_I64_A32_S\0"
  /* 14447 */ "ATOMIC_RMW8_U_AND_I64_A32_S\0"
  /* 14475 */ "ATOMIC_RMW_AND_I64_A32_S\0"
  /* 14500 */ "ATOMIC_STORE_I64_A32_S\0"
  /* 14523 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32_S\0"
  /* 14556 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32_S\0"
  /* 14589 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32_S\0"
  /* 14621 */ "ATOMIC_RMW_CMPXCHG_I64_A32_S\0"
  /* 14650 */ "ATOMIC_RMW32_U_XCHG_I64_A32_S\0"
  /* 14680 */ "ATOMIC_RMW16_U_XCHG_I64_A32_S\0"
  /* 14710 */ "ATOMIC_RMW8_U_XCHG_I64_A32_S\0"
  /* 14739 */ "ATOMIC_RMW_XCHG_I64_A32_S\0"
  /* 14765 */ "ATOMIC_RMW32_U_XOR_I64_A32_S\0"
  /* 14794 */ "ATOMIC_RMW16_U_XOR_I64_A32_S\0"
  /* 14823 */ "ATOMIC_RMW8_U_XOR_I64_A32_S\0"
  /* 14851 */ "ATOMIC_RMW_XOR_I64_A32_S\0"
  /* 14876 */ "ATOMIC_RMW32_U_OR_I64_A32_S\0"
  /* 14904 */ "ATOMIC_RMW16_U_OR_I64_A32_S\0"
  /* 14932 */ "ATOMIC_RMW8_U_OR_I64_A32_S\0"
  /* 14959 */ "ATOMIC_RMW_OR_I64_A32_S\0"
  /* 14983 */ "LOAD32_S_I64_A32_S\0"
  /* 15002 */ "LOAD16_S_I64_A32_S\0"
  /* 15021 */ "LOAD8_S_I64_A32_S\0"
  /* 15039 */ "ATOMIC_LOAD32_U_I64_A32_S\0"
  /* 15065 */ "ATOMIC_LOAD16_U_I64_A32_S\0"
  /* 15091 */ "ATOMIC_LOAD8_U_I64_A32_S\0"
  /* 15116 */ "MEMORY_ATOMIC_WAIT64_A32_S\0"
  /* 15143 */ "LOAD_LANE_I32x4_A32_S\0"
  /* 15165 */ "STORE_LANE_I32x4_A32_S\0"
  /* 15188 */ "LOAD_ZERO_I32x4_A32_S\0"
  /* 15210 */ "LOAD_EXTEND_S_I32x4_A32_S\0"
  /* 15236 */ "LOAD_EXTEND_U_I32x4_A32_S\0"
  /* 15262 */ "LOAD_LANE_I8x16_A32_S\0"
  /* 15284 */ "STORE_LANE_I8x16_A32_S\0"
  /* 15307 */ "LOAD_V128_A32_S\0"
  /* 15323 */ "STORE_V128_A32_S\0"
  /* 15340 */ "LOAD_LANE_I16x8_A32_S\0"
  /* 15362 */ "STORE_LANE_I16x8_A32_S\0"
  /* 15385 */ "LOAD_EXTEND_S_I16x8_A32_S\0"
  /* 15411 */ "LOAD_EXTEND_U_I16x8_A32_S\0"
  /* 15437 */ "anonymous_2718MEMORY_SIZE_A32_S\0"
  /* 15469 */ "anonymous_4568MEMORY_FILL_A32_S\0"
  /* 15501 */ "LOAD32_SPLAT_A32_S\0"
  /* 15520 */ "LOAD64_SPLAT_A32_S\0"
  /* 15539 */ "LOAD16_SPLAT_A32_S\0"
  /* 15558 */ "LOAD8_SPLAT_A32_S\0"
  /* 15576 */ "anonymous_4568MEMORY_INIT_A32_S\0"
  /* 15608 */ "PREFETCH_NT_A32_S\0"
  /* 15626 */ "PREFETCH_T_A32_S\0"
  /* 15643 */ "anonymous_2718MEMORY_GROW_A32_S\0"
  /* 15675 */ "MEMORY_ATOMIC_NOTIFY_A32_S\0"
  /* 15702 */ "anonymous_4568MEMORY_COPY_A32_S\0"
  /* 15734 */ "FP_TO_SINT_I32_F32_S\0"
  /* 15755 */ "FP_TO_UINT_I32_F32_S\0"
  /* 15776 */ "FP_TO_SINT_I64_F32_S\0"
  /* 15797 */ "FP_TO_UINT_I64_F32_S\0"
  /* 15818 */ "SUB_F32_S\0"
  /* 15828 */ "TRUNC_F32_S\0"
  /* 15840 */ "ADD_F32_S\0"
  /* 15850 */ "LOCAL_TEE_F32_S\0"
  /* 15866 */ "GE_F32_S\0"
  /* 15875 */ "LE_F32_S\0"
  /* 15884 */ "NE_F32_S\0"
  /* 15893 */ "F64_PROMOTE_F32_S\0"
  /* 15911 */ "NEG_F32_S\0"
  /* 15921 */ "CEIL_F32_S\0"
  /* 15932 */ "MUL_F32_S\0"
  /* 15942 */ "COPYSIGN_F32_S\0"
  /* 15957 */ "MIN_F32_S\0"
  /* 15967 */ "DROP_F32_S\0"
  /* 15978 */ "EQ_F32_S\0"
  /* 15987 */ "FLOOR_F32_S\0"
  /* 15999 */ "ABS_F32_S\0"
  /* 16009 */ "I32_TRUNC_S_F32_S\0"
  /* 16027 */ "I64_TRUNC_S_F32_S\0"
  /* 16045 */ "I32_TRUNC_S_SAT_F32_S\0"
  /* 16067 */ "I64_TRUNC_S_SAT_F32_S\0"
  /* 16089 */ "I32_TRUNC_U_SAT_F32_S\0"
  /* 16111 */ "I64_TRUNC_U_SAT_F32_S\0"
  /* 16133 */ "SELECT_F32_S\0"
  /* 16146 */ "GLOBAL_GET_F32_S\0"
  /* 16163 */ "LOCAL_GET_F32_S\0"
  /* 16179 */ "I32_REINTERPRET_F32_S\0"
  /* 16201 */ "GLOBAL_SET_F32_S\0"
  /* 16218 */ "LOCAL_SET_F32_S\0"
  /* 16234 */ "GT_F32_S\0"
  /* 16243 */ "LT_F32_S\0"
  /* 16252 */ "SQRT_F32_S\0"
  /* 16263 */ "NEAREST_F32_S\0"
  /* 16277 */ "CONST_F32_S\0"
  /* 16289 */ "I32_TRUNC_U_F32_S\0"
  /* 16307 */ "I64_TRUNC_U_F32_S\0"
  /* 16325 */ "DIV_F32_S\0"
  /* 16335 */ "MAX_F32_S\0"
  /* 16345 */ "COPY_F32_S\0"
  /* 16356 */ "SUB_I32_S\0"
  /* 16366 */ "ADD_I32_S\0"
  /* 16376 */ "AND_I32_S\0"
  /* 16386 */ "LOCAL_TEE_I32_S\0"
  /* 16402 */ "BR_TABLE_I32_S\0"
  /* 16417 */ "NE_I32_S\0"
  /* 16426 */ "SHL_I32_S\0"
  /* 16436 */ "ROTL_I32_S\0"
  /* 16447 */ "MUL_I32_S\0"
  /* 16457 */ "DROP_I32_S\0"
  /* 16468 */ "EQ_I32_S\0"
  /* 16477 */ "XOR_I32_S\0"
  /* 16487 */ "ROTR_I32_S\0"
  /* 16498 */ "I32_EXTEND16_S_I32_S\0"
  /* 16519 */ "I32_EXTEND8_S_I32_S\0"
  /* 16539 */ "I64_EXTEND_S_I32_S\0"
  /* 16558 */ "GE_S_I32_S\0"
  /* 16569 */ "LE_S_I32_S\0"
  /* 16580 */ "REM_S_I32_S\0"
  /* 16592 */ "SHR_S_I32_S\0"
  /* 16604 */ "GT_S_I32_S\0"
  /* 16615 */ "LT_S_I32_S\0"
  /* 16626 */ "F32_CONVERT_S_I32_S\0"
  /* 16646 */ "F64_CONVERT_S_I32_S\0"
  /* 16666 */ "DIV_S_I32_S\0"
  /* 16678 */ "SELECT_I32_S\0"
  /* 16691 */ "GLOBAL_GET_I32_S\0"
  /* 16708 */ "LOCAL_GET_I32_S\0"
  /* 16724 */ "F32_REINTERPRET_I32_S\0"
  /* 16746 */ "GLOBAL_SET_I32_S\0"
  /* 16763 */ "LOCAL_SET_I32_S\0"
  /* 16779 */ "POPCNT_I32_S\0"
  /* 16792 */ "CONST_I32_S\0"
  /* 16804 */ "I64_EXTEND_U_I32_S\0"
  /* 16823 */ "GE_U_I32_S\0"
  /* 16834 */ "LE_U_I32_S\0"
  /* 16845 */ "REM_U_I32_S\0"
  /* 16857 */ "SHR_U_I32_S\0"
  /* 16869 */ "GT_U_I32_S\0"
  /* 16880 */ "LT_U_I32_S\0"
  /* 16891 */ "F32_CONVERT_U_I32_S\0"
  /* 16911 */ "F64_CONVERT_U_I32_S\0"
  /* 16931 */ "DIV_U_I32_S\0"
  /* 16943 */ "COPY_I32_S\0"
  /* 16954 */ "CLZ_I32_S\0"
  /* 16964 */ "EQZ_I32_S\0"
  /* 16974 */ "CTZ_I32_S\0"
  /* 16984 */ "ARGUMENT_v4f32_S\0"
  /* 17001 */ "ARGUMENT_f32_S\0"
  /* 17016 */ "ARGUMENT_v4i32_S\0"
  /* 17033 */ "ARGUMENT_i32_S\0"
  /* 17048 */ "CONST_V128_F64x2_S\0"
  /* 17067 */ "QFMA_F64x2_S\0"
  /* 17080 */ "SUB_F64x2_S\0"
  /* 17092 */ "TRUNC_F64x2_S\0"
  /* 17106 */ "ADD_F64x2_S\0"
  /* 17118 */ "GE_F64x2_S\0"
  /* 17129 */ "LE_F64x2_S\0"
  /* 17140 */ "REPLACE_LANE_F64x2_S\0"
  /* 17161 */ "EXTRACT_LANE_F64x2_S\0"
  /* 17182 */ "NEG_F64x2_S\0"
  /* 17194 */ "CEIL_F64x2_S\0"
  /* 17207 */ "MUL_F64x2_S\0"
  /* 17219 */ "PMIN_F64x2_S\0"
  /* 17232 */ "EQ_F64x2_S\0"
  /* 17243 */ "FLOOR_F64x2_S\0"
  /* 17257 */ "ABS_F64x2_S\0"
  /* 17269 */ "QFMS_F64x2_S\0"
  /* 17282 */ "SPLAT_F64x2_S\0"
  /* 17296 */ "GT_F64x2_S\0"
  /* 17307 */ "LT_F64x2_S\0"
  /* 17318 */ "SQRT_F64x2_S\0"
  /* 17331 */ "NEAREST_F64x2_S\0"
  /* 17347 */ "DIV_F64x2_S\0"
  /* 17359 */ "PMAX_F64x2_S\0"
  /* 17372 */ "int_wasm_convert_low_signed_F64x2_S\0"
  /* 17408 */ "int_wasm_convert_low_unsigned_F64x2_S\0"
  /* 17446 */ "int_wasm_promote_low_F64x2_S\0"
  /* 17475 */ "CONST_V128_I64x2_S\0"
  /* 17494 */ "SUB_I64x2_S\0"
  /* 17506 */ "ADD_I64x2_S\0"
  /* 17518 */ "REPLACE_LANE_I64x2_S\0"
  /* 17539 */ "EXTRACT_LANE_I64x2_S\0"
  /* 17560 */ "ALLTRUE_I64x2_S\0"
  /* 17576 */ "ANYTRUE_I64x2_S\0"
  /* 17592 */ "NEG_I64x2_S\0"
  /* 17604 */ "BITMASK_I64x2_S\0"
  /* 17620 */ "SHL_I64x2_S\0"
  /* 17632 */ "MUL_I64x2_S\0"
  /* 17644 */ "ABS_I64x2_S\0"
  /* 17656 */ "EXTMUL_HIGH_S_I64x2_S\0"
  /* 17678 */ "SHR_S_I64x2_S\0"
  /* 17692 */ "EXTMUL_LOW_S_I64x2_S\0"
  /* 17713 */ "SPLAT_I64x2_S\0"
  /* 17727 */ "anonymous_4468SIGNSELECT_I64x2_S\0"
  /* 17760 */ "EXTMUL_HIGH_U_I64x2_S\0"
  /* 17782 */ "SHR_U_I64x2_S\0"
  /* 17796 */ "EXTMUL_LOW_U_I64x2_S\0"
  /* 17817 */ "int_wasm_widen_high_signed_I64x2_S\0"
  /* 17852 */ "int_wasm_widen_low_signed_I64x2_S\0"
  /* 17886 */ "int_wasm_widen_high_unsigned_I64x2_S\0"
  /* 17923 */ "int_wasm_widen_low_unsigned_I64x2_S\0"
  /* 17959 */ "LOAD_F32_A64_S\0"
  /* 17974 */ "STORE_F32_A64_S\0"
  /* 17990 */ "ATOMIC_STORE16_I32_A64_S\0"
  /* 18015 */ "ATOMIC_STORE8_I32_A64_S\0"
  /* 18039 */ "ATOMIC_RMW16_U_SUB_I32_A64_S\0"
  /* 18068 */ "ATOMIC_RMW8_U_SUB_I32_A64_S\0"
  /* 18096 */ "ATOMIC_RMW_SUB_I32_A64_S\0"
  /* 18121 */ "ATOMIC_LOAD_I32_A64_S\0"
  /* 18143 */ "ATOMIC_RMW16_U_ADD_I32_A64_S\0"
  /* 18172 */ "ATOMIC_RMW8_U_ADD_I32_A64_S\0"
  /* 18200 */ "ATOMIC_RMW_ADD_I32_A64_S\0"
  /* 18225 */ "ATOMIC_RMW16_U_AND_I32_A64_S\0"
  /* 18254 */ "ATOMIC_RMW8_U_AND_I32_A64_S\0"
  /* 18282 */ "ATOMIC_RMW_AND_I32_A64_S\0"
  /* 18307 */ "ATOMIC_STORE_I32_A64_S\0"
  /* 18330 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64_S\0"
  /* 18363 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64_S\0"
  /* 18395 */ "ATOMIC_RMW_CMPXCHG_I32_A64_S\0"
  /* 18424 */ "ATOMIC_RMW16_U_XCHG_I32_A64_S\0"
  /* 18454 */ "ATOMIC_RMW8_U_XCHG_I32_A64_S\0"
  /* 18483 */ "ATOMIC_RMW_XCHG_I32_A64_S\0"
  /* 18509 */ "ATOMIC_RMW16_U_XOR_I32_A64_S\0"
  /* 18538 */ "ATOMIC_RMW8_U_XOR_I32_A64_S\0"
  /* 18566 */ "ATOMIC_RMW_XOR_I32_A64_S\0"
  /* 18591 */ "ATOMIC_RMW16_U_OR_I32_A64_S\0"
  /* 18619 */ "ATOMIC_RMW8_U_OR_I32_A64_S\0"
  /* 18646 */ "ATOMIC_RMW_OR_I32_A64_S\0"
  /* 18670 */ "LOAD16_S_I32_A64_S\0"
  /* 18689 */ "LOAD8_S_I32_A64_S\0"
  /* 18707 */ "ATOMIC_LOAD16_U_I32_A64_S\0"
  /* 18733 */ "ATOMIC_LOAD8_U_I32_A64_S\0"
  /* 18758 */ "MEMORY_ATOMIC_WAIT32_A64_S\0"
  /* 18785 */ "LOAD_LANE_I64x2_A64_S\0"
  /* 18807 */ "STORE_LANE_I64x2_A64_S\0"
  /* 18830 */ "LOAD_ZERO_I64x2_A64_S\0"
  /* 18852 */ "LOAD_EXTEND_S_I64x2_A64_S\0"
  /* 18878 */ "LOAD_EXTEND_U_I64x2_A64_S\0"
  /* 18904 */ "LOAD_F64_A64_S\0"
  /* 18919 */ "STORE_F64_A64_S\0"
  /* 18935 */ "ATOMIC_STORE32_I64_A64_S\0"
  /* 18960 */ "ATOMIC_STORE16_I64_A64_S\0"
  /* 18985 */ "ATOMIC_STORE8_I64_A64_S\0"
  /* 19009 */ "ATOMIC_RMW32_U_SUB_I64_A64_S\0"
  /* 19038 */ "ATOMIC_RMW16_U_SUB_I64_A64_S\0"
  /* 19067 */ "ATOMIC_RMW8_U_SUB_I64_A64_S\0"
  /* 19095 */ "ATOMIC_RMW_SUB_I64_A64_S\0"
  /* 19120 */ "ATOMIC_LOAD_I64_A64_S\0"
  /* 19142 */ "ATOMIC_RMW32_U_ADD_I64_A64_S\0"
  /* 19171 */ "ATOMIC_RMW16_U_ADD_I64_A64_S\0"
  /* 19200 */ "ATOMIC_RMW8_U_ADD_I64_A64_S\0"
  /* 19228 */ "ATOMIC_RMW_ADD_I64_A64_S\0"
  /* 19253 */ "ATOMIC_RMW32_U_AND_I64_A64_S\0"
  /* 19282 */ "ATOMIC_RMW16_U_AND_I64_A64_S\0"
  /* 19311 */ "ATOMIC_RMW8_U_AND_I64_A64_S\0"
  /* 19339 */ "ATOMIC_RMW_AND_I64_A64_S\0"
  /* 19364 */ "ATOMIC_STORE_I64_A64_S\0"
  /* 19387 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64_S\0"
  /* 19420 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64_S\0"
  /* 19453 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64_S\0"
  /* 19485 */ "ATOMIC_RMW_CMPXCHG_I64_A64_S\0"
  /* 19514 */ "ATOMIC_RMW32_U_XCHG_I64_A64_S\0"
  /* 19544 */ "ATOMIC_RMW16_U_XCHG_I64_A64_S\0"
  /* 19574 */ "ATOMIC_RMW8_U_XCHG_I64_A64_S\0"
  /* 19603 */ "ATOMIC_RMW_XCHG_I64_A64_S\0"
  /* 19629 */ "ATOMIC_RMW32_U_XOR_I64_A64_S\0"
  /* 19658 */ "ATOMIC_RMW16_U_XOR_I64_A64_S\0"
  /* 19687 */ "ATOMIC_RMW8_U_XOR_I64_A64_S\0"
  /* 19715 */ "ATOMIC_RMW_XOR_I64_A64_S\0"
  /* 19740 */ "ATOMIC_RMW32_U_OR_I64_A64_S\0"
  /* 19768 */ "ATOMIC_RMW16_U_OR_I64_A64_S\0"
  /* 19796 */ "ATOMIC_RMW8_U_OR_I64_A64_S\0"
  /* 19823 */ "ATOMIC_RMW_OR_I64_A64_S\0"
  /* 19847 */ "LOAD32_S_I64_A64_S\0"
  /* 19866 */ "LOAD16_S_I64_A64_S\0"
  /* 19885 */ "LOAD8_S_I64_A64_S\0"
  /* 19903 */ "ATOMIC_LOAD32_U_I64_A64_S\0"
  /* 19929 */ "ATOMIC_LOAD16_U_I64_A64_S\0"
  /* 19955 */ "ATOMIC_LOAD8_U_I64_A64_S\0"
  /* 19980 */ "MEMORY_ATOMIC_WAIT64_A64_S\0"
  /* 20007 */ "LOAD_LANE_I32x4_A64_S\0"
  /* 20029 */ "STORE_LANE_I32x4_A64_S\0"
  /* 20052 */ "LOAD_ZERO_I32x4_A64_S\0"
  /* 20074 */ "LOAD_EXTEND_S_I32x4_A64_S\0"
  /* 20100 */ "LOAD_EXTEND_U_I32x4_A64_S\0"
  /* 20126 */ "LOAD_LANE_I8x16_A64_S\0"
  /* 20148 */ "STORE_LANE_I8x16_A64_S\0"
  /* 20171 */ "LOAD_V128_A64_S\0"
  /* 20187 */ "STORE_V128_A64_S\0"
  /* 20204 */ "LOAD_LANE_I16x8_A64_S\0"
  /* 20226 */ "STORE_LANE_I16x8_A64_S\0"
  /* 20249 */ "LOAD_EXTEND_S_I16x8_A64_S\0"
  /* 20275 */ "LOAD_EXTEND_U_I16x8_A64_S\0"
  /* 20301 */ "anonymous_2719MEMORY_SIZE_A64_S\0"
  /* 20333 */ "anonymous_4569MEMORY_FILL_A64_S\0"
  /* 20365 */ "LOAD32_SPLAT_A64_S\0"
  /* 20384 */ "LOAD64_SPLAT_A64_S\0"
  /* 20403 */ "LOAD16_SPLAT_A64_S\0"
  /* 20422 */ "LOAD8_SPLAT_A64_S\0"
  /* 20440 */ "anonymous_4569MEMORY_INIT_A64_S\0"
  /* 20472 */ "PREFETCH_NT_A64_S\0"
  /* 20490 */ "PREFETCH_T_A64_S\0"
  /* 20507 */ "anonymous_2719MEMORY_GROW_A64_S\0"
  /* 20539 */ "MEMORY_ATOMIC_NOTIFY_A64_S\0"
  /* 20566 */ "anonymous_4569MEMORY_COPY_A64_S\0"
  /* 20598 */ "FP_TO_SINT_I32_F64_S\0"
  /* 20619 */ "FP_TO_UINT_I32_F64_S\0"
  /* 20640 */ "FP_TO_SINT_I64_F64_S\0"
  /* 20661 */ "FP_TO_UINT_I64_F64_S\0"
  /* 20682 */ "SUB_F64_S\0"
  /* 20692 */ "TRUNC_F64_S\0"
  /* 20704 */ "ADD_F64_S\0"
  /* 20714 */ "LOCAL_TEE_F64_S\0"
  /* 20730 */ "GE_F64_S\0"
  /* 20739 */ "LE_F64_S\0"
  /* 20748 */ "NE_F64_S\0"
  /* 20757 */ "F32_DEMOTE_F64_S\0"
  /* 20774 */ "NEG_F64_S\0"
  /* 20784 */ "CEIL_F64_S\0"
  /* 20795 */ "MUL_F64_S\0"
  /* 20805 */ "COPYSIGN_F64_S\0"
  /* 20820 */ "MIN_F64_S\0"
  /* 20830 */ "DROP_F64_S\0"
  /* 20841 */ "EQ_F64_S\0"
  /* 20850 */ "FLOOR_F64_S\0"
  /* 20862 */ "ABS_F64_S\0"
  /* 20872 */ "I32_TRUNC_S_F64_S\0"
  /* 20890 */ "I64_TRUNC_S_F64_S\0"
  /* 20908 */ "I32_TRUNC_S_SAT_F64_S\0"
  /* 20930 */ "I64_TRUNC_S_SAT_F64_S\0"
  /* 20952 */ "I32_TRUNC_U_SAT_F64_S\0"
  /* 20974 */ "I64_TRUNC_U_SAT_F64_S\0"
  /* 20996 */ "SELECT_F64_S\0"
  /* 21009 */ "GLOBAL_GET_F64_S\0"
  /* 21026 */ "LOCAL_GET_F64_S\0"
  /* 21042 */ "I64_REINTERPRET_F64_S\0"
  /* 21064 */ "GLOBAL_SET_F64_S\0"
  /* 21081 */ "LOCAL_SET_F64_S\0"
  /* 21097 */ "GT_F64_S\0"
  /* 21106 */ "LT_F64_S\0"
  /* 21115 */ "SQRT_F64_S\0"
  /* 21126 */ "NEAREST_F64_S\0"
  /* 21140 */ "CONST_F64_S\0"
  /* 21152 */ "I32_TRUNC_U_F64_S\0"
  /* 21170 */ "I64_TRUNC_U_F64_S\0"
  /* 21188 */ "DIV_F64_S\0"
  /* 21198 */ "MAX_F64_S\0"
  /* 21208 */ "COPY_F64_S\0"
  /* 21219 */ "SUB_I64_S\0"
  /* 21229 */ "ADD_I64_S\0"
  /* 21239 */ "AND_I64_S\0"
  /* 21249 */ "LOCAL_TEE_I64_S\0"
  /* 21265 */ "BR_TABLE_I64_S\0"
  /* 21280 */ "NE_I64_S\0"
  /* 21289 */ "SHL_I64_S\0"
  /* 21299 */ "ROTL_I64_S\0"
  /* 21310 */ "MUL_I64_S\0"
  /* 21320 */ "I32_WRAP_I64_S\0"
  /* 21335 */ "DROP_I64_S\0"
  /* 21346 */ "EQ_I64_S\0"
  /* 21355 */ "XOR_I64_S\0"
  /* 21365 */ "ROTR_I64_S\0"
  /* 21376 */ "I64_EXTEND32_S_I64_S\0"
  /* 21397 */ "I64_EXTEND16_S_I64_S\0"
  /* 21418 */ "I64_EXTEND8_S_I64_S\0"
  /* 21438 */ "GE_S_I64_S\0"
  /* 21449 */ "LE_S_I64_S\0"
  /* 21460 */ "REM_S_I64_S\0"
  /* 21472 */ "SHR_S_I64_S\0"
  /* 21484 */ "GT_S_I64_S\0"
  /* 21495 */ "LT_S_I64_S\0"
  /* 21506 */ "F32_CONVERT_S_I64_S\0"
  /* 21526 */ "F64_CONVERT_S_I64_S\0"
  /* 21546 */ "DIV_S_I64_S\0"
  /* 21558 */ "SELECT_I64_S\0"
  /* 21571 */ "GLOBAL_GET_I64_S\0"
  /* 21588 */ "LOCAL_GET_I64_S\0"
  /* 21604 */ "F64_REINTERPRET_I64_S\0"
  /* 21626 */ "GLOBAL_SET_I64_S\0"
  /* 21643 */ "LOCAL_SET_I64_S\0"
  /* 21659 */ "POPCNT_I64_S\0"
  /* 21672 */ "CONST_I64_S\0"
  /* 21684 */ "GE_U_I64_S\0"
  /* 21695 */ "LE_U_I64_S\0"
  /* 21706 */ "REM_U_I64_S\0"
  /* 21718 */ "SHR_U_I64_S\0"
  /* 21730 */ "GT_U_I64_S\0"
  /* 21741 */ "LT_U_I64_S\0"
  /* 21752 */ "F32_CONVERT_U_I64_S\0"
  /* 21772 */ "F64_CONVERT_U_I64_S\0"
  /* 21792 */ "DIV_U_I64_S\0"
  /* 21804 */ "COPY_I64_S\0"
  /* 21815 */ "CLZ_I64_S\0"
  /* 21825 */ "EQZ_I64_S\0"
  /* 21835 */ "CTZ_I64_S\0"
  /* 21845 */ "ARGUMENT_v2f64_S\0"
  /* 21862 */ "ARGUMENT_f64_S\0"
  /* 21877 */ "EQ_v2i64_S\0"
  /* 21888 */ "ARGUMENT_v2i64_S\0"
  /* 21905 */ "ARGUMENT_i64_S\0"
  /* 21920 */ "CONST_V128_F32x4_S\0"
  /* 21939 */ "QFMA_F32x4_S\0"
  /* 21952 */ "SUB_F32x4_S\0"
  /* 21964 */ "TRUNC_F32x4_S\0"
  /* 21978 */ "ADD_F32x4_S\0"
  /* 21990 */ "GE_F32x4_S\0"
  /* 22001 */ "LE_F32x4_S\0"
  /* 22012 */ "REPLACE_LANE_F32x4_S\0"
  /* 22033 */ "EXTRACT_LANE_F32x4_S\0"
  /* 22054 */ "NEG_F32x4_S\0"
  /* 22066 */ "CEIL_F32x4_S\0"
  /* 22079 */ "MUL_F32x4_S\0"
  /* 22091 */ "PMIN_F32x4_S\0"
  /* 22104 */ "EQ_F32x4_S\0"
  /* 22115 */ "FLOOR_F32x4_S\0"
  /* 22129 */ "ABS_F32x4_S\0"
  /* 22141 */ "QFMS_F32x4_S\0"
  /* 22154 */ "SPLAT_F32x4_S\0"
  /* 22168 */ "GT_F32x4_S\0"
  /* 22179 */ "LT_F32x4_S\0"
  /* 22190 */ "SQRT_F32x4_S\0"
  /* 22203 */ "NEAREST_F32x4_S\0"
  /* 22219 */ "DIV_F32x4_S\0"
  /* 22231 */ "PMAX_F32x4_S\0"
  /* 22244 */ "int_wasm_demote_zero_F32x4_S\0"
  /* 22273 */ "sint_to_fp_F32x4_S\0"
  /* 22292 */ "uint_to_fp_F32x4_S\0"
  /* 22311 */ "CONST_V128_I32x4_S\0"
  /* 22330 */ "SUB_I32x4_S\0"
  /* 22342 */ "ADD_I32x4_S\0"
  /* 22354 */ "REPLACE_LANE_I32x4_S\0"
  /* 22375 */ "EXTRACT_LANE_I32x4_S\0"
  /* 22396 */ "ALLTRUE_I32x4_S\0"
  /* 22412 */ "ANYTRUE_I32x4_S\0"
  /* 22428 */ "NEG_I32x4_S\0"
  /* 22440 */ "BITMASK_I32x4_S\0"
  /* 22456 */ "SHL_I32x4_S\0"
  /* 22468 */ "MUL_I32x4_S\0"
  /* 22480 */ "WIDEN_I8x16_TO_I32x4_S\0"
  /* 22503 */ "EQ_I32x4_S\0"
  /* 22514 */ "ABS_I32x4_S\0"
  /* 22526 */ "GE_S_I32x4_S\0"
  /* 22539 */ "LE_S_I32x4_S\0"
  /* 22552 */ "EXTMUL_HIGH_S_I32x4_S\0"
  /* 22574 */ "MIN_S_I32x4_S\0"
  /* 22588 */ "SHR_S_I32x4_S\0"
  /* 22602 */ "GT_S_I32x4_S\0"
  /* 22615 */ "LT_S_I32x4_S\0"
  /* 22628 */ "EXTMUL_LOW_S_I32x4_S\0"
  /* 22649 */ "MAX_S_I32x4_S\0"
  /* 22663 */ "SPLAT_I32x4_S\0"
  /* 22677 */ "anonymous_4467SIGNSELECT_I32x4_S\0"
  /* 22710 */ "GE_U_I32x4_S\0"
  /* 22723 */ "LE_U_I32x4_S\0"
  /* 22736 */ "EXTMUL_HIGH_U_I32x4_S\0"
  /* 22758 */ "MIN_U_I32x4_S\0"
  /* 22772 */ "SHR_U_I32x4_S\0"
  /* 22786 */ "GT_U_I32x4_S\0"
  /* 22799 */ "LT_U_I32x4_S\0"
  /* 22812 */ "EXTMUL_LOW_U_I32x4_S\0"
  /* 22833 */ "MAX_U_I32x4_S\0"
  /* 22847 */ "int_wasm_extadd_pairwise_signed_I32x4_S\0"
  /* 22887 */ "int_wasm_trunc_saturate_zero_signed_I32x4_S\0"
  /* 22931 */ "int_wasm_extadd_pairwise_unsigned_I32x4_S\0"
  /* 22973 */ "int_wasm_trunc_saturate_zero_unsigned_I32x4_S\0"
  /* 23019 */ "widen_high_s_I32x4_S\0"
  /* 23040 */ "widen_low_s_I32x4_S\0"
  /* 23060 */ "fp_to_sint_I32x4_S\0"
  /* 23079 */ "fp_to_uint_I32x4_S\0"
  /* 23098 */ "widen_high_u_I32x4_S\0"
  /* 23119 */ "widen_low_u_I32x4_S\0"
  /* 23139 */ "ARGUMENT_v8i16_S\0"
  /* 23156 */ "CONST_V128_I8x16_S\0"
  /* 23175 */ "SUB_I8x16_S\0"
  /* 23187 */ "ADD_I8x16_S\0"
  /* 23199 */ "REPLACE_LANE_I8x16_S\0"
  /* 23220 */ "ALLTRUE_I8x16_S\0"
  /* 23236 */ "ANYTRUE_I8x16_S\0"
  /* 23252 */ "NEG_I8x16_S\0"
  /* 23264 */ "BITMASK_I8x16_S\0"
  /* 23280 */ "SHL_I8x16_S\0"
  /* 23292 */ "EQ_I8x16_S\0"
  /* 23303 */ "ABS_I8x16_S\0"
  /* 23315 */ "GE_S_I8x16_S\0"
  /* 23328 */ "LE_S_I8x16_S\0"
  /* 23341 */ "MIN_S_I8x16_S\0"
  /* 23355 */ "SHR_S_I8x16_S\0"
  /* 23369 */ "SUB_SAT_S_I8x16_S\0"
  /* 23387 */ "ADD_SAT_S_I8x16_S\0"
  /* 23405 */ "GT_S_I8x16_S\0"
  /* 23418 */ "LT_S_I8x16_S\0"
  /* 23431 */ "NARROW_S_I8x16_S\0"
  /* 23448 */ "MAX_S_I8x16_S\0"
  /* 23462 */ "SPLAT_I8x16_S\0"
  /* 23476 */ "anonymous_4465SIGNSELECT_I8x16_S\0"
  /* 23509 */ "POPCNT_I8x16_S\0"
  /* 23524 */ "GE_U_I8x16_S\0"
  /* 23537 */ "LE_U_I8x16_S\0"
  /* 23550 */ "MIN_U_I8x16_S\0"
  /* 23564 */ "AVGR_U_I8x16_S\0"
  /* 23579 */ "SHR_U_I8x16_S\0"
  /* 23593 */ "SUB_SAT_U_I8x16_S\0"
  /* 23611 */ "ADD_SAT_U_I8x16_S\0"
  /* 23629 */ "GT_U_I8x16_S\0"
  /* 23642 */ "LT_U_I8x16_S\0"
  /* 23655 */ "NARROW_U_I8x16_S\0"
  /* 23672 */ "MAX_U_I8x16_S\0"
  /* 23686 */ "LOCAL_TEE_V128_S\0"
  /* 23703 */ "DROP_V128_S\0"
  /* 23715 */ "SELECT_V128_S\0"
  /* 23729 */ "GLOBAL_GET_V128_S\0"
  /* 23747 */ "LOCAL_GET_V128_S\0"
  /* 23764 */ "GLOBAL_SET_V128_S\0"
  /* 23782 */ "LOCAL_SET_V128_S\0"
  /* 23799 */ "COPY_V128_S\0"
  /* 23811 */ "ARGUMENT_v16i8_S\0"
  /* 23828 */ "CONST_V128_I16x8_S\0"
  /* 23847 */ "SUB_I16x8_S\0"
  /* 23859 */ "ADD_I16x8_S\0"
  /* 23871 */ "REPLACE_LANE_I16x8_S\0"
  /* 23892 */ "ALLTRUE_I16x8_S\0"
  /* 23908 */ "ANYTRUE_I16x8_S\0"
  /* 23924 */ "NEG_I16x8_S\0"
  /* 23936 */ "BITMASK_I16x8_S\0"
  /* 23952 */ "SHL_I16x8_S\0"
  /* 23964 */ "MUL_I16x8_S\0"
  /* 23976 */ "EQ_I16x8_S\0"
  /* 23987 */ "ABS_I16x8_S\0"
  /* 23999 */ "GE_S_I16x8_S\0"
  /* 24012 */ "LE_S_I16x8_S\0"
  /* 24025 */ "EXTMUL_HIGH_S_I16x8_S\0"
  /* 24047 */ "MIN_S_I16x8_S\0"
  /* 24061 */ "SHR_S_I16x8_S\0"
  /* 24075 */ "SUB_SAT_S_I16x8_S\0"
  /* 24093 */ "ADD_SAT_S_I16x8_S\0"
  /* 24111 */ "Q15MULR_SAT_S_I16x8_S\0"
  /* 24133 */ "GT_S_I16x8_S\0"
  /* 24146 */ "LT_S_I16x8_S\0"
  /* 24159 */ "EXTMUL_LOW_S_I16x8_S\0"
  /* 24180 */ "NARROW_S_I16x8_S\0"
  /* 24197 */ "MAX_S_I16x8_S\0"
  /* 24211 */ "SPLAT_I16x8_S\0"
  /* 24225 */ "anonymous_4466SIGNSELECT_I16x8_S\0"
  /* 24258 */ "GE_U_I16x8_S\0"
  /* 24271 */ "LE_U_I16x8_S\0"
  /* 24284 */ "EXTMUL_HIGH_U_I16x8_S\0"
  /* 24306 */ "MIN_U_I16x8_S\0"
  /* 24320 */ "AVGR_U_I16x8_S\0"
  /* 24335 */ "SHR_U_I16x8_S\0"
  /* 24349 */ "SUB_SAT_U_I16x8_S\0"
  /* 24367 */ "ADD_SAT_U_I16x8_S\0"
  /* 24385 */ "GT_U_I16x8_S\0"
  /* 24398 */ "LT_U_I16x8_S\0"
  /* 24411 */ "EXTMUL_LOW_U_I16x8_S\0"
  /* 24432 */ "NARROW_U_I16x8_S\0"
  /* 24449 */ "MAX_U_I16x8_S\0"
  /* 24463 */ "int_wasm_extadd_pairwise_signed_I16x8_S\0"
  /* 24503 */ "int_wasm_extadd_pairwise_unsigned_I16x8_S\0"
  /* 24545 */ "widen_high_s_I16x8_S\0"
  /* 24566 */ "widen_low_s_I16x8_S\0"
  /* 24586 */ "widen_high_u_I16x8_S\0"
  /* 24607 */ "widen_low_u_I16x8_S\0"
  /* 24627 */ "AND_S\0"
  /* 24633 */ "END_S\0"
  /* 24639 */ "ATOMIC_FENCE_S\0"
  /* 24654 */ "COMPILER_FENCE_S\0"
  /* 24671 */ "DEBUG_UNREACHABLE_S\0"
  /* 24691 */ "SHUFFLE_S\0"
  /* 24701 */ "SWIZZLE_S\0"
  /* 24711 */ "ELSE_S\0"
  /* 24718 */ "TABLE_SIZE_S\0"
  /* 24731 */ "LOCAL_TEE_FUNCREF_S\0"
  /* 24751 */ "TABLE_FILL_FUNCREF_S\0"
  /* 24772 */ "REF_NULL_FUNCREF_S\0"
  /* 24791 */ "DROP_FUNCREF_S\0"
  /* 24806 */ "SELECT_FUNCREF_S\0"
  /* 24823 */ "TABLE_GET_FUNCREF_S\0"
  /* 24843 */ "GLOBAL_GET_FUNCREF_S\0"
  /* 24864 */ "LOCAL_GET_FUNCREF_S\0"
  /* 24884 */ "TABLE_SET_FUNCREF_S\0"
  /* 24904 */ "GLOBAL_SET_FUNCREF_S\0"
  /* 24925 */ "LOCAL_SET_FUNCREF_S\0"
  /* 24945 */ "TABLE_GROW_FUNCREF_S\0"
  /* 24966 */ "COPY_FUNCREF_S\0"
  /* 24981 */ "LOCAL_TEE_EXTERNREF_S\0"
  /* 25003 */ "TABLE_FILL_EXTERNREF_S\0"
  /* 25026 */ "REF_NULL_EXTERNREF_S\0"
  /* 25047 */ "DROP_EXTERNREF_S\0"
  /* 25064 */ "SELECT_EXTERNREF_S\0"
  /* 25083 */ "TABLE_GET_EXTERNREF_S\0"
  /* 25105 */ "GLOBAL_GET_EXTERNREF_S\0"
  /* 25128 */ "LOCAL_GET_EXTERNREF_S\0"
  /* 25150 */ "TABLE_SET_EXTERNREF_S\0"
  /* 25172 */ "GLOBAL_SET_EXTERNREF_S\0"
  /* 25195 */ "LOCAL_SET_EXTERNREF_S\0"
  /* 25217 */ "TABLE_GROW_EXTERNREF_S\0"
  /* 25240 */ "COPY_EXTERNREF_S\0"
  /* 25257 */ "END_IF_S\0"
  /* 25266 */ "BR_IF_S\0"
  /* 25274 */ "CATCH_S\0"
  /* 25282 */ "END_BLOCK_S\0"
  /* 25294 */ "RET_CALL_S\0"
  /* 25305 */ "CATCH_ALL_S\0"
  /* 25317 */ "END_FUNCTION_S\0"
  /* 25332 */ "FALLTHROUGH_RETURN_S\0"
  /* 25353 */ "ADJCALLSTACKDOWN_S\0"
  /* 25372 */ "NOP_S\0"
  /* 25378 */ "END_LOOP_S\0"
  /* 25389 */ "anonymous_4568DATA_DROP_S\0"
  /* 25415 */ "anonymous_4569DATA_DROP_S\0"
  /* 25441 */ "ADJCALLSTACKUP_S\0"
  /* 25458 */ "BR_S\0"
  /* 25463 */ "XOR_S\0"
  /* 25469 */ "CALL_PARAMS_S\0"
  /* 25483 */ "BR_UNLESS_S\0"
  /* 25495 */ "RET_CALL_RESULTS_S\0"
  /* 25514 */ "WIDEN_I8x16_TO_I32x4_S_S\0"
  /* 25539 */ "BITSELECT_S\0"
  /* 25551 */ "RET_CALL_INDIRECT_S\0"
  /* 25571 */ "CATCHRET_S\0"
  /* 25582 */ "CLEANUPRET_S\0"
  /* 25595 */ "DOT_S\0"
  /* 25601 */ "ANDNOT_S\0"
  /* 25610 */ "WIDEN_I8x16_TO_I32x4_U_S\0"
  /* 25635 */ "RETHROW_S\0"
  /* 25645 */ "TABLE_COPY_S\0"
  /* 25658 */ "END_TRY_S\0"
  /* 25668 */ "ARGUMENT_funcref_S\0"
  /* 25687 */ "ARGUMENT_externref_S\0"
  /* 25708 */ "EXTRACT_LANE_I8x16_s_S\0"
  /* 25731 */ "EXTRACT_LANE_I16x8_s_S\0"
  /* 25754 */ "EXTRACT_LANE_I8x16_u_S\0"
  /* 25777 */ "EXTRACT_LANE_I16x8_u_S\0"
  /* 25800 */ "G_SSUBSAT\0"
  /* 25810 */ "G_USUBSAT\0"
  /* 25820 */ "G_SADDSAT\0"
  /* 25830 */ "G_UADDSAT\0"
  /* 25840 */ "G_SSHLSAT\0"
  /* 25850 */ "G_USHLSAT\0"
  /* 25860 */ "G_SMULFIXSAT\0"
  /* 25873 */ "G_UMULFIXSAT\0"
  /* 25886 */ "G_SDIVFIXSAT\0"
  /* 25899 */ "G_UDIVFIXSAT\0"
  /* 25912 */ "G_EXTRACT\0"
  /* 25922 */ "BITSELECT\0"
  /* 25932 */ "G_SELECT\0"
  /* 25941 */ "G_BRINDIRECT\0"
  /* 25954 */ "RET_CALL_INDIRECT\0"
  /* 25972 */ "CATCHRET\0"
  /* 25981 */ "CLEANUPRET\0"
  /* 25992 */ "PATCHABLE_RET\0"
  /* 26006 */ "G_MEMSET\0"
  /* 26015 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 26039 */ "G_BRJT\0"
  /* 26046 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 26067 */ "G_INSERT_VECTOR_ELT\0"
  /* 26087 */ "G_FCONSTANT\0"
  /* 26099 */ "G_CONSTANT\0"
  /* 26110 */ "STATEPOINT\0"
  /* 26121 */ "PATCHPOINT\0"
  /* 26132 */ "G_PTRTOINT\0"
  /* 26143 */ "G_FRINT\0"
  /* 26151 */ "G_INTRINSIC_LRINT\0"
  /* 26169 */ "G_FNEARBYINT\0"
  /* 26182 */ "DOT\0"
  /* 26186 */ "ANDNOT\0"
  /* 26193 */ "G_VASTART\0"
  /* 26203 */ "LIFETIME_START\0"
  /* 26218 */ "G_INSERT\0"
  /* 26227 */ "G_FSQRT\0"
  /* 26235 */ "G_STRICT_FSQRT\0"
  /* 26250 */ "G_BITCAST\0"
  /* 26260 */ "G_ADDRSPACE_CAST\0"
  /* 26277 */ "G_FPEXT\0"
  /* 26285 */ "G_SEXT\0"
  /* 26292 */ "G_ANYEXT\0"
  /* 26301 */ "G_ZEXT\0"
  /* 26308 */ "G_ASSERT_ZEXT\0"
  /* 26322 */ "WIDEN_I8x16_TO_I32x4_U\0"
  /* 26345 */ "G_FDIV\0"
  /* 26352 */ "G_STRICT_FDIV\0"
  /* 26366 */ "G_SDIV\0"
  /* 26373 */ "G_UDIV\0"
  /* 26380 */ "G_FPOW\0"
  /* 26387 */ "RETHROW\0"
  /* 26395 */ "G_VECREDUCE_FMAX\0"
  /* 26412 */ "G_VECREDUCE_SMAX\0"
  /* 26429 */ "G_SMAX\0"
  /* 26436 */ "G_VECREDUCE_UMAX\0"
  /* 26453 */ "G_UMAX\0"
  /* 26460 */ "G_ATOMICRMW_UMAX\0"
  /* 26477 */ "G_ATOMICRMW_MAX\0"
  /* 26493 */ "G_FRAME_INDEX\0"
  /* 26507 */ "G_SMULFIX\0"
  /* 26517 */ "G_UMULFIX\0"
  /* 26527 */ "G_SDIVFIX\0"
  /* 26537 */ "G_UDIVFIX\0"
  /* 26547 */ "G_MEMCPY\0"
  /* 26556 */ "TABLE_COPY\0"
  /* 26567 */ "END_TRY\0"
  /* 26575 */ "G_CTLZ\0"
  /* 26582 */ "G_CTTZ\0"
  /* 26589 */ "ARGUMENT_funcref\0"
  /* 26606 */ "ARGUMENT_externref\0"
  /* 26625 */ "EXTRACT_LANE_I8x16_s\0"
  /* 26646 */ "EXTRACT_LANE_I16x8_s\0"
  /* 26667 */ "EXTRACT_LANE_I8x16_u\0"
  /* 26688 */ "EXTRACT_LANE_I16x8_u\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned WebAssemblyInstrNameIndices[] = {
    11815U, 12171U, 12664U, 12375U, 11884U, 11865U, 11893U, 12050U, 
    11669U, 11684U, 11148U, 11711U, 12994U, 11039U, 11635U, 11874U, 
    10871U, 26562U, 10961U, 26203U, 10749U, 10806U, 12475U, 12028U, 
    26121U, 10789U, 12633U, 11774U, 26110U, 10984U, 12606U, 12593U, 
    12690U, 25992U, 26015U, 11951U, 12007U, 11980U, 11910U, 26308U, 
    10662U, 10373U, 12130U, 26366U, 26373U, 12157U, 12164U, 10727U, 
    12882U, 12845U, 11146U, 11813U, 26493U, 11049U, 25912U, 12926U, 
    26218U, 12943U, 12797U, 10443U, 12977U, 26132U, 12902U, 26250U, 
    11074U, 10417U, 10771U, 26151U, 12223U, 12715U, 10563U, 10507U, 
    10537U, 10548U, 10488U, 10518U, 11013U, 10997U, 13011U, 11725U, 
    11742U, 10678U, 10379U, 10733U, 10694U, 12887U, 12851U, 26477U, 
    12339U, 26460U, 12322U, 10629U, 10356U, 10848U, 10762U, 25941U, 
    10395U, 13051U, 26292U, 10435U, 26099U, 26087U, 26193U, 11766U, 
    26285U, 11698U, 26301U, 11937U, 12781U, 12767U, 11930U, 12774U, 
    12517U, 12510U, 25932U, 12451U, 10892U, 12435U, 10827U, 12443U, 
    10884U, 12427U, 10819U, 12467U, 12459U, 11805U, 11797U, 25830U, 
    25820U, 25810U, 25800U, 25850U, 25840U, 26507U, 26517U, 25860U, 
    25873U, 26527U, 26537U, 25886U, 25899U, 10587U, 10335U, 12072U, 
    10316U, 10481U, 26345U, 12136U, 26380U, 11837U, 12652U, 3574U, 
    11759U, 3566U, 0U, 11662U, 26277U, 10407U, 11819U, 11828U, 
    12492U, 12501U, 12913U, 12245U, 11083U, 12203U, 12213U, 10900U, 
    10915U, 12181U, 12192U, 10668U, 11855U, 12291U, 26429U, 12315U, 
    26453U, 12920U, 12659U, 26039U, 26067U, 26046U, 12812U, 26582U, 
    11128U, 26575U, 11110U, 12537U, 12484U, 11026U, 11943U, 12970U, 
    12355U, 26227U, 12788U, 26143U, 26169U, 26260U, 12677U, 10948U, 
    10464U, 10615U, 10342U, 12100U, 26352U, 12143U, 10322U, 26235U, 
    12734U, 12750U, 26547U, 11064U, 26006U, 10594U, 12079U, 10570U, 
    12055U, 26395U, 12257U, 10646U, 12114U, 10711U, 12867U, 12829U, 
    26412U, 12274U, 26436U, 12298U, 12958U, 25469U, 13082U, 25499U, 
    25972U, 25571U, 25981U, 25582U, 10856U, 24654U, 13078U, 25495U, 
    2665U, 15999U, 8133U, 22129U, 7046U, 20862U, 3761U, 17257U, 
    9746U, 23987U, 8447U, 22514U, 4102U, 17644U, 9152U, 23303U, 
    2534U, 15840U, 8004U, 21978U, 6916U, 20704U, 3632U, 17106U, 
    9636U, 23859U, 2984U, 16366U, 8318U, 22342U, 7365U, 21229U, 
    3982U, 17506U, 9052U, 23187U, 9838U, 24093U, 9224U, 23387U, 
    10080U, 24367U, 9420U, 23611U, 12410U, 25353U, 12618U, 25441U, 
    9665U, 23892U, 8366U, 22396U, 4030U, 17560U, 9081U, 23220U, 
    10707U, 26186U, 25601U, 2992U, 16376U, 7373U, 21239U, 24627U, 
    9679U, 23908U, 8380U, 22412U, 4044U, 17576U, 9095U, 23236U, 
    26606U, 25687U, 3525U, 17001U, 7904U, 21862U, 26589U, 25668U, 
    3553U, 17033U, 7941U, 21905U, 9594U, 23811U, 7889U, 21845U, 
    7926U, 21888U, 3510U, 16984U, 3538U, 17016U, 9010U, 23139U, 
    10835U, 24639U, 699U, 13843U, 5081U, 18707U, 1827U, 15065U, 
    6209U, 19929U, 1803U, 15039U, 6185U, 19903U, 723U, 13869U, 
    5105U, 18733U, 1851U, 15091U, 6233U, 19955U, 157U, 13257U, 
    4539U, 18121U, 1078U, 14256U, 5460U, 19120U, 177U, 13279U, 
    4559U, 18143U, 1125U, 14307U, 5507U, 19171U, 253U, 13361U, 
    4635U, 18225U, 1228U, 14418U, 5610U, 19282U, 350U, 13466U, 
    4732U, 18330U, 1356U, 14556U, 5738U, 19420U, 593U, 13727U, 
    4975U, 18591U, 1680U, 14904U, 6062U, 19768U, 81U, 13175U, 
    4463U, 18039U, 1002U, 14174U, 5384U, 19038U, 438U, 13560U, 
    4820U, 18424U, 1472U, 14680U, 5854U, 19544U, 517U, 13645U, 
    4899U, 18509U, 1578U, 14794U, 5960U, 19658U, 1098U, 14278U, 
    5480U, 19142U, 1201U, 14389U, 5583U, 19253U, 1325U, 14523U, 
    5707U, 19387U, 1654U, 14876U, 6036U, 19740U, 975U, 14145U, 
    5357U, 19009U, 1444U, 14650U, 5826U, 19514U, 1551U, 14765U, 
    5933U, 19629U, 204U, 13308U, 4586U, 18172U, 1152U, 14336U, 
    5534U, 19200U, 280U, 13390U, 4662U, 18254U, 1255U, 14447U, 
    5637U, 19311U, 381U, 13499U, 4763U, 18363U, 1387U, 14589U, 
    5769U, 19453U, 619U, 13755U, 5001U, 18619U, 1706U, 14932U, 
    6088U, 19796U, 108U, 13204U, 4490U, 18068U, 1029U, 14203U, 
    5411U, 19067U, 466U, 13590U, 4848U, 18454U, 1500U, 14710U, 
    5882U, 19574U, 544U, 13674U, 4926U, 18538U, 1605U, 14823U, 
    5987U, 19687U, 230U, 13336U, 4612U, 18200U, 1178U, 14364U, 
    5560U, 19228U, 306U, 13418U, 4688U, 18282U, 1281U, 14475U, 
    5663U, 19339U, 411U, 13531U, 4793U, 18395U, 1417U, 14621U, 
    5799U, 19485U, 644U, 13782U, 5026U, 18646U, 1731U, 14959U, 
    6113U, 19823U, 134U, 13232U, 4516U, 18096U, 1055U, 14231U, 
    5437U, 19095U, 493U, 13619U, 4875U, 18483U, 1527U, 14739U, 
    5909U, 19603U, 570U, 13702U, 4952U, 18566U, 1631U, 14851U, 
    6013U, 19715U, 36U, 13126U, 4418U, 17990U, 930U, 14096U, 
    5312U, 18960U, 907U, 14071U, 5289U, 18935U, 59U, 13151U, 
    4441U, 18015U, 953U, 14121U, 5335U, 18985U, 329U, 13443U, 
    4711U, 18307U, 1304U, 14500U, 5686U, 19364U, 10039U, 24320U, 
    9379U, 23564U, 9703U, 23936U, 8404U, 22440U, 4068U, 17604U, 
    9119U, 23264U, 25922U, 25539U, 11849U, 25286U, 12661U, 11656U, 
    25266U, 25458U, 3014U, 16402U, 7395U, 21265U, 13041U, 25483U, 
    11966U, 25958U, 25555U, 25298U, 11791U, 12040U, 25305U, 25274U, 
    2601U, 15921U, 8080U, 22066U, 6982U, 20784U, 3708U, 17194U, 
    3486U, 16954U, 7865U, 21815U, 2909U, 16277U, 7290U, 21140U, 
    3348U, 16792U, 7744U, 21672U, 7954U, 21920U, 3582U, 17048U, 
    9609U, 23828U, 8291U, 22311U, 3955U, 17475U, 9025U, 23156U, 
    2618U, 15942U, 6999U, 20805U, 11620U, 25240U, 2967U, 16345U, 
    7348U, 21208U, 11372U, 24966U, 3477U, 16943U, 7856U, 21804U, 
    9584U, 23799U, 3502U, 16974U, 7881U, 21835U, 10930U, 24671U, 
    2951U, 16325U, 8209U, 22219U, 7332U, 21188U, 3837U, 17347U, 
    3238U, 16666U, 7634U, 21546U, 3467U, 16931U, 7846U, 21792U, 
    26182U, 25595U, 11445U, 25047U, 2639U, 15967U, 7020U, 20830U, 
    11215U, 24791U, 3059U, 16457U, 7453U, 21335U, 9500U, 23703U, 
    11021U, 24711U, 10758U, 11845U, 25282U, 12362U, 25317U, 11649U, 
    25257U, 12528U, 25378U, 24633U, 26567U, 25658U, 3494U, 16964U, 
    7873U, 21825U, 2648U, 15978U, 8112U, 22104U, 7029U, 20841U, 
    3740U, 17232U, 9737U, 23976U, 3068U, 16468U, 8438U, 22503U, 
    7462U, 21346U, 9143U, 23292U, 7917U, 21877U, 9778U, 24025U, 
    8479U, 22552U, 4112U, 17656U, 10007U, 24284U, 8641U, 22736U, 
    4206U, 17760U, 9896U, 24159U, 8545U, 22628U, 4144U, 17692U, 
    10118U, 24411U, 8707U, 22812U, 4238U, 17796U, 8051U, 22033U, 
    3679U, 17161U, 26646U, 25731U, 26688U, 25777U, 8347U, 22375U, 
    4011U, 17539U, 26625U, 25708U, 26667U, 25754U, 3202U, 16626U, 
    7598U, 21506U, 3431U, 16891U, 7810U, 21752U, 6959U, 20757U, 
    3288U, 16724U, 3220U, 16646U, 7616U, 21526U, 3449U, 16911U, 
    7828U, 21772U, 2577U, 15893U, 7684U, 21604U, 12391U, 25332U, 
    2655U, 15987U, 8121U, 22115U, 7036U, 20850U, 3749U, 17243U, 
    2440U, 15734U, 6822U, 20598U, 2478U, 15776U, 6860U, 20640U, 
    2459U, 15755U, 6841U, 20619U, 2497U, 15797U, 6879U, 20661U, 
    2556U, 15866U, 8014U, 21990U, 6938U, 20730U, 3642U, 17118U, 
    9756U, 23999U, 3146U, 16558U, 8457U, 22526U, 7542U, 21438U, 
    9162U, 23315U, 9985U, 24258U, 3375U, 16823U, 8619U, 22710U, 
    7754U, 21684U, 9345U, 23524U, 11497U, 25105U, 2796U, 16146U, 
    7177U, 21009U, 11261U, 24843U, 3259U, 16691U, 7655U, 21571U, 
    9522U, 23729U, 11558U, 25172U, 2845U, 16201U, 7226U, 21064U, 
    11316U, 24904U, 3308U, 16746U, 7704U, 21626U, 9553U, 23764U, 
    2874U, 16234U, 8166U, 22168U, 7255U, 21097U, 3794U, 17296U, 
    9874U, 24133U, 3184U, 16604U, 8523U, 22602U, 7580U, 21484U, 
    9240U, 23405U, 10096U, 24385U, 3413U, 16869U, 8685U, 22786U, 
    7792U, 21730U, 9436U, 23629U, 3092U, 16498U, 3111U, 16519U, 
    2825U, 16179U, 2673U, 16009U, 7054U, 20872U, 2705U, 16045U, 
    7086U, 20908U, 2919U, 16289U, 7300U, 21152U, 2745U, 16089U, 
    7126U, 20952U, 7440U, 21320U, 7505U, 21397U, 7486U, 21376U, 
    7524U, 21418U, 3129U, 16539U, 3358U, 16804U, 7206U, 21042U, 
    2689U, 16027U, 7070U, 20890U, 2725U, 16067U, 7106U, 20930U, 
    2935U, 16307U, 7316U, 21170U, 2765U, 16111U, 7146U, 20974U, 
    11653U, 25261U, 2563U, 15875U, 8023U, 22001U, 6945U, 20739U, 
    3651U, 17129U, 9767U, 24012U, 3155U, 16569U, 8468U, 22539U, 
    7551U, 21449U, 9173U, 23328U, 9996U, 24271U, 3384U, 16834U, 
    8630U, 22723U, 7763U, 21695U, 9356U, 23537U, 2261U, 15539U, 
    6643U, 20403U, 666U, 13806U, 5048U, 18670U, 1770U, 15002U, 
    6152U, 19866U, 706U, 13850U, 5088U, 18714U, 1834U, 15072U, 
    6216U, 19936U, 2227U, 15501U, 6609U, 20365U, 1753U, 14983U, 
    6135U, 19847U, 1810U, 15046U, 6192U, 19910U, 2244U, 15520U, 
    6626U, 20384U, 2278U, 15558U, 6660U, 20422U, 683U, 13825U, 
    5065U, 18689U, 1787U, 15021U, 6169U, 19885U, 730U, 13876U, 
    5112U, 18740U, 1858U, 15098U, 6240U, 19962U, 2119U, 15385U, 
    6501U, 20249U, 1960U, 15210U, 6342U, 20074U, 832U, 13988U, 
    5214U, 18852U, 2143U, 15411U, 6525U, 20275U, 1984U, 15236U, 
    6366U, 20100U, 856U, 14014U, 5238U, 18878U, 9U, 13095U, 
    4391U, 17959U, 880U, 14040U, 5262U, 18904U, 164U, 13264U, 
    4546U, 18128U, 1085U, 14263U, 5467U, 19127U, 2078U, 15340U, 
    6460U, 20204U, 1899U, 15143U, 6281U, 20007U, 771U, 13921U, 
    5153U, 18785U, 2008U, 15262U, 6390U, 20126U, 2049U, 15307U, 
    6431U, 20171U, 1940U, 15188U, 6322U, 20052U, 812U, 13966U, 
    5194U, 18830U, 11518U, 25128U, 2811U, 16163U, 7192U, 21026U, 
    11280U, 24864U, 3274U, 16708U, 7670U, 21588U, 9538U, 23747U, 
    11579U, 25195U, 2860U, 16218U, 7241U, 21081U, 11335U, 24925U, 
    3323U, 16763U, 7719U, 21643U, 9569U, 23782U, 11385U, 24981U, 
    2542U, 15850U, 6924U, 20714U, 11161U, 24731U, 3000U, 16386U, 
    7381U, 21249U, 9485U, 23686U, 12532U, 25382U, 2881U, 16243U, 
    8175U, 22179U, 7262U, 21106U, 3803U, 17307U, 9885U, 24146U, 
    3193U, 16615U, 8534U, 22615U, 7589U, 21495U, 9251U, 23418U, 
    10107U, 24398U, 3422U, 16880U, 8696U, 22799U, 7801U, 21741U, 
    9447U, 23642U, 2959U, 16335U, 8220U, 22232U, 7340U, 21198U, 
    3848U, 17360U, 9930U, 24197U, 8564U, 22649U, 9277U, 23448U, 
    10152U, 24449U, 8726U, 22833U, 9473U, 23672U, 2385U, 15675U, 
    6767U, 20539U, 746U, 13894U, 5128U, 18758U, 1874U, 15116U, 
    6256U, 19980U, 2631U, 15957U, 8102U, 22092U, 7012U, 20820U, 
    3730U, 17220U, 9798U, 24047U, 8499U, 22574U, 9184U, 23341U, 
    10027U, 24306U, 8661U, 22758U, 9367U, 23550U, 2610U, 15932U, 
    8091U, 22079U, 6991U, 20795U, 3719U, 17207U, 9727U, 23964U, 
    3051U, 16447U, 8428U, 22468U, 7432U, 21310U, 4092U, 17632U, 
    9915U, 24180U, 9262U, 23431U, 10137U, 24432U, 9458U, 23655U, 
    2897U, 16263U, 8195U, 22203U, 7278U, 21126U, 3823U, 17331U, 
    2593U, 15911U, 8070U, 22054U, 6974U, 20774U, 3698U, 17182U, 
    9693U, 23924U, 8394U, 22428U, 4058U, 17592U, 9109U, 23252U, 
    2570U, 15884U, 8042U, 22022U, 6952U, 20748U, 3670U, 17150U, 
    9656U, 23881U, 3027U, 16417U, 8338U, 22364U, 7408U, 21280U, 
    9072U, 23209U, 12524U, 25372U, 26189U, 25604U, 12794U, 3076U, 
    16478U, 7470U, 21356U, 25464U, 8219U, 22231U, 3847U, 17359U, 
    8101U, 22091U, 3729U, 17219U, 3337U, 16779U, 7733U, 21659U, 
    9332U, 23509U, 2324U, 15608U, 6706U, 20472U, 2340U, 15626U, 
    6722U, 20490U, 9854U, 24111U, 7971U, 21939U, 3599U, 17067U, 
    8143U, 22141U, 3771U, 17269U, 11426U, 25026U, 11198U, 24772U, 
    3164U, 16580U, 7560U, 21460U, 3393U, 16845U, 7772U, 21706U, 
    8032U, 22012U, 3660U, 17140U, 9646U, 23871U, 8328U, 22354U, 
    3992U, 17518U, 9062U, 23199U, 26387U, 25635U, 12403U, 25344U, 
    11971U, 25954U, 25551U, 25294U, 3042U, 16436U, 7423U, 21299U, 
    3083U, 16487U, 7477U, 21365U, 11460U, 25064U, 2785U, 16133U, 
    7166U, 20996U, 11228U, 24806U, 3248U, 16678U, 7644U, 21558U, 
    9510U, 23715U, 9717U, 23952U, 3034U, 16426U, 8418U, 22456U, 
    7415U, 21289U, 4082U, 17620U, 9133U, 23280U, 9810U, 24061U, 
    3174U, 16592U, 8511U, 22588U, 7570U, 21472U, 4132U, 17678U, 
    9196U, 23355U, 10052U, 24335U, 3403U, 16857U, 8673U, 22772U, 
    7782U, 21718U, 4226U, 17782U, 9392U, 23579U, 10968U, 24691U, 
    8154U, 22154U, 3782U, 17282U, 9942U, 24211U, 8576U, 22663U, 
    4163U, 17713U, 9289U, 23462U, 2888U, 16252U, 8184U, 22190U, 
    7269U, 21115U, 3812U, 17318U, 43U, 13133U, 4425U, 17997U, 
    937U, 14103U, 5319U, 18967U, 914U, 14078U, 5296U, 18942U, 
    66U, 13158U, 4448U, 18022U, 960U, 14128U, 5342U, 18992U, 
    22U, 13110U, 4404U, 17974U, 893U, 14055U, 5275U, 18919U, 
    336U, 13450U, 4718U, 18314U, 1311U, 14507U, 5693U, 19371U, 
    2098U, 15362U, 6480U, 20226U, 1919U, 15165U, 6301U, 20029U, 
    791U, 13943U, 5173U, 18807U, 2028U, 15284U, 6410U, 20148U, 
    2063U, 15323U, 6445U, 20187U, 2516U, 15818U, 7982U, 21952U, 
    6898U, 20682U, 3610U, 17080U, 9626U, 23847U, 2976U, 16356U, 
    8308U, 22330U, 7357U, 21219U, 3972U, 17494U, 9042U, 23175U, 
    9822U, 24075U, 9208U, 23369U, 10064U, 24349U, 9404U, 23593U, 
    10976U, 24701U, 26556U, 25645U, 11405U, 25003U, 11179U, 24751U, 
    11477U, 25083U, 11243U, 24823U, 11599U, 25217U, 11353U, 24945U, 
    11538U, 25150U, 11298U, 24884U, 11099U, 24718U, 11391U, 24987U, 
    2548U, 15856U, 6930U, 20720U, 11167U, 24737U, 3006U, 16392U, 
    7387U, 21255U, 9491U, 23692U, 26389U, 25637U, 2524U, 15828U, 
    7992U, 21964U, 6906U, 20692U, 3620U, 17092U, 26571U, 25662U, 
    10936U, 24677U, 22480U, 25514U, 26322U, 25610U, 12841U, 3075U, 
    16477U, 7469U, 21355U, 25463U, 2355U, 15643U, 2167U, 15437U, 
    6737U, 20507U, 6549U, 20301U, 9301U, 23476U, 9954U, 24225U, 
    8588U, 22677U, 4175U, 17727U, 12545U, 25389U, 2410U, 15702U, 
    2197U, 15469U, 2294U, 15576U, 12569U, 25415U, 6792U, 20566U, 
    6579U, 20333U, 6676U, 20440U, 8939U, 23060U, 8956U, 23079U, 
    3858U, 17372U, 3892U, 17408U, 8230U, 22244U, 10164U, 24463U, 
    8738U, 22847U, 10202U, 24503U, 8818U, 22931U, 3928U, 17446U, 
    8776U, 22887U, 8858U, 22973U, 4257U, 17817U, 4322U, 17886U, 
    4290U, 17852U, 4357U, 17923U, 8257U, 22273U, 8274U, 22292U, 
    10242U, 24545U, 8902U, 23019U, 10279U, 24586U, 8973U, 23098U, 
    10261U, 24566U, 8921U, 23040U, 10298U, 24607U, 8992U, 23119U, 
};

static inline void InitWebAssemblyMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1704);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct WebAssemblyGenInstrInfo : public TargetInstrInfo {
  explicit WebAssemblyGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~WebAssemblyGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc WebAssemblyInsts[];
extern const unsigned WebAssemblyInstrNameIndices[];
extern const char WebAssemblyInstrNameData[];
WebAssemblyGenInstrInfo::WebAssemblyGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1704);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpName {
enum {
  addr = 3,
  count = 9,
  dst = 0,
  exp = 5,
  idx = 7,
  new_ = 6,
  off = 2,
  p2align = 1,
  timeout = 10,
  val = 4,
  vec = 8,
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  static const int16_t OperandMap [][11] = {
{0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, 5, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, -1, -1, -1, -1, 5, },
{0, 1, 2, 3, -1, -1, -1, -1, -1, 4, -1, },
{0, 1, 2, 4, -1, -1, -1, 3, 5, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, -1, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, -1, -1, -1, -1, 3, -1, -1, },
{-1, 0, 1, 3, -1, -1, -1, 2, 4, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, 2, -1, -1, -1, },
};
  switch(Opcode) {
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD_I32_A32:
  case WebAssembly::ATOMIC_LOAD_I32_A64:
  case WebAssembly::ATOMIC_LOAD_I64_A32:
  case WebAssembly::ATOMIC_LOAD_I64_A64:
  case WebAssembly::LOAD16_SPLAT_A32:
  case WebAssembly::LOAD16_SPLAT_A64:
  case WebAssembly::LOAD16_S_I32_A32:
  case WebAssembly::LOAD16_S_I32_A64:
  case WebAssembly::LOAD16_S_I64_A32:
  case WebAssembly::LOAD16_S_I64_A64:
  case WebAssembly::LOAD16_U_I32_A32:
  case WebAssembly::LOAD16_U_I32_A64:
  case WebAssembly::LOAD16_U_I64_A32:
  case WebAssembly::LOAD16_U_I64_A64:
  case WebAssembly::LOAD32_SPLAT_A32:
  case WebAssembly::LOAD32_SPLAT_A64:
  case WebAssembly::LOAD32_S_I64_A32:
  case WebAssembly::LOAD32_S_I64_A64:
  case WebAssembly::LOAD32_U_I64_A32:
  case WebAssembly::LOAD32_U_I64_A64:
  case WebAssembly::LOAD64_SPLAT_A32:
  case WebAssembly::LOAD64_SPLAT_A64:
  case WebAssembly::LOAD8_SPLAT_A32:
  case WebAssembly::LOAD8_SPLAT_A64:
  case WebAssembly::LOAD8_S_I32_A32:
  case WebAssembly::LOAD8_S_I32_A64:
  case WebAssembly::LOAD8_S_I64_A32:
  case WebAssembly::LOAD8_S_I64_A64:
  case WebAssembly::LOAD8_U_I32_A32:
  case WebAssembly::LOAD8_U_I32_A64:
  case WebAssembly::LOAD8_U_I64_A32:
  case WebAssembly::LOAD8_U_I64_A64:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64:
  case WebAssembly::LOAD_F32_A32:
  case WebAssembly::LOAD_F32_A64:
  case WebAssembly::LOAD_F64_A32:
  case WebAssembly::LOAD_F64_A64:
  case WebAssembly::LOAD_I32_A32:
  case WebAssembly::LOAD_I32_A64:
  case WebAssembly::LOAD_I64_A32:
  case WebAssembly::LOAD_I64_A64:
  case WebAssembly::LOAD_V128_A32:
  case WebAssembly::LOAD_V128_A64:
  case WebAssembly::LOAD_ZERO_I32x4_A32:
  case WebAssembly::LOAD_ZERO_I32x4_A64:
  case WebAssembly::LOAD_ZERO_I64x2_A32:
  case WebAssembly::LOAD_ZERO_I64x2_A64:
    return OperandMap[0][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64:
    return OperandMap[1][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64:
    return OperandMap[2][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64:
    return OperandMap[3][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64:
    return OperandMap[4][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32:
  case WebAssembly::LOAD_LANE_I16x8_A64:
  case WebAssembly::LOAD_LANE_I32x4_A32:
  case WebAssembly::LOAD_LANE_I32x4_A64:
  case WebAssembly::LOAD_LANE_I64x2_A32:
  case WebAssembly::LOAD_LANE_I64x2_A64:
  case WebAssembly::LOAD_LANE_I8x16_A32:
  case WebAssembly::LOAD_LANE_I8x16_A64:
  case WebAssembly::STORE_LANE_I16x8_A64:
  case WebAssembly::STORE_LANE_I32x4_A64:
  case WebAssembly::STORE_LANE_I64x2_A64:
  case WebAssembly::STORE_LANE_I8x16_A64:
    return OperandMap[5][NamedIdx];
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_STORE16_I32_A32_S:
  case WebAssembly::ATOMIC_STORE16_I32_A64_S:
  case WebAssembly::ATOMIC_STORE16_I64_A32_S:
  case WebAssembly::ATOMIC_STORE16_I64_A64_S:
  case WebAssembly::ATOMIC_STORE32_I64_A32_S:
  case WebAssembly::ATOMIC_STORE32_I64_A64_S:
  case WebAssembly::ATOMIC_STORE8_I32_A32_S:
  case WebAssembly::ATOMIC_STORE8_I32_A64_S:
  case WebAssembly::ATOMIC_STORE8_I64_A32_S:
  case WebAssembly::ATOMIC_STORE8_I64_A64_S:
  case WebAssembly::ATOMIC_STORE_I32_A32_S:
  case WebAssembly::ATOMIC_STORE_I32_A64_S:
  case WebAssembly::ATOMIC_STORE_I64_A32_S:
  case WebAssembly::ATOMIC_STORE_I64_A64_S:
  case WebAssembly::LOAD16_SPLAT_A32_S:
  case WebAssembly::LOAD16_SPLAT_A64_S:
  case WebAssembly::LOAD16_S_I32_A32_S:
  case WebAssembly::LOAD16_S_I32_A64_S:
  case WebAssembly::LOAD16_S_I64_A32_S:
  case WebAssembly::LOAD16_S_I64_A64_S:
  case WebAssembly::LOAD16_U_I32_A32_S:
  case WebAssembly::LOAD16_U_I32_A64_S:
  case WebAssembly::LOAD16_U_I64_A32_S:
  case WebAssembly::LOAD16_U_I64_A64_S:
  case WebAssembly::LOAD32_SPLAT_A32_S:
  case WebAssembly::LOAD32_SPLAT_A64_S:
  case WebAssembly::LOAD32_S_I64_A32_S:
  case WebAssembly::LOAD32_S_I64_A64_S:
  case WebAssembly::LOAD32_U_I64_A32_S:
  case WebAssembly::LOAD32_U_I64_A64_S:
  case WebAssembly::LOAD64_SPLAT_A32_S:
  case WebAssembly::LOAD64_SPLAT_A64_S:
  case WebAssembly::LOAD8_SPLAT_A32_S:
  case WebAssembly::LOAD8_SPLAT_A64_S:
  case WebAssembly::LOAD8_S_I32_A32_S:
  case WebAssembly::LOAD8_S_I32_A64_S:
  case WebAssembly::LOAD8_S_I64_A32_S:
  case WebAssembly::LOAD8_S_I64_A64_S:
  case WebAssembly::LOAD8_U_I32_A32_S:
  case WebAssembly::LOAD8_U_I32_A64_S:
  case WebAssembly::LOAD8_U_I64_A32_S:
  case WebAssembly::LOAD8_U_I64_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64_S:
  case WebAssembly::LOAD_F32_A32_S:
  case WebAssembly::LOAD_F32_A64_S:
  case WebAssembly::LOAD_F64_A32_S:
  case WebAssembly::LOAD_F64_A64_S:
  case WebAssembly::LOAD_I32_A32_S:
  case WebAssembly::LOAD_I32_A64_S:
  case WebAssembly::LOAD_I64_A32_S:
  case WebAssembly::LOAD_I64_A64_S:
  case WebAssembly::LOAD_V128_A32_S:
  case WebAssembly::LOAD_V128_A64_S:
  case WebAssembly::LOAD_ZERO_I32x4_A32_S:
  case WebAssembly::LOAD_ZERO_I32x4_A64_S:
  case WebAssembly::LOAD_ZERO_I64x2_A32_S:
  case WebAssembly::LOAD_ZERO_I64x2_A64_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S:
  case WebAssembly::PREFETCH_NT_A32_S:
  case WebAssembly::PREFETCH_NT_A64_S:
  case WebAssembly::PREFETCH_T_A32_S:
  case WebAssembly::PREFETCH_T_A64_S:
  case WebAssembly::STORE16_I32_A32_S:
  case WebAssembly::STORE16_I32_A64_S:
  case WebAssembly::STORE16_I64_A32_S:
  case WebAssembly::STORE16_I64_A64_S:
  case WebAssembly::STORE32_I64_A32_S:
  case WebAssembly::STORE32_I64_A64_S:
  case WebAssembly::STORE8_I32_A32_S:
  case WebAssembly::STORE8_I32_A64_S:
  case WebAssembly::STORE8_I64_A32_S:
  case WebAssembly::STORE8_I64_A64_S:
  case WebAssembly::STORE_F32_A32_S:
  case WebAssembly::STORE_F32_A64_S:
  case WebAssembly::STORE_F64_A32_S:
  case WebAssembly::STORE_F64_A64_S:
  case WebAssembly::STORE_I32_A32_S:
  case WebAssembly::STORE_I32_A64_S:
  case WebAssembly::STORE_I64_A32_S:
  case WebAssembly::STORE_I64_A64_S:
  case WebAssembly::STORE_V128_A32_S:
  case WebAssembly::STORE_V128_A64_S:
    return OperandMap[6][NamedIdx];
  case WebAssembly::PREFETCH_NT_A32:
  case WebAssembly::PREFETCH_NT_A64:
  case WebAssembly::PREFETCH_T_A32:
  case WebAssembly::PREFETCH_T_A64:
    return OperandMap[7][NamedIdx];
  case WebAssembly::ATOMIC_STORE16_I32_A32:
  case WebAssembly::ATOMIC_STORE16_I32_A64:
  case WebAssembly::ATOMIC_STORE16_I64_A32:
  case WebAssembly::ATOMIC_STORE16_I64_A64:
  case WebAssembly::ATOMIC_STORE32_I64_A32:
  case WebAssembly::ATOMIC_STORE32_I64_A64:
  case WebAssembly::ATOMIC_STORE8_I32_A32:
  case WebAssembly::ATOMIC_STORE8_I32_A64:
  case WebAssembly::ATOMIC_STORE8_I64_A32:
  case WebAssembly::ATOMIC_STORE8_I64_A64:
  case WebAssembly::ATOMIC_STORE_I32_A32:
  case WebAssembly::ATOMIC_STORE_I32_A64:
  case WebAssembly::ATOMIC_STORE_I64_A32:
  case WebAssembly::ATOMIC_STORE_I64_A64:
  case WebAssembly::STORE16_I32_A32:
  case WebAssembly::STORE16_I32_A64:
  case WebAssembly::STORE16_I64_A32:
  case WebAssembly::STORE16_I64_A64:
  case WebAssembly::STORE32_I64_A32:
  case WebAssembly::STORE32_I64_A64:
  case WebAssembly::STORE8_I32_A32:
  case WebAssembly::STORE8_I32_A64:
  case WebAssembly::STORE8_I64_A32:
  case WebAssembly::STORE8_I64_A64:
  case WebAssembly::STORE_F32_A32:
  case WebAssembly::STORE_F32_A64:
  case WebAssembly::STORE_F64_A32:
  case WebAssembly::STORE_F64_A64:
  case WebAssembly::STORE_I32_A32:
  case WebAssembly::STORE_I32_A64:
  case WebAssembly::STORE_I64_A32:
  case WebAssembly::STORE_I64_A64:
    return OperandMap[8][NamedIdx];
  case WebAssembly::STORE_V128_A32:
  case WebAssembly::STORE_V128_A64:
    return OperandMap[9][NamedIdx];
  case WebAssembly::STORE_LANE_I16x8_A32:
  case WebAssembly::STORE_LANE_I32x4_A32:
  case WebAssembly::STORE_LANE_I64x2_A32:
  case WebAssembly::STORE_LANE_I8x16_A32:
    return OperandMap[10][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32_S:
  case WebAssembly::LOAD_LANE_I16x8_A64_S:
  case WebAssembly::LOAD_LANE_I32x4_A32_S:
  case WebAssembly::LOAD_LANE_I32x4_A64_S:
  case WebAssembly::LOAD_LANE_I64x2_A32_S:
  case WebAssembly::LOAD_LANE_I64x2_A64_S:
  case WebAssembly::LOAD_LANE_I8x16_A32_S:
  case WebAssembly::LOAD_LANE_I8x16_A64_S:
  case WebAssembly::STORE_LANE_I16x8_A32_S:
  case WebAssembly::STORE_LANE_I16x8_A64_S:
  case WebAssembly::STORE_LANE_I32x4_A32_S:
  case WebAssembly::STORE_LANE_I32x4_A64_S:
  case WebAssembly::STORE_LANE_I64x2_A32_S:
  case WebAssembly::STORE_LANE_I64x2_A64_S:
  case WebAssembly::STORE_LANE_I8x16_A32_S:
  case WebAssembly::STORE_LANE_I8x16_A64_S:
    return OperandMap[11][NamedIdx];
  default: return -1;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpTypes {
enum OperandType {
  HeapType = 0,
  P2Align = 1,
  Signature = 2,
  TypeIndex = 3,
  bb_op = 4,
  brlist = 5,
  event_op = 6,
  f32imm = 7,
  f32imm_op = 8,
  f64imm = 9,
  f64imm_op = 10,
  function32_op = 11,
  global_op = 12,
  i16imm = 13,
  i1imm = 14,
  i32imm = 15,
  i32imm_op = 16,
  i64imm = 17,
  i64imm_op = 18,
  i8imm = 19,
  local_op = 20,
  offset32_op = 21,
  offset64_op = 22,
  ptype0 = 23,
  ptype1 = 24,
  ptype2 = 25,
  ptype3 = 26,
  ptype4 = 27,
  ptype5 = 28,
  table32_op = 29,
  type0 = 30,
  type1 = 31,
  type2 = 32,
  type3 = 33,
  type4 = 34,
  type5 = 35,
  untyped_imm_0 = 36,
  vec_i16imm_op = 37,
  vec_i32imm_op = 38,
  vec_i64imm_op = 39,
  vec_i8imm_op = 40,
  EXTERNREF = 41,
  F32 = 42,
  F64 = 43,
  FUNCREF = 44,
  I32 = 45,
  I64 = 46,
  V128 = 47,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const uint16_t Offsets[] = {
    0,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    5,
    8,
    12,
    13,
    17,
    20,
    20,
    20,
    21,
    23,
    25,
    25,
    26,
    27,
    31,
    33,
    33,
    39,
    40,
    41,
    44,
    44,
    46,
    47,
    47,
    47,
    47,
    47,
    47,
    49,
    52,
    52,
    55,
    58,
    61,
    64,
    67,
    70,
    73,
    76,
    79,
    82,
    85,
    86,
    87,
    89,
    91,
    94,
    96,
    100,
    102,
    104,
    106,
    108,
    110,
    112,
    114,
    116,
    118,
    120,
    122,
    124,
    125,
    127,
    129,
    131,
    136,
    141,
    146,
    148,
    153,
    158,
    162,
    165,
    168,
    171,
    174,
    177,
    180,
    183,
    186,
    189,
    192,
    195,
    198,
    201,
    203,
    205,
    206,
    207,
    208,
    210,
    212,
    214,
    216,
    217,
    220,
    222,
    225,
    227,
    230,
    233,
    236,
    240,
    244,
    248,
    252,
    256,
    260,
    265,
    269,
    274,
    278,
    283,
    287,
    292,
    296,
    300,
    303,
    306,
    309,
    312,
    315,
    318,
    321,
    324,
    328,
    332,
    336,
    340,
    344,
    348,
    352,
    356,
    359,
    362,
    365,
    369,
    373,
    376,
    379,
    382,
    385,
    387,
    389,
    391,
    393,
    395,
    397,
    399,
    401,
    403,
    405,
    407,
    409,
    411,
    414,
    416,
    419,
    422,
    425,
    428,
    431,
    434,
    437,
    440,
    443,
    446,
    449,
    452,
    454,
    455,
    458,
    462,
    465,
    469,
    471,
    473,
    475,
    477,
    479,
    481,
    483,
    485,
    487,
    489,
    491,
    493,
    495,
    497,
    499,
    501,
    503,
    506,
    509,
    512,
    515,
    518,
    521,
    525,
    527,
    529,
    531,
    535,
    539,
    543,
    546,
    549,
    551,
    553,
    555,
    557,
    559,
    561,
    563,
    565,
    567,
    569,
    571,
    573,
    575,
    576,
    577,
    577,
    577,
    579,
    581,
    581,
    581,
    581,
    581,
    581,
    581,
    583,
    583,
    585,
    585,
    587,
    587,
    589,
    589,
    591,
    591,
    593,
    593,
    595,
    595,
    597,
    597,
    600,
    600,
    603,
    603,
    606,
    606,
    609,
    609,
    612,
    612,
    615,
    615,
    618,
    618,
    621,
    621,
    624,
    624,
    627,
    627,
    630,
    630,
    633,
    633,
    636,
    636,
    639,
    639,
    641,
    643,
    645,
    647,
    649,
    649,
    651,
    651,
    653,
    653,
    655,
    655,
    658,
    661,
    661,
    664,
    664,
    667,
    667,
    667,
    669,
    669,
    671,
    671,
    673,
    673,
    675,
    675,
    677,
    678,
    680,
    681,
    683,
    684,
    686,
    687,
    689,
    690,
    692,
    693,
    695,
    696,
    698,
    699,
    701,
    702,
    704,
    705,
    707,
    708,
    710,
    711,
    712,
    713,
    717,
    719,
    723,
    725,
    729,
    731,
    735,
    737,
    741,
    743,
    747,
    749,
    753,
    755,
    759,
    761,
    765,
    767,
    771,
    773,
    777,
    779,
    783,
    785,
    789,
    791,
    795,
    797,
    802,
    804,
    809,
    811,
    816,
    818,
    823,
    825,
    830,
    832,
    837,
    839,
    844,
    846,
    851,
    853,
    859,
    861,
    867,
    869,
    875,
    877,
    883,
    885,
    890,
    892,
    897,
    899,
    904,
    906,
    911,
    913,
    918,
    920,
    925,
    927,
    932,
    934,
    939,
    941,
    946,
    948,
    953,
    955,
    960,
    962,
    967,
    969,
    974,
    976,
    981,
    983,
    988,
    990,
    995,
    997,
    1002,
    1004,
    1009,
    1011,
    1016,
    1018,
    1023,
    1025,
    1031,
    1033,
    1039,
    1041,
    1046,
    1048,
    1053,
    1055,
    1060,
    1062,
    1067,
    1069,
    1074,
    1076,
    1081,
    1083,
    1088,
    1090,
    1095,
    1097,
    1102,
    1104,
    1109,
    1111,
    1116,
    1118,
    1123,
    1125,
    1130,
    1132,
    1137,
    1139,
    1144,
    1146,
    1151,
    1153,
    1159,
    1161,
    1167,
    1169,
    1175,
    1177,
    1183,
    1185,
    1190,
    1192,
    1197,
    1199,
    1204,
    1206,
    1211,
    1213,
    1218,
    1220,
    1225,
    1227,
    1232,
    1234,
    1239,
    1241,
    1246,
    1248,
    1253,
    1255,
    1260,
    1262,
    1267,
    1269,
    1274,
    1276,
    1281,
    1283,
    1288,
    1290,
    1295,
    1297,
    1302,
    1304,
    1309,
    1311,
    1316,
    1318,
    1323,
    1325,
    1330,
    1332,
    1337,
    1339,
    1344,
    1346,
    1351,
    1353,
    1359,
    1361,
    1367,
    1369,
    1375,
    1377,
    1383,
    1385,
    1390,
    1392,
    1397,
    1399,
    1404,
    1406,
    1411,
    1413,
    1418,
    1420,
    1425,
    1427,
    1432,
    1434,
    1439,
    1441,
    1446,
    1448,
    1453,
    1455,
    1460,
    1462,
    1467,
    1469,
    1474,
    1476,
    1481,
    1483,
    1488,
    1490,
    1495,
    1497,
    1501,
    1503,
    1507,
    1509,
    1513,
    1515,
    1519,
    1521,
    1525,
    1527,
    1531,
    1533,
    1537,
    1539,
    1543,
    1545,
    1549,
    1551,
    1555,
    1557,
    1561,
    1563,
    1567,
    1569,
    1573,
    1575,
    1579,
    1581,
    1584,
    1584,
    1587,
    1587,
    1589,
    1589,
    1591,
    1591,
    1593,
    1593,
    1595,
    1595,
    1599,
    1599,
    1600,
    1601,
    1602,
    1604,
    1605,
    1606,
    1607,
    1608,
    1609,
    1610,
    1612,
    1613,
    1614,
    1616,
    1618,
    1619,
    1621,
    1621,
    1621,
    1622,
    1624,
    1624,
    1626,
    1626,
    1628,
    1628,
    1630,
    1630,
    1632,
    1632,
    1634,
    1634,
    1636,
    1637,
    1639,
    1640,
    1642,
    1643,
    1645,
    1646,
    1651,
    1655,
    1658,
    1660,
    1669,
    1677,
    1682,
    1686,
    1689,
    1691,
    1708,
    1724,
    1727,
    1727,
    1730,
    1730,
    1732,
    1732,
    1734,
    1734,
    1736,
    1736,
    1738,
    1738,
    1740,
    1740,
    1742,
    1742,
    1744,
    1744,
    1746,
    1746,
    1748,
    1748,
    1748,
    1748,
    1751,
    1751,
    1754,
    1754,
    1757,
    1757,
    1760,
    1760,
    1763,
    1763,
    1766,
    1766,
    1769,
    1769,
    1772,
    1772,
    1775,
    1775,
    1776,
    1776,
    1777,
    1777,
    1778,
    1778,
    1779,
    1779,
    1780,
    1780,
    1781,
    1781,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1782,
    1784,
    1784,
    1786,
    1786,
    1789,
    1789,
    1792,
    1792,
    1795,
    1795,
    1798,
    1798,
    1801,
    1801,
    1804,
    1804,
    1807,
    1807,
    1810,
    1810,
    1813,
    1813,
    1816,
    1816,
    1819,
    1819,
    1822,
    1822,
    1825,
    1825,
    1828,
    1828,
    1831,
    1831,
    1834,
    1834,
    1837,
    1837,
    1840,
    1840,
    1843,
    1843,
    1846,
    1846,
    1849,
    1849,
    1852,
    1852,
    1855,
    1856,
    1859,
    1860,
    1863,
    1864,
    1867,
    1868,
    1871,
    1872,
    1875,
    1876,
    1879,
    1880,
    1883,
    1884,
    1886,
    1886,
    1888,
    1888,
    1890,
    1890,
    1892,
    1892,
    1894,
    1894,
    1896,
    1896,
    1898,
    1898,
    1900,
    1900,
    1902,
    1902,
    1904,
    1904,
    1906,
    1906,
    1908,
    1908,
    1908,
    1908,
    1910,
    1910,
    1912,
    1912,
    1914,
    1914,
    1916,
    1916,
    1918,
    1918,
    1920,
    1920,
    1922,
    1922,
    1924,
    1924,
    1926,
    1926,
    1928,
    1928,
    1930,
    1930,
    1932,
    1932,
    1935,
    1935,
    1938,
    1938,
    1941,
    1941,
    1944,
    1944,
    1947,
    1947,
    1950,
    1950,
    1953,
    1953,
    1956,
    1956,
    1959,
    1959,
    1962,
    1962,
    1965,
    1965,
    1968,
    1968,
    1971,
    1971,
    1974,
    1974,
    1976,
    1977,
    1979,
    1980,
    1982,
    1983,
    1985,
    1986,
    1988,
    1989,
    1991,
    1992,
    1994,
    1995,
    1997,
    1998,
    2000,
    2001,
    2003,
    2004,
    2006,
    2007,
    2009,
    2010,
    2012,
    2013,
    2015,
    2016,
    2019,
    2019,
    2022,
    2022,
    2025,
    2025,
    2028,
    2028,
    2031,
    2031,
    2034,
    2034,
    2037,
    2037,
    2040,
    2040,
    2043,
    2043,
    2046,
    2046,
    2049,
    2049,
    2052,
    2052,
    2055,
    2055,
    2058,
    2058,
    2060,
    2060,
    2062,
    2062,
    2064,
    2064,
    2066,
    2066,
    2068,
    2068,
    2070,
    2070,
    2072,
    2072,
    2074,
    2074,
    2076,
    2076,
    2078,
    2078,
    2080,
    2080,
    2082,
    2082,
    2084,
    2084,
    2086,
    2086,
    2088,
    2088,
    2090,
    2090,
    2092,
    2092,
    2094,
    2094,
    2096,
    2096,
    2098,
    2098,
    2100,
    2100,
    2102,
    2102,
    2104,
    2104,
    2106,
    2106,
    2108,
    2108,
    2110,
    2110,
    2112,
    2113,
    2116,
    2116,
    2119,
    2119,
    2122,
    2122,
    2125,
    2125,
    2128,
    2128,
    2131,
    2131,
    2134,
    2134,
    2137,
    2137,
    2140,
    2140,
    2143,
    2143,
    2146,
    2146,
    2149,
    2149,
    2152,
    2152,
    2155,
    2155,
    2159,
    2161,
    2165,
    2167,
    2171,
    2173,
    2177,
    2179,
    2183,
    2185,
    2189,
    2191,
    2195,
    2197,
    2201,
    2203,
    2207,
    2209,
    2213,
    2215,
    2219,
    2221,
    2225,
    2227,
    2231,
    2233,
    2237,
    2239,
    2243,
    2245,
    2249,
    2251,
    2255,
    2257,
    2261,
    2263,
    2267,
    2269,
    2273,
    2275,
    2279,
    2281,
    2285,
    2287,
    2291,
    2293,
    2297,
    2299,
    2303,
    2305,
    2309,
    2311,
    2315,
    2317,
    2321,
    2323,
    2327,
    2329,
    2333,
    2335,
    2339,
    2341,
    2345,
    2347,
    2351,
    2353,
    2357,
    2359,
    2363,
    2365,
    2369,
    2371,
    2375,
    2377,
    2381,
    2383,
    2387,
    2389,
    2393,
    2395,
    2399,
    2401,
    2405,
    2407,
    2411,
    2413,
    2417,
    2419,
    2423,
    2425,
    2429,
    2431,
    2435,
    2437,
    2441,
    2443,
    2449,
    2452,
    2458,
    2461,
    2467,
    2470,
    2476,
    2479,
    2485,
    2488,
    2494,
    2497,
    2503,
    2506,
    2512,
    2515,
    2519,
    2521,
    2525,
    2527,
    2531,
    2533,
    2537,
    2539,
    2543,
    2545,
    2549,
    2551,
    2553,
    2554,
    2556,
    2557,
    2559,
    2560,
    2562,
    2563,
    2565,
    2566,
    2568,
    2569,
    2571,
    2572,
    2574,
    2575,
    2577,
    2578,
    2580,
    2581,
    2583,
    2584,
    2586,
    2587,
    2589,
    2590,
    2592,
    2593,
    2596,
    2597,
    2600,
    2601,
    2604,
    2605,
    2608,
    2609,
    2612,
    2613,
    2616,
    2617,
    2620,
    2621,
    2622,
    2623,
    2626,
    2626,
    2629,
    2629,
    2632,
    2632,
    2635,
    2635,
    2638,
    2638,
    2641,
    2641,
    2644,
    2644,
    2647,
    2647,
    2650,
    2650,
    2653,
    2653,
    2656,
    2656,
    2659,
    2659,
    2662,
    2662,
    2665,
    2665,
    2668,
    2668,
    2671,
    2671,
    2674,
    2674,
    2677,
    2677,
    2680,
    2680,
    2683,
    2683,
    2686,
    2686,
    2689,
    2689,
    2692,
    2692,
    2695,
    2695,
    2700,
    2702,
    2707,
    2709,
    2715,
    2717,
    2723,
    2725,
    2731,
    2733,
    2739,
    2741,
    2744,
    2744,
    2747,
    2747,
    2750,
    2750,
    2753,
    2753,
    2756,
    2756,
    2759,
    2759,
    2762,
    2762,
    2765,
    2765,
    2768,
    2768,
    2771,
    2771,
    2774,
    2774,
    2777,
    2777,
    2780,
    2780,
    2783,
    2783,
    2786,
    2786,
    2789,
    2789,
    2792,
    2792,
    2795,
    2795,
    2798,
    2798,
    2801,
    2801,
    2804,
    2804,
    2807,
    2807,
    2810,
    2810,
    2812,
    2812,
    2814,
    2814,
    2816,
    2816,
    2818,
    2818,
    2820,
    2820,
    2822,
    2822,
    2824,
    2824,
    2826,
    2826,
    2828,
    2828,
    2830,
    2830,
    2832,
    2832,
    2834,
    2834,
    2837,
    2837,
    2840,
    2840,
    2843,
    2843,
    2846,
    2846,
    2849,
    2849,
    2852,
    2852,
    2855,
    2855,
    2858,
    2858,
    2861,
    2861,
    2861,
    2861,
    2863,
    2863,
    2866,
    2869,
    2869,
    2872,
    2872,
    2872,
    2875,
    2875,
    2878,
    2878,
    2881,
    2881,
    2884,
    2884,
    2886,
    2886,
    2888,
    2888,
    2890,
    2890,
    2893,
    2895,
    2898,
    2900,
    2903,
    2905,
    2908,
    2910,
    2913,
    2913,
    2917,
    2917,
    2921,
    2921,
    2925,
    2925,
    2929,
    2929,
    2931,
    2932,
    2934,
    2935,
    2938,
    2938,
    2941,
    2941,
    2944,
    2944,
    2947,
    2947,
    2951,
    2952,
    2956,
    2957,
    2961,
    2962,
    2966,
    2967,
    2971,
    2972,
    2976,
    2977,
    2978,
    2979,
    2979,
    2979,
    2980,
    2982,
    2984,
    2985,
    2988,
    2988,
    2991,
    2991,
    2994,
    2994,
    2997,
    2997,
    3001,
    3001,
    3005,
    3005,
    3009,
    3009,
    3013,
    3013,
    3017,
    3017,
    3021,
    3021,
    3025,
    3025,
    3028,
    3028,
    3031,
    3031,
    3034,
    3034,
    3037,
    3037,
    3040,
    3040,
    3043,
    3043,
    3046,
    3046,
    3049,
    3049,
    3052,
    3052,
    3055,
    3055,
    3058,
    3058,
    3061,
    3061,
    3064,
    3064,
    3067,
    3067,
    3070,
    3070,
    3073,
    3073,
    3076,
    3076,
    3079,
    3079,
    3098,
    3114,
    3116,
    3116,
    3118,
    3118,
    3120,
    3120,
    3122,
    3122,
    3124,
    3124,
    3126,
    3126,
    3128,
    3128,
    3130,
    3130,
    3132,
    3132,
    3134,
    3134,
    3138,
    3140,
    3144,
    3146,
    3150,
    3152,
    3156,
    3158,
    3162,
    3164,
    3168,
    3170,
    3174,
    3176,
    3180,
    3182,
    3186,
    3188,
    3192,
    3194,
    3198,
    3200,
    3204,
    3206,
    3210,
    3212,
    3216,
    3218,
    3222,
    3224,
    3228,
    3230,
    3234,
    3236,
    3240,
    3242,
    3247,
    3250,
    3256,
    3259,
    3264,
    3267,
    3273,
    3276,
    3281,
    3284,
    3290,
    3293,
    3298,
    3301,
    3307,
    3310,
    3314,
    3316,
    3320,
    3322,
    3325,
    3325,
    3328,
    3328,
    3331,
    3331,
    3334,
    3334,
    3337,
    3337,
    3340,
    3340,
    3343,
    3343,
    3346,
    3346,
    3349,
    3349,
    3352,
    3352,
    3355,
    3355,
    3358,
    3358,
    3361,
    3361,
    3364,
    3364,
    3367,
    3367,
    3372,
    3374,
    3378,
    3379,
    3383,
    3384,
    3386,
    3387,
    3389,
    3390,
    3394,
    3395,
    3399,
    3400,
    3403,
    3404,
    3407,
    3408,
    3410,
    3411,
    3414,
    3414,
    3417,
    3417,
    3420,
    3420,
    3423,
    3423,
    3426,
    3426,
    3429,
    3429,
    3432,
    3432,
    3433,
    3434,
    3436,
    3436,
    3438,
    3438,
    3440,
    3440,
    3442,
    3442,
    3443,
    3444,
    3444,
    3444,
    3447,
    3448,
    3451,
    3452,
    3455,
    3458,
    3458,
    3461,
    3461,
    3461,
    3464,
    3465,
    3467,
    3468,
    3471,
    3472,
    3474,
    3475,
    3479,
    3479,
    3483,
    3483,
    3487,
    3487,
    3491,
    3491,
    3492,
    3493,
    3498,
    3500,
    3504,
    3505,
    3510,
    3512,
    3513,
    3514,
    3519,
    3521,
    3525,
    3526,
    3531,
    3533,
    3535,
    3535,
    3537,
    3537,
    3539,
    3539,
    3541,
    3541,
    3543,
    3543,
    3545,
    3545,
    3547,
    3547,
    3549,
    3549,
    3551,
    3551,
    3553,
    3553,
    3555,
    3555,
    3557,
    3557,
    3559,
    3559,
    3561,
    3561,
    3563,
    3563,
    3565,
    3565,
    3567,
    3567,
    3569,
    3569,
    3571,
    3571,
    3573,
    3573,
    3575,
    3575,
    3577,
    3577,
    3579,
    3579,
    3581,
    3581,
    3583,
    3583,
    3585,
  };
  const int8_t OpcodeOperandTypes[] = {
    -1, 
    /**/
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    /**/
    -1, -1, OpTypes::i32imm, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, 
    -1, -1, -1, OpTypes::i32imm, 
    -1, -1, OpTypes::i32imm, 
    /**/
    /**/
    -1, 
    -1, -1, 
    -1, -1, 
    /**/
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i64imm, OpTypes::i8imm, OpTypes::i32imm, 
    OpTypes::i64imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i64imm, OpTypes::i32imm, -1, OpTypes::i32imm, OpTypes::i32imm, 
    -1, 
    OpTypes::i32imm, 
    -1, OpTypes::i32imm, OpTypes::i32imm, 
    /**/
    -1, OpTypes::i32imm, 
    -1, 
    /**/
    /**/
    /**/
    /**/
    /**/
    -1, -1, 
    -1, -1, -1, 
    /**/
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::ptype1, OpTypes::type2, -1, 
    OpTypes::type0, OpTypes::ptype1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::ptype0, OpTypes::ptype2, -1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::type0, OpTypes::ptype1, OpTypes::type0, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    -1, 
    -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, -1, OpTypes::type1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, 
    OpTypes::ptype0, OpTypes::ptype0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    -1, 
    OpTypes::ptype0, -1, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type1, -1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, -1, 
    OpTypes::type0, -1, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::i32imm, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, OpTypes::type0, 
    OpTypes::type0, -1, 
    -1, OpTypes::type0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::ptype1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::ptype0, OpTypes::type1, OpTypes::type2, OpTypes::untyped_imm_0, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, OpTypes::type2, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::type0, OpTypes::type1, 
    OpTypes::function32_op, 
    OpTypes::function32_op, 
    /**/
    /**/
    OpTypes::bb_op, OpTypes::bb_op, 
    OpTypes::bb_op, OpTypes::bb_op, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::i32imm, OpTypes::i32imm, 
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::EXTERNREF, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::F32, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::F64, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::FUNCREF, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::I32, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::I64, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::i8imm, 
    OpTypes::i8imm, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::Signature, 
    OpTypes::Signature, 
    OpTypes::bb_op, 
    OpTypes::bb_op, OpTypes::I32, 
    OpTypes::bb_op, 
    OpTypes::bb_op, 
    OpTypes::I32, 
    OpTypes::brlist, 
    OpTypes::I64, 
    OpTypes::brlist, 
    OpTypes::bb_op, OpTypes::I32, 
    OpTypes::bb_op, 
    OpTypes::function32_op, 
    OpTypes::TypeIndex, OpTypes::i32imm, 
    OpTypes::TypeIndex, OpTypes::i32imm, 
    OpTypes::function32_op, 
    OpTypes::I32, OpTypes::event_op, 
    /**/
    /**/
    OpTypes::event_op, 
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::F32, OpTypes::f32imm_op, 
    OpTypes::f32imm_op, 
    OpTypes::F64, OpTypes::f64imm_op, 
    OpTypes::f64imm_op, 
    OpTypes::I32, OpTypes::i32imm_op, 
    OpTypes::i32imm_op, 
    OpTypes::I64, OpTypes::i64imm_op, 
    OpTypes::i64imm_op, 
    OpTypes::V128, OpTypes::f32imm_op, OpTypes::f32imm_op, OpTypes::f32imm_op, OpTypes::f32imm_op, 
    OpTypes::f32imm_op, OpTypes::f32imm_op, OpTypes::f32imm_op, OpTypes::f32imm_op, 
    OpTypes::V128, OpTypes::f64imm_op, OpTypes::f64imm_op, 
    OpTypes::f64imm_op, OpTypes::f64imm_op, 
    OpTypes::V128, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, 
    OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, OpTypes::vec_i16imm_op, 
    OpTypes::V128, OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, 
    OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, OpTypes::vec_i32imm_op, 
    OpTypes::V128, OpTypes::vec_i64imm_op, OpTypes::vec_i64imm_op, 
    OpTypes::vec_i64imm_op, OpTypes::vec_i64imm_op, 
    OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, 
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::EXTERNREF, OpTypes::EXTERNREF, 
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::FUNCREF, OpTypes::FUNCREF, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    /**/
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::EXTERNREF, 
    /**/
    OpTypes::F32, 
    /**/
    OpTypes::F64, 
    /**/
    OpTypes::FUNCREF, 
    /**/
    OpTypes::I32, 
    /**/
    OpTypes::I64, 
    /**/
    OpTypes::V128, 
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I64, 
    /**/
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::F64, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I64, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::I32, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::F32, OpTypes::I32, 
    /**/
    OpTypes::F32, OpTypes::I64, 
    /**/
    OpTypes::F32, OpTypes::I32, 
    /**/
    OpTypes::F32, OpTypes::I64, 
    /**/
    OpTypes::F32, OpTypes::F64, 
    /**/
    OpTypes::F32, OpTypes::I32, 
    /**/
    OpTypes::F64, OpTypes::I32, 
    /**/
    OpTypes::F64, OpTypes::I64, 
    /**/
    OpTypes::F64, OpTypes::I32, 
    /**/
    OpTypes::F64, OpTypes::I64, 
    /**/
    OpTypes::F64, OpTypes::F32, 
    /**/
    OpTypes::F64, OpTypes::I64, 
    /**/
    /**/
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::EXTERNREF, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::F32, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::F64, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::FUNCREF, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::I32, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::I64, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::V128, OpTypes::global_op, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::EXTERNREF, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::F32, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::F64, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::FUNCREF, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::I32, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::I64, 
    OpTypes::global_op, 
    OpTypes::global_op, OpTypes::V128, 
    OpTypes::global_op, 
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::F32, 
    /**/
    OpTypes::I32, OpTypes::F64, 
    /**/
    OpTypes::I32, OpTypes::I64, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I64, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::I64, OpTypes::F32, 
    /**/
    OpTypes::I64, OpTypes::F64, 
    /**/
    OpTypes::Signature, OpTypes::I32, 
    OpTypes::Signature, 
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::F32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::F32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::F64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::F64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I64, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::EXTERNREF, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::F32, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::F64, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::FUNCREF, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::I32, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::I64, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::V128, OpTypes::local_op, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::EXTERNREF, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::F32, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::F64, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::FUNCREF, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::I32, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::I64, 
    OpTypes::local_op, 
    OpTypes::local_op, OpTypes::V128, 
    OpTypes::local_op, 
    OpTypes::EXTERNREF, OpTypes::local_op, OpTypes::EXTERNREF, 
    OpTypes::local_op, 
    OpTypes::F32, OpTypes::local_op, OpTypes::F32, 
    OpTypes::local_op, 
    OpTypes::F64, OpTypes::local_op, OpTypes::F64, 
    OpTypes::local_op, 
    OpTypes::FUNCREF, OpTypes::local_op, OpTypes::FUNCREF, 
    OpTypes::local_op, 
    OpTypes::I32, OpTypes::local_op, OpTypes::I32, 
    OpTypes::local_op, 
    OpTypes::I64, OpTypes::local_op, OpTypes::I64, 
    OpTypes::local_op, 
    OpTypes::V128, OpTypes::local_op, OpTypes::V128, 
    OpTypes::local_op, 
    OpTypes::Signature, 
    OpTypes::Signature, 
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::I32, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    /**/
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::EXTERNREF, OpTypes::HeapType, 
    OpTypes::HeapType, 
    OpTypes::FUNCREF, OpTypes::HeapType, 
    OpTypes::HeapType, 
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::F32, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::F64, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::I32, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::I32, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::I64, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::I32, 
    OpTypes::vec_i8imm_op, 
    OpTypes::i32imm, 
    OpTypes::i32imm, 
    /**/
    /**/
    OpTypes::function32_op, 
    OpTypes::TypeIndex, OpTypes::i32imm, 
    OpTypes::TypeIndex, OpTypes::i32imm, 
    OpTypes::function32_op, 
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::EXTERNREF, OpTypes::EXTERNREF, OpTypes::EXTERNREF, OpTypes::I32, 
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, OpTypes::I32, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, OpTypes::I32, 
    /**/
    OpTypes::FUNCREF, OpTypes::FUNCREF, OpTypes::FUNCREF, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::I32, 
    /**/
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::F32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::F32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::F64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::F64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I32, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::I64, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::vec_i8imm_op, 
    OpTypes::P2Align, OpTypes::offset32_op, OpTypes::I32, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset32_op, 
    OpTypes::P2Align, OpTypes::offset64_op, OpTypes::I64, OpTypes::V128, 
    OpTypes::P2Align, OpTypes::offset64_op, 
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::table32_op, OpTypes::table32_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::table32_op, OpTypes::table32_op, 
    OpTypes::table32_op, OpTypes::I32, OpTypes::EXTERNREF, OpTypes::I32, 
    OpTypes::table32_op, 
    OpTypes::table32_op, OpTypes::I32, OpTypes::FUNCREF, OpTypes::I32, 
    OpTypes::table32_op, 
    OpTypes::EXTERNREF, OpTypes::table32_op, 
    OpTypes::table32_op, 
    OpTypes::FUNCREF, OpTypes::table32_op, 
    OpTypes::table32_op, 
    OpTypes::I32, OpTypes::table32_op, OpTypes::I32, OpTypes::EXTERNREF, 
    OpTypes::table32_op, 
    OpTypes::I32, OpTypes::table32_op, OpTypes::I32, OpTypes::FUNCREF, 
    OpTypes::table32_op, 
    OpTypes::table32_op, OpTypes::EXTERNREF, OpTypes::I32, 
    OpTypes::table32_op, 
    OpTypes::table32_op, OpTypes::FUNCREF, OpTypes::I32, 
    OpTypes::table32_op, 
    OpTypes::I32, OpTypes::table32_op, 
    OpTypes::table32_op, 
    OpTypes::EXTERNREF, OpTypes::EXTERNREF, OpTypes::EXTERNREF, 
    /**/
    OpTypes::F32, OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::F64, OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::FUNCREF, OpTypes::FUNCREF, OpTypes::FUNCREF, 
    /**/
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::event_op, 
    OpTypes::event_op, 
    OpTypes::F32, OpTypes::F32, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::F64, OpTypes::F64, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::Signature, 
    OpTypes::Signature, 
    /**/
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::vec_i8imm_op, 
    OpTypes::vec_i8imm_op, 
    OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    /**/
    OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    /**/
    /**/
    OpTypes::I32, OpTypes::i32imm, OpTypes::I32, 
    OpTypes::i32imm, 
    OpTypes::I32, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::I64, OpTypes::i32imm, OpTypes::I64, 
    OpTypes::i32imm, 
    OpTypes::I64, OpTypes::i32imm, 
    OpTypes::i32imm, 
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, OpTypes::I32, OpTypes::I32, OpTypes::I32, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, 
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, OpTypes::I64, OpTypes::I64, OpTypes::I64, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::I64, OpTypes::I32, OpTypes::I64, 
    OpTypes::i32imm_op, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, OpTypes::I64, OpTypes::I32, OpTypes::I32, 
    OpTypes::i32imm_op, OpTypes::i32imm_op, 
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
    /**/
    OpTypes::V128, OpTypes::V128, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace WebAssembly {

enum IsWasm64 {
	IsWasm64_true
};

enum StackBased {
	StackBased_true
};

// getStackOpcode
LLVM_READONLY
int getStackOpcode(uint16_t Opcode) {
static const uint16_t getStackOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS, WebAssembly::CALL_PARAMS_S },
  { WebAssembly::CALL_RESULTS, WebAssembly::CALL_RESULTS_S },
  { WebAssembly::CATCHRET, WebAssembly::CATCHRET_S },
  { WebAssembly::CLEANUPRET, WebAssembly::CLEANUPRET_S },
  { WebAssembly::COMPILER_FENCE, WebAssembly::COMPILER_FENCE_S },
  { WebAssembly::RET_CALL_RESULTS, WebAssembly::RET_CALL_RESULTS_S },
  { WebAssembly::ABS_F32, WebAssembly::ABS_F32_S },
  { WebAssembly::ABS_F32x4, WebAssembly::ABS_F32x4_S },
  { WebAssembly::ABS_F64, WebAssembly::ABS_F64_S },
  { WebAssembly::ABS_F64x2, WebAssembly::ABS_F64x2_S },
  { WebAssembly::ABS_I16x8, WebAssembly::ABS_I16x8_S },
  { WebAssembly::ABS_I32x4, WebAssembly::ABS_I32x4_S },
  { WebAssembly::ABS_I64x2, WebAssembly::ABS_I64x2_S },
  { WebAssembly::ABS_I8x16, WebAssembly::ABS_I8x16_S },
  { WebAssembly::ADD_F32, WebAssembly::ADD_F32_S },
  { WebAssembly::ADD_F32x4, WebAssembly::ADD_F32x4_S },
  { WebAssembly::ADD_F64, WebAssembly::ADD_F64_S },
  { WebAssembly::ADD_F64x2, WebAssembly::ADD_F64x2_S },
  { WebAssembly::ADD_I16x8, WebAssembly::ADD_I16x8_S },
  { WebAssembly::ADD_I32, WebAssembly::ADD_I32_S },
  { WebAssembly::ADD_I32x4, WebAssembly::ADD_I32x4_S },
  { WebAssembly::ADD_I64, WebAssembly::ADD_I64_S },
  { WebAssembly::ADD_I64x2, WebAssembly::ADD_I64x2_S },
  { WebAssembly::ADD_I8x16, WebAssembly::ADD_I8x16_S },
  { WebAssembly::ADD_SAT_S_I16x8, WebAssembly::ADD_SAT_S_I16x8_S },
  { WebAssembly::ADD_SAT_S_I8x16, WebAssembly::ADD_SAT_S_I8x16_S },
  { WebAssembly::ADD_SAT_U_I16x8, WebAssembly::ADD_SAT_U_I16x8_S },
  { WebAssembly::ADD_SAT_U_I8x16, WebAssembly::ADD_SAT_U_I8x16_S },
  { WebAssembly::ADJCALLSTACKDOWN, WebAssembly::ADJCALLSTACKDOWN_S },
  { WebAssembly::ADJCALLSTACKUP, WebAssembly::ADJCALLSTACKUP_S },
  { WebAssembly::ALLTRUE_I16x8, WebAssembly::ALLTRUE_I16x8_S },
  { WebAssembly::ALLTRUE_I32x4, WebAssembly::ALLTRUE_I32x4_S },
  { WebAssembly::ALLTRUE_I64x2, WebAssembly::ALLTRUE_I64x2_S },
  { WebAssembly::ALLTRUE_I8x16, WebAssembly::ALLTRUE_I8x16_S },
  { WebAssembly::AND, WebAssembly::AND_S },
  { WebAssembly::ANDNOT, WebAssembly::ANDNOT_S },
  { WebAssembly::AND_I32, WebAssembly::AND_I32_S },
  { WebAssembly::AND_I64, WebAssembly::AND_I64_S },
  { WebAssembly::ANYTRUE_I16x8, WebAssembly::ANYTRUE_I16x8_S },
  { WebAssembly::ANYTRUE_I32x4, WebAssembly::ANYTRUE_I32x4_S },
  { WebAssembly::ANYTRUE_I64x2, WebAssembly::ANYTRUE_I64x2_S },
  { WebAssembly::ANYTRUE_I8x16, WebAssembly::ANYTRUE_I8x16_S },
  { WebAssembly::ARGUMENT_externref, WebAssembly::ARGUMENT_externref_S },
  { WebAssembly::ARGUMENT_f32, WebAssembly::ARGUMENT_f32_S },
  { WebAssembly::ARGUMENT_f64, WebAssembly::ARGUMENT_f64_S },
  { WebAssembly::ARGUMENT_funcref, WebAssembly::ARGUMENT_funcref_S },
  { WebAssembly::ARGUMENT_i32, WebAssembly::ARGUMENT_i32_S },
  { WebAssembly::ARGUMENT_i64, WebAssembly::ARGUMENT_i64_S },
  { WebAssembly::ARGUMENT_v16i8, WebAssembly::ARGUMENT_v16i8_S },
  { WebAssembly::ARGUMENT_v2f64, WebAssembly::ARGUMENT_v2f64_S },
  { WebAssembly::ARGUMENT_v2i64, WebAssembly::ARGUMENT_v2i64_S },
  { WebAssembly::ARGUMENT_v4f32, WebAssembly::ARGUMENT_v4f32_S },
  { WebAssembly::ARGUMENT_v4i32, WebAssembly::ARGUMENT_v4i32_S },
  { WebAssembly::ARGUMENT_v8i16, WebAssembly::ARGUMENT_v8i16_S },
  { WebAssembly::ATOMIC_FENCE, WebAssembly::ATOMIC_FENCE_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD_I32_A64, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD_I64_A64, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A32_S },
  { WebAssembly::ATOMIC_STORE16_I32_A64, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A32_S },
  { WebAssembly::ATOMIC_STORE16_I64_A64, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A32_S },
  { WebAssembly::ATOMIC_STORE32_I64_A64, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A32_S },
  { WebAssembly::ATOMIC_STORE8_I32_A64, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A32_S },
  { WebAssembly::ATOMIC_STORE8_I64_A64, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A32_S },
  { WebAssembly::ATOMIC_STORE_I32_A64, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A32_S },
  { WebAssembly::ATOMIC_STORE_I64_A64, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::AVGR_U_I16x8, WebAssembly::AVGR_U_I16x8_S },
  { WebAssembly::AVGR_U_I8x16, WebAssembly::AVGR_U_I8x16_S },
  { WebAssembly::BITMASK_I16x8, WebAssembly::BITMASK_I16x8_S },
  { WebAssembly::BITMASK_I32x4, WebAssembly::BITMASK_I32x4_S },
  { WebAssembly::BITMASK_I64x2, WebAssembly::BITMASK_I64x2_S },
  { WebAssembly::BITMASK_I8x16, WebAssembly::BITMASK_I8x16_S },
  { WebAssembly::BITSELECT, WebAssembly::BITSELECT_S },
  { WebAssembly::BLOCK, WebAssembly::BLOCK_S },
  { WebAssembly::BR, WebAssembly::BR_S },
  { WebAssembly::BR_IF, WebAssembly::BR_IF_S },
  { WebAssembly::BR_TABLE_I32, WebAssembly::BR_TABLE_I32_S },
  { WebAssembly::BR_TABLE_I64, WebAssembly::BR_TABLE_I64_S },
  { WebAssembly::BR_UNLESS, WebAssembly::BR_UNLESS_S },
  { WebAssembly::CALL, WebAssembly::CALL_S },
  { WebAssembly::CALL_INDIRECT, WebAssembly::CALL_INDIRECT_S },
  { WebAssembly::CATCH, WebAssembly::CATCH_S },
  { WebAssembly::CATCH_ALL, WebAssembly::CATCH_ALL_S },
  { WebAssembly::CEIL_F32, WebAssembly::CEIL_F32_S },
  { WebAssembly::CEIL_F32x4, WebAssembly::CEIL_F32x4_S },
  { WebAssembly::CEIL_F64, WebAssembly::CEIL_F64_S },
  { WebAssembly::CEIL_F64x2, WebAssembly::CEIL_F64x2_S },
  { WebAssembly::CLZ_I32, WebAssembly::CLZ_I32_S },
  { WebAssembly::CLZ_I64, WebAssembly::CLZ_I64_S },
  { WebAssembly::CONST_F32, WebAssembly::CONST_F32_S },
  { WebAssembly::CONST_F64, WebAssembly::CONST_F64_S },
  { WebAssembly::CONST_I32, WebAssembly::CONST_I32_S },
  { WebAssembly::CONST_I64, WebAssembly::CONST_I64_S },
  { WebAssembly::CONST_V128_F32x4, WebAssembly::CONST_V128_F32x4_S },
  { WebAssembly::CONST_V128_F64x2, WebAssembly::CONST_V128_F64x2_S },
  { WebAssembly::CONST_V128_I16x8, WebAssembly::CONST_V128_I16x8_S },
  { WebAssembly::CONST_V128_I32x4, WebAssembly::CONST_V128_I32x4_S },
  { WebAssembly::CONST_V128_I64x2, WebAssembly::CONST_V128_I64x2_S },
  { WebAssembly::CONST_V128_I8x16, WebAssembly::CONST_V128_I8x16_S },
  { WebAssembly::COPYSIGN_F32, WebAssembly::COPYSIGN_F32_S },
  { WebAssembly::COPYSIGN_F64, WebAssembly::COPYSIGN_F64_S },
  { WebAssembly::COPY_EXTERNREF, WebAssembly::COPY_EXTERNREF_S },
  { WebAssembly::COPY_F32, WebAssembly::COPY_F32_S },
  { WebAssembly::COPY_F64, WebAssembly::COPY_F64_S },
  { WebAssembly::COPY_FUNCREF, WebAssembly::COPY_FUNCREF_S },
  { WebAssembly::COPY_I32, WebAssembly::COPY_I32_S },
  { WebAssembly::COPY_I64, WebAssembly::COPY_I64_S },
  { WebAssembly::COPY_V128, WebAssembly::COPY_V128_S },
  { WebAssembly::CTZ_I32, WebAssembly::CTZ_I32_S },
  { WebAssembly::CTZ_I64, WebAssembly::CTZ_I64_S },
  { WebAssembly::DEBUG_UNREACHABLE, WebAssembly::DEBUG_UNREACHABLE_S },
  { WebAssembly::DIV_F32, WebAssembly::DIV_F32_S },
  { WebAssembly::DIV_F32x4, WebAssembly::DIV_F32x4_S },
  { WebAssembly::DIV_F64, WebAssembly::DIV_F64_S },
  { WebAssembly::DIV_F64x2, WebAssembly::DIV_F64x2_S },
  { WebAssembly::DIV_S_I32, WebAssembly::DIV_S_I32_S },
  { WebAssembly::DIV_S_I64, WebAssembly::DIV_S_I64_S },
  { WebAssembly::DIV_U_I32, WebAssembly::DIV_U_I32_S },
  { WebAssembly::DIV_U_I64, WebAssembly::DIV_U_I64_S },
  { WebAssembly::DOT, WebAssembly::DOT_S },
  { WebAssembly::DROP_EXTERNREF, WebAssembly::DROP_EXTERNREF_S },
  { WebAssembly::DROP_F32, WebAssembly::DROP_F32_S },
  { WebAssembly::DROP_F64, WebAssembly::DROP_F64_S },
  { WebAssembly::DROP_FUNCREF, WebAssembly::DROP_FUNCREF_S },
  { WebAssembly::DROP_I32, WebAssembly::DROP_I32_S },
  { WebAssembly::DROP_I64, WebAssembly::DROP_I64_S },
  { WebAssembly::DROP_V128, WebAssembly::DROP_V128_S },
  { WebAssembly::ELSE, WebAssembly::ELSE_S },
  { WebAssembly::END, WebAssembly::END_S },
  { WebAssembly::END_BLOCK, WebAssembly::END_BLOCK_S },
  { WebAssembly::END_FUNCTION, WebAssembly::END_FUNCTION_S },
  { WebAssembly::END_IF, WebAssembly::END_IF_S },
  { WebAssembly::END_LOOP, WebAssembly::END_LOOP_S },
  { WebAssembly::END_TRY, WebAssembly::END_TRY_S },
  { WebAssembly::EQZ_I32, WebAssembly::EQZ_I32_S },
  { WebAssembly::EQZ_I64, WebAssembly::EQZ_I64_S },
  { WebAssembly::EQ_F32, WebAssembly::EQ_F32_S },
  { WebAssembly::EQ_F32x4, WebAssembly::EQ_F32x4_S },
  { WebAssembly::EQ_F64, WebAssembly::EQ_F64_S },
  { WebAssembly::EQ_F64x2, WebAssembly::EQ_F64x2_S },
  { WebAssembly::EQ_I16x8, WebAssembly::EQ_I16x8_S },
  { WebAssembly::EQ_I32, WebAssembly::EQ_I32_S },
  { WebAssembly::EQ_I32x4, WebAssembly::EQ_I32x4_S },
  { WebAssembly::EQ_I64, WebAssembly::EQ_I64_S },
  { WebAssembly::EQ_I8x16, WebAssembly::EQ_I8x16_S },
  { WebAssembly::EQ_v2i64, WebAssembly::EQ_v2i64_S },
  { WebAssembly::EXTMUL_HIGH_S_I16x8, WebAssembly::EXTMUL_HIGH_S_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_S_I32x4, WebAssembly::EXTMUL_HIGH_S_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_S_I64x2, WebAssembly::EXTMUL_HIGH_S_I64x2_S },
  { WebAssembly::EXTMUL_HIGH_U_I16x8, WebAssembly::EXTMUL_HIGH_U_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_U_I32x4, WebAssembly::EXTMUL_HIGH_U_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_U_I64x2, WebAssembly::EXTMUL_HIGH_U_I64x2_S },
  { WebAssembly::EXTMUL_LOW_S_I16x8, WebAssembly::EXTMUL_LOW_S_I16x8_S },
  { WebAssembly::EXTMUL_LOW_S_I32x4, WebAssembly::EXTMUL_LOW_S_I32x4_S },
  { WebAssembly::EXTMUL_LOW_S_I64x2, WebAssembly::EXTMUL_LOW_S_I64x2_S },
  { WebAssembly::EXTMUL_LOW_U_I16x8, WebAssembly::EXTMUL_LOW_U_I16x8_S },
  { WebAssembly::EXTMUL_LOW_U_I32x4, WebAssembly::EXTMUL_LOW_U_I32x4_S },
  { WebAssembly::EXTMUL_LOW_U_I64x2, WebAssembly::EXTMUL_LOW_U_I64x2_S },
  { WebAssembly::EXTRACT_LANE_F32x4, WebAssembly::EXTRACT_LANE_F32x4_S },
  { WebAssembly::EXTRACT_LANE_F64x2, WebAssembly::EXTRACT_LANE_F64x2_S },
  { WebAssembly::EXTRACT_LANE_I16x8_s, WebAssembly::EXTRACT_LANE_I16x8_s_S },
  { WebAssembly::EXTRACT_LANE_I16x8_u, WebAssembly::EXTRACT_LANE_I16x8_u_S },
  { WebAssembly::EXTRACT_LANE_I32x4, WebAssembly::EXTRACT_LANE_I32x4_S },
  { WebAssembly::EXTRACT_LANE_I64x2, WebAssembly::EXTRACT_LANE_I64x2_S },
  { WebAssembly::EXTRACT_LANE_I8x16_s, WebAssembly::EXTRACT_LANE_I8x16_s_S },
  { WebAssembly::EXTRACT_LANE_I8x16_u, WebAssembly::EXTRACT_LANE_I8x16_u_S },
  { WebAssembly::F32_CONVERT_S_I32, WebAssembly::F32_CONVERT_S_I32_S },
  { WebAssembly::F32_CONVERT_S_I64, WebAssembly::F32_CONVERT_S_I64_S },
  { WebAssembly::F32_CONVERT_U_I32, WebAssembly::F32_CONVERT_U_I32_S },
  { WebAssembly::F32_CONVERT_U_I64, WebAssembly::F32_CONVERT_U_I64_S },
  { WebAssembly::F32_DEMOTE_F64, WebAssembly::F32_DEMOTE_F64_S },
  { WebAssembly::F32_REINTERPRET_I32, WebAssembly::F32_REINTERPRET_I32_S },
  { WebAssembly::F64_CONVERT_S_I32, WebAssembly::F64_CONVERT_S_I32_S },
  { WebAssembly::F64_CONVERT_S_I64, WebAssembly::F64_CONVERT_S_I64_S },
  { WebAssembly::F64_CONVERT_U_I32, WebAssembly::F64_CONVERT_U_I32_S },
  { WebAssembly::F64_CONVERT_U_I64, WebAssembly::F64_CONVERT_U_I64_S },
  { WebAssembly::F64_PROMOTE_F32, WebAssembly::F64_PROMOTE_F32_S },
  { WebAssembly::F64_REINTERPRET_I64, WebAssembly::F64_REINTERPRET_I64_S },
  { WebAssembly::FALLTHROUGH_RETURN, WebAssembly::FALLTHROUGH_RETURN_S },
  { WebAssembly::FLOOR_F32, WebAssembly::FLOOR_F32_S },
  { WebAssembly::FLOOR_F32x4, WebAssembly::FLOOR_F32x4_S },
  { WebAssembly::FLOOR_F64, WebAssembly::FLOOR_F64_S },
  { WebAssembly::FLOOR_F64x2, WebAssembly::FLOOR_F64x2_S },
  { WebAssembly::FP_TO_SINT_I32_F32, WebAssembly::FP_TO_SINT_I32_F32_S },
  { WebAssembly::FP_TO_SINT_I32_F64, WebAssembly::FP_TO_SINT_I32_F64_S },
  { WebAssembly::FP_TO_SINT_I64_F32, WebAssembly::FP_TO_SINT_I64_F32_S },
  { WebAssembly::FP_TO_SINT_I64_F64, WebAssembly::FP_TO_SINT_I64_F64_S },
  { WebAssembly::FP_TO_UINT_I32_F32, WebAssembly::FP_TO_UINT_I32_F32_S },
  { WebAssembly::FP_TO_UINT_I32_F64, WebAssembly::FP_TO_UINT_I32_F64_S },
  { WebAssembly::FP_TO_UINT_I64_F32, WebAssembly::FP_TO_UINT_I64_F32_S },
  { WebAssembly::FP_TO_UINT_I64_F64, WebAssembly::FP_TO_UINT_I64_F64_S },
  { WebAssembly::GE_F32, WebAssembly::GE_F32_S },
  { WebAssembly::GE_F32x4, WebAssembly::GE_F32x4_S },
  { WebAssembly::GE_F64, WebAssembly::GE_F64_S },
  { WebAssembly::GE_F64x2, WebAssembly::GE_F64x2_S },
  { WebAssembly::GE_S_I16x8, WebAssembly::GE_S_I16x8_S },
  { WebAssembly::GE_S_I32, WebAssembly::GE_S_I32_S },
  { WebAssembly::GE_S_I32x4, WebAssembly::GE_S_I32x4_S },
  { WebAssembly::GE_S_I64, WebAssembly::GE_S_I64_S },
  { WebAssembly::GE_S_I8x16, WebAssembly::GE_S_I8x16_S },
  { WebAssembly::GE_U_I16x8, WebAssembly::GE_U_I16x8_S },
  { WebAssembly::GE_U_I32, WebAssembly::GE_U_I32_S },
  { WebAssembly::GE_U_I32x4, WebAssembly::GE_U_I32x4_S },
  { WebAssembly::GE_U_I64, WebAssembly::GE_U_I64_S },
  { WebAssembly::GE_U_I8x16, WebAssembly::GE_U_I8x16_S },
  { WebAssembly::GLOBAL_GET_EXTERNREF, WebAssembly::GLOBAL_GET_EXTERNREF_S },
  { WebAssembly::GLOBAL_GET_F32, WebAssembly::GLOBAL_GET_F32_S },
  { WebAssembly::GLOBAL_GET_F64, WebAssembly::GLOBAL_GET_F64_S },
  { WebAssembly::GLOBAL_GET_FUNCREF, WebAssembly::GLOBAL_GET_FUNCREF_S },
  { WebAssembly::GLOBAL_GET_I32, WebAssembly::GLOBAL_GET_I32_S },
  { WebAssembly::GLOBAL_GET_I64, WebAssembly::GLOBAL_GET_I64_S },
  { WebAssembly::GLOBAL_GET_V128, WebAssembly::GLOBAL_GET_V128_S },
  { WebAssembly::GLOBAL_SET_EXTERNREF, WebAssembly::GLOBAL_SET_EXTERNREF_S },
  { WebAssembly::GLOBAL_SET_F32, WebAssembly::GLOBAL_SET_F32_S },
  { WebAssembly::GLOBAL_SET_F64, WebAssembly::GLOBAL_SET_F64_S },
  { WebAssembly::GLOBAL_SET_FUNCREF, WebAssembly::GLOBAL_SET_FUNCREF_S },
  { WebAssembly::GLOBAL_SET_I32, WebAssembly::GLOBAL_SET_I32_S },
  { WebAssembly::GLOBAL_SET_I64, WebAssembly::GLOBAL_SET_I64_S },
  { WebAssembly::GLOBAL_SET_V128, WebAssembly::GLOBAL_SET_V128_S },
  { WebAssembly::GT_F32, WebAssembly::GT_F32_S },
  { WebAssembly::GT_F32x4, WebAssembly::GT_F32x4_S },
  { WebAssembly::GT_F64, WebAssembly::GT_F64_S },
  { WebAssembly::GT_F64x2, WebAssembly::GT_F64x2_S },
  { WebAssembly::GT_S_I16x8, WebAssembly::GT_S_I16x8_S },
  { WebAssembly::GT_S_I32, WebAssembly::GT_S_I32_S },
  { WebAssembly::GT_S_I32x4, WebAssembly::GT_S_I32x4_S },
  { WebAssembly::GT_S_I64, WebAssembly::GT_S_I64_S },
  { WebAssembly::GT_S_I8x16, WebAssembly::GT_S_I8x16_S },
  { WebAssembly::GT_U_I16x8, WebAssembly::GT_U_I16x8_S },
  { WebAssembly::GT_U_I32, WebAssembly::GT_U_I32_S },
  { WebAssembly::GT_U_I32x4, WebAssembly::GT_U_I32x4_S },
  { WebAssembly::GT_U_I64, WebAssembly::GT_U_I64_S },
  { WebAssembly::GT_U_I8x16, WebAssembly::GT_U_I8x16_S },
  { WebAssembly::I32_EXTEND16_S_I32, WebAssembly::I32_EXTEND16_S_I32_S },
  { WebAssembly::I32_EXTEND8_S_I32, WebAssembly::I32_EXTEND8_S_I32_S },
  { WebAssembly::I32_REINTERPRET_F32, WebAssembly::I32_REINTERPRET_F32_S },
  { WebAssembly::I32_TRUNC_S_F32, WebAssembly::I32_TRUNC_S_F32_S },
  { WebAssembly::I32_TRUNC_S_F64, WebAssembly::I32_TRUNC_S_F64_S },
  { WebAssembly::I32_TRUNC_S_SAT_F32, WebAssembly::I32_TRUNC_S_SAT_F32_S },
  { WebAssembly::I32_TRUNC_S_SAT_F64, WebAssembly::I32_TRUNC_S_SAT_F64_S },
  { WebAssembly::I32_TRUNC_U_F32, WebAssembly::I32_TRUNC_U_F32_S },
  { WebAssembly::I32_TRUNC_U_F64, WebAssembly::I32_TRUNC_U_F64_S },
  { WebAssembly::I32_TRUNC_U_SAT_F32, WebAssembly::I32_TRUNC_U_SAT_F32_S },
  { WebAssembly::I32_TRUNC_U_SAT_F64, WebAssembly::I32_TRUNC_U_SAT_F64_S },
  { WebAssembly::I32_WRAP_I64, WebAssembly::I32_WRAP_I64_S },
  { WebAssembly::I64_EXTEND16_S_I64, WebAssembly::I64_EXTEND16_S_I64_S },
  { WebAssembly::I64_EXTEND32_S_I64, WebAssembly::I64_EXTEND32_S_I64_S },
  { WebAssembly::I64_EXTEND8_S_I64, WebAssembly::I64_EXTEND8_S_I64_S },
  { WebAssembly::I64_EXTEND_S_I32, WebAssembly::I64_EXTEND_S_I32_S },
  { WebAssembly::I64_EXTEND_U_I32, WebAssembly::I64_EXTEND_U_I32_S },
  { WebAssembly::I64_REINTERPRET_F64, WebAssembly::I64_REINTERPRET_F64_S },
  { WebAssembly::I64_TRUNC_S_F32, WebAssembly::I64_TRUNC_S_F32_S },
  { WebAssembly::I64_TRUNC_S_F64, WebAssembly::I64_TRUNC_S_F64_S },
  { WebAssembly::I64_TRUNC_S_SAT_F32, WebAssembly::I64_TRUNC_S_SAT_F32_S },
  { WebAssembly::I64_TRUNC_S_SAT_F64, WebAssembly::I64_TRUNC_S_SAT_F64_S },
  { WebAssembly::I64_TRUNC_U_F32, WebAssembly::I64_TRUNC_U_F32_S },
  { WebAssembly::I64_TRUNC_U_F64, WebAssembly::I64_TRUNC_U_F64_S },
  { WebAssembly::I64_TRUNC_U_SAT_F32, WebAssembly::I64_TRUNC_U_SAT_F32_S },
  { WebAssembly::I64_TRUNC_U_SAT_F64, WebAssembly::I64_TRUNC_U_SAT_F64_S },
  { WebAssembly::IF, WebAssembly::IF_S },
  { WebAssembly::LE_F32, WebAssembly::LE_F32_S },
  { WebAssembly::LE_F32x4, WebAssembly::LE_F32x4_S },
  { WebAssembly::LE_F64, WebAssembly::LE_F64_S },
  { WebAssembly::LE_F64x2, WebAssembly::LE_F64x2_S },
  { WebAssembly::LE_S_I16x8, WebAssembly::LE_S_I16x8_S },
  { WebAssembly::LE_S_I32, WebAssembly::LE_S_I32_S },
  { WebAssembly::LE_S_I32x4, WebAssembly::LE_S_I32x4_S },
  { WebAssembly::LE_S_I64, WebAssembly::LE_S_I64_S },
  { WebAssembly::LE_S_I8x16, WebAssembly::LE_S_I8x16_S },
  { WebAssembly::LE_U_I16x8, WebAssembly::LE_U_I16x8_S },
  { WebAssembly::LE_U_I32, WebAssembly::LE_U_I32_S },
  { WebAssembly::LE_U_I32x4, WebAssembly::LE_U_I32x4_S },
  { WebAssembly::LE_U_I64, WebAssembly::LE_U_I64_S },
  { WebAssembly::LE_U_I8x16, WebAssembly::LE_U_I8x16_S },
  { WebAssembly::LOAD16_SPLAT_A32, WebAssembly::LOAD16_SPLAT_A32_S },
  { WebAssembly::LOAD16_SPLAT_A64, WebAssembly::LOAD16_SPLAT_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A32_S },
  { WebAssembly::LOAD16_S_I32_A64, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A32_S },
  { WebAssembly::LOAD16_S_I64_A64, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A32_S },
  { WebAssembly::LOAD16_U_I32_A64, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A32_S },
  { WebAssembly::LOAD16_U_I64_A64, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_SPLAT_A32, WebAssembly::LOAD32_SPLAT_A32_S },
  { WebAssembly::LOAD32_SPLAT_A64, WebAssembly::LOAD32_SPLAT_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A32_S },
  { WebAssembly::LOAD32_S_I64_A64, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A32_S },
  { WebAssembly::LOAD32_U_I64_A64, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD64_SPLAT_A32, WebAssembly::LOAD64_SPLAT_A32_S },
  { WebAssembly::LOAD64_SPLAT_A64, WebAssembly::LOAD64_SPLAT_A64_S },
  { WebAssembly::LOAD8_SPLAT_A32, WebAssembly::LOAD8_SPLAT_A32_S },
  { WebAssembly::LOAD8_SPLAT_A64, WebAssembly::LOAD8_SPLAT_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A32_S },
  { WebAssembly::LOAD8_S_I32_A64, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A32_S },
  { WebAssembly::LOAD8_S_I64_A64, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A32_S },
  { WebAssembly::LOAD8_U_I32_A64, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A32_S },
  { WebAssembly::LOAD8_U_I64_A64, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32, WebAssembly::LOAD_EXTEND_S_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64, WebAssembly::LOAD_EXTEND_S_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32, WebAssembly::LOAD_EXTEND_S_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64, WebAssembly::LOAD_EXTEND_S_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32, WebAssembly::LOAD_EXTEND_S_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64, WebAssembly::LOAD_EXTEND_S_I64x2_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32, WebAssembly::LOAD_EXTEND_U_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64, WebAssembly::LOAD_EXTEND_U_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32, WebAssembly::LOAD_EXTEND_U_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64, WebAssembly::LOAD_EXTEND_U_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32, WebAssembly::LOAD_EXTEND_U_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64, WebAssembly::LOAD_EXTEND_U_I64x2_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A32_S },
  { WebAssembly::LOAD_F32_A64, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A32_S },
  { WebAssembly::LOAD_F64_A64, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A32_S },
  { WebAssembly::LOAD_I32_A64, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A32_S },
  { WebAssembly::LOAD_I64_A64, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::LOAD_LANE_I16x8_A32, WebAssembly::LOAD_LANE_I16x8_A32_S },
  { WebAssembly::LOAD_LANE_I16x8_A64, WebAssembly::LOAD_LANE_I16x8_A64_S },
  { WebAssembly::LOAD_LANE_I32x4_A32, WebAssembly::LOAD_LANE_I32x4_A32_S },
  { WebAssembly::LOAD_LANE_I32x4_A64, WebAssembly::LOAD_LANE_I32x4_A64_S },
  { WebAssembly::LOAD_LANE_I64x2_A32, WebAssembly::LOAD_LANE_I64x2_A32_S },
  { WebAssembly::LOAD_LANE_I64x2_A64, WebAssembly::LOAD_LANE_I64x2_A64_S },
  { WebAssembly::LOAD_LANE_I8x16_A32, WebAssembly::LOAD_LANE_I8x16_A32_S },
  { WebAssembly::LOAD_LANE_I8x16_A64, WebAssembly::LOAD_LANE_I8x16_A64_S },
  { WebAssembly::LOAD_V128_A32, WebAssembly::LOAD_V128_A32_S },
  { WebAssembly::LOAD_V128_A64, WebAssembly::LOAD_V128_A64_S },
  { WebAssembly::LOAD_ZERO_I32x4_A32, WebAssembly::LOAD_ZERO_I32x4_A32_S },
  { WebAssembly::LOAD_ZERO_I32x4_A64, WebAssembly::LOAD_ZERO_I32x4_A64_S },
  { WebAssembly::LOAD_ZERO_I64x2_A32, WebAssembly::LOAD_ZERO_I64x2_A32_S },
  { WebAssembly::LOAD_ZERO_I64x2_A64, WebAssembly::LOAD_ZERO_I64x2_A64_S },
  { WebAssembly::LOCAL_GET_EXTERNREF, WebAssembly::LOCAL_GET_EXTERNREF_S },
  { WebAssembly::LOCAL_GET_F32, WebAssembly::LOCAL_GET_F32_S },
  { WebAssembly::LOCAL_GET_F64, WebAssembly::LOCAL_GET_F64_S },
  { WebAssembly::LOCAL_GET_FUNCREF, WebAssembly::LOCAL_GET_FUNCREF_S },
  { WebAssembly::LOCAL_GET_I32, WebAssembly::LOCAL_GET_I32_S },
  { WebAssembly::LOCAL_GET_I64, WebAssembly::LOCAL_GET_I64_S },
  { WebAssembly::LOCAL_GET_V128, WebAssembly::LOCAL_GET_V128_S },
  { WebAssembly::LOCAL_SET_EXTERNREF, WebAssembly::LOCAL_SET_EXTERNREF_S },
  { WebAssembly::LOCAL_SET_F32, WebAssembly::LOCAL_SET_F32_S },
  { WebAssembly::LOCAL_SET_F64, WebAssembly::LOCAL_SET_F64_S },
  { WebAssembly::LOCAL_SET_FUNCREF, WebAssembly::LOCAL_SET_FUNCREF_S },
  { WebAssembly::LOCAL_SET_I32, WebAssembly::LOCAL_SET_I32_S },
  { WebAssembly::LOCAL_SET_I64, WebAssembly::LOCAL_SET_I64_S },
  { WebAssembly::LOCAL_SET_V128, WebAssembly::LOCAL_SET_V128_S },
  { WebAssembly::LOCAL_TEE_EXTERNREF, WebAssembly::LOCAL_TEE_EXTERNREF_S },
  { WebAssembly::LOCAL_TEE_F32, WebAssembly::LOCAL_TEE_F32_S },
  { WebAssembly::LOCAL_TEE_F64, WebAssembly::LOCAL_TEE_F64_S },
  { WebAssembly::LOCAL_TEE_FUNCREF, WebAssembly::LOCAL_TEE_FUNCREF_S },
  { WebAssembly::LOCAL_TEE_I32, WebAssembly::LOCAL_TEE_I32_S },
  { WebAssembly::LOCAL_TEE_I64, WebAssembly::LOCAL_TEE_I64_S },
  { WebAssembly::LOCAL_TEE_V128, WebAssembly::LOCAL_TEE_V128_S },
  { WebAssembly::LOOP, WebAssembly::LOOP_S },
  { WebAssembly::LT_F32, WebAssembly::LT_F32_S },
  { WebAssembly::LT_F32x4, WebAssembly::LT_F32x4_S },
  { WebAssembly::LT_F64, WebAssembly::LT_F64_S },
  { WebAssembly::LT_F64x2, WebAssembly::LT_F64x2_S },
  { WebAssembly::LT_S_I16x8, WebAssembly::LT_S_I16x8_S },
  { WebAssembly::LT_S_I32, WebAssembly::LT_S_I32_S },
  { WebAssembly::LT_S_I32x4, WebAssembly::LT_S_I32x4_S },
  { WebAssembly::LT_S_I64, WebAssembly::LT_S_I64_S },
  { WebAssembly::LT_S_I8x16, WebAssembly::LT_S_I8x16_S },
  { WebAssembly::LT_U_I16x8, WebAssembly::LT_U_I16x8_S },
  { WebAssembly::LT_U_I32, WebAssembly::LT_U_I32_S },
  { WebAssembly::LT_U_I32x4, WebAssembly::LT_U_I32x4_S },
  { WebAssembly::LT_U_I64, WebAssembly::LT_U_I64_S },
  { WebAssembly::LT_U_I8x16, WebAssembly::LT_U_I8x16_S },
  { WebAssembly::MAX_F32, WebAssembly::MAX_F32_S },
  { WebAssembly::MAX_F32x4, WebAssembly::MAX_F32x4_S },
  { WebAssembly::MAX_F64, WebAssembly::MAX_F64_S },
  { WebAssembly::MAX_F64x2, WebAssembly::MAX_F64x2_S },
  { WebAssembly::MAX_S_I16x8, WebAssembly::MAX_S_I16x8_S },
  { WebAssembly::MAX_S_I32x4, WebAssembly::MAX_S_I32x4_S },
  { WebAssembly::MAX_S_I8x16, WebAssembly::MAX_S_I8x16_S },
  { WebAssembly::MAX_U_I16x8, WebAssembly::MAX_U_I16x8_S },
  { WebAssembly::MAX_U_I32x4, WebAssembly::MAX_U_I32x4_S },
  { WebAssembly::MAX_U_I8x16, WebAssembly::MAX_U_I8x16_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::MIN_F32, WebAssembly::MIN_F32_S },
  { WebAssembly::MIN_F32x4, WebAssembly::MIN_F32x4_S },
  { WebAssembly::MIN_F64, WebAssembly::MIN_F64_S },
  { WebAssembly::MIN_F64x2, WebAssembly::MIN_F64x2_S },
  { WebAssembly::MIN_S_I16x8, WebAssembly::MIN_S_I16x8_S },
  { WebAssembly::MIN_S_I32x4, WebAssembly::MIN_S_I32x4_S },
  { WebAssembly::MIN_S_I8x16, WebAssembly::MIN_S_I8x16_S },
  { WebAssembly::MIN_U_I16x8, WebAssembly::MIN_U_I16x8_S },
  { WebAssembly::MIN_U_I32x4, WebAssembly::MIN_U_I32x4_S },
  { WebAssembly::MIN_U_I8x16, WebAssembly::MIN_U_I8x16_S },
  { WebAssembly::MUL_F32, WebAssembly::MUL_F32_S },
  { WebAssembly::MUL_F32x4, WebAssembly::MUL_F32x4_S },
  { WebAssembly::MUL_F64, WebAssembly::MUL_F64_S },
  { WebAssembly::MUL_F64x2, WebAssembly::MUL_F64x2_S },
  { WebAssembly::MUL_I16x8, WebAssembly::MUL_I16x8_S },
  { WebAssembly::MUL_I32, WebAssembly::MUL_I32_S },
  { WebAssembly::MUL_I32x4, WebAssembly::MUL_I32x4_S },
  { WebAssembly::MUL_I64, WebAssembly::MUL_I64_S },
  { WebAssembly::MUL_I64x2, WebAssembly::MUL_I64x2_S },
  { WebAssembly::NARROW_S_I16x8, WebAssembly::NARROW_S_I16x8_S },
  { WebAssembly::NARROW_S_I8x16, WebAssembly::NARROW_S_I8x16_S },
  { WebAssembly::NARROW_U_I16x8, WebAssembly::NARROW_U_I16x8_S },
  { WebAssembly::NARROW_U_I8x16, WebAssembly::NARROW_U_I8x16_S },
  { WebAssembly::NEAREST_F32, WebAssembly::NEAREST_F32_S },
  { WebAssembly::NEAREST_F32x4, WebAssembly::NEAREST_F32x4_S },
  { WebAssembly::NEAREST_F64, WebAssembly::NEAREST_F64_S },
  { WebAssembly::NEAREST_F64x2, WebAssembly::NEAREST_F64x2_S },
  { WebAssembly::NEG_F32, WebAssembly::NEG_F32_S },
  { WebAssembly::NEG_F32x4, WebAssembly::NEG_F32x4_S },
  { WebAssembly::NEG_F64, WebAssembly::NEG_F64_S },
  { WebAssembly::NEG_F64x2, WebAssembly::NEG_F64x2_S },
  { WebAssembly::NEG_I16x8, WebAssembly::NEG_I16x8_S },
  { WebAssembly::NEG_I32x4, WebAssembly::NEG_I32x4_S },
  { WebAssembly::NEG_I64x2, WebAssembly::NEG_I64x2_S },
  { WebAssembly::NEG_I8x16, WebAssembly::NEG_I8x16_S },
  { WebAssembly::NE_F32, WebAssembly::NE_F32_S },
  { WebAssembly::NE_F32x4, WebAssembly::NE_F32x4_S },
  { WebAssembly::NE_F64, WebAssembly::NE_F64_S },
  { WebAssembly::NE_F64x2, WebAssembly::NE_F64x2_S },
  { WebAssembly::NE_I16x8, WebAssembly::NE_I16x8_S },
  { WebAssembly::NE_I32, WebAssembly::NE_I32_S },
  { WebAssembly::NE_I32x4, WebAssembly::NE_I32x4_S },
  { WebAssembly::NE_I64, WebAssembly::NE_I64_S },
  { WebAssembly::NE_I8x16, WebAssembly::NE_I8x16_S },
  { WebAssembly::NOP, WebAssembly::NOP_S },
  { WebAssembly::NOT, WebAssembly::NOT_S },
  { WebAssembly::OR, WebAssembly::OR_S },
  { WebAssembly::OR_I32, WebAssembly::OR_I32_S },
  { WebAssembly::OR_I64, WebAssembly::OR_I64_S },
  { WebAssembly::PMAX_F32x4, WebAssembly::PMAX_F32x4_S },
  { WebAssembly::PMAX_F64x2, WebAssembly::PMAX_F64x2_S },
  { WebAssembly::PMIN_F32x4, WebAssembly::PMIN_F32x4_S },
  { WebAssembly::PMIN_F64x2, WebAssembly::PMIN_F64x2_S },
  { WebAssembly::POPCNT_I32, WebAssembly::POPCNT_I32_S },
  { WebAssembly::POPCNT_I64, WebAssembly::POPCNT_I64_S },
  { WebAssembly::POPCNT_I8x16, WebAssembly::POPCNT_I8x16_S },
  { WebAssembly::PREFETCH_NT_A32, WebAssembly::PREFETCH_NT_A32_S },
  { WebAssembly::PREFETCH_NT_A64, WebAssembly::PREFETCH_NT_A64_S },
  { WebAssembly::PREFETCH_T_A32, WebAssembly::PREFETCH_T_A32_S },
  { WebAssembly::PREFETCH_T_A64, WebAssembly::PREFETCH_T_A64_S },
  { WebAssembly::Q15MULR_SAT_S_I16x8, WebAssembly::Q15MULR_SAT_S_I16x8_S },
  { WebAssembly::QFMA_F32x4, WebAssembly::QFMA_F32x4_S },
  { WebAssembly::QFMA_F64x2, WebAssembly::QFMA_F64x2_S },
  { WebAssembly::QFMS_F32x4, WebAssembly::QFMS_F32x4_S },
  { WebAssembly::QFMS_F64x2, WebAssembly::QFMS_F64x2_S },
  { WebAssembly::REF_NULL_EXTERNREF, WebAssembly::REF_NULL_EXTERNREF_S },
  { WebAssembly::REF_NULL_FUNCREF, WebAssembly::REF_NULL_FUNCREF_S },
  { WebAssembly::REM_S_I32, WebAssembly::REM_S_I32_S },
  { WebAssembly::REM_S_I64, WebAssembly::REM_S_I64_S },
  { WebAssembly::REM_U_I32, WebAssembly::REM_U_I32_S },
  { WebAssembly::REM_U_I64, WebAssembly::REM_U_I64_S },
  { WebAssembly::REPLACE_LANE_F32x4, WebAssembly::REPLACE_LANE_F32x4_S },
  { WebAssembly::REPLACE_LANE_F64x2, WebAssembly::REPLACE_LANE_F64x2_S },
  { WebAssembly::REPLACE_LANE_I16x8, WebAssembly::REPLACE_LANE_I16x8_S },
  { WebAssembly::REPLACE_LANE_I32x4, WebAssembly::REPLACE_LANE_I32x4_S },
  { WebAssembly::REPLACE_LANE_I64x2, WebAssembly::REPLACE_LANE_I64x2_S },
  { WebAssembly::REPLACE_LANE_I8x16, WebAssembly::REPLACE_LANE_I8x16_S },
  { WebAssembly::RETHROW, WebAssembly::RETHROW_S },
  { WebAssembly::RETURN, WebAssembly::RETURN_S },
  { WebAssembly::RET_CALL, WebAssembly::RET_CALL_S },
  { WebAssembly::RET_CALL_INDIRECT, WebAssembly::RET_CALL_INDIRECT_S },
  { WebAssembly::ROTL_I32, WebAssembly::ROTL_I32_S },
  { WebAssembly::ROTL_I64, WebAssembly::ROTL_I64_S },
  { WebAssembly::ROTR_I32, WebAssembly::ROTR_I32_S },
  { WebAssembly::ROTR_I64, WebAssembly::ROTR_I64_S },
  { WebAssembly::SELECT_EXTERNREF, WebAssembly::SELECT_EXTERNREF_S },
  { WebAssembly::SELECT_F32, WebAssembly::SELECT_F32_S },
  { WebAssembly::SELECT_F64, WebAssembly::SELECT_F64_S },
  { WebAssembly::SELECT_FUNCREF, WebAssembly::SELECT_FUNCREF_S },
  { WebAssembly::SELECT_I32, WebAssembly::SELECT_I32_S },
  { WebAssembly::SELECT_I64, WebAssembly::SELECT_I64_S },
  { WebAssembly::SELECT_V128, WebAssembly::SELECT_V128_S },
  { WebAssembly::SHL_I16x8, WebAssembly::SHL_I16x8_S },
  { WebAssembly::SHL_I32, WebAssembly::SHL_I32_S },
  { WebAssembly::SHL_I32x4, WebAssembly::SHL_I32x4_S },
  { WebAssembly::SHL_I64, WebAssembly::SHL_I64_S },
  { WebAssembly::SHL_I64x2, WebAssembly::SHL_I64x2_S },
  { WebAssembly::SHL_I8x16, WebAssembly::SHL_I8x16_S },
  { WebAssembly::SHR_S_I16x8, WebAssembly::SHR_S_I16x8_S },
  { WebAssembly::SHR_S_I32, WebAssembly::SHR_S_I32_S },
  { WebAssembly::SHR_S_I32x4, WebAssembly::SHR_S_I32x4_S },
  { WebAssembly::SHR_S_I64, WebAssembly::SHR_S_I64_S },
  { WebAssembly::SHR_S_I64x2, WebAssembly::SHR_S_I64x2_S },
  { WebAssembly::SHR_S_I8x16, WebAssembly::SHR_S_I8x16_S },
  { WebAssembly::SHR_U_I16x8, WebAssembly::SHR_U_I16x8_S },
  { WebAssembly::SHR_U_I32, WebAssembly::SHR_U_I32_S },
  { WebAssembly::SHR_U_I32x4, WebAssembly::SHR_U_I32x4_S },
  { WebAssembly::SHR_U_I64, WebAssembly::SHR_U_I64_S },
  { WebAssembly::SHR_U_I64x2, WebAssembly::SHR_U_I64x2_S },
  { WebAssembly::SHR_U_I8x16, WebAssembly::SHR_U_I8x16_S },
  { WebAssembly::SHUFFLE, WebAssembly::SHUFFLE_S },
  { WebAssembly::SPLAT_F32x4, WebAssembly::SPLAT_F32x4_S },
  { WebAssembly::SPLAT_F64x2, WebAssembly::SPLAT_F64x2_S },
  { WebAssembly::SPLAT_I16x8, WebAssembly::SPLAT_I16x8_S },
  { WebAssembly::SPLAT_I32x4, WebAssembly::SPLAT_I32x4_S },
  { WebAssembly::SPLAT_I64x2, WebAssembly::SPLAT_I64x2_S },
  { WebAssembly::SPLAT_I8x16, WebAssembly::SPLAT_I8x16_S },
  { WebAssembly::SQRT_F32, WebAssembly::SQRT_F32_S },
  { WebAssembly::SQRT_F32x4, WebAssembly::SQRT_F32x4_S },
  { WebAssembly::SQRT_F64, WebAssembly::SQRT_F64_S },
  { WebAssembly::SQRT_F64x2, WebAssembly::SQRT_F64x2_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A32_S },
  { WebAssembly::STORE16_I32_A64, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A32_S },
  { WebAssembly::STORE16_I64_A64, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A32_S },
  { WebAssembly::STORE32_I64_A64, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A32_S },
  { WebAssembly::STORE8_I32_A64, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A32_S },
  { WebAssembly::STORE8_I64_A64, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A32_S },
  { WebAssembly::STORE_F32_A64, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A32_S },
  { WebAssembly::STORE_F64_A64, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A32_S },
  { WebAssembly::STORE_I32_A64, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A32_S },
  { WebAssembly::STORE_I64_A64, WebAssembly::STORE_I64_A64_S },
  { WebAssembly::STORE_LANE_I16x8_A32, WebAssembly::STORE_LANE_I16x8_A32_S },
  { WebAssembly::STORE_LANE_I16x8_A64, WebAssembly::STORE_LANE_I16x8_A64_S },
  { WebAssembly::STORE_LANE_I32x4_A32, WebAssembly::STORE_LANE_I32x4_A32_S },
  { WebAssembly::STORE_LANE_I32x4_A64, WebAssembly::STORE_LANE_I32x4_A64_S },
  { WebAssembly::STORE_LANE_I64x2_A32, WebAssembly::STORE_LANE_I64x2_A32_S },
  { WebAssembly::STORE_LANE_I64x2_A64, WebAssembly::STORE_LANE_I64x2_A64_S },
  { WebAssembly::STORE_LANE_I8x16_A32, WebAssembly::STORE_LANE_I8x16_A32_S },
  { WebAssembly::STORE_LANE_I8x16_A64, WebAssembly::STORE_LANE_I8x16_A64_S },
  { WebAssembly::STORE_V128_A32, WebAssembly::STORE_V128_A32_S },
  { WebAssembly::STORE_V128_A64, WebAssembly::STORE_V128_A64_S },
  { WebAssembly::SUB_F32, WebAssembly::SUB_F32_S },
  { WebAssembly::SUB_F32x4, WebAssembly::SUB_F32x4_S },
  { WebAssembly::SUB_F64, WebAssembly::SUB_F64_S },
  { WebAssembly::SUB_F64x2, WebAssembly::SUB_F64x2_S },
  { WebAssembly::SUB_I16x8, WebAssembly::SUB_I16x8_S },
  { WebAssembly::SUB_I32, WebAssembly::SUB_I32_S },
  { WebAssembly::SUB_I32x4, WebAssembly::SUB_I32x4_S },
  { WebAssembly::SUB_I64, WebAssembly::SUB_I64_S },
  { WebAssembly::SUB_I64x2, WebAssembly::SUB_I64x2_S },
  { WebAssembly::SUB_I8x16, WebAssembly::SUB_I8x16_S },
  { WebAssembly::SUB_SAT_S_I16x8, WebAssembly::SUB_SAT_S_I16x8_S },
  { WebAssembly::SUB_SAT_S_I8x16, WebAssembly::SUB_SAT_S_I8x16_S },
  { WebAssembly::SUB_SAT_U_I16x8, WebAssembly::SUB_SAT_U_I16x8_S },
  { WebAssembly::SUB_SAT_U_I8x16, WebAssembly::SUB_SAT_U_I8x16_S },
  { WebAssembly::SWIZZLE, WebAssembly::SWIZZLE_S },
  { WebAssembly::TABLE_COPY, WebAssembly::TABLE_COPY_S },
  { WebAssembly::TABLE_FILL_EXTERNREF, WebAssembly::TABLE_FILL_EXTERNREF_S },
  { WebAssembly::TABLE_FILL_FUNCREF, WebAssembly::TABLE_FILL_FUNCREF_S },
  { WebAssembly::TABLE_GET_EXTERNREF, WebAssembly::TABLE_GET_EXTERNREF_S },
  { WebAssembly::TABLE_GET_FUNCREF, WebAssembly::TABLE_GET_FUNCREF_S },
  { WebAssembly::TABLE_GROW_EXTERNREF, WebAssembly::TABLE_GROW_EXTERNREF_S },
  { WebAssembly::TABLE_GROW_FUNCREF, WebAssembly::TABLE_GROW_FUNCREF_S },
  { WebAssembly::TABLE_SET_EXTERNREF, WebAssembly::TABLE_SET_EXTERNREF_S },
  { WebAssembly::TABLE_SET_FUNCREF, WebAssembly::TABLE_SET_FUNCREF_S },
  { WebAssembly::TABLE_SIZE, WebAssembly::TABLE_SIZE_S },
  { WebAssembly::TEE_EXTERNREF, WebAssembly::TEE_EXTERNREF_S },
  { WebAssembly::TEE_F32, WebAssembly::TEE_F32_S },
  { WebAssembly::TEE_F64, WebAssembly::TEE_F64_S },
  { WebAssembly::TEE_FUNCREF, WebAssembly::TEE_FUNCREF_S },
  { WebAssembly::TEE_I32, WebAssembly::TEE_I32_S },
  { WebAssembly::TEE_I64, WebAssembly::TEE_I64_S },
  { WebAssembly::TEE_V128, WebAssembly::TEE_V128_S },
  { WebAssembly::THROW, WebAssembly::THROW_S },
  { WebAssembly::TRUNC_F32, WebAssembly::TRUNC_F32_S },
  { WebAssembly::TRUNC_F32x4, WebAssembly::TRUNC_F32x4_S },
  { WebAssembly::TRUNC_F64, WebAssembly::TRUNC_F64_S },
  { WebAssembly::TRUNC_F64x2, WebAssembly::TRUNC_F64x2_S },
  { WebAssembly::TRY, WebAssembly::TRY_S },
  { WebAssembly::UNREACHABLE, WebAssembly::UNREACHABLE_S },
  { WebAssembly::WIDEN_I8x16_TO_I32x4_S, WebAssembly::WIDEN_I8x16_TO_I32x4_S_S },
  { WebAssembly::WIDEN_I8x16_TO_I32x4_U, WebAssembly::WIDEN_I8x16_TO_I32x4_U_S },
  { WebAssembly::XOR, WebAssembly::XOR_S },
  { WebAssembly::XOR_I32, WebAssembly::XOR_I32_S },
  { WebAssembly::XOR_I64, WebAssembly::XOR_I64_S },
  { WebAssembly::anonymous_2718MEMORY_GROW_A32, WebAssembly::anonymous_2718MEMORY_GROW_A32_S },
  { WebAssembly::anonymous_2718MEMORY_SIZE_A32, WebAssembly::anonymous_2718MEMORY_SIZE_A32_S },
  { WebAssembly::anonymous_2719MEMORY_GROW_A64, WebAssembly::anonymous_2719MEMORY_GROW_A64_S },
  { WebAssembly::anonymous_2719MEMORY_SIZE_A64, WebAssembly::anonymous_2719MEMORY_SIZE_A64_S },
  { WebAssembly::anonymous_4465SIGNSELECT_I8x16, WebAssembly::anonymous_4465SIGNSELECT_I8x16_S },
  { WebAssembly::anonymous_4466SIGNSELECT_I16x8, WebAssembly::anonymous_4466SIGNSELECT_I16x8_S },
  { WebAssembly::anonymous_4467SIGNSELECT_I32x4, WebAssembly::anonymous_4467SIGNSELECT_I32x4_S },
  { WebAssembly::anonymous_4468SIGNSELECT_I64x2, WebAssembly::anonymous_4468SIGNSELECT_I64x2_S },
  { WebAssembly::anonymous_4568DATA_DROP, WebAssembly::anonymous_4568DATA_DROP_S },
  { WebAssembly::anonymous_4568MEMORY_COPY_A32, WebAssembly::anonymous_4568MEMORY_COPY_A32_S },
  { WebAssembly::anonymous_4568MEMORY_FILL_A32, WebAssembly::anonymous_4568MEMORY_FILL_A32_S },
  { WebAssembly::anonymous_4568MEMORY_INIT_A32, WebAssembly::anonymous_4568MEMORY_INIT_A32_S },
  { WebAssembly::anonymous_4569DATA_DROP, WebAssembly::anonymous_4569DATA_DROP_S },
  { WebAssembly::anonymous_4569MEMORY_COPY_A64, WebAssembly::anonymous_4569MEMORY_COPY_A64_S },
  { WebAssembly::anonymous_4569MEMORY_FILL_A64, WebAssembly::anonymous_4569MEMORY_FILL_A64_S },
  { WebAssembly::anonymous_4569MEMORY_INIT_A64, WebAssembly::anonymous_4569MEMORY_INIT_A64_S },
  { WebAssembly::fp_to_sint_I32x4, WebAssembly::fp_to_sint_I32x4_S },
  { WebAssembly::fp_to_uint_I32x4, WebAssembly::fp_to_uint_I32x4_S },
  { WebAssembly::int_wasm_convert_low_signed_F64x2, WebAssembly::int_wasm_convert_low_signed_F64x2_S },
  { WebAssembly::int_wasm_convert_low_unsigned_F64x2, WebAssembly::int_wasm_convert_low_unsigned_F64x2_S },
  { WebAssembly::int_wasm_demote_zero_F32x4, WebAssembly::int_wasm_demote_zero_F32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S },
  { WebAssembly::int_wasm_promote_low_F64x2, WebAssembly::int_wasm_promote_low_F64x2_S },
  { WebAssembly::int_wasm_trunc_saturate_zero_signed_I32x4, WebAssembly::int_wasm_trunc_saturate_zero_signed_I32x4_S },
  { WebAssembly::int_wasm_trunc_saturate_zero_unsigned_I32x4, WebAssembly::int_wasm_trunc_saturate_zero_unsigned_I32x4_S },
  { WebAssembly::int_wasm_widen_high_signed_I64x2, WebAssembly::int_wasm_widen_high_signed_I64x2_S },
  { WebAssembly::int_wasm_widen_high_unsigned_I64x2, WebAssembly::int_wasm_widen_high_unsigned_I64x2_S },
  { WebAssembly::int_wasm_widen_low_signed_I64x2, WebAssembly::int_wasm_widen_low_signed_I64x2_S },
  { WebAssembly::int_wasm_widen_low_unsigned_I64x2, WebAssembly::int_wasm_widen_low_unsigned_I64x2_S },
  { WebAssembly::sint_to_fp_F32x4, WebAssembly::sint_to_fp_F32x4_S },
  { WebAssembly::uint_to_fp_F32x4, WebAssembly::uint_to_fp_F32x4_S },
  { WebAssembly::widen_high_s_I16x8, WebAssembly::widen_high_s_I16x8_S },
  { WebAssembly::widen_high_s_I32x4, WebAssembly::widen_high_s_I32x4_S },
  { WebAssembly::widen_high_u_I16x8, WebAssembly::widen_high_u_I16x8_S },
  { WebAssembly::widen_high_u_I32x4, WebAssembly::widen_high_u_I32x4_S },
  { WebAssembly::widen_low_s_I16x8, WebAssembly::widen_low_s_I16x8_S },
  { WebAssembly::widen_low_s_I32x4, WebAssembly::widen_low_s_I32x4_S },
  { WebAssembly::widen_low_u_I16x8, WebAssembly::widen_low_u_I16x8_S },
  { WebAssembly::widen_low_u_I32x4, WebAssembly::widen_low_u_I32x4_S },
}; // End of getStackOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 738;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getStackOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getStackOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getStackOpcodeTable[mid][1];
}

// getWasm64Opcode
LLVM_READONLY
int getWasm64Opcode(uint16_t Opcode) {
static const uint16_t getWasm64OpcodeTable[][2] = {
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A64_S },
}; // End of getWasm64OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 178;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getWasm64OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getWasm64OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getWasm64OpcodeTable[mid][1];
}

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

